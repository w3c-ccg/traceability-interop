{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "167b156a-98a8-4dbb-bab1-43d45d2de42c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "106ee596-9027-479c-8102-bc3f8c2cf252",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e8a23e21-bc2d-4b96-a0db-f36a8a6320ff",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ca411ae4-87cb-4956-8a26-638e65ba4745"
                }
              }
            ]
          },
          {
            "id": "cc602335-f5e2-46e6-a126-95dfe841b5d0",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "68223824-f70e-4ccb-976c-61b60f499b92",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b427aa7a-ff45-49e1-b90f-2fd90b45e542"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5877818e-fcfd-4005-affa-96e400380ef4",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "43d35cd9-8574-4976-bbb4-5b199676b680",
            "name": "Positive Testing",
            "item": [
              {
                "id": "006f261b-da65-4306-bcbf-98d33b8cf441",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec4c6591-dd2a-45c8-8d4c-4e8e0d4a3ddf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fc95cfdd-e0d2-46a0-a056-e223e13659fe"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "56edcdde-e7b8-450a-9f4a-0743e1fd51b9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "50e38e2d-3b80-4818-afb7-91039b1c1976"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a7283a4d-861d-451c-a9b8-ed8f98a14ab6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f5700e52-7114-4425-8071-0e29b594a73a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0183e460-a3bc-4dff-a7de-513679da6b6b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b367c706-3827-4860-b229-3b0806f9b583"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5f0bc6b9-e651-4351-97db-31f522066310",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cca49e88-5783-404d-818e-07c8959a2560"
            }
          }
        ]
      },
      {
        "id": "c1841861-e246-4aaf-a04a-4f977f08987a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "58e66e37-bcfb-48fa-b523-3597e310d75b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "53f8e862-8519-4f3b-a807-9cec520ca479",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4a59bed6-d965-4a18-aaa7-ac81dbe34de3",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "835786f9-5b55-43bd-b112-51fe5a49eb35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "26617148-ea57-42ea-abd2-2a3336075dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeea069d-a60a-4f29-b091-a4ddf50b99ae",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f00b1f49-11d4-4db1-bcb4-00c63f1db783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a03c163-e607-4635-aa76-25bcf34e8c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b1794b-872d-420c-b6e6-40bdd8c7c754",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e55f9bc-cf4d-4b4a-ab23-a37f270e0dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d1450be-4b07-4523-a166-dfd83226ea7d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "56c80044-3037-4f94-83c3-0fb022ddf968",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c06c40e4-4cac-4c8b-8177-728f08de5dad",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20941759-8280-4790-ac56-763c1ca4ce6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0355d8c-defa-402e-b3ed-91c1a1f9b579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f79029de-b697-4c65-b139-2ec3c48da328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cc66b0c-09bc-4cac-b895-77831e843360"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "19c46c85-01ff-44b5-93d4-07ae260cdcfe",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f44d84a2-2192-4f40-bcb8-2f4d884f7fb1",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "78e9018f-3bee-47b7-8f73-e40bd82d2397",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5603bccf-e043-4123-8cfd-c5ffe472f4e2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6dc6eba7-1ffc-4181-a468-e701fda672ec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2d6fff9d-6c22-4e3f-aca5-25c1966396fa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1a93e22b-ff7b-4a9f-a9ed-68930380289a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4340a34f-f828-43fe-94a9-ac55b9340df4"
            }
          }
        ]
      },
      {
        "id": "56bb2a63-aa3b-4270-8cfe-fd46117af005",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d7885e67-99b4-4795-b823-9fd0ee4f7a36",
            "name": "Negative Testing",
            "item": [
              {
                "id": "95c3cfa2-e456-4db1-b6ce-2d50bf74dd87",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a2b930f3-fa9b-486d-8e89-67d04147a3d3",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62c4484-be99-4164-a66b-ae5d9abcc1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2908b0ff-eb35-4580-b09d-461607b53436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c1be6ae-108d-40d4-810c-31f43c81802a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab8ff8da-85f7-4050-a111-e5b3c540d186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61741b40-0da4-4b5b-904b-f882c1bdc892",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93566fc-465c-416e-8dc6-df60e9c66e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3af06bd-ce41-44b1-8957-74b6b50c7e99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0655cd23-924f-4cb9-97c7-cbc95a8dafa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29a3e73e-f11f-43dd-a482-14679d122490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ffde21b-d5a2-425e-b6e5-a3113b7cf421",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b0fe415-26db-4e50-b79e-3ebe54f070f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50170e06-f081-4250-8dec-7eee4d2a7455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a93414e-241e-4725-a662-77b0deab9edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d4dc88e-bb96-4eb7-b275-c31ad6606883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417d576f-1610-4424-b243-eb81e33a7d02",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "047181e9-d5aa-4bf3-b591-804a05b988e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02841192-ad2a-46b0-84c5-c6c2ccfdacf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec24135a-69aa-4d06-810b-41ce96f05ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b172dd47-2a72-4326-a132-7e730077f14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8a72e1-2bb0-41c6-aa4f-8f5ccbe10ffc",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce83909-49e4-4c9e-bb65-c9e16338611c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08523fe5-aee9-45bb-8c38-d08edf9cf327"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe1b630-664f-45b2-96d3-056d450af105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33ca1020-55a2-45f8-8b61-5ded7ed40c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e80a2f-3251-4cc5-8d91-18bb4475d283",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd3afe8-9398-4946-875e-08dc11ec37ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4992493-2fdb-41d7-ad9e-b67585744d70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aab3a88-2058-485a-98fa-c874660849d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c4978a6-8a60-44bc-aa62-694e67ad27cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f2aad7-fbde-4df9-a70c-d772fe4b317e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a995a5-2617-40ba-ab09-0eccf96cd4c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a707a199-a569-4eb8-b8e1-8c17886c6fc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d9ac26-984f-470f-bcf3-8b624dfcbf88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "485cb49e-695f-4214-a97a-7e72cc8b618b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63108c6f-df52-48a8-818d-7c56d18d916c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f2e80e-e2e8-4526-96d2-0c06e5f5d408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d205164-5768-45e0-9c06-b0197d13142e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07be4edc-52b8-430e-9685-e5b7a9200eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6864bdfc-ef1a-430f-9c8e-c4df7c6ca651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbefeee6-195f-48e2-b92c-13f5d497b916",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af62a49-5134-4893-accf-9432f5d8325a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fe2c073-38fb-4217-b8e7-c72b3f997702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8065547-1848-484a-aca5-5dbfa04079e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "826d85b9-1917-4a2c-9085-1e9d06d40857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "052bbbc7-3b36-45d8-9860-ff2642714103",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca626983-cbdc-4bbf-933b-4e5d0875a2c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a161643-e7b6-42ec-8735-ae047dbcad80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40be4799-901b-407b-95e9-467399373ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aca13532-fe95-4270-92cf-1423abb20796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1efeb833-e8b4-4a82-b367-2f96c00dd8fa",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b73def9b-bc83-4032-8235-112d2cd96ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a758b9d-5e8a-4d18-b243-4d9b38bf3bd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310bf3ff-e346-41b6-a7e2-a8bf4ed22ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ce96f1a-2288-4191-8926-227c7a4fad28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b3517f-4c8f-487a-8448-f10d06ec4a96",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b594823-721a-45fe-947d-fe08efac2813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6542fbc-9c40-4d76-ab6e-59cdd31289f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f81e76c-1eed-4f13-8a5b-769380ebc147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a77f2aee-98f2-447c-b583-fa457569ac4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "222c62ac-e914-4eb4-8b4f-186f27b9166e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eac1fdd-c7a7-4caf-a6e1-e7ba8f1bebe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "464b787d-5894-4810-99d9-978057cdeb96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caadb021-3c14-4daa-a20c-e1bef234f877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87b9f9cf-7aa0-4147-b7ab-06b88a41b74b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0abd9972-cae1-496b-a9b5-70575fc1aab0",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c7a7f8-7bb3-40b2-8af1-d5be119cbc6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3d53606-61fa-4e41-9eff-1dbe36cb137b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea12e15-742b-414c-a197-602123d431a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5cb4fbec-8ad4-4fc1-9904-c567e6705074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c430bd9-747f-4b71-b2b5-e4e62b08f5b3",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b14618-9985-474a-b767-c26a494d0911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac6faad7-1bb2-42c7-99c1-7247bbffb8ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f03eb754-49fe-4fc4-ad16-8bb293ec8d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7b6005d-e54f-4a3b-bf78-8a4645479158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c12ebf0-4804-428b-8c1b-5afd940c1dbd",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d222dd10-1405-4c58-8845-e2ff4d24eac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8549cc6e-86d8-41f3-9db7-26b39c836d91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c398aa4d-c23d-4e8d-868c-c0806b859860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30f76cad-9f44-4167-9542-a2578dc7eb99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a8dfa1-2ee9-4e50-872b-347fbdafd356",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed461c6d-77b2-44c4-b751-d6de5bed5c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e07ef471-6f74-4f4e-8e46-9927d9843534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18cc2c9d-53fd-481c-83f8-676322d688a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6fea6c11-a1e1-432c-9482-b174c2407a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de0bc7f-a448-48d7-9af0-778dcb3e0a4c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68d09e4-30ca-4f4b-9a9e-c6bd13f75176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16ea52c8-7d0a-42f4-a8da-eb3e6c896af8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b3f5c8-825c-4c86-b773-4a1bfcbc85e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f039d18b-00a0-429d-8e70-42e5d3301892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "386a1b60-fad0-4d92-9090-d15b90766ac3",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad6bcbb-54bb-46f2-bc1c-277809272ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55c9b5ff-4ff7-4148-947d-8f6cdd770b8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf514f0f-1619-4190-a2e8-22c604233cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "61008824-3040-4f88-a2f3-44a7c0194260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641744bf-e35d-4152-96d4-0c9e9ccd3087",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d7c50b-429c-4ed6-8ec2-1fecb4f14e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dc9df36-259d-464a-ab47-ed1e26291f42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1f877e-e221-43b0-b56d-57d5cd89b960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "88a3a733-04dc-4fac-a447-6d2beb592276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f191f7a6-3317-45e3-b0ac-f5b26d8d6695",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f32185-87b7-4040-a5e9-ef753e249bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41f5e098-ccf6-44cc-b6df-fb4c23e38efb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d28aea-a6c9-49fe-a784-1a9933e06f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "77ca57fd-be46-4030-bcd0-bb9ee73e3003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d80a927-6874-4b8c-b5e5-8486a79cfd70",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e1b1ad-f3f7-4d6b-b494-95aaa860bd40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "449a9141-95fd-4eef-a906-335a095b7e17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea388e73-e3ed-4f4a-9c3b-672a4d6a6f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2325649-d18e-464c-bb26-5e6bd12249ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "932b02ee-8fee-498a-9cc7-6b1d7985d8ac",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7fd2f84-8680-421c-b8ef-ac0c0a9ca75f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50b7b96c-2f2d-4134-a8d0-af27c223eb52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8519b6-5566-4193-a2c0-9b4acbe6d301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c15d73fc-d430-469a-bed1-27d7db825b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe9562a-a8e9-43b5-98e9-e73029547416",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2114eacd-ecdd-4459-a17a-e2fcc4dd1316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b3dcca7-4bad-41e4-b907-bade671f00ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf41648-a683-4435-be34-df62d97a29ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c78ccac-837e-44e3-9c79-cba2c4829577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fae8918-d5b4-4f01-8219-19e827562127",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89216a27-0c4e-42c3-b0f8-086b131bc0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5b63230-6d3d-456b-b486-d6f75f3cde88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12984a81-f816-4da2-b7c7-a8f07097374e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ce1c276-90fe-4881-89d0-67577ce10835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d18bd7-3c7b-446c-9b9e-f187753f436f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a40c2243-bde9-45c2-b0c5-03eaeaaf8807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd71b79e-ae8c-4abc-933d-a3ba3c7ec7d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e92052-cf73-408b-89a7-cd8c7c438dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0129f2ca-f79b-474b-8115-c1cc7834710e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0d9f3a-051a-4334-b43e-89af53292c71",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4db0bb-c077-435a-b9e0-91de20ca05fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27356aa8-803a-4eee-b83f-2ee8e2c86ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "992a6045-f158-4b0d-bc32-d936a299b7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "64e435a8-6c20-43ef-9ccf-4b6d002b3ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3322e401-dadb-4e4f-977e-e34bb5c7f71a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "511585af-053e-4722-aa3b-b4669f969320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f699801f-528e-4e9b-b264-be16765b9428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a497f4b-c6ff-432d-9d70-41d99ec05e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e81059cd-d2ec-4bc4-b6de-a3f9af9deefa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233ba06a-5947-4c64-a843-bf80d03d5cfb",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a673c8-cf1e-4d03-9acd-ca5ac51673d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e92755d-963e-46cc-8e98-1e953326f48e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c12e15-4831-4f8c-b09d-6816c3fb654d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "af8ae996-4130-4ff3-844f-ef2c3545d36c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e970e1-781a-4310-934e-a0ec1cd45e8f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77299323-01e5-49ed-a4b2-497120571778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1986ae5b-5015-4d43-9009-0b499ee888f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e4b3d6-cca9-486a-86f0-9112c76bbe0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9dbdadbe-c3b8-46f3-ab3f-c5a1f690705e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37fa3158-f372-4d2d-a1c8-0bdbc2b4dd35",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f579d59e-a595-4ddb-8408-6f6e7760d19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bf42053-087a-4932-b407-b9f831f5f401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086916db-7678-4af0-be4b-747dddcb44f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "620db11f-3c1a-4bca-b7f6-b71b376a5b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a5d08d3-b336-408a-8771-358b7329119b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a829da7-6afe-4108-96a1-4fcee82304ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9955b733-b548-4e2c-a857-2e701406093b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fcc32fd-ef45-4ad1-8d8c-01a430b763b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6ba3ee4-e9ea-4167-a836-187479dd0669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1271190-d9ec-458a-a4ac-1a324fb2ad16",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c335e94a-fc1b-4e43-977a-855ba12d5c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a01f8938-ed56-4ff5-a303-2a96dc8d8387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87bb6c4d-4a7f-4006-b056-1465a1ed2a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ea07785-c2ba-448d-aa25-a199328f0f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17d8c4c-cbce-4763-97a3-d6a022880886",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ccf6718-3dca-43a0-bcf8-d8d1c42b64bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef4d0fb5-e4d2-4b2a-8609-cfd95aa53795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8497bc5f-cbfa-4cc9-b223-91dc99bdb8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b60e1382-4b54-46aa-81ac-d6fce8dbcab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b66485e-dc08-40a7-8e4c-d2d47a910f60",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0071b0f4-73dd-4aa4-93c5-4cda5d300914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5323102f-db70-416f-a75d-7d9cf8dab0c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832bbfdf-0539-4f41-9948-c982afef5fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "51bb9e7c-b230-47ef-b5b3-824f9bf26d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e5334e-ddb3-498d-b522-a9fb4895bbf7",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16d50a5-7bca-47e7-9674-fdcb4906361d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90f58870-5413-4ac2-bd88-be934bc011a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9479b205-77e0-4e90-b169-1a79f4166c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6e8f1064-305a-4db6-9040-f8d9f8f247e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b64c26-0390-43d7-a56c-9e33e19a4a2d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7170504-e158-4345-8d7e-5c785711d5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24a5cedc-dce7-4a63-a2ef-6e9db435cbd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6814cbab-7d56-4bf8-88eb-54ef7509f9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8fa71a31-f685-4010-bd56-ac753372e2db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "944d72a0-6c1a-4adf-af8c-b0c012475026",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b97ce5-fcd0-4eb6-8d3d-bd2847bd0081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a523fcbd-40b2-4995-8a46-a72feae8aaeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dffa254e-c1df-43e4-af7a-2cd52d0455e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e49a8ce8-e3d3-44d9-9e09-1753dbfb61cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9772fc19-6ebc-47b5-aedc-08760fd391db",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "570fdd47-6751-4b66-af7d-8259104cd7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2764f2c-b441-4445-a9e5-65d5a8a97e8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa6c4769-e805-43cb-8573-118fb830c8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1237dc3f-eb90-44bc-b684-e7d8bbd1fc7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7b48db-7723-4a0f-a76e-60df61c9182e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c014773-a3c8-4dff-9805-0b61394847fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "123a556c-f69e-4c99-a9c7-59586c9dc233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06766adc-e983-4427-807b-927cab52443f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0fbde058-6d71-4133-a1da-50a9e2ee1864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea2287cf-1622-4278-8b42-444394b0676f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe2183ed-d502-4a8c-b775-dd9807fc0a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2d273b0-cd44-405b-8f19-7f405df746ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f52d1b-dc06-4934-a276-faa1a6d8d0e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "420dcd3e-c4ad-4ff1-9c95-cbf5bf39a81f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e8e7af8-ba10-4fff-bedb-f4e44fc42bde",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8deb28c0-2fa8-4c06-9591-1299b2ad906a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c73c7155-6e49-4ccd-975f-76f1141b3d56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9cc8ac9-cabe-4dab-8d10-4ab9f73c3719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "91932d42-5f11-4150-9e7f-83f17029ece9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d776338-1c80-49c8-9d29-6101f6744ad5",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0027447-a847-4324-82ca-c6df13dbf4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45859c47-8a74-463e-93ec-2433f52cb191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7407ac2-080d-4d4f-8d94-2e1ce942ff45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0c31fe9-7eb7-4e49-98ed-0f6646be02cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50472a4a-cfc4-4f43-b730-d762445f523f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7cabfe-ee94-42cb-b612-76e20a16abc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e09641d8-c2c6-410c-9398-6b37b270810a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f66d119-478b-4b95-8a44-a9f14d21dc5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "229f9e6d-a6f4-4d9c-a5fe-67bff60c32db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd55fd6-8a23-4b2d-8d3a-2b98d21dbe21",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bfb71c3-722d-418d-a83a-a7eb9f051701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "331e2b7e-39e4-43c6-a71e-2636dcd9775c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7526e75b-5a85-421f-a04b-5fc3d9f183e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7ae574d-dd5f-4aff-a2b2-c8c66783eaac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce55bf3e-685e-45b0-ba55-8652434776b8",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75fb561a-46de-479d-98a8-be5defaa4d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e30bd64-36fd-40b1-a9a9-a32869d0be9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce18d18e-3031-4b28-80dc-9f4e095d422a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a93043f4-1e8b-4601-a91f-4d30c20e838d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567d6943-2e75-4cb7-8d3d-b926bf5fc9c1",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e995f4dd-5999-4971-b573-a9dae146b24e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0902a89b-3ab3-44d8-a6e3-f1ec33ef7d50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "519f4fb7-0eba-4980-a7f5-d9ac8f3e4fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e344d85-13cb-461e-b859-27b195bafea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd953f0-d922-4fbc-a0ca-9b7e1a41208f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "281e208e-95d0-433c-be11-5dabd78aef75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2bc3ac4-ece4-462b-9d1c-decbb1e3f988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b9ac80-4856-4dcc-8527-89e843524b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f160e22-6ec4-4488-bedc-7162698ea105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adadd68e-36c9-4999-9045-b627cb420ed6",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e13826-2893-4e52-ac11-c41708cb91af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ac4587d-11a0-464b-892c-3e34945a561a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47fd19d6-4eeb-4de0-85eb-bc6a63127fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f845c547-4d3e-41f0-be0d-409d016067da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b7d1aa-774e-4ab4-a546-3cd079c0f3ad",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b25f259-bf58-48b9-be83-05e894f92a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2d8db8e-f653-4141-8996-37a74b831fc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "796816bf-bdf6-40be-b764-889ac6f42527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1b36a047-31d2-4b58-bc62-d3e1b059a99b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b112d6-c787-43fa-968e-a2ab59d905a6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84eb7ad-49e1-4a24-a586-b3d560527c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ed3580e-c120-4350-b8a3-e869639d4be6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23363463-a140-4557-b185-595a060cb51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a99681c-93ce-4a29-9ba2-33e0589921b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05b52bc-0938-4eff-b175-534bcdaf2315",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b319ae17-a124-4488-8ea4-6a714b37a982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b1cd79f-8c3a-4a2d-8869-44eba6bb5233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e52f59-c60b-41b5-a33a-ac6b428b5a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9a88af6-3943-4a4f-a7df-9d62033c1283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7fa4ddc-a099-4756-bd1f-36807aef8570",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f09779d9-840b-4fa2-bc1e-d66675ac3fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42bf1173-28b6-4bde-b775-724d9c104fd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40549601-cbb9-48d6-b726-cbb5adb58f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3613dff4-b87f-4388-8c25-daf7670dbad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a306cb6-683e-4403-ba25-f2c52804297e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1050df-e397-4269-86d2-1dac06014eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ffba12-8197-4501-9d5e-74bff9b3f174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d863e9f-682a-4abd-aff2-741ad1bb590b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b476348f-9287-401a-b32c-572751c2ba80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c86dfea6-9b37-4584-bd7e-842d35bd510b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c04084-31ab-4445-b9e5-ea9853a6a6d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceb71bbc-3aba-49cb-9145-807fd2fc2ad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c4b7884-0c4f-48c6-87a4-ee625df9369f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab03ffd8-16a1-4a9c-aeab-3a549c1f866d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4220ef-174a-4915-843c-8e546e09c828",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1b854e-cdd9-420c-b1c7-3c3ad2a2eafe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2e290e3-a699-429c-b49c-9c7ffde960dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d846671b-5583-482d-a643-b0f7ba70bbb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "eb586623-f6b2-4ac6-81ae-0a2dfeb878c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d48951-b270-46dd-b31d-2f6a7a65b04c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de02e27-fa9c-43a9-9a5a-48614c185b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c36f89f-0d1e-4354-ad4f-dc1c7ed7052a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6307c5-cf25-4617-b4b9-f8f6ed941d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "96ead6a8-e400-418b-9660-af078a6f895c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff1b2b0-3ed0-4c6e-9447-866fca19597b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "345a8e74-ac48-438d-a17e-bf683f7c54c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc0e8a5c-7126-4896-8b35-b7dc42197174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c67eba89-c310-41c1-b2f7-2b70d1c62ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "282c3ee4-b4e5-4511-b204-cc4aebf33cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e6d03f-3fd3-48c2-84a7-a8633e52272b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34df071-47d8-4c1f-a858-435e096b5188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f10324cc-240b-48a9-aa56-5ea819dd4d9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec7b39b4-5806-491c-afbf-5c307aae8e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "61df1c17-64db-4716-9f5c-995cbe8faec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888d254f-08ca-4a53-919b-a1f15f308aa7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1eea92-c402-4529-b3bf-49d52fabb605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93450a48-c218-4d94-9de2-7b565e5599e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c0ef87-6ae6-4898-a0b5-b68a225544b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4e66192-6d2c-4d22-ac5e-073f2a642a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0581ce6-6453-4316-b39c-98a73345c7c3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ebf7811-2811-4553-992e-d6e6a927b994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cb73285-e920-445a-b443-2365f65f1ed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39f6087-a4f0-45da-8188-6477d19942aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7495523b-5d02-453d-9a43-7754e4d094b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ecc99ef-3ab6-4694-817d-8f1e92165102",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2edf35c8-eb9d-4733-91a9-58fc446f4894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "348d1e9c-5b21-49d3-a631-1d77fe30f0d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f246983-8148-486d-984b-b98bb8c40ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8584deea-1edb-43da-9ba7-c4be083052f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ffe1fc-5f6d-4214-85d9-098bdb39830d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aaeaa65-2adf-487c-ac55-5695f3a8827c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b0d2462-7f87-4aa6-b438-9d15dbc5ed8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00731422-bfa5-41a6-bd46-8a245ed93ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9da11991-0f10-4ade-a930-d22911361345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739aa131-3077-4a1f-b912-f26ddcfa18e1",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf9eb1a-6ab2-45a6-a008-2ffacfc9b883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ecb0192-94de-439a-8208-c94cc9893612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb671d5-0651-437d-998f-3ed72183a614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "058abffa-ddce-4162-aee3-c0d8b7c39952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992ba181-ab3e-4dfc-bff5-ce6ce0315369",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee29a2c3-7cb5-470c-a6fb-f5c2a1dca4d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99595ed1-6513-4661-b9dc-db0390faffb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "155b3735-4f41-48f0-938f-ef529f838668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3b56cc0-46f9-4068-81b9-c034f50d24c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d8262ea-da3f-4b8a-9fcd-f496f3cc120a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6092f32f-08ce-40a9-8cb8-d8f7ccb335ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bab3da2e-d55b-431d-82ff-6a38b8a3df53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "972713eb-a0e4-434d-a675-838c03ba04f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c9580bf-6eb8-41be-b158-c404b132bd69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d8f96b-3407-4a57-a074-90b3b0863de5",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7427db-ea07-4955-837c-dd4c5b3856d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4be8a13b-7c63-456d-91cd-eec107d42c26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7bcb98-c188-4713-9dd5-4254756d1817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ec8b37aa-da52-4ee9-90fc-5d32b44ce302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce7e204-5e6a-418b-8808-8fc5ce96c1ef",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "602735fb-ef2b-4b8a-8c51-18795ddc7385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8d9bfc4-aa7a-470b-b3c7-053c8d25c14b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b289977-c6d6-4d4c-8ec6-1e05c2ee531e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0161f2ab-11a0-4c47-9a56-fc1fbe2aceab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8df6e6a-1c3c-47a2-9dc3-5c219e5ff32e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd179bb-3e9c-4522-baea-eed32de8e1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "806b8fb8-afdd-4db1-820c-c9d7f49e7627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e87a552c-1dce-43c1-9458-98687ab43bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "38a6bc61-88e5-4d23-a2a6-dc9ddd0e6f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e3e485-85a9-4609-bedc-7cad8549a067",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed94b51a-9db6-4047-8c7a-b58ca97f3f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed19d542-dee5-4971-bbe1-c019f1f919a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428a9bc7-a580-4667-9c80-4c51dab20e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc586c9f-b7d8-4a50-b85e-e0b8c847bc52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "decdf5f8-3307-4646-93f5-1f60e6746089",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9639d51-6827-4aa0-9911-14cda786b37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "114eed5e-47b6-4bb0-a425-fef2e3e16f13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4d53fd-023a-4ebc-a343-62d4a53ca3a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecd5d421-b2b2-4970-897a-f375325df2e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c2b24d-3744-4fb5-99d0-a1e2357105de",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d90164a-1f7f-4cb3-b75a-9961c3be0af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b89007df-ef4b-4334-afef-222ab57d5c90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26335cce-de86-4044-815c-60506e8fbdc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4f4e4bd-de5b-439a-bea1-7be2f2a3ae00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bbf7847-0ef2-4bef-b442-4cf96601531c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8279c02-6c49-4e29-9117-0e5e14991ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "313b0178-9023-4325-b813-95effeb153d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ac9bb5-1844-4fa4-96d8-99679321f6a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3c17442-108f-4bf5-87e0-d35df37ddba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35614cb4-401a-4c62-990f-f7e57c45f43a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda1d91a-b70b-408e-a5c6-5d8ef8f2e586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aecac8d8-31f5-4b55-ba03-a87f09da771f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2f14c3-6dd7-4d0b-8ac3-54835b73eeb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "015ff1d8-226c-49cc-910a-30cd37768b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb5b981-5062-422a-9812-50af55ab6cd9",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09cc7ab-af8d-46bb-ac03-6a9fd4a8690d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "946c7b66-bc51-416e-b3d0-71d4a6a804b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d5bbd6-2bc5-4364-8af2-74a1708360bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "13817ac3-3758-4240-8865-647ca4886afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3407cfa-0f33-4085-838b-ad16e51c2ee1",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d43b35-d4a0-4f22-ba37-1b55cdd94451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b8c46ae-cfc1-4cfc-aea0-74b8229c8532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ccccc1-5d27-40bb-b910-7c40e9cffaec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "587faee1-3146-4778-9d24-76bc4c6edcd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cfe5913-9091-444b-aa63-4eccc730edd4",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88baf36e-1f6b-4baf-807b-046e0f3b58e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "074818ad-91c1-46c1-a26e-a73bf49a238b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b2d451-63df-4195-8a1f-c8cb07d0d0bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5df21bfe-223c-485e-8e40-e58c284b5ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12880623-c54a-45c3-b4b5-f71c4021c404",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32cb98db-bd81-4ca3-9bab-0425987d4f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9223560c-32ef-4355-b522-b85ecada7580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d597c879-179e-4869-bf60-bf4aef682ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "09b50dd4-5bdf-43eb-874d-033b78c37689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "166944fd-2a4e-4ffa-98ef-9d5cae5ba5ee",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f325d4c-900a-41d3-96db-cad9f022dbc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce7ac248-3677-4306-be99-2eb956e2d405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec70f2c-d6d5-4d81-9bd8-846c69f904dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec0f6e6e-77ec-40f1-b2bf-c0ec1331e40d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e277ca6-a19b-4bb1-bd6c-86de3bc93cd4",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09472836-28fa-4114-abc6-a61f0bbb96f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6721c4e-223e-4365-b61f-1ff54db47cfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2590c7-6b72-42b5-9363-ae185796c5d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6143fe2e-378f-4c63-b6c0-e9c322aba134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f8c847-f18b-4baa-85e4-0d4bea765eef",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f81075c-74da-4fda-8c32-b0321c2600dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "367b1d08-762a-41f7-8962-b3d086a6deff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99e1c88-f727-49bc-b691-a547d4f459e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa6d1986-b2bf-41c6-a8eb-dbc297c443da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ab64cf-5a9b-4d24-b57c-7598717a539f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95a9908-8809-41b2-bd77-75147bb5ffae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ae6e96d-4d79-4029-ae30-46e4dac39dbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89b138e-30bd-43ee-848b-a5d76d59c87b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9e273d5-3e4d-4029-8e5f-8e4bce370516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "770be8a2-c27d-4ec6-8252-126760fc60ca",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78428228-0c2c-4a48-9e07-3c6923eaa9c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "719802bc-21f9-498b-9715-1c7d3dc4871d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b81feeb-205d-4923-8ab6-b52e63600b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "56dbd0f1-7474-4fb0-8eae-3c161de0c877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc7f0d3-b319-4f16-a058-5c0ffc91d156",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb3e6057-551b-4220-b742-cbe6698994c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4b60b32-7db1-44b0-a727-4e92f15c877a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc38fa4-536b-4d5c-9d60-aa39a493f3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3363ad20-55da-4955-9ca4-be12097ab383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e49d8285-36fd-42e9-ad2e-d849d1227d93",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd27d6f-9852-4bc3-b2ad-dfe5a4cf5b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "728e2146-5767-408b-8e06-2109e30e8014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c5f4fd-865f-4d3c-9274-390b19fd23da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fbd8dc70-53be-475f-bf39-67f94c550a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fddf3a25-81b0-4f8c-bb1b-4d7dc5ae59e3",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab257f7-649c-4686-b458-de3e30baa5af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b33ac9a6-af02-4682-bc70-5d009e538f50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d0df8d-a398-481f-bc0d-05ca3f13b028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "00a8cd1e-3bd4-4ab6-a884-47e24a5fc274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b50c489b-6423-4831-a1a0-aa6331a0f120",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f49667-8ca9-4ca6-b254-998580217453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e745afdd-7ba6-4931-a84e-f585d67be0a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc422eda-9b61-45c5-84bd-6fb056e08419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d133954-4a5b-45c0-87f6-b45958757ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53afd832-51db-480f-8510-d3ba71731ab5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc84ca1b-1857-494c-8851-44525d615898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fff708bb-2693-4ca3-a1a6-eb5bad86f18a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444a57b9-e3cb-4c62-8333-df2b87e52645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dbb70689-9e65-4af7-9907-16ae515add00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd28dcc0-8785-44c8-b420-6de54a486696",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "988732b9-b982-478b-a9b4-2bdb5afe5b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92054c62-2184-44a4-a8e7-8bfc901f262f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b671f2b-e054-4a7a-b1a9-fc291abf481c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "974cbbf6-9096-48cd-8ce5-a424c39049f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "042b6dbe-f2e9-4c86-9cff-4a052649396a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c602db06-ddfd-4560-af2a-458f301f5905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b5a750f-f3b3-413a-982d-564d04f00916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2007f084-66e6-4841-9802-c53968f392c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "416e1c4d-30a5-4841-8315-0570e74b0ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8354af66-90a1-4085-83a6-102158209cbe",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f45dee-ab05-4c1c-921c-2e000f4e817e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b8d514f-c977-4b47-af0c-685321279dfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c201b7-e0f0-4615-a198-c336df271639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c627d97-3c52-4c87-b470-bc580e260b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "951d476e-15a4-4d14-a1c2-1b667f5432f1",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98eb3c8a-0b9f-4f6c-855b-a5170216d287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0c7a3338-6bbe-4efc-8cc3-3d7602191775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b44da53-121b-48d9-b66a-6c89285c7455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5400423-da13-4f77-af7d-3d82219b311e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e5d5367f-49f1-4b4a-821e-b3a8f615f30a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1b758882-297e-4740-997f-d6958cd1018e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3964ca9-ee9f-4685-9e97-a7102adfe112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6bcf84da-ce57-4b0d-9c31-fd37e0f42eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6533d30d-a246-4f98-814d-70b94199ed77",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0209a6b-097e-4ff2-8cd4-ed75c586441e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f89f265a-d89c-4fa6-8bc3-170f585e2a8e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1f2a434-b6a0-447f-83d5-c37a15cf3eef"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "106d35e9-a8e3-45d6-8913-8a7c01bd5d65",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8492976-6537-4085-af01-d41b730b7de6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "77b55a80-7289-4866-88f7-468f63bc74ce",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6e13cbb3-fa94-4316-b743-c71ff3290802"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3afdc467-c571-488c-a99f-25238e173e34",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "17980253-38a0-44fa-a3fe-0773fadf6176"
                }
              }
            ]
          },
          {
            "id": "1d45384e-9e6c-4264-97ee-fd5f153f88e8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d5630615-2ca2-468a-ad06-d452c2f8709c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e096530-a625-4004-9d0e-551717f2a3bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "290d74ab-8d0c-48a4-90b2-28c03bb8a595"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7fade30a-8bbf-4009-b94e-487261f57830",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7ae6dd9d-ad58-4cdf-bcd4-055c1283139d"
                    }
                  }
                ]
              },
              {
                "id": "0d0e2a70-afdb-4fce-a7dc-01e882874ed4",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7fbc926-e455-4e05-bc23-1373504df616",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d8570a13-1ce0-4a31-b9d9-9656319b82ea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06f19470-17b1-4601-9212-3a3db34bbd91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7e5660ec-8101-4e0f-87f1-9d0ad31a4998"
                    }
                  }
                ]
              },
              {
                "id": "9a5b9b0c-86f0-4cd5-95e6-108e5071bd6f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "30dd9aa5-4af3-44b9-a92e-83e0a2b35997",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d76c634-6bd8-44c8-992d-0a0a0056f706"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86aae229-6b35-44f5-8ba7-dee99cd09b2a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "64394976-83c7-467d-8fb6-3e28e8ca09a9"
                    }
                  }
                ]
              },
              {
                "id": "8d079704-0ca1-4c34-b7e8-4c35d1b131f6",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc207bcc-3391-45ed-b09b-a71a9c3878cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "39f40ee9-b9c4-4a57-9630-81ab8421e891"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a7c018d-f6c0-42eb-8846-b18afa8d20ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5c599e22-c986-4b5d-94c9-2f27412b66a1"
                    }
                  }
                ]
              },
              {
                "id": "fd6051fb-7e86-4dce-8a44-43e4386ac5ef",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4c2a3b1-a05e-4903-a56d-00f698ff9322",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f5cd77b5-c4fe-4247-845c-b34c31e36db6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "44d14b5c-7e4d-4641-a9bd-54b2d25f062c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "0b8b8469-3ce2-435b-a497-1c544363429b"
                    }
                  }
                ]
              },
              {
                "id": "19b6c966-002d-4610-ad9b-f6dd79120750",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "735ee2d7-23d0-4c6c-992c-545212db5aec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "75248d1c-6ece-48ed-b31f-1f75c5e86c8e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4dd5530-2f3f-4483-bb70-64c328aaf49c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b9f4318f-b618-4d74-a788-72fe498e48c7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5c38687a-8916-46c2-9e7e-8d27282de4c5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c421ccd2-432b-49cc-98bd-6b6c7eefd1f7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c9661117-7baa-4f3d-a07b-b82f6d19cc15",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9bd8fb9d-63ba-4a86-8159-211ecee8e1ed"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bb732214-e376-45a8-8f87-4f48898b3a69",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f21bd1ac-c7a6-4711-b908-38189e55fcb4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ba87eda2-61f6-475f-a7ec-7dc6885715bb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "62beddf7-4714-44e5-9bd5-69d1414ba532"
            }
          }
        ]
      },
      {
        "id": "0b1940a5-5201-4e75-a011-dae423055e9a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "214ef07d-0afb-433b-9c4a-c1a490382d84",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f6b81780-1e37-4faf-809b-339932041fea",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "433b68cb-d5fb-4b44-b9a5-c676207770ba",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd018d34-ea8f-4777-9003-768d3648271f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0de1d1e3-3b1c-400c-be31-5126227a25c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3b59b4-592f-4dee-969f-1b3a6d95cc38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0d0bc5a-8122-4cf4-902a-5f2d0c514572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14820bfd-2bb0-4fcb-8f69-54d9e606b045",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "658d9fd3-bd58-476c-8750-511209389eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a04644cc-9eae-47d2-868e-b32f6948931b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709be494-713d-40d0-9e96-2eb5384053a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e27c623b-c7c0-4a2f-ad55-f1d8b2cbfe06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3277146-5aca-43c7-811b-aa469b04db85",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6ea892-42d7-4dfb-88b8-4210d702bc14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcf47634-6203-4663-892c-3114f6585e86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6232ec83-e60c-4554-941e-5eff098e8234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9b44348-bb37-49d1-9184-df5157ce16d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e01db6da-dc74-4d68-87f5-aa359a8dcfe9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b21eb2-4b27-449e-a61b-145f71844cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e14c297-22ae-4d18-81b6-b403cfd75ae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d087e03-6804-4e4c-9a58-b69fdfcdccd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "49fa888f-2253-4dfc-aff5-4c3b126208f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b0900e2-b04e-4b9b-8baa-2f585575a116",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a556cd91-10e6-4584-a655-ace5d950a6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdc47f13-c5ed-4474-a736-f11195a7ae5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "897e8707-6312-4d8a-bccf-3f148d2b6d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e313b85-94f5-47c4-9fb3-c5204c4c87bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4ce962-0761-40f4-b6e7-787b86c4a127",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e09fafc-187a-434f-b1c6-4fe79dc54691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fb58c98-a121-4f1e-a578-73ba44b3d6cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f7e5ab-3e2b-43b6-9940-e161ebafe546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "acbc8996-504a-4231-bb15-8854f0e97ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90656559-d88d-4f0d-8713-efc3024f89e1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a822d0-9db2-46f7-bbdb-287052b452c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef1bf6ec-0873-49ea-9eed-ad5fcd15114a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03564493-9f9b-4c42-8069-b1212b0b039b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce64006b-5ef7-45cb-bb31-fc7dc93fb403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc06aa8b-bac2-45c1-aedf-91814d056b87",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe0a1ad7-8ac5-45ed-aca6-bf95013e8a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b5b3d49-dc08-4c8d-9e92-638334444c84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d541b09-4e56-43d8-a9b0-4ee02689af2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec29c3cb-2997-4337-896f-1ee253d4af20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7cd34a-6753-4c58-aca6-8d5e147a1d38",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92b5ea9-7eda-459d-b761-8618193b977f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "356534e1-10a5-4932-8e7b-9515c642158b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89dc5a17-bcba-41af-ad06-fc0ff4e0dab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "febd70e5-bb2f-4ceb-8a94-4495e3d85e35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9274381c-1c4d-4cd8-a9ea-de2fcd121c35",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c162db-d088-4ba4-9d7a-b9079c010b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f66a2ac9-0254-4632-9d1e-64e0a20f87fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88714d1b-7de2-4a87-9d9f-2f7d664ee266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "438ffe03-4d45-4b55-a57b-81e214ea4834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71435a3b-ca95-4644-99f9-86b1cb6d8e5c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b37ffabe-f52f-4744-b6fa-d16a002cabd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f34c0e6-bef4-4817-968f-fa08ea232d91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22dde1e1-5b7d-469c-b860-159d146e9510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a9263bb0-2b78-4876-9d99-c75442eb7d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e5b018-69bb-4bb9-adc0-5dfff919a02d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d5554e3-cd4d-4a40-b5ac-e25f8f99d3be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1565d0c-c140-4900-b7bc-f48acc9e1f56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e270719f-b7a7-493f-a3a6-030927739f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ca4f585c-dc58-47a7-b575-30557e9e0858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088d3880-0067-47e7-bb03-e7e3362aa17b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88a8c2d-0b65-47bd-864e-139ea2db102e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27218d20-977a-4a44-afde-34804375389e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91cdf5f3-0c4e-4bba-bb78-93d6de8174e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d908d57-b779-4cb3-9597-4eb8be62f435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d96724-6c33-4620-8068-00339b320205",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd70689-21e6-4c2c-9c2e-d2155b15d680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a665549-9698-4ef1-bedb-31ea75b81bf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd59401-dddc-44b7-9d5e-f778f183da95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccd23d88-2826-4486-af47-99f87cc83f0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ecf850-87e3-4e79-a09b-0393339470bd",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c63fb35c-2b29-4f50-8d89-69f062ea01f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf341db5-858a-42d8-b527-0e16258026fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e0e8894-252a-4fba-b309-0628f949a59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fa8a82d-0b60-49cc-aa90-33542d917408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bfc8d49-551a-440f-b964-f4f678db5dd0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d121a381-c42e-4bfe-9601-326dfed44893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44b9b1bc-4cda-4f5c-afc6-99fe79be25de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a822f12d-881f-43cc-a0c8-ad590021ac30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a35ada3c-b823-421e-bf6c-b970184832d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d329c4a-2f85-4f0c-81c7-ddefc3378501",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a8c7aa2-d8b5-4b20-8194-6d26c2b63a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94e4688d-9675-4cef-92fb-393d3aad1343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de4da070-cfe8-4cc4-8195-7e72c0745941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "207bcbea-5688-4d70-a535-ef96e51e95b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b426dc0c-da93-458f-8095-5fb9943d036c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c56adf-618c-47ce-859b-2f0f22dc24c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56d15dec-617e-499c-8a80-1a7f011c7bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e97728e-044c-4727-ac38-a94372d7d8c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f8c361b-bf12-4f75-9f88-d5c0d82d486b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f5c672-984b-4783-8dbe-08de6e18189c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d69ddba-8823-4f02-aac1-7d7a26bacc62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e535597d-a413-4147-a192-ea2b39cbae87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e41e5fc-6933-4369-afa3-92f2d0208b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4242e69-c3b1-4585-a9ca-5747e21bb704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3624f2b-98f1-410b-ab06-fffa195ca4e4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebbf5b1c-8c26-4a22-8d1c-043a7cfc6a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf9d8024-1e1d-4753-b4a5-f718b7a26c9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17fb242a-5064-45cf-8e19-61bb28ba47ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ee5f9b1-d72f-491b-9ebd-8728038c4ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d11826c1-e0a8-47e6-941b-242ff47afb3e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63ebd84-2608-4973-88fd-28a5226391dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56123097-52ed-4f2a-aac2-aacd1321956b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "093c8f79-1862-4a8a-a6d1-efc8caafcaf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b09be067-f042-4cda-8ad5-5026d0c6cfd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6fe2a25-8b51-4b9c-8b44-fe41ae470ea4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "225d56b2-1285-47f0-93f9-b272e498c2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "739ef172-35dc-4289-9ed8-05947bfbaedb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286f2184-8d1d-4bd0-88b1-e5686bf7ebab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0692605-29df-4be1-a264-9b6b8729c4b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0f71fd-9ee6-43c1-92fd-222b89da88e1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f58e702-9f0c-4aa8-8f14-aff29774f98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "339b5f4f-ffe7-4e03-9d90-3db6d4a888ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0ddb33-acce-480d-aee9-e33ed71ade50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cdcf306-c1de-4ddc-93b8-ab8046479a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2607c0e6-5f82-4b91-b2ff-b98a415c2534",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "829f9054-8e2f-4e98-80b1-317632063a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28c50641-c677-4497-9be4-7c9c13879424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2deab5f4-5a1c-4912-b7aa-7f0432da1e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a99eecdf-babf-4ae6-a490-607408b4446c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5e79bf-807c-4bf0-b4e8-0f18569a1119",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc909ee-d727-4627-a6ad-89f3490354f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a62e8c9-1602-436a-932f-9031e8b2a57a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaeaa55c-32c1-4caf-8f58-999353eb43a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5efa5285-bad8-4488-9f6c-c2a4296dd79d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db733f7-453b-4e8b-974c-9f1d10e6eba3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "062b3ed3-0ff0-4396-bf3a-f1eed94d5224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b15a0dc-8795-4806-9aa8-1e7060045505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccff1870-4478-4158-930d-e7dc7721b5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd5e47a2-3337-4e24-b0eb-3eb3bfc69c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a8b6c6-6c1d-487e-94e5-bb249cdd92eb",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff2567b-82fc-4135-9d8e-3112d97a0eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17ddbfb5-e494-43d6-8304-2eda9a22b1f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "574ffa09-06a2-4529-a4ad-91f62a434b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f782d37-518b-4692-aa8f-f55ecb0d98ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e03345aa-d11c-460b-8c64-b9acd8a97e7e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3cbd545-4b48-43ce-b8e6-951a0bdb8d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a8141bf-b99f-45cb-8276-2fc06fc046f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac2f3bf-6157-4038-999a-49206f37342e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41d94221-5e8d-4119-afa7-785a4b285fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63293d57-7633-41c0-a080-b15e3ebb02f9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50da5291-c038-41b6-84a1-2026643ae18d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c41e196-36a6-4f16-bc99-3a812e82eb00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ee7c41-a5c8-480f-bf6f-d276a0ae04aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a44a3fef-0aaa-40d2-8fa6-963bd5e52d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d27c5f-6169-4da4-ba6d-2fe68adaa1be",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45058d8f-9c67-4de0-a1ed-3c54b1c1ecc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbd9d421-20f6-4e4c-add4-6681c2eacd29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63af114f-bbd3-40b0-8e75-ce325888caf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "330c2650-ccd0-483d-9b06-2c4ef03ddc65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3abbb7b8-ca2b-4410-bd67-7378ceffec17",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe6d0f1-dd94-4c12-ad5a-06656d303000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0a4961f-f641-4541-bd41-68a2330ee44d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7143734c-2e87-4e12-a60d-9102753099dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "464052a8-d1dc-4a49-90ea-934b09e94fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb3cbb9-8aea-4150-b81b-3173b8fd8421",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b71411b-0999-4c48-938b-3c6d4ef32d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6409223e-f9cd-4110-aef9-29c829e0f878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87833c11-f93b-4487-8c8a-b803709f970b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ce361ec-21cd-444b-8b8d-96110678efb5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "673d202b-e472-463d-9d2e-e8fe428cd73d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c79a3c45-6fc7-4e18-8eba-f27de7a485ec",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a00243-5494-47bc-a9df-90359e07fe69",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "49a27cf2-78a3-4976-8169-5d6573f71b04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dedc293-6de6-420a-b31e-0217262983a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "983d6768-ca51-48a6-ab97-ffc6544757ae"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e96d2df-fea8-496e-8efc-c03044229bcf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c88c3a1-7e56-4b2e-a51c-19fc70aa7319"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6cb654c9-9754-42a3-82f3-e1628a214f77",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d82ead83-86f1-4a02-8b04-bdf2ea08c443"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88954f0f-999c-4a36-b2e9-33d00bf2a99a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2863733c-64ee-4492-b503-bf752c1b2e21"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c79d2001-6565-4d78-a8bd-9910a0ce13a8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "493a9bd5-de67-444c-9ece-b5a31baa0a09"
            }
          }
        ]
      },
      {
        "id": "1083ff85-ea6e-4bfe-81b8-df377f5e4c27",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "e03fe825-a182-450c-9072-4a29b6fa2d2f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f8cbae26-c3a4-4e7e-b018-5c9419593945",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "49062be5-73a6-4266-a513-f71b7d5f72e5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ad573f-861e-41ce-9cdf-361903a12945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e89641e-21f0-4dc8-aa3e-24d07b444ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de35b6f7-ed5b-47cf-93f6-3ccf6f613275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7a02377-92e7-4aa9-91b2-d66488c8dd4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ee65e0-1e95-40ae-8661-bb6dda461022",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa0778c7-f526-4731-b41a-141678e3bf50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caa15a56-e95d-4002-8afa-8fe5223c3dab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428a535b-6214-4a3d-bcab-82340d408429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f76af3c-e5f4-47db-b2a8-ccdd906e30d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7adad68f-ea4b-4b18-a9ba-80d4cc14b03f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a074fdf4-37de-4c7a-b577-55cdd83b3f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1ff99fe-eaea-4601-9e05-78608e7a2b68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb5a4ea-0ad8-4415-b0ec-efeed47fc0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "156ac077-d9b6-4bec-ba37-9ed956b9f5ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3697cf49-4cdd-415a-9719-294a74a558e7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd6b1a0-9816-46c1-96ad-febac6c1e998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ceb59f0-8a98-45f0-81fe-378f906ab363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d2edae-10d3-4d9a-ad7e-2a6e753f15c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1ebeda8-ffcf-4ec6-a229-f990efa9aa92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f066d7a-5571-4bb7-8f4a-1898405bc486",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b015009-e65e-400b-9686-d803d31d8737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "324ce983-f17c-47a3-b0a5-4af3049f3c9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca92c0d-a019-4770-8fee-3691b833a7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f28720a2-9e39-464a-8711-80e8d1cc1951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5759b00-bda3-4ae9-a256-2252f847c1ae",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d902254e-2099-4db9-8f5d-3b9dc1f6027a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ae46dcf-48e5-41c9-9774-d29489424270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7027a465-af7b-4f5f-9247-f253a736f095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e1d6157-7442-471c-af1b-bc4632857fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f5d7f1-acfe-4584-b26e-93a6f982d2a4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6dc0dd-8a04-4579-9f1c-c885956770d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3bdf182-05f9-40d3-9de0-0dd451b5c9b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36732756-3c76-4756-af72-da3afea6f831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3a00eb8-7b22-4aa0-988f-a70efcfd4af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3665ada-ceb1-439d-aea6-9cd1df528b95",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a73bdd-8c54-4a4b-8c50-6cb06472e890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d957a8b-37fd-4dc5-a9e9-728e8f002649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58eacfc-4a6f-4bdd-86ed-8c188f6f0238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9697df15-f1d1-4b73-a3cd-9855dddd7664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5840a513-6390-4fdb-b313-97752f4d2358",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92911da0-3a0d-48f7-ab57-142acd7e287a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a3f3646-9465-42de-908f-9a19789a32f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a4932a8-9456-494a-a00b-01a92d5a78e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "880f65e5-9c2a-4f9a-91ad-dd802ac60f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f2f2ab-371a-4ad9-94e0-b40d7d531d92",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e4e960-49a2-4b6b-abb1-aee275e67156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95633801-101b-468c-b511-66f323ffa508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bceafc80-ec6d-4cdf-9140-48712be796d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fecaa2c3-a503-47ed-ad28-ad9342a4acf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4587b0b9-e89f-4cd8-bdd5-69f908b63215",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "563931b5-2d85-4467-ac81-cf8066a9c5c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e414768d-5719-4d11-acec-7308a5bd87a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "182517dc-6a8b-46ef-876e-fa523c1b099d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "cc3acd09-d3d5-4db6-b179-57196061deb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740e8266-1a39-4a57-b4e4-5f975823a699",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "155805cc-490b-4267-b0dc-61854186cb76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64723f36-9921-4b24-b9af-21160d1f91eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f43e08ef-93a0-4936-98c4-4fe09bd55096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c5723aba-ab7e-4d6f-a1e4-24730203942c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1bcb2f-ac25-4f6e-bf37-2730bbad34ab",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1aac0a-d8d8-4464-a99a-87a58efa7621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84fe0b8f-2b48-421f-a3bf-324648ab0a82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "384347eb-ce70-4bb3-8f81-e3bedce31bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f0eb7c1-c784-4e06-aad6-66623a218078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8abe781e-d690-48e0-8691-764c55930c64",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6660790-176d-426e-b59d-5ea18360b131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75513a7f-7129-4345-b6ee-c054014bb0dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc83cb1-a2b0-4df5-b3e5-e97d73603bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1aa06707-650e-4427-b678-607709b86896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8de12d3-52b2-4e35-8623-e2f5c8efc201",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "497e1f77-6a06-4561-a73e-5ca8e78c464e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8972079a-bcaf-4220-aaa3-122ebd224926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea716cc-7ba2-4654-b551-498d6bb2749f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "42b2bc61-7f01-45fc-b510-ae61842b9eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2991387-4b86-44b6-b61b-e4bafcae20d9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "043e3b76-f41f-4b64-98e7-e28dd3d52d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d25e4a3-ce02-4a97-95e1-d51637e02e52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b73d394d-0266-49c6-8c3e-394d3c2171af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e999aae-8314-49d3-bf63-22ac9452bb5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b74aa8-314b-465f-9c91-93a99cbf5bf1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f3638c3-72d9-410e-97c9-02123062a122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8769e350-1e08-48ba-914c-005b2f9a4245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd9f06f-ca6a-4a10-b104-7f938a8f7839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "92b223bb-3bca-4843-96eb-c2ef58d1783e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "713af2ae-1fcc-4422-ab85-e669a5b37dee",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3884249f-403b-409c-9268-0de4494fd7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "425770ca-491c-4a12-bb14-5aea8deb8867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13cfa93-32c4-4506-9836-d578c7084b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c76e6a8-b205-4561-9382-6ccc4389a32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b039d1d3-cc21-47f6-84dd-dc4f02fcb918",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "872f3cde-b1e9-4be7-b0c3-98706eacc992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c585f3e-b6e3-4a3e-b66b-d41bc3fe4f2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abbcc5a4-fe66-4c0d-8007-f4ec5a9423a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2be1883-0fc7-491d-be9d-ce672450a928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc2022f-ba32-48bd-ace1-ba188faca02e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f312dd-437c-4d10-9728-4eb438e9bb97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08dbfad0-4ae5-4f79-a019-5709898d991c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd3ea00-7e7c-4783-9327-59175aac364a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18af70c4-cb3a-4dea-b14f-c00a842ac722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775fbba2-9f99-420c-8e47-c32008779d4c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b280ab-6db8-4a98-a5cb-f7f42f55c180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "564751d9-83c9-4292-8a25-1587c142ae7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9121d83-db5c-4aef-861b-77b4604f9890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2df6424d-bca7-4a1c-947f-dab5dc43693d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd087e6a-8934-40f6-a4e1-cfc2d0d56736",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8dd6981-54af-453a-af3b-6fc7fe9d501c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97079a3a-225c-44aa-8222-349e65707116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c29cf43-8d61-4906-a477-f893e6eebfd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93a868c2-bc19-43f9-99bc-a9e99cf94db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69027df0-2d79-4f80-83b3-8ff7497e634b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b66df0-81ed-41fa-b7fa-eb20e406a88e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9756b5e1-819f-4e60-96c9-65635c0e0edd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "390caa87-41fb-43f9-b6d9-e8ea16c9c883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09865336-4918-4a90-bc38-ea585bff7f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559561f9-1ace-4f93-8201-3d72f08cff7b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee484233-8357-4e13-8cef-6daad970a8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58985f04-1e8c-4a94-8cc7-c8f3b21d743f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6793f8d4-27d7-4735-832e-411282109bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "065a9534-a336-4103-9292-9dd5ec9925dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f660ae-325f-432b-a343-12713ff52be8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22456502-3948-4e6f-8d11-f1fbbbc867cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e59de98f-2f6b-4f01-a8af-1a12abd23efe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfab3b56-8380-4b05-8608-2d2a2b2e6319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64e6f66a-4be8-42c8-96f3-927d50785e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b43de8b-518f-4485-b1b5-949d064033d3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13d1a1a-55aa-4caa-a16c-97baebd9fa52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4a95bdd-01e9-41b3-8239-ff2ecb31fe17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18ee6db-01c9-4b1d-87c8-4ec54baeeef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fff8686-4420-4422-b9e7-2abdf134221d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7e2438-73c4-4c6f-9ffd-f712df8bdc9f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abee5cd3-526a-414a-9146-e4a786c63be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7273ea22-9abb-4e8c-ab03-7fe179be248d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891d67d1-c0a9-4b62-96b7-64ea73a28dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c203dec-85e5-4148-ba8b-57638ceb43c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "047c9736-90e9-4125-be70-d0b01a9e1c70",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c63062a-ce5c-4ec3-abe3-e0a219ed56d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e021b336-82ef-41d5-9d20-b8d6cb53e753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d704e3c-57c9-4733-83f7-58ba5d554be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f711676-cdf3-4f31-80e2-e82e028644f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a1a62f-87ce-4e71-8392-497453c0541e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31bb5af1-35cc-4610-9a51-003f6766670d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03db44f7-652c-4e69-994d-c9bd1b3fb263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d3b8fc-2c1e-43df-9934-b053384c3d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38bba966-a672-495a-bb24-6b033ead00de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d7248c8-77c6-4241-8f9c-3833cd36cd1b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf313038-d793-45fc-bdaa-c37638da24bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "007e7662-5ff3-4f82-932c-4380736a8a10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab7edd2-9b87-432c-b20f-b7152a9a5cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a957e1db-e761-4478-800a-e34ef1236462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "192fa366-402a-4685-ac36-d2281a1890c8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c744e997-57d5-4a40-8c6b-347034d8723a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "909541c6-f1fb-4cb8-a73a-13a648feb102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e064de-9824-4b1e-8691-8c146d12357b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cad475e-2c75-40a2-ab47-d5b147d70b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7695af-e0b3-4cdc-ab7b-cc6c1bd86e05",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e462b18b-b8bc-4c65-bc11-e3e4e5821b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d95747d-51e1-42df-9dcd-01609c07e60b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d42964e0-cfc0-4a33-9a8f-28d74118a51b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eef6925d-8902-42d3-968e-207ebbc09254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a60d9a7-29e2-4936-83f9-b659fee81382",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ad0633-2edd-4f3f-b220-c0e3487020a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "991815af-5777-4b24-b8e0-56e9c1727ce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e2db12-a25c-4a6e-b65c-7225fbd399c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce00e7fe-d075-4145-a407-17a6516b766e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f6c5b5-b251-4a8b-aa1d-516d9b423e39",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dae7582-2df5-4165-9c59-a090155bbd88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82fd896c-636b-46c5-9c3f-5053c6623d8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce19d41e-298d-430c-b551-2380857d13c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83831397-b14f-453d-b27c-79ebcd50c3c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c54ff5-8b7f-4714-aea5-7c86375eecdc",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac97f8f8-18b3-49dd-add4-6454e643f710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6e6ad9d-c724-47d8-ab37-1083d531f32b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0786d93c-3eeb-42ec-83eb-04cf19fee90d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7821b238-4acd-4782-bfcb-899fe213f166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ecb2d6-b65c-4dd5-97e3-b897789ff491",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c07d44-867c-4488-83f8-81fdd3b04f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1416d723-ca18-43e2-a2b5-c54f713b9b98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b341197-7af9-4ecc-8a9c-30c593c3a58c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dc05795-8e28-4fef-9b61-126cf7fbc3bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71200e2c-82ed-44fc-b9c1-5baf7d93e574",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88f7bc3-e14f-44f7-947c-c473ff3fe377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d4df74b-515e-4f0a-992e-56f31bad50ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51007751-544f-4078-b612-b7380b5f67e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7e85322-0d46-4158-9746-4f46f80b4a40"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c2341bd5-a45c-43cc-9fe3-9f917e4b97ad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "095700c9-67f1-4919-90b6-d8357f61e4b0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4986152-541d-40fe-a655-96992198df9f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c3ce292c-4414-4215-b764-27a9461e179b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db27c340-f669-4a4e-8634-5417cf20d4fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ad2a583-530d-40e0-a2b2-89e496e40f5c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa082c42-6e29-46c0-8f14-d27c6ccf827b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "704753ab-8d21-4591-8892-238fed00f896"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e57ec4b1-2993-4dd7-8621-0686ce7a81b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2cbf0584-10b8-4da4-85fa-b74609b145e9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d43c7a90-173d-4974-a8a7-c20d1a4a98e3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cd5ccccd-cb91-48c9-8d68-aec4e743d40f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc1dde79-db32-469b-94bb-290f072954b7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "15896f56-2b00-4c44-99e1-960cd8542be3"
            }
          }
        ]
      },
      {
        "id": "eeec5344-1329-4a4e-a716-1880d188a8a9",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5e906521-6084-44cf-9f0f-6d8ba74e5bb9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "412cacd1-74a2-41c8-9952-86e01a2a89d1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "60281995-d0fc-4af2-a9ed-c9524b4d9eda",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbfb54dd-044a-43ad-97fd-b0c204b16ccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52755d7b-66a9-4729-92a4-1047648dbb27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c6c82a-cc74-43e1-8291-80b6dee64f2f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "446ca38e-d21e-4f03-a212-553a6fbe9a80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16c785ce-6cd9-44d6-999a-9f32cc937015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c556c5-6212-40b4-bedb-3e21efb45dff",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0bb435d-a0af-4c26-8d5f-adb1674a9797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87bab132-423e-403e-be0e-0b3c8c1a4710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc6d25a-16ce-4457-8aca-60d20f7797c9",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa2c4ff-f385-42a1-88d3-b9f29373fba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c804682c-e913-47d5-b5b1-35bd264e8119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab4b53f-229a-46d7-ad7e-aead3abcd3d5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a5f191-2081-4025-816e-fda092a0e668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "206b6a07-4ec9-4123-907c-858644106c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76cf98e9-0551-44fa-ba71-3cd9b8201d66",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1a8f86-ce3f-4cdf-8b78-92dceaa67be8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0fa8d2c-da51-45ac-a6ef-c84852f93d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf72c76d-d5ef-4627-a227-e03b0d4806c9",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b494d5ee-8c24-4121-90c1-ba9eda942a4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "532eed37-2da8-4dbd-916a-65bcf5b15d47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db646130-b3d9-40b5-be9b-bd428c9426e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bf4b922-23d6-4f14-b8ed-8c433aaf8ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d15a391-1e54-434a-bae4-7eb27da1e107",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "948f3576-f528-4b1c-b8ae-0211e4b7ebb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09b53419-7d1a-49a1-80e4-3c010c287bd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c8a2b95-a9bf-4b34-a1ad-f0ac198a8281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45fdd2d6-8873-450e-b066-132ce575973c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7114b987-4294-414b-9daa-bd2f1ac9112c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e519ce-fcc8-4bf5-87b7-f71dbcf68689",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "341539a3-2b6c-4bef-8abc-e20eb2723ed1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef5431e7-777c-4036-bf67-bb6bc19a56d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75528159-d81c-4ee3-8254-75128e4ca5c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177da4dd-46ed-4e48-ad82-82b5295bfa61",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a451f4-a657-420c-b9ef-c09fcf60e24c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adba1887-ea3c-4f55-b041-91bb40bb2b4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ae2fc8-ebc4-4751-9b2b-d05010e63800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcb8d573-0b4d-4a13-b31b-b3621bf97769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8106caeb-bfd9-4e98-9ba1-eb3cbcbbc695",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0348dd7a-6f24-45fd-89b7-6ff3eb7e41c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a3e5dfd-5c95-4c62-935a-481f1353cf96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb822ff-b400-4492-9722-d2140b3fd527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5e141b9-154e-4ec7-b298-819278ea3c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b1c53e-66f2-4b37-b09d-fc541f674d25",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1014c198-d4ba-4470-8415-6d5818875b32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d1953bd-3a3d-4f12-9388-76eff5db73ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d974badb-f53e-44a3-8d1d-763cb890fd71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "487a175d-38c4-4a88-a9de-606463299f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc06347-7f92-4faa-8d30-fa511ca85473",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c271e3-c64c-4c37-8eaf-acfd09f71a67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14f4d62d-c4b4-4da6-8880-020837629375"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2477f3-04aa-46fe-9bdc-f091cabbc465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "555a09b3-878e-45ca-aabc-520e3718504c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84cf480a-2f6d-4baa-acdc-2e91f71e0d5c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ca7030-a775-42df-b550-1877fe4d61f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa3541aa-2c8b-48ff-987c-bf5e308dbd72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "689b7ae5-e13e-4cb6-a4d4-9c063f143d20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcb5e22e-e2fe-462f-9272-6e5af3f9fded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0b5c2f-fead-4d91-afe5-4c11007e4ce4",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e87d059-0247-4bdb-8af5-288ecfbfbdc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "962e2d63-ca1d-480f-8887-b6498c12542a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4566748c-1aa6-4c50-b813-868ba94c49f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c53a9fe9-30d6-43cb-bc65-a620d5937e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0007977d-86d4-4667-b2e1-6f67502a0d32",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b57cfa-989e-4ecc-86ec-1a5c8c8bbf3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30550491-1605-4fdc-ab9b-0ebaa7f083f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c773b5-f160-4821-a46a-00ee2557d84c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0100453-bc86-4dd6-8ede-871c5c1ea0b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf87500f-e071-4378-b4aa-0e72d3c273eb",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ca303b-e4f7-49d8-b7be-d106c2e3fd95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea8cc42a-865c-4bbe-99d0-450f13b8a4e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13542fc-612d-402b-9397-ec79445e9b81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b40d8aab-c47f-4bda-aeb3-46970dacf5eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33c79a4-7e9c-4dad-acce-4f5f614b6da2",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00741300-f1d0-4111-a26f-43ea278711d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ec413bb-8263-4edd-8e59-489478763fb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f277b08-3878-401a-b6ab-f655caffc641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4d73c28-6523-402f-be01-deb2ffae6c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff75a09d-cb3e-42be-b218-997bb43a59b6",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f36d3fc-c0e7-4700-ad13-9d97344b6afd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85ea0950-31bf-4152-bad0-cdb4da7f61d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb9b6ab-6bcd-4199-b4ad-efae41a5f9d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "986a9082-1e7e-4f89-a89a-16a77f060767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3837e089-3bd3-4eb8-add1-980af7eba5a8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6440e187-9d43-4831-96e6-6a1a7b301005",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81f84636-0eda-47f3-a558-0a4ce0e2b1c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "170d06c3-6720-49a0-a5b7-6c3b1e158722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ea8b156-bdb0-4c30-95d8-0e1317260d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e44c6cd5-ea99-41db-9ce7-22c0f51481b7",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "effde183-1656-4ee5-ada4-6981e1f50d1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "150823c4-7de1-4a91-9af3-4b02e8c513ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa2a523-e452-4b50-ae5d-42972cf5f583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7133cba-901f-40c0-a8a7-bfdf4ab821ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25430d20-c964-4512-8ea2-40557ccda947",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aadd4204-765f-495b-9650-70510c65c098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5be9e25-7519-484d-bc09-6c112b44507d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87181239-daec-4a01-aa65-fa974a09875d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ec477f2-8259-4009-a5b0-7f0bb8780250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a364c8-1722-418a-811c-974b11995d3d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20999c7d-25d6-4bfd-b9f1-7d4188a43607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e647411f-11dc-4ed1-876f-b7a792b1984a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dcd79cb-d253-4d35-ac4c-e1a51b214032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42808ff9-08bd-44b7-83e1-f96e1b22966b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9af5d64-2d00-49b7-9295-6db769639c43",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8f30f2-9278-441d-b2e1-cafab1986507",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "673e0c1e-5f21-458b-b6ed-bf047cf8ba29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e09eb93b-ada7-4aae-b016-9e5cb40ee3bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd93bd47-7206-4794-865c-8ce31eb3872f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30dfa130-97fd-45b1-b5b7-6360d22cb4ad",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a49974-be16-4ee5-9119-7f48deec6973",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80dce58e-ea58-44bd-a67b-c405e2991560"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e315e57-3a70-4b85-8fc4-26ddb7c60e0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e65d0beb-e705-4ad6-96ba-3a35085cd574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5620a25-10d7-4626-9614-88d9cdd2dae8",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b1482d8-6b7a-4272-ace8-f7bb151bd995",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49c3be68-37f4-4b27-b279-856011a0b026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d37a139-c07d-4092-b692-2b5cc16d3204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee62bf1f-e44b-49cb-8f9a-020727637706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b3c12c-6a76-47ae-9590-6ff6aba25c82",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae8bdc6-be21-4df2-a8b3-373f6f662c91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3c76604-9a98-4325-9483-a47201d44c1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a113113e-f33e-472d-9775-85217c00cc8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76122f5d-ae7e-4417-b754-3bef960e7227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8f305c-179c-49d2-9728-d53623e2831e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5571a361-39cb-48c1-ae91-ae775a5b1d1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79983507-6305-46fc-aac2-9730d75476a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1baf0580-665d-4416-a442-328660e68cf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8fb2731-ad4f-4839-ba5b-4fae168ba0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef2f5d5-44d7-40c9-a2ae-e9102d7d6a4e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c42d4c2f-2c6d-467c-a5e8-d41268f4ed41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8435be1-bec2-4fe3-881a-1b8018cbe57c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d3c44c-72b0-482e-9c1f-d4fc57431fb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b45dec8a-08df-455a-b6e6-2d4ded472b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d526fd-497d-4b32-9762-f7b382c50ba9",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2e54b0-697e-4d11-85e5-b51991608efc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4c710ce-bc79-4e38-9938-feda6c9d1409"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aef258f-200a-4a80-ac6c-0f3a44d0c233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a8aa795-190c-4faa-9141-363e75c06fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63a2773-ea7a-4689-994c-51bad8ec3144",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec07b399-2809-41a8-b2d0-8c0128691371",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "955941a7-f829-4543-8293-c806f156e35c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4803e98-eb35-450e-bc93-1d50f3c88846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1f0fcb6-26ed-4c20-8467-d90da643a5bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152a6bd9-d8bc-43fc-934c-8677abe88e02",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144ccf01-f1e9-461f-8b51-df55132b9367",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "267684eb-4da3-4a60-9406-6abb234a4c19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a08e40df-d926-4a90-b1fc-3d7c558e4188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d666a9e-5748-4d3d-abda-08280a385c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021313f1-cc96-4dbf-99d7-2eba451f64bc",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56409818-3d2d-437b-999a-35369a37a2b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f04062f-19dd-44a5-8b71-7dffb8d1647c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be9c1bcb-9216-4eb4-8dfc-014180229b61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "614d77fb-0a64-4d73-8f21-f2101bfb45d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f72c60-6185-43e5-bdd9-81db4b8cd651",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9ae290-7760-4c9c-9be8-eba8968d6fbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51c42db1-ef65-4942-ba0a-b1b67a3ad912"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f3dd6a-3f6d-446a-85b0-b2defc6330bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00c67a21-26bc-4d77-b3e2-bcd574fa2505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b35dba0-a9db-4649-a3bb-43d1cc88c416",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f32fbef-a9a1-4f42-a0d9-e7dd6c9f9c18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea6886ea-8d17-433a-b594-8ee857344877"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f54a890f-3170-4fc3-8dcf-2b710cb2f1d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "479eb0b2-8695-4d83-af84-432c0be79854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a25697-9def-4095-9ff7-685e43f5b77b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b600fe0a-f5eb-4dcc-9343-817398b8d6d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33d52e0f-81a4-49b0-ba8b-c97b8e758787"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "befa33a4-2cae-4fb1-b6fa-35cec909dbb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89efab66-2061-46c1-8554-5bbc04e8711f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eeeb326-6a56-47fa-b0ae-e63cb02eec1a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16dfd28-3713-41cf-9821-571e418ca96f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3d92420-ca72-4bb1-b09f-5b3f17e9f953"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3225785d-d7f6-469b-a95a-0da3a91d2ef2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d496180d-fa8d-4ed1-b6ee-63d3ae435489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d673d1-5f27-4a20-9b7e-4514564eeb80",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a9e2a5-c102-4cfe-8249-4515b10f8da7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8d1e0f9-7465-405e-85e1-128212d8034d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2a0534-ae63-4d5f-817f-b5666bcf58ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6752a8e-a503-4d79-adfe-5b769aeaa332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e18268-a1fb-434e-9dd4-a993de61d0f4",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85520346-a636-4da8-930b-7bfd32f44356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab7503b5-19c8-4183-ad50-9a979606d049"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f657c3-3a6d-4c80-9797-8e1d80b2b5e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f46c67d-be34-4605-856b-6478fb5f8405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be81144b-c425-4a4c-be2f-bf89f8994e96",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18980552-4541-4dca-a828-30afa122bb80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82cad1bb-dc96-4cea-9843-458b96aa6828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39061b3d-80a8-4927-bd1a-f39ae2789d62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17ef076e-7caf-442e-912d-1abfd16f04fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6203f6a8-e479-4272-ad4d-94494eb2c20e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5d9fdb-2546-4723-9ad7-89934f875951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e2897dc-c473-4cef-9abf-58e54518b827"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28cd974b-7a0d-4dad-86a2-2efdfbb4d196",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a296a824-3905-4c17-bcd9-3e206f5c1441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0eb6ebf-76ad-4cb0-b22a-900ef6640db4",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e1c076-df88-4ce5-852a-2b35fb7a79ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "470a8dfc-771c-44ad-82b6-20ce207fd1cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "846229c0-3010-464f-acbd-a38154341477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efe396d8-1c6b-4c6b-bb2a-a994f8bcfd10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b71688-6fa6-4ae7-a060-f8f146166860",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2be2d0-1a9b-4ad1-bc4c-8612ac2cba95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6de7cd77-d65c-4158-863d-bdf445db0e26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b18aab17-e62a-4c77-aa39-95e096fe1db2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f6ff091-1693-4445-b3d9-4743169dc16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca3c650-91e3-41bf-9ad5-f65f5737646a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca0e8ac-bdec-4200-82c8-de107f1ede05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5dc183f-4631-49ea-a937-6c3da7973e1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0080465-8cd3-446d-9d0e-1a8417d35115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78e75c89-e16a-4239-82f2-6ec579312dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9d3bf9-82a4-4284-b195-6c05b28506cf",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ba4080-3e5f-417e-aee1-e57a7329dc59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "714c1b15-9c75-419d-a190-772f9cfd6854"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "101349c5-1603-4396-a158-968c16943585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be3b972b-cb22-4f12-b7a4-3c72ec5652de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4bcaa0-931b-4369-9783-c5b2b9c874c5",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67c3941-ea98-4175-9e57-161a3134dc6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfe9e302-0029-431d-a874-9c0036be864e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bed26e4-6370-4da8-8db3-39abea4191ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e1baee8-db97-41bf-9f0e-f9991236bac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30933e76-28c7-486d-8447-7a55dd4c189e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39bd6532-08dd-4e93-b691-729a494adf55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e672534a-d9f1-465d-9b3a-93b8f7146661"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3d7a6e-9df2-466c-95cb-18121288396a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14bc4b76-2d85-46cf-a201-48df4e5ba7f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a66065-5183-489f-b664-5eacd0877593",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f70b25a-f24d-4691-9294-98a75306677e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a13e8327-acf7-4aeb-bbd6-7534ce5e31d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9117d2f3-86f3-4705-992c-21a8b4cb3223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78897006-ce0f-495b-8a61-aa8c6f34b28d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c088cd-b9d8-4599-b9a6-c9f84a6af2b0",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e7033f-67d8-42ae-8e68-bbbecb15c9c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c74bc4b-17f9-4998-a18d-f3dc013e4f8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33442199-52e5-4a2a-9de6-cb1476a6b2be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7abc5cf4-688a-47b3-942c-3405518c2d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be925b1f-ab31-499a-b6c4-4b082b260416",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab197f5-f607-43f8-ad6d-121db6de5011",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "938db935-a362-4143-8ad3-1e6bc3b26fd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a66fe12-1da9-4502-8e8f-973176629553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c62c24fc-7714-4938-9d35-bee4f8c888ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c08dfb-c6dc-4e9d-9203-4217e0721277",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c946a3cb-e9f3-469d-9795-b2f702a675ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e50d7fdc-b2a2-43c9-aa1e-95c4d8d71bdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a6239f-01df-4c34-bf5d-d0315c801910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5fc712e-ab76-44c4-91d0-b73b4a06668d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90375c6f-7d59-4d90-98dc-407b1d400cc0",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc83556f-4760-4ab1-bf1e-2a5325fc76ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd240630-439a-4e0b-923e-112da5b29b3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a8344c-aff2-4bc4-9aa6-f90c224a61f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19db4d55-80bd-48fb-8bca-46ea1b1edee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a852bd-b60e-4609-ac0b-e8e2800fc3dc",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d969a08c-d6bb-4ab3-98bb-d208197e680e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ce5aba9-5289-4933-9382-43ff53c5030a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8afb0c5e-899f-4cca-9c8d-af62f4803383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52aee25e-f500-4dac-bcff-a232653c91cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60a2f06-736d-4c2a-94a3-70eab88cce59",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f11b6d-5b70-4cf2-90e7-ec650eb4bb21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59ca0816-c2e5-43d3-b17b-2a958b3e301c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4bb3f21-b527-4e19-890b-7be1d5e7b159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3428c03-638e-40c8-a141-513271123e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "686e9627-a92f-4ddb-9803-d5a6eaf26962",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61758cde-356b-4fa4-b9fe-37fa751948cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "957d3906-074b-4c8f-af3b-176c11a451c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb4c0c5-fccd-48ec-be39-39ce8d70315f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe9abc62-63ba-4ebf-98ae-9d895da042ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2250edb-96be-4635-8e1a-517a53b2f317",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c15fba-a7e9-4614-b03f-b54e5911d24d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3406de8c-d79d-4f6f-8d88-71297d7bf15a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d10ba7f-3409-4c5d-8524-2ad9b35fcddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54093f8d-b42d-496e-8133-87317364e70e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e3b245-c989-43e4-9cf7-a2234d47ad09",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c003fba6-e285-4f3b-a85f-8d954b5e5206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e113270-34a6-41aa-9714-b1c38b005f11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2fe3e3-6a88-48fc-96d9-520b9cac73df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3314f98-900a-44c9-bece-c219a159d25c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "854d116f-067d-4c35-9325-c3661e23c9b5",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a43e50-1539-4b92-a2c5-18bf92b965d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc1d93b7-29ed-458f-a057-736c47505d90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "786edac5-7614-427f-8a61-e8fc2a68d013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4027dba3-148a-429a-90bc-9fb32d21d48f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ea734f-b6d0-46cb-abee-1ec52d0fe10c",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae3cf89-7e2b-4b49-8f3f-a5b2865b4b74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c619528a-fcd8-488f-ba6b-68a866eaabde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6eea612-a995-4371-8e4a-58e71fd485de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "110d1914-92d5-49f5-8ee1-3cf2f76359f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "242d4dea-0a23-4d4f-94e2-b1b38e9e1d55",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142eecff-c646-472d-8f7c-a46bb05f3979",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d34b32f-23f9-4aa7-97bd-96f6c20d0c56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4218eac8-3f78-45fe-b103-97eee24bf46f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06027103-f14f-4c0f-8e8d-6fbb140eded8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee3bc3c2-f266-45fe-9bc4-9919ea1ba6a5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d1ea2e-e998-4d7b-b89b-cda6e091fd2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b13b805d-e0a7-4b4b-b324-2914049ca744"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4416467-3878-4075-81b6-4d3d531bdddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cddd0dc7-ab5e-49b3-9ab3-cd28f69f6370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0e5678-774a-42e2-a555-23f6f21cc4e2",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f29dce29-c161-4926-a9ef-853499b3319c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fd95f23-d261-44b3-a35f-afd8070a71ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c71ca4-f753-46cf-b275-e952b447d5b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b98b00ca-c9c7-4b05-8c4d-d01e5268331d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb6699e-33f7-4088-b2fd-2c7ed12a12e0",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e82097-f206-4836-8893-58033c2280cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "030f80a5-6a20-4786-849a-05ad5895cfec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "455f316e-a74a-4829-ba33-5e848c510520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfc2e286-b27f-4500-8d5e-545c08d99dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a6d2216-afe2-49f4-9d77-3501c2e9b0db",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b181021-a49b-467d-9890-188664a99bc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d1f8f05-aad9-4866-b879-a61a297f59af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93582e9-a96f-470b-a1c2-a7ea127cf372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a714a31-85c4-4e68-a647-3b85d0e558d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f831c8c-e82e-409d-96c8-c4edcf8ea710",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f5d07e-32f2-4df5-9d9d-2c06a93c5dc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef98b129-fa76-497e-b207-67b2fd997403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5702ca-8d6f-4ac8-89c4-a79c7ac015a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a491f235-d88c-4985-94f1-f5eae60d1db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcbd12dc-04c5-40fa-9e05-b27013b668c5",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b59a93-085d-473c-827d-633291bf3f05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc38668c-da8c-41a9-a17b-d7bf9032db70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e91ecf0-1899-47cc-886c-d1850ac16504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe291a8-0c63-4337-9e9a-a19529a90526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15848a4-b0e6-4d5d-a8c3-fdafbd0595c1",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46d8171-ee4b-4147-accb-794df36bbb6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d28a328-46e4-41f2-8d03-ed0627a186e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3abe9209-17fe-4467-9ee1-2847240f3577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e2a592b-cdb3-4b40-9e5c-6dc4e747bb1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c400730-c387-428c-a355-c7079442872c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f96b2649-7f72-46d5-89dd-9943279d8248",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83a170f7-9699-4cae-9601-552e337dbc0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c28d5a-05e5-4934-84e5-1aede4e43102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "418be44f-15ba-4db5-b6e9-20f6469f3dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30973bb-9390-4048-a6f0-09287266308e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37df5ae9-dce3-489a-a785-f151a8d207e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41088587-7f06-4fa2-ab46-df54b29a103d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b68c7e-3536-404d-9094-f8884cb88a59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c72fa688-951c-4301-8b5f-4abcd2a087cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e22a732-9d72-4189-ab50-5d9bd7314c4e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01566a2-0592-4b98-b0ad-98a69a306ec7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b90a596e-385b-4983-85ec-56644c61668c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dbd1af1-638e-4fed-8eb5-e624f0eb6407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32751a01-44c3-4924-a7d3-b3d0ddfadb5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "760e7ee9-d160-4dd1-b1ba-2e7533e0cc57",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60edb3f5-789f-4c5b-bd5c-e68551b8b606",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57ae72b4-5294-4343-8e93-724d979d2d8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1f7a7a-36d4-4162-bbb9-4c739eaee04a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f11d2f0-7ebe-4aa2-bd5d-233d02509ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc281b36-c02a-436b-87be-32fc121677bf",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1adafe05-3f73-4efa-8881-8834ec930db2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c44be173-9797-4aa1-b46c-d649426e7f47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d176e3-2c2b-4dcb-9f5e-03bd6e6c92ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc99e745-1c7d-4c7c-8ef6-2ddad0adcac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ce8ed1-2485-4bf6-8ea4-0f4b40b2620f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "908c17a9-0712-4471-a5f7-78f718af342d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7a445b1-a190-471c-a0c7-227df37dd4b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65080f15-6ace-4dac-8ae3-3f2fae1c3918",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b861b9b8-9e4c-4c7e-8c33-805df91620d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6747d8c-ba87-42b8-9080-e9c0185e6817",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e315a0e-9862-4142-af69-111d12276d9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "378d9a15-2169-4ab1-8043-51b175316a85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce567e49-d3c7-4b29-b640-9850c33342ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40267a8a-8553-4603-af14-f0494d60619e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c055b194-5a9e-40ab-b0a1-17a1b586c420",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5cd7f2-309f-431d-85bd-112df985cfac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c4cd840-a835-42da-8a22-20c9c259297f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a98c96e-35e3-4ee1-8e57-3de319efd20e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63ab85c3-fab3-4b5e-8eb7-870c0849edd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c9a7d33-254a-4c66-b072-d1688c4785fc",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb8569e-987c-486e-83cd-119555c1c88c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0611002-d839-4f29-b8f3-778c1740d00d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc10da0e-a862-40bd-a870-91ef99cd7cc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7fdaf63-659b-462a-b5f1-f6b777976d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2638ea84-2426-435d-86dc-a5bf2eb43aca",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856fc9ee-189f-40aa-b55e-4d0cc4cae82b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ff43d2a-8af0-441f-8711-6cc21532e70a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b16294-e7da-42af-9b47-07d281dcfcc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fab3b400-a97a-4d26-8790-08d4e21f9004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f3213c-c71a-40ea-9b96-a29ef000b309",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a54c3027-aab1-4143-9600-48dde329d8fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97a85626-fab7-4b1b-86a9-2d9ec4733cf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f6e8f9-9c01-4720-a454-a2932fe96bcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1f47aae-a3a8-41b0-ae3e-b46f03b20e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074eb40e-5dab-4aff-b4fe-1df609f9541e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d92b3500-3891-420f-b804-963d4f09fa1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15eb1086-e67b-4e2f-8315-177c8851cb7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e345cd43-4af2-45e5-a610-e2d0f7733676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0049e7c6-9a43-44af-acb7-4b85bbd6f595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7d471e-e6d1-48df-a374-a5a7c81d9da6",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d07438f-da4c-423b-a24a-88eddd7e319e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4ea4144-f7bc-4740-8625-2ea6a514232f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c0624e9-1708-467a-8650-e387a5b69aae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96d6604b-2553-4f2f-ba75-5541f97de59d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43040254-99f1-443b-aa16-fbeeec950456",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c49259d-0465-4d93-a79a-d1e72fdbd3e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94d5f5ed-f22b-4211-a5c5-33b6801d4514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e787c4-7cb0-4894-a36f-e758f4a54ab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53f376c5-f498-407d-9788-6faeb2582b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd66c39d-ba8a-4009-914f-ddbeef8d8b1b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab28238-08f2-425f-900a-a48971f51320",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5921873d-3637-447d-b021-a903a98ca58a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f585ad82-ffcd-4aee-89cd-d42daa0198c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2a1f9c1-21e1-40d9-a1d4-74e8409c4b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c657f603-fafb-44f6-8075-60e7b607c437",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0500b5d2-e255-4260-bed5-78976e8e8378",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8766eb7e-921d-49bd-ada7-c3cf25826492"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a5ed05-f68a-4f6b-8be1-442defd8b50c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39e043d1-97db-41ac-b59f-0829b010dbaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96459431-4f62-476b-8a20-d25ec9a8b778",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "027fc498-8288-46e3-82f1-78277e62b0f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53a81620-17dd-41e1-866d-cb2b90c7b5ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7d8341-8861-46d7-8abc-f0044332360e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6c28380-cae2-4837-a6ae-26661d6803c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2ba855-f1b6-42d0-9e95-6d36b08426de",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dcb701a-2435-4f78-aa68-d8186a5655c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51655c86-f5eb-47d9-a47c-3a2c2d44a864"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "053f2703-61d4-4a28-86ab-a4f34ab3555f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64c865c0-6ca2-4ecc-82f2-5dad0b0d5122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8fea9cd-f665-48e4-b347-3179c637cd94",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a905a1-337b-4d39-88ff-6c73e97ab39d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09b741e0-ff45-4863-908d-3a60595edf22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f6851c8-6afd-4bae-bc76-3ed7dce026f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edd3034a-ac29-47f0-ab2e-0b95cbaac3f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b80d2ea1-2a65-4c0a-8e2a-3b20a7126f55",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e3f4b9a-7786-4241-8090-db7eba1ab17b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d702219-701e-4381-b400-264588a5968f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86633a27-cbae-42c1-a9f8-a9e8f7c0cf44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "184d921d-3319-4d52-befd-93690b070093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309172eb-c40b-4471-8f23-5faedbacad6f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f746ba8a-ca1b-4032-a0ae-175ccfec4bcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "185f0dc5-b17e-49e3-b73f-9f0d9f2829e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4fed95-e688-47b7-a739-e02c1999ac70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9ba9364-032d-46af-8d2f-67fdca755bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550ee3ae-19f1-424e-9ff8-07819f25ebe2",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039c0d75-2d01-48d5-adbc-b8b6d3224d70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe51870a-8fcd-4c86-a978-ef5c1687f9ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f140f0da-f861-4c62-8aef-71f0b7985624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed557204-bd48-4613-9d25-0d6824ee80aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a672db-b1a6-4b84-b887-d2b335a878af",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20a24b2-08ce-486e-9262-2df3dd0a0b4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cc74c3f-2a70-4833-aef4-2d1a372611cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb2bd79-2f0a-4760-97a6-05cbee4b0cd4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30bca5dd-6668-4824-b02a-9bc7daf63aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba1b36c-e175-487d-a5f5-77ce86ed4499",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62bf9c52-0fa8-4c8c-aaba-04047ad24f89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "760e5258-d37a-4c87-8a48-bd55c4b9b6f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66efcdc-f8bf-4f8f-bf25-07e1939af676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "517055e5-c451-4f2e-a087-8a5fd457b445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929f6692-ef7c-41cd-b2f6-418b61e4787b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13147a50-3a21-41b5-a819-1ab0931e0ea4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "533f48c6-6787-48a5-aa7f-63466d76e47f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4cda02e-36b6-41e2-a3f2-779ee2f97cda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bfccdf8-d73f-4083-9fac-75dc719998f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e938620-84b9-4321-bcb9-fbc1618f13bf",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0d6a4a-fe15-41ec-be26-d83217ffb2dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc061da3-a7a2-4bdc-93a2-2bf4b21a2581"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d1ac22-527d-40f2-bc5c-bfdc24fe7aec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46eedeb0-2e66-4b33-ad6e-b5c9719ae3fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f7c3c1c-20a1-4fbc-bb45-737f6c497596",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e60cff4-518d-4eb8-bb43-b9e80e74e9e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "856a2423-e027-4bf4-9fe5-1b644ca2a4ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c59e4b-9491-4175-8ba7-f95ccfa131c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "077f1f81-8e9e-46cb-bb11-5ed0fc5e77c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c9764f7-a5bc-4d91-8a4f-957f4071779a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3acc64f3-0b7d-4fa9-ac87-2a54f6030d39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff99d4c0-ff4c-4463-9894-ea7118a02a48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1acd26c-e96f-4e5b-94eb-6c483eead3c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f2f60e1-6107-48e1-a26f-6c67e2cffae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d43d80a-6c8d-4b3b-bd4f-39e4f979901c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "004cd38e-14ff-4e34-bd6a-d8a10b4e3a29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cf69351-798c-4c76-8428-6fd95f310724"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda1b26b-30e0-40de-9c51-6f5ab4d28297",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0927e2fe-69ce-43dd-8076-31aba6a3134a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd52ee9c-b979-43b3-8690-977230afe500",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697be821-dc47-4f89-b51e-ef949feab872",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8446ca7f-b7d1-405c-8c9a-10d43ca575b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a247e1-08e6-4ca5-bbb4-bf2d43416abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8083d1d-32de-4e58-b455-5c40d24a948e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1282a5c1-643b-4eb8-86b9-bbe668d62f7d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ae2f313-b58b-418c-903d-f21c0a11d545"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2143b84-41d9-45d5-9d43-e02bdc1a633a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f80f4f3e-08d2-46ec-b183-da33d27c4de1"
                    }
                  }
                ]
              },
              {
                "id": "3cbac1c1-73ed-4e6b-b7e3-79f7c7fcd2f2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c570eee5-59f1-439e-a712-34c2e204de50",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f61286eb-f7fd-4b45-956c-004e1dfa267c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9f0b2468-4c6f-4c4f-80dd-700fbe57a93f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58cf6889-f588-4b03-86c7-614da1562698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "00b8dde4-8af0-4dd9-ad20-222fddde344d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "198ff96d-dc82-4260-b26e-1d3fe8096196",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "329d7538-d79d-46a7-8ce8-1ce50cc9779f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5892fa3-92c9-40b3-b816-911a3f27be59",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2baa35ea-9a2d-4b28-9876-897c6e034f36"
                    }
                  }
                ]
              },
              {
                "id": "8d3bda09-57cf-4559-91ac-f58cd6bf1b55",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b0c221d3-e9c6-4525-820c-b4afa5075db3",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "789a07d8-f10f-439a-91d8-f70b6491dadc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8fc63462-af5e-4c33-b5ef-c7da177a1d99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802d376e-1d4d-4b97-afec-1f19ac36195f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cb17b87-1743-4bf0-a6dc-8737cc77d640"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "180fb0d6-21c7-4925-998c-fd94ee505aec",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5f685798-ffb0-481c-8789-cd0f2f83ae74",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2de50afc-9445-4473-934a-193f30ea3653",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "47021ab4-eef6-4e95-8ea2-3906809eda6f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9208fc19-12a0-4cdd-896f-6c2c14f31671",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1daf58df-a660-4544-9e4c-81426400c54b"
                    }
                  }
                ]
              },
              {
                "id": "88422df0-4714-48f8-8128-8d4435498d32",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ca3be04-34c6-48fc-a743-3cab4d61d313",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4952d6d6-e394-4d82-b033-7182d4175ebe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27d19a29-7eea-434b-baa8-a16eeb69cfbd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58b795f9-8144-42b4-86c3-da094d008a2b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e5a31607-f256-4f9b-a6c8-8adabbbbe46c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d19cddc0-9221-4b1f-a1ce-a95e06ca125a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43c37cba-7393-464c-9682-aff0ba167596",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "55bccb00-8b2c-414e-95b4-8e86e7f13ffe"
            }
          }
        ]
      },
      {
        "id": "49ad6c60-3eb3-4ed1-b80e-bcd4ff08c3a5",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "85cf5650-a926-4cfe-9bbe-6197078371a3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aeaab687-5223-4e8b-a636-bc4aea28f151",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e7bc013d-79e0-48f4-88e7-b51ae04e8eb5",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f32a96-c0bd-4f1b-9ffd-41ed23de1e52",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0f5868b2-4bb4-4719-8761-3de5b7732714"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8efa4be2-b1c9-40db-9d74-8e110b7a6c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b04f89d6-ebc4-4e61-8ac6-02f6b75c3974"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76e9c9c4-95b5-41a2-9a4e-dbeb5f9874d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7bd88e9-70fe-4913-b244-cc89b19b47cb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3f032c8-4129-4afe-886e-71d9bddba6ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2af196d-4f50-4743-80d1-86025c018721"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d7b05bdb-7897-40b5-866e-776d7fd3a9b2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "22af0c66-8d94-4aa4-83b7-010fbbb1f60e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ab89c3be-262c-49eb-bef0-fc3d83d0ab2b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ab81a831-3da3-49e8-8f74-3013c37a2427"
            }
          }
        ]
      },
      {
        "id": "79bc62dc-ca6a-4acf-889c-568f5f1b7c7b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "688e2a00-ca2e-447e-b310-34891ee1e1d9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b3be20c2-ee7c-44b1-9379-04b57601b76b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4f302f93-da31-40a8-9308-64b5ed8ae896",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75170bc-bca8-4bae-8efc-439111af1b94",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0d3e56c-4683-4fcc-98a0-7dbcad78d69d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56416e7f-6209-4de4-81e6-3870fda7c88d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11d2cc34-3923-431d-86a4-faf29ea490bc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04d9d3f8-45b5-4597-a2d6-8d6008f91d30",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16a640ea-c799-481c-8d67-251d44c0a546"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "72f1be04-1559-4a04-913a-9625f76a564b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6decd0c1-d51e-4b5d-bd80-2aa1ffdb0555"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac86d15f-1afa-4a97-85b4-a12ef17fabc4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f41efe88-4149-4b0d-9000-7ab87ce97ddf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "717845f8-6953-4cc8-877b-43e0c1b7bafe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9c25766e-2fd1-4ca9-b556-938a96b70acf"
            }
          }
        ]
      },
      {
        "id": "62ae70dd-7333-4a8a-8ac4-0bf78263bae1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "db847a4a-779c-41de-bb31-847cf90b5f9c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7cbae3eb-d707-4211-a7f7-69fae4e4c02e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3a5be9eb-07d7-43ac-b80e-f7185abf053e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6955f058-3c3a-4ed2-ae56-84f10c5b55a3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b4d2a9e-b3a8-4656-99cb-94be578cbcc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e2ecbdd-e001-4024-9ac2-77db46e2acc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78e0777f-7902-4a50-955c-efedee306522"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4425747d-9972-4263-b0fb-bec0408b8690",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ebf19dff-057d-4d48-a8ed-d607a6484102"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "47c27784-2bf4-4c2f-99b7-6769ed76336f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94cc805a-71a9-4395-9ac9-50c4397cefb4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d54a8fbb-7ae7-4ee6-b439-797fb9cbc7fb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dcc178c6-54be-4c28-ae39-7db35cd5d9f3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "569dab55-96a5-4cbe-bcca-37685e74fdd6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "60e0c3b8-f806-440e-a338-c23a75664ab1"
            }
          }
        ]
      },
      {
        "id": "cbdba853-7d0c-4e6b-bb53-51e6eff99f85",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "94bfecb1-02b9-4ca1-b396-5d8c55c898a8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "63f0992b-eed3-499c-beeb-bf62e1b6fc11",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "00c8cf60-cea5-41ec-a408-486827351546",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1cd70490-dd26-4371-9ef1-a898c7b92f52",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c63fe9b5-4347-4e5c-bd3e-22eb17146258",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 15.450704225352123,
      "responseMin": 6,
      "responseMax": 428,
      "responseSd": 36.374340411190055,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1695515721358,
      "completed": 1695515737498
    },
    "executions": [
      {
        "id": "106ee596-9027-479c-8102-bc3f8c2cf252",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "86c22846-1b90-4f32-83cf-cef8c8a8aa6b",
          "httpRequestId": "0ffdc852-70ef-4699-87d5-bf1dac2259a7"
        },
        "item": {
          "id": "106ee596-9027-479c-8102-bc3f8c2cf252",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "04e68a6f-ad64-49b4-85c6-d2e08c3fa896",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 0
        }
      },
      {
        "id": "cc602335-f5e2-46e6-a126-95dfe841b5d0",
        "cursor": {
          "ref": "cc6acfa3-2b72-418e-982a-fa9d5dc16efc",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "641320b3-3ef4-4284-be27-35a64b88e392"
        },
        "item": {
          "id": "cc602335-f5e2-46e6-a126-95dfe841b5d0",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "dd95deb7-0fbc-46ab-9055-9a56cbca1e84",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "006f261b-da65-4306-bcbf-98d33b8cf441",
        "cursor": {
          "ref": "a09b5976-093b-427e-90c9-cc7c5c45d98a",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a83583fd-4658-4dbd-9ef1-a49debfbb32e"
        },
        "item": {
          "id": "006f261b-da65-4306-bcbf-98d33b8cf441",
          "name": "did_json"
        },
        "response": {
          "id": "d9ad32bb-a0ee-4b97-a288-ea3a9a8c2626",
          "status": "OK",
          "code": 200,
          "responseTime": 234,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a59bed6-d965-4a18-aaa7-ac81dbe34de3",
        "cursor": {
          "ref": "58835ecd-16bc-4ec1-a4ec-38ee4a07b38e",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "46e863e1-1be1-4ac9-9738-df137bc92120"
        },
        "item": {
          "id": "4a59bed6-d965-4a18-aaa7-ac81dbe34de3",
          "name": "did:invalid"
        },
        "response": {
          "id": "89ae06fe-5e4f-4fdb-8a04-920fc85529cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a59bed6-d965-4a18-aaa7-ac81dbe34de3",
        "cursor": {
          "ref": "58835ecd-16bc-4ec1-a4ec-38ee4a07b38e",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "46e863e1-1be1-4ac9-9738-df137bc92120"
        },
        "item": {
          "id": "4a59bed6-d965-4a18-aaa7-ac81dbe34de3",
          "name": "did:invalid"
        },
        "response": {
          "id": "89ae06fe-5e4f-4fdb-8a04-920fc85529cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeea069d-a60a-4f29-b091-a4ddf50b99ae",
        "cursor": {
          "ref": "36cb56c4-fae7-451b-915b-a662e27ca5b7",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "bbc911ae-9f7c-4f87-824d-eb28c938a0f5"
        },
        "item": {
          "id": "eeea069d-a60a-4f29-b091-a4ddf50b99ae",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "06c8645d-14d6-4b91-a790-3835f653b58d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 50,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b1794b-872d-420c-b6e6-40bdd8c7c754",
        "cursor": {
          "ref": "58e7a599-7776-419e-99ae-e70d7ccf5bc9",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a1af1262-f40c-447b-817b-559a6954de06"
        },
        "item": {
          "id": "a6b1794b-872d-420c-b6e6-40bdd8c7c754",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "df829c3b-6847-4c8d-bf27-4addd434f24e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06c40e4-4cac-4c8b-8177-728f08de5dad",
        "cursor": {
          "ref": "1cfc9b8e-9f1a-4978-a0b2-9eefe8094472",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7dc93711-907a-4603-b1a4-fe744b2d6d94"
        },
        "item": {
          "id": "c06c40e4-4cac-4c8b-8177-728f08de5dad",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "0e740d1e-ca3b-452b-8b2f-53784525da4a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f44d84a2-2192-4f40-bcb8-2f4d884f7fb1",
        "cursor": {
          "ref": "1fe6d4c0-e435-48e2-8440-fba022540b5b",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "61e33cec-ec89-472c-956f-8f5416cb8677"
        },
        "item": {
          "id": "f44d84a2-2192-4f40-bcb8-2f4d884f7fb1",
          "name": "identifiers"
        },
        "response": {
          "id": "3bb88408-5896-498a-93e1-aeafbc553cb6",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b930f3-fa9b-486d-8e89-67d04147a3d3",
        "cursor": {
          "ref": "4bb1a6e5-d203-4db6-a375-a19b2c2084c2",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "93074b3a-94fb-4edb-b1e4-163441125426"
        },
        "item": {
          "id": "a2b930f3-fa9b-486d-8e89-67d04147a3d3",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "4ab64037-31b6-4e06-9939-f2889243b1c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61741b40-0da4-4b5b-904b-f882c1bdc892",
        "cursor": {
          "ref": "42a4f733-98e4-44e1-b7d0-694037078b1d",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "92defe5b-6499-494c-bb4b-c7d249d99ea7"
        },
        "item": {
          "id": "61741b40-0da4-4b5b-904b-f882c1bdc892",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e7d57f24-8ba5-4dc4-a462-360a96ec44d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ffde21b-d5a2-425e-b6e5-a3113b7cf421",
        "cursor": {
          "ref": "f137e310-aac4-48f7-b044-dbef98de16be",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "76353c58-a3f1-4a47-b8e4-cf9253a58acc"
        },
        "item": {
          "id": "5ffde21b-d5a2-425e-b6e5-a3113b7cf421",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e6c3f9b4-5b44-41df-9bf8-e049ad6fee8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417d576f-1610-4424-b243-eb81e33a7d02",
        "cursor": {
          "ref": "be83ef75-af39-418c-bb5f-8064b5f841af",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a67d5ae3-df47-4e75-ac3c-1f207745f8eb"
        },
        "item": {
          "id": "417d576f-1610-4424-b243-eb81e33a7d02",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a9d90bed-e60a-4f43-b010-57583bbc3bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8a72e1-2bb0-41c6-aa4f-8f5ccbe10ffc",
        "cursor": {
          "ref": "ae33843d-691c-402a-ac71-3cdc2ab46f42",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f4dd5921-6dba-4f4c-b1df-12dd071680c9"
        },
        "item": {
          "id": "de8a72e1-2bb0-41c6-aa4f-8f5ccbe10ffc",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6d2dcbe5-1149-4572-a1d5-19b1e3983df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e80a2f-3251-4cc5-8d91-18bb4475d283",
        "cursor": {
          "ref": "e156253a-5e63-47a7-b5e9-c7e0eca01fde",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c20b524f-402d-4489-9279-e84d7c46fb31"
        },
        "item": {
          "id": "b5e80a2f-3251-4cc5-8d91-18bb4475d283",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "911c3016-36b7-42c4-a4cd-7be3046859d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f2aad7-fbde-4df9-a70c-d772fe4b317e",
        "cursor": {
          "ref": "a1e7fab3-417b-42d1-b2d8-5121a12b2c1f",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9ea06cf7-0a14-459c-a6ad-c1112c050764"
        },
        "item": {
          "id": "58f2aad7-fbde-4df9-a70c-d772fe4b317e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "01012858-5e69-4a87-99be-cd2358bd30c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63108c6f-df52-48a8-818d-7c56d18d916c",
        "cursor": {
          "ref": "987efa64-f163-410b-a626-5282f02885db",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "05e2f359-215b-43e7-83b7-b1a1e4ce811a"
        },
        "item": {
          "id": "63108c6f-df52-48a8-818d-7c56d18d916c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d2253ae6-700f-4688-86f1-bffe8a4385d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbefeee6-195f-48e2-b92c-13f5d497b916",
        "cursor": {
          "ref": "a358e6d8-7ca7-43e7-8644-f209e5316351",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b25622ea-00fc-4a79-b63d-b5824a25dc09"
        },
        "item": {
          "id": "fbefeee6-195f-48e2-b92c-13f5d497b916",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "528c9426-4604-40d6-b130-797a93d714d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052bbbc7-3b36-45d8-9860-ff2642714103",
        "cursor": {
          "ref": "0854a71f-8570-413a-879e-58e8a899966b",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ff17783e-4971-4dd6-ad7e-4070986c9976"
        },
        "item": {
          "id": "052bbbc7-3b36-45d8-9860-ff2642714103",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1fdc1705-d373-4c32-b146-dbf2e7eb6294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1efeb833-e8b4-4a82-b367-2f96c00dd8fa",
        "cursor": {
          "ref": "7e63e72b-5dc6-424d-a877-9989d2b291ce",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a1cb2837-be19-43d2-9c5d-6b9c4e8c1152"
        },
        "item": {
          "id": "1efeb833-e8b4-4a82-b367-2f96c00dd8fa",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ea4f50ee-f739-42d9-86f8-7532a2a8a0ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b3517f-4c8f-487a-8448-f10d06ec4a96",
        "cursor": {
          "ref": "2160e0e6-1d59-4bc2-a8bb-ddcf8ef43af4",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "299a1bef-49ee-4b84-95cd-90ae367f70c3"
        },
        "item": {
          "id": "66b3517f-4c8f-487a-8448-f10d06ec4a96",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "37879bc3-9a3b-47cb-8f19-74523b0451b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "222c62ac-e914-4eb4-8b4f-186f27b9166e",
        "cursor": {
          "ref": "4fabbeb8-d3f7-4077-9230-2c6a07eeee55",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "fbae2e10-6e22-421c-b30d-4bb0204637ac"
        },
        "item": {
          "id": "222c62ac-e914-4eb4-8b4f-186f27b9166e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b97cdc94-d6e5-49ea-b78e-03ac1dd55cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0abd9972-cae1-496b-a9b5-70575fc1aab0",
        "cursor": {
          "ref": "8f7be905-1d33-4934-82f3-7c843c147240",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f4e34b9c-3235-458f-b8ac-6aa8cc53921e"
        },
        "item": {
          "id": "0abd9972-cae1-496b-a9b5-70575fc1aab0",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "22bfad23-78d4-445f-8782-d3e1228bf59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c430bd9-747f-4b71-b2b5-e4e62b08f5b3",
        "cursor": {
          "ref": "82c767b2-83c6-4075-abbe-8ef2f941cc9b",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0dd570da-db86-4198-a726-4505125e37b6"
        },
        "item": {
          "id": "1c430bd9-747f-4b71-b2b5-e4e62b08f5b3",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8cff0a6d-f39b-42ae-8d10-6682d470f8b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c12ebf0-4804-428b-8c1b-5afd940c1dbd",
        "cursor": {
          "ref": "f5437d29-e52c-47b0-8276-73555e92545f",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5760a149-092a-4a2b-b28d-c40823d56fd8"
        },
        "item": {
          "id": "1c12ebf0-4804-428b-8c1b-5afd940c1dbd",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2992423d-ab3f-40a3-9ba0-a74cea576903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a8dfa1-2ee9-4e50-872b-347fbdafd356",
        "cursor": {
          "ref": "1acfc46f-2f43-4cc4-bbfd-b46a7f40e47e",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "848d8524-9ce1-43f8-8d38-a15bdde3dd05"
        },
        "item": {
          "id": "17a8dfa1-2ee9-4e50-872b-347fbdafd356",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "db31a733-c02e-4943-812f-bf9b5af44a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de0bc7f-a448-48d7-9af0-778dcb3e0a4c",
        "cursor": {
          "ref": "d3ae126b-4c55-460c-8220-3b267b2c74d9",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0981b442-6d79-49c4-a1b4-03a500928c96"
        },
        "item": {
          "id": "9de0bc7f-a448-48d7-9af0-778dcb3e0a4c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e2a57912-dba6-41c4-bf4c-cccca3718db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "386a1b60-fad0-4d92-9090-d15b90766ac3",
        "cursor": {
          "ref": "18818fc3-0890-4f34-a993-00b814ad30a7",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e16d9dc4-ea85-46ce-ba7a-0c72ec207423"
        },
        "item": {
          "id": "386a1b60-fad0-4d92-9090-d15b90766ac3",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "82141b75-0452-468a-af9f-0c3fd0207aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641744bf-e35d-4152-96d4-0c9e9ccd3087",
        "cursor": {
          "ref": "27878ed5-a91b-4788-a3c7-c04ee2da4c1b",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "483c5c62-4982-4c9d-84b3-c63ee467609f"
        },
        "item": {
          "id": "641744bf-e35d-4152-96d4-0c9e9ccd3087",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5552f2c6-690c-4c41-9e11-ab7ad50f7b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f191f7a6-3317-45e3-b0ac-f5b26d8d6695",
        "cursor": {
          "ref": "58dc9050-ff0e-4b0c-814e-65b8226ca1d8",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f0fea43f-6a73-4fec-995d-fc56b7e67504"
        },
        "item": {
          "id": "f191f7a6-3317-45e3-b0ac-f5b26d8d6695",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "53706a8e-ad38-4fe9-840d-6d66a0a4f4c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d80a927-6874-4b8c-b5e5-8486a79cfd70",
        "cursor": {
          "ref": "379c8371-be69-48cf-acbd-410ef731de7c",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b64a0c38-731c-4906-9243-f97ab4bcc77b"
        },
        "item": {
          "id": "3d80a927-6874-4b8c-b5e5-8486a79cfd70",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4606bd52-5820-43d6-9e5d-df43bd80b086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "932b02ee-8fee-498a-9cc7-6b1d7985d8ac",
        "cursor": {
          "ref": "a486b7c1-d6d5-4cfe-adfb-811ac58797a1",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "865789ff-33ce-411d-aa96-eb2f7a470fbd"
        },
        "item": {
          "id": "932b02ee-8fee-498a-9cc7-6b1d7985d8ac",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "13b2674c-7f8e-42b7-9f36-bfd835dddd9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe9562a-a8e9-43b5-98e9-e73029547416",
        "cursor": {
          "ref": "479afeb9-cfe7-44c7-8c99-2ac21f51af2d",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9cb2c8d4-a8dc-4bce-a203-08d119b4809e"
        },
        "item": {
          "id": "abe9562a-a8e9-43b5-98e9-e73029547416",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "2544e6d0-39cb-4846-b3f8-5a48b32e73d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fae8918-d5b4-4f01-8219-19e827562127",
        "cursor": {
          "ref": "e2ba6526-a9eb-4617-a6dc-d7c70ae09a8c",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b05856b7-ea24-4cdb-9773-6e1470d80bde"
        },
        "item": {
          "id": "7fae8918-d5b4-4f01-8219-19e827562127",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "84948a08-a5f3-4a98-a4e4-90f83df22e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d18bd7-3c7b-446c-9b9e-f187753f436f",
        "cursor": {
          "ref": "b552f684-9352-4cce-8b92-5ecf11d1252b",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0a54a25d-6ed9-4ff9-83ab-20fab730d021"
        },
        "item": {
          "id": "43d18bd7-3c7b-446c-9b9e-f187753f436f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a64ca51a-1ae5-45b5-b23f-07a15ffe9554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0d9f3a-051a-4334-b43e-89af53292c71",
        "cursor": {
          "ref": "85f2f89d-3b99-49ec-ad33-6664df81e652",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "43ad5559-efee-4d4a-bcea-828cc5dcf4af"
        },
        "item": {
          "id": "ae0d9f3a-051a-4334-b43e-89af53292c71",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a7efaaaa-7984-4a2a-80e6-6ad6717c40c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3322e401-dadb-4e4f-977e-e34bb5c7f71a",
        "cursor": {
          "ref": "666c87ab-8c1e-4410-a34c-69a87bcd7948",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9a66023e-7a2b-4b17-97ad-d2c0399a1df5"
        },
        "item": {
          "id": "3322e401-dadb-4e4f-977e-e34bb5c7f71a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "79411926-1b50-4a3d-bb61-69143f643a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233ba06a-5947-4c64-a843-bf80d03d5cfb",
        "cursor": {
          "ref": "6f180c09-1a0d-40bc-949d-a0bd8b64f59b",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "86bc12c9-12e9-49d0-80b1-7c0123460223"
        },
        "item": {
          "id": "233ba06a-5947-4c64-a843-bf80d03d5cfb",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "5999543e-ca30-430b-9ca8-5fef87877a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e970e1-781a-4310-934e-a0ec1cd45e8f",
        "cursor": {
          "ref": "c0243549-5f4e-4d3d-9300-0a002cf43695",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "77abf4a9-2f64-49e3-ba94-f6be78f44bb3"
        },
        "item": {
          "id": "f8e970e1-781a-4310-934e-a0ec1cd45e8f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d0f68efe-bcdf-430b-a573-e5add27d67ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37fa3158-f372-4d2d-a1c8-0bdbc2b4dd35",
        "cursor": {
          "ref": "a5d91c2b-63f0-4699-be6c-49271a928da9",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a21bde22-27cb-4aad-8481-6135f42e0d91"
        },
        "item": {
          "id": "37fa3158-f372-4d2d-a1c8-0bdbc2b4dd35",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e372b37d-d07d-4173-9f78-f513101cee8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a5d08d3-b336-408a-8771-358b7329119b",
        "cursor": {
          "ref": "d2f86f12-36ba-4df7-9421-ad412f9a4ba0",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "efc2886b-e32d-49d7-85e3-e70b6dd8a16a"
        },
        "item": {
          "id": "7a5d08d3-b336-408a-8771-358b7329119b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "de18bb20-344e-40ca-b1d0-f69a3dec17a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1271190-d9ec-458a-a4ac-1a324fb2ad16",
        "cursor": {
          "ref": "d33c8b39-acd6-4ebe-8221-3f63a9fb7d9c",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "efa9e1ec-2f77-46d6-84fd-427aba45e67a"
        },
        "item": {
          "id": "d1271190-d9ec-458a-a4ac-1a324fb2ad16",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "73f87480-d7a8-43a8-a135-bd6c296c2682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17d8c4c-cbce-4763-97a3-d6a022880886",
        "cursor": {
          "ref": "e0ebca97-f042-416c-8dc0-0694c5f03e7a",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f478b6fe-e9e9-4e15-a62c-74ab11224f4b"
        },
        "item": {
          "id": "c17d8c4c-cbce-4763-97a3-d6a022880886",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "63c2e360-043d-4093-ac68-2052eaf1730a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b66485e-dc08-40a7-8e4c-d2d47a910f60",
        "cursor": {
          "ref": "533fa912-2a25-489b-ac32-54d8efc2d77e",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f1a9d49b-119f-4119-a5cf-5c4085a939c7"
        },
        "item": {
          "id": "2b66485e-dc08-40a7-8e4c-d2d47a910f60",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "04f29d7b-20b1-4375-a2a9-6faa692cf094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e5334e-ddb3-498d-b522-a9fb4895bbf7",
        "cursor": {
          "ref": "7608f848-0882-4d65-8605-d496e177a7ec",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "59ed1227-c959-43ce-8cf1-74035369e5c6"
        },
        "item": {
          "id": "52e5334e-ddb3-498d-b522-a9fb4895bbf7",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d718872e-0aca-4b2b-ae0a-f769c83b975f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 25,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b64c26-0390-43d7-a56c-9e33e19a4a2d",
        "cursor": {
          "ref": "95fc15c6-69fd-4ca0-acd1-7e5e017d7ec3",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "fe245897-16d4-4601-b594-3f2a585a83d4"
        },
        "item": {
          "id": "38b64c26-0390-43d7-a56c-9e33e19a4a2d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3deff34c-2128-44db-b1be-c25b7c4faafd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "944d72a0-6c1a-4adf-af8c-b0c012475026",
        "cursor": {
          "ref": "7d944fce-2c72-4d26-a321-b0dea9c4080d",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "06c04739-9db1-42ae-adfe-6de66a88dbc5"
        },
        "item": {
          "id": "944d72a0-6c1a-4adf-af8c-b0c012475026",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "03d1ebac-d178-4894-ab39-a771acdca467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9772fc19-6ebc-47b5-aedc-08760fd391db",
        "cursor": {
          "ref": "f47c9521-c9aa-496f-bb70-44811c12f707",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5c01120c-b98f-4e0e-8de0-717754bbb611"
        },
        "item": {
          "id": "9772fc19-6ebc-47b5-aedc-08760fd391db",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "084171dc-c751-4b8c-a066-7c4cbf26c065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7b48db-7723-4a0f-a76e-60df61c9182e",
        "cursor": {
          "ref": "c5ee220b-f2b0-4626-8455-70bd5d45190f",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0309b0b9-e4c9-4919-8de5-17d4bcbb7912"
        },
        "item": {
          "id": "ab7b48db-7723-4a0f-a76e-60df61c9182e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a90e5b5a-a386-4ebc-8858-6f3940f41d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea2287cf-1622-4278-8b42-444394b0676f",
        "cursor": {
          "ref": "003fd6d9-d4ab-49a9-8d62-133cb61a4942",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c94e5a12-38b3-42cd-9130-aeae4cda53d1"
        },
        "item": {
          "id": "ea2287cf-1622-4278-8b42-444394b0676f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a12069ac-e8f4-4333-873e-d2601bf98fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8e7af8-ba10-4fff-bedb-f4e44fc42bde",
        "cursor": {
          "ref": "30d8af27-3a80-4241-a40a-9d460bb1ba86",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1574e7ce-d1ea-4f0b-9796-197c33d51a68"
        },
        "item": {
          "id": "8e8e7af8-ba10-4fff-bedb-f4e44fc42bde",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b3b5c01a-876c-4a13-bef2-d5e733e46cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d776338-1c80-49c8-9d29-6101f6744ad5",
        "cursor": {
          "ref": "63d4c298-cb2a-45c2-8e19-38584eda8725",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6251aac4-03b1-45fe-b409-369505c6b0d3"
        },
        "item": {
          "id": "3d776338-1c80-49c8-9d29-6101f6744ad5",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "041f3af0-6618-499c-94ec-a9fc573014a4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 23,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50472a4a-cfc4-4f43-b730-d762445f523f",
        "cursor": {
          "ref": "aa68225d-49ca-4ed9-81a7-8bcb47d65fda",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ef8e5199-0402-475d-b49a-6fd23ce03597"
        },
        "item": {
          "id": "50472a4a-cfc4-4f43-b730-d762445f523f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e88a8b6a-836b-4a53-9196-c64069dd3a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd55fd6-8a23-4b2d-8d3a-2b98d21dbe21",
        "cursor": {
          "ref": "15fe674e-89de-4795-af96-0af81e0616ef",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1c028c13-35ab-4248-b0eb-5490b40cd48b"
        },
        "item": {
          "id": "1bd55fd6-8a23-4b2d-8d3a-2b98d21dbe21",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c8c60c72-4347-40d9-9804-66abca7ab0e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce55bf3e-685e-45b0-ba55-8652434776b8",
        "cursor": {
          "ref": "8bd37d90-c8d1-4471-8579-beeae940da39",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "4f514245-cc89-4fe8-870f-628dce5d097f"
        },
        "item": {
          "id": "ce55bf3e-685e-45b0-ba55-8652434776b8",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "587d906f-4127-4e59-b0b6-50603511d873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567d6943-2e75-4cb7-8d3d-b926bf5fc9c1",
        "cursor": {
          "ref": "44ff2b68-1cab-4a51-b349-7132f63609a6",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "244b00b3-c17c-4c2f-9b58-09d5bb7cd5be"
        },
        "item": {
          "id": "567d6943-2e75-4cb7-8d3d-b926bf5fc9c1",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "bf514f58-476c-4e08-a6c5-0a93ede180b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd953f0-d922-4fbc-a0ca-9b7e1a41208f",
        "cursor": {
          "ref": "d88aa7f7-b7e1-4a5f-a650-27c328ef692f",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2340433f-63ab-4c84-80bb-3c340f3248bb"
        },
        "item": {
          "id": "4bd953f0-d922-4fbc-a0ca-9b7e1a41208f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "aa11189f-0475-4989-97a2-72da0a480920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adadd68e-36c9-4999-9045-b627cb420ed6",
        "cursor": {
          "ref": "4276279e-cfd6-4697-8475-80a9d0e75a69",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "188ddf5c-2658-4eca-bb32-e2a17c85c604"
        },
        "item": {
          "id": "adadd68e-36c9-4999-9045-b627cb420ed6",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "53a16331-839d-419f-ba07-d319603c47e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b7d1aa-774e-4ab4-a546-3cd079c0f3ad",
        "cursor": {
          "ref": "eda24426-8acb-4e29-8122-b95f2778eb89",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a1fe8886-c672-4526-ae73-958598f48cb3"
        },
        "item": {
          "id": "89b7d1aa-774e-4ab4-a546-3cd079c0f3ad",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "0ffbc2f3-ed88-4bac-8932-8951fa3db722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b112d6-c787-43fa-968e-a2ab59d905a6",
        "cursor": {
          "ref": "e6b8b432-9841-4661-aebc-7fa5aecdaf88",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "2c06ccc3-75ea-46e0-a83e-ffd872fb177d"
        },
        "item": {
          "id": "08b112d6-c787-43fa-968e-a2ab59d905a6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6e59f3c9-dbb1-453b-84b1-0ed9cd96ed1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05b52bc-0938-4eff-b175-534bcdaf2315",
        "cursor": {
          "ref": "eceb4b5c-9034-4fca-bd61-16bf1867d95f",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1a516023-90a7-48f6-a6bf-16540fbf669b"
        },
        "item": {
          "id": "f05b52bc-0938-4eff-b175-534bcdaf2315",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c4e34367-28f0-4c57-9e75-cd9d71c68a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7fa4ddc-a099-4756-bd1f-36807aef8570",
        "cursor": {
          "ref": "62a03cf8-b9e0-4c73-8d0f-c284f9fccc7a",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f027bc6f-9954-4863-9359-8dfd641429af"
        },
        "item": {
          "id": "c7fa4ddc-a099-4756-bd1f-36807aef8570",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "7072e04d-d704-4eca-8ef9-882bec7fbc01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a306cb6-683e-4403-ba25-f2c52804297e",
        "cursor": {
          "ref": "4428e6c9-a645-4243-9ed4-44e08d4a1cb2",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "965d1433-2376-4a4c-84e3-41e88c74ea00"
        },
        "item": {
          "id": "4a306cb6-683e-4403-ba25-f2c52804297e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b66e68ca-2dc5-4a60-8bc8-b2378bd136ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86dfea6-9b37-4584-bd7e-842d35bd510b",
        "cursor": {
          "ref": "efe361f7-217a-4ca7-93f1-51cd1d98f16c",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6c8af358-d67f-4c69-8d88-e53f32657a30"
        },
        "item": {
          "id": "c86dfea6-9b37-4584-bd7e-842d35bd510b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d92be930-0714-4959-b64e-f10f79982ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4220ef-174a-4915-843c-8e546e09c828",
        "cursor": {
          "ref": "d6562ca1-9e20-4c98-bf63-685e59f8b519",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b9dc6a08-4ff2-4c41-b753-5a1e2a329811"
        },
        "item": {
          "id": "0d4220ef-174a-4915-843c-8e546e09c828",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "6b332d24-8dc7-4d1b-9947-3196f7d79795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d48951-b270-46dd-b31d-2f6a7a65b04c",
        "cursor": {
          "ref": "4e8319b3-73b4-4f23-908e-2119e39b87a2",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b72a3104-3bfd-4ede-8804-c9521f2b281f"
        },
        "item": {
          "id": "c2d48951-b270-46dd-b31d-2f6a7a65b04c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8b8b077d-1d35-4a6f-b09f-6de9658af745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff1b2b0-3ed0-4c6e-9447-866fca19597b",
        "cursor": {
          "ref": "9725cca4-14ad-41ec-8d85-ec93bfe299f2",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5bbee45a-848b-4e4c-9c23-edad12667128"
        },
        "item": {
          "id": "bff1b2b0-3ed0-4c6e-9447-866fca19597b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "8cad7a65-9efc-4e46-8bea-9c8973b671e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e6d03f-3fd3-48c2-84a7-a8633e52272b",
        "cursor": {
          "ref": "db67c292-cd20-45d8-8b53-1e5676ebc941",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b2c436ee-36f1-466a-8463-df56cfa2b44d"
        },
        "item": {
          "id": "71e6d03f-3fd3-48c2-84a7-a8633e52272b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "eb6b1aae-c9d3-4434-804b-6ce7050ac684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888d254f-08ca-4a53-919b-a1f15f308aa7",
        "cursor": {
          "ref": "4f06df0a-8ce5-4254-9835-28ef0077a825",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "81f2b08a-78bc-4575-95c8-3df277915d7f"
        },
        "item": {
          "id": "888d254f-08ca-4a53-919b-a1f15f308aa7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "35e2e5b9-35b9-4f65-882c-223528042ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0581ce6-6453-4316-b39c-98a73345c7c3",
        "cursor": {
          "ref": "1e6f885a-ba53-4758-89e4-1000ba62b577",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4b4b2c2f-1635-4937-9a04-6f7cddebb432"
        },
        "item": {
          "id": "d0581ce6-6453-4316-b39c-98a73345c7c3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "9ad99cd4-86af-42a2-b36e-e59aa198f463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ecc99ef-3ab6-4694-817d-8f1e92165102",
        "cursor": {
          "ref": "06de5fb8-1464-4f04-8308-2f357097be6d",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "badfcd75-e189-4a8a-b8a3-87b1cbe015f2"
        },
        "item": {
          "id": "2ecc99ef-3ab6-4694-817d-8f1e92165102",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "368ff444-6768-4752-b43e-0ddb92f29db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ffe1fc-5f6d-4214-85d9-098bdb39830d",
        "cursor": {
          "ref": "23bd86de-76bd-48cf-9e42-0f675695501b",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2397186d-ce32-4f68-8105-93f43561c052"
        },
        "item": {
          "id": "e2ffe1fc-5f6d-4214-85d9-098bdb39830d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "788d1afa-da9e-4439-8299-d4188e1520cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739aa131-3077-4a1f-b912-f26ddcfa18e1",
        "cursor": {
          "ref": "c4fbc5c8-7c48-40f9-8eaf-a1adad9eff0d",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "59f8bdf7-ce5c-4fbe-8ef3-37d83b579e86"
        },
        "item": {
          "id": "739aa131-3077-4a1f-b912-f26ddcfa18e1",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "035a9ba7-04b3-4b75-9488-3513a6615b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992ba181-ab3e-4dfc-bff5-ce6ce0315369",
        "cursor": {
          "ref": "072a597d-64da-42a1-880b-0177009ab669",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "82d3c848-59aa-41ef-8f28-e6e3d723498a"
        },
        "item": {
          "id": "992ba181-ab3e-4dfc-bff5-ce6ce0315369",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d1c53fc3-5376-49e4-9ceb-434245ce5f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d8262ea-da3f-4b8a-9fcd-f496f3cc120a",
        "cursor": {
          "ref": "38c73e14-e147-41fa-9287-d125af52f6b7",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "53489e07-73ab-408a-9751-0551b3df8ea3"
        },
        "item": {
          "id": "4d8262ea-da3f-4b8a-9fcd-f496f3cc120a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e18e3212-0a38-47de-a334-9d5eaf02c8be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d8f96b-3407-4a57-a074-90b3b0863de5",
        "cursor": {
          "ref": "304bfa94-7a9b-4827-bf33-1783992c55f4",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "4f5528da-449a-419d-8aed-fd4a40ba0381"
        },
        "item": {
          "id": "d3d8f96b-3407-4a57-a074-90b3b0863de5",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "49e807c7-d269-4725-bbb6-d21050b421a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce7e204-5e6a-418b-8808-8fc5ce96c1ef",
        "cursor": {
          "ref": "29c98c2a-7b60-4549-ab29-92fd6b6babf5",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c6028ab5-e5aa-40a4-960a-b40489bf01c1"
        },
        "item": {
          "id": "1ce7e204-5e6a-418b-8808-8fc5ce96c1ef",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "21c8a8d4-addc-4a94-bbff-1e03667f7aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8df6e6a-1c3c-47a2-9dc3-5c219e5ff32e",
        "cursor": {
          "ref": "7d3fc31a-24d9-4041-9d3e-7f1979e7b046",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "76a05925-35b6-41a1-8dfd-ab46fcd9f7a6"
        },
        "item": {
          "id": "b8df6e6a-1c3c-47a2-9dc3-5c219e5ff32e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7c3258aa-d366-4119-ac71-a8388d67d2cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e3e485-85a9-4609-bedc-7cad8549a067",
        "cursor": {
          "ref": "666b0590-f9ab-4a80-a05c-eea0bae33fc9",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d147133c-9607-41b4-9822-1a33958221c6"
        },
        "item": {
          "id": "65e3e485-85a9-4609-bedc-7cad8549a067",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6ecef585-a63d-4af7-98d0-e914092e1787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "decdf5f8-3307-4646-93f5-1f60e6746089",
        "cursor": {
          "ref": "8513698b-b15e-4cc7-b93d-761ba344977f",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "af99e05d-8637-4c8a-a3bf-3e25171160d5"
        },
        "item": {
          "id": "decdf5f8-3307-4646-93f5-1f60e6746089",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "359b2832-d624-411d-9395-2131cfec5345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c2b24d-3744-4fb5-99d0-a1e2357105de",
        "cursor": {
          "ref": "1fffba76-a288-4240-84c5-969e0fbec2b9",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "105edfda-b621-4eb2-8df7-c24885808f36"
        },
        "item": {
          "id": "c4c2b24d-3744-4fb5-99d0-a1e2357105de",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "fbe1d7b1-bb60-4a3e-88bd-a96ae181a2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bbf7847-0ef2-4bef-b442-4cf96601531c",
        "cursor": {
          "ref": "af4d4c06-c9c4-4272-b457-ea46d8293059",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "db5d0a02-1a42-4633-9594-790adf3ce18a"
        },
        "item": {
          "id": "9bbf7847-0ef2-4bef-b442-4cf96601531c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7ada9096-09b7-4b50-8eba-0cb995bf8f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35614cb4-401a-4c62-990f-f7e57c45f43a",
        "cursor": {
          "ref": "cc52f280-d5d9-4441-ba0f-9ff1f7ab8e5e",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "112f9b8f-7d99-4e7d-ab4b-a02d52dff7c9"
        },
        "item": {
          "id": "35614cb4-401a-4c62-990f-f7e57c45f43a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a6f67367-d018-49b0-b35a-4cd940afb727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb5b981-5062-422a-9812-50af55ab6cd9",
        "cursor": {
          "ref": "915a95d5-bd42-4d33-9b94-0d9bc6acee54",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "90fe8efc-81b2-4428-a5f5-59b27fe16e4f"
        },
        "item": {
          "id": "efb5b981-5062-422a-9812-50af55ab6cd9",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "57bba135-2d2c-4561-962a-bf55474d95b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3407cfa-0f33-4085-838b-ad16e51c2ee1",
        "cursor": {
          "ref": "c6efa6be-f975-49a3-9b17-e8dd89fa646e",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a7015fc6-23da-4a25-a5e0-6d754eab90e7"
        },
        "item": {
          "id": "e3407cfa-0f33-4085-838b-ad16e51c2ee1",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4befc1fb-63c7-4314-9821-24f29ccfcc32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cfe5913-9091-444b-aa63-4eccc730edd4",
        "cursor": {
          "ref": "b5503aa7-fb5b-4b3b-9be2-611fe8728c44",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "19330acb-a37d-4e27-9a06-e0bd4c44eadd"
        },
        "item": {
          "id": "4cfe5913-9091-444b-aa63-4eccc730edd4",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6e49a163-a56b-4367-bd37-794ea9cdeda4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12880623-c54a-45c3-b4b5-f71c4021c404",
        "cursor": {
          "ref": "63b0975a-05cf-4528-b201-c535b0a2a1c4",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "90053331-80c7-4076-836c-f3efef2a16d6"
        },
        "item": {
          "id": "12880623-c54a-45c3-b4b5-f71c4021c404",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "8fbc1e99-37bd-4894-87ef-1df687854600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "166944fd-2a4e-4ffa-98ef-9d5cae5ba5ee",
        "cursor": {
          "ref": "acf858fa-fb27-4dbc-8d8f-a0615556b004",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "cf90be24-4aeb-4861-b41f-d7aa1a3526aa"
        },
        "item": {
          "id": "166944fd-2a4e-4ffa-98ef-9d5cae5ba5ee",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "3910dd50-137c-4012-b443-6d9b3cf86534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e277ca6-a19b-4bb1-bd6c-86de3bc93cd4",
        "cursor": {
          "ref": "4a6805e0-89ab-4426-abc9-04b79f1e66b0",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "410a7ff2-e9d4-4e54-906c-93d9b4983d53"
        },
        "item": {
          "id": "2e277ca6-a19b-4bb1-bd6c-86de3bc93cd4",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a6c47e11-1cfd-4041-9783-c04b707b7e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f8c847-f18b-4baa-85e4-0d4bea765eef",
        "cursor": {
          "ref": "95aaa912-45e9-44c4-8a9b-0949bee25462",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "49778698-dcb2-4226-9e93-4dfadc2d3079"
        },
        "item": {
          "id": "75f8c847-f18b-4baa-85e4-0d4bea765eef",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ebaf95d8-eb42-4621-a726-fc6d297b7ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ab64cf-5a9b-4d24-b57c-7598717a539f",
        "cursor": {
          "ref": "f2189006-63a3-435a-b112-af935be88617",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "aa3dad9a-699d-4318-b786-b29c09ff1e31"
        },
        "item": {
          "id": "22ab64cf-5a9b-4d24-b57c-7598717a539f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e06d1842-3dab-4c26-865e-7489fbdf0019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "770be8a2-c27d-4ec6-8252-126760fc60ca",
        "cursor": {
          "ref": "eb18ba74-22cf-41d5-82d2-e2b50117fad2",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "173a7119-e662-40fc-9510-d206da4009a8"
        },
        "item": {
          "id": "770be8a2-c27d-4ec6-8252-126760fc60ca",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "aeea144d-fbb9-4bef-9de9-7514b176a59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc7f0d3-b319-4f16-a058-5c0ffc91d156",
        "cursor": {
          "ref": "8be365aa-ad3d-4b5b-a633-8379f0b8915f",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f9654aa6-7d52-4bf9-a340-eaeb3ca5ab40"
        },
        "item": {
          "id": "fdc7f0d3-b319-4f16-a058-5c0ffc91d156",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1c14f42e-caea-424b-94b6-27168949c1b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e49d8285-36fd-42e9-ad2e-d849d1227d93",
        "cursor": {
          "ref": "d15708a2-87c4-492a-8b06-33e63f64860e",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0546dd34-9bfc-425c-a23f-a307588f5cca"
        },
        "item": {
          "id": "e49d8285-36fd-42e9-ad2e-d849d1227d93",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c90dab96-3fb2-40e7-bb88-aaf2fc5573d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fddf3a25-81b0-4f8c-bb1b-4d7dc5ae59e3",
        "cursor": {
          "ref": "45d506c5-2711-4f6a-8b64-2659bb904729",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9ddb0614-e402-4a78-ab12-58a56b49aa0b"
        },
        "item": {
          "id": "fddf3a25-81b0-4f8c-bb1b-4d7dc5ae59e3",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "157237c3-8984-47dc-8004-1b7b1f2ec402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50c489b-6423-4831-a1a0-aa6331a0f120",
        "cursor": {
          "ref": "8c2fb4fc-8a59-4064-ad4c-6bc9f7c8f8ed",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "31468a14-498c-4240-bef4-0ded38f5efcf"
        },
        "item": {
          "id": "b50c489b-6423-4831-a1a0-aa6331a0f120",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9cc1ff87-d5f6-4aef-bf61-22d16cfeeced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53afd832-51db-480f-8510-d3ba71731ab5",
        "cursor": {
          "ref": "7a117286-7841-4abb-93df-430c1d7ebb82",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b4bb3dc4-d49a-4d94-b44c-0ce0f6972b6f"
        },
        "item": {
          "id": "53afd832-51db-480f-8510-d3ba71731ab5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9fd7d96c-a1dc-4cdd-b668-01ed44ec3de3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd28dcc0-8785-44c8-b420-6de54a486696",
        "cursor": {
          "ref": "2ddec8d6-08da-4d19-998b-ba9f72dcb5da",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "32ef7fea-4bcc-4ea1-85de-02bcc1374174"
        },
        "item": {
          "id": "fd28dcc0-8785-44c8-b420-6de54a486696",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "fcf8885e-71c7-411b-9aa0-580c83af58f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "042b6dbe-f2e9-4c86-9cff-4a052649396a",
        "cursor": {
          "ref": "ea88fc4e-b459-4e62-9214-bef8bc7cfa4c",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "05a2fc55-c2f8-499d-9bb0-0bcc369c6fe3"
        },
        "item": {
          "id": "042b6dbe-f2e9-4c86-9cff-4a052649396a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ba536711-ad03-452a-8c8b-c63e17ce8fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8354af66-90a1-4085-83a6-102158209cbe",
        "cursor": {
          "ref": "e3708c4e-e9da-433f-8b35-af63fe676d79",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f72a9387-9a03-4e96-a948-c2e0b14cc07e"
        },
        "item": {
          "id": "8354af66-90a1-4085-83a6-102158209cbe",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "2e6137f1-ccc6-459b-aa88-92554bad8218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "951d476e-15a4-4d14-a1c2-1b667f5432f1",
        "cursor": {
          "ref": "07919de1-0817-42a0-9008-b124b7105bdb",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "fde5f8ba-9b7d-4786-ad8f-5415aa5c54e8"
        },
        "item": {
          "id": "951d476e-15a4-4d14-a1c2-1b667f5432f1",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f817ce1c-fab6-4065-98b2-94c7b1c99d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b758882-297e-4740-997f-d6958cd1018e",
        "cursor": {
          "ref": "0bbd35c2-0cf7-4634-9c92-ed1f396f06f4",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9f17c6fd-c653-4e29-91e3-619e4e63961c"
        },
        "item": {
          "id": "1b758882-297e-4740-997f-d6958cd1018e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2e513318-a4f3-406c-bc92-66cd35436db7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5630615-2ca2-468a-ad06-d452c2f8709c",
        "cursor": {
          "ref": "6da2b848-a22e-4e2a-b09a-9302e055100a",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "cbcd1ab8-ca59-4033-a7f6-57959be7c672"
        },
        "item": {
          "id": "d5630615-2ca2-468a-ad06-d452c2f8709c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "0c2090ec-7d43-4fca-b673-05cddf05ba67",
          "status": "Created",
          "code": 201,
          "responseTime": 262,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0e2a70-afdb-4fce-a7dc-01e882874ed4",
        "cursor": {
          "ref": "64a6d5c9-784c-47d2-95e5-f74f503584f2",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6c0c57f8-3757-4e2e-b4e8-12ceb39fc724"
        },
        "item": {
          "id": "0d0e2a70-afdb-4fce-a7dc-01e882874ed4",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a48deacf-5371-43a6-a484-204193cd040b",
          "status": "Created",
          "code": 201,
          "responseTime": 253,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5b9b0c-86f0-4cd5-95e6-108e5071bd6f",
        "cursor": {
          "ref": "9e11aabe-414d-4f2b-8e41-f4240a6f959f",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e764b648-34be-4b37-ac72-a96d8209b4fb"
        },
        "item": {
          "id": "9a5b9b0c-86f0-4cd5-95e6-108e5071bd6f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "4238175c-4d03-4f43-9141-607b6c5b6828",
          "status": "Created",
          "code": 201,
          "responseTime": 34,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d079704-0ca1-4c34-b7e8-4c35d1b131f6",
        "cursor": {
          "ref": "2f05fa69-f48f-42ab-a8e8-6783ae97ad1a",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "3d087b21-0623-4542-a2ad-84455881670e"
        },
        "item": {
          "id": "8d079704-0ca1-4c34-b7e8-4c35d1b131f6",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "49a5b98d-fb89-4795-873a-f05c089b9b13",
          "status": "Created",
          "code": 201,
          "responseTime": 33,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd6051fb-7e86-4dce-8a44-43e4386ac5ef",
        "cursor": {
          "ref": "eb31bf26-74b8-4fba-a8c6-86822ae6f47a",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9103e75f-6539-457f-8236-8872081d446f"
        },
        "item": {
          "id": "fd6051fb-7e86-4dce-8a44-43e4386ac5ef",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "2d3d5c61-bade-4280-89e6-d92b6c347090",
          "status": "Created",
          "code": 201,
          "responseTime": 36,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b6c966-002d-4610-ad9b-f6dd79120750",
        "cursor": {
          "ref": "fb398d77-13f6-446a-b172-226e34a741c7",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "3d6bf010-ea69-4cdd-942c-96f68aff08b1"
        },
        "item": {
          "id": "19b6c966-002d-4610-ad9b-f6dd79120750",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "49863c02-4c5e-4860-af15-99040b812ba4",
          "status": "Created",
          "code": 201,
          "responseTime": 45,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433b68cb-d5fb-4b44-b9a5-c676207770ba",
        "cursor": {
          "ref": "b3ec8054-b82e-4bf4-ab33-b1757e6399f0",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "090995dc-3197-41de-afff-6546a9b61cf7"
        },
        "item": {
          "id": "433b68cb-d5fb-4b44-b9a5-c676207770ba",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ee6004e3-d6f6-40d4-9015-6ac14fda4503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14820bfd-2bb0-4fcb-8f69-54d9e606b045",
        "cursor": {
          "ref": "64057331-b72f-4d5b-a937-f756477d5c9a",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "07e2699a-9ecb-4ebe-8351-20ca47246f7c"
        },
        "item": {
          "id": "14820bfd-2bb0-4fcb-8f69-54d9e606b045",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "013638a4-22ff-44b0-95ba-3151aefa27f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3277146-5aca-43c7-811b-aa469b04db85",
        "cursor": {
          "ref": "a824e7ae-1c47-47e5-99df-378ee79918e0",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f59bc5c3-f12e-4ff3-9cbc-d23d1dbebd38"
        },
        "item": {
          "id": "b3277146-5aca-43c7-811b-aa469b04db85",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2beca0e2-48f6-4051-a354-dbd9518f7946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e01db6da-dc74-4d68-87f5-aa359a8dcfe9",
        "cursor": {
          "ref": "2b745704-7405-4b59-b98f-5a9fb0d64854",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1319bba0-bb7f-4386-84c9-3d689fcca52d"
        },
        "item": {
          "id": "e01db6da-dc74-4d68-87f5-aa359a8dcfe9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "db4ad608-9dd4-4505-9741-ff5af353e5ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b0900e2-b04e-4b9b-8baa-2f585575a116",
        "cursor": {
          "ref": "18286161-4968-4f4a-bbf7-2a7062361dff",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "666e0b16-078c-41c2-9b80-4c512cd293d1"
        },
        "item": {
          "id": "1b0900e2-b04e-4b9b-8baa-2f585575a116",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "737da349-4863-42a9-a76b-940ca66f564b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4ce962-0761-40f4-b6e7-787b86c4a127",
        "cursor": {
          "ref": "23700457-498a-4b2e-99c9-c06443dc2598",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5bf43cd5-7b38-458d-9b0f-9faa889525fd"
        },
        "item": {
          "id": "ee4ce962-0761-40f4-b6e7-787b86c4a127",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "99774cb2-0387-4fcd-9a90-cbd9a194d046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90656559-d88d-4f0d-8713-efc3024f89e1",
        "cursor": {
          "ref": "25076e82-0434-4e05-bd66-174f2eb98a6c",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e945085c-8711-4007-8262-063077eaa41f"
        },
        "item": {
          "id": "90656559-d88d-4f0d-8713-efc3024f89e1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f2bc7355-c0c5-4d3a-a112-69c71c01b384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc06aa8b-bac2-45c1-aedf-91814d056b87",
        "cursor": {
          "ref": "28554306-e299-4123-a395-ad94347d9d9b",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4cff8555-d7b6-448f-a54f-837fe26a0d27"
        },
        "item": {
          "id": "fc06aa8b-bac2-45c1-aedf-91814d056b87",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "98ce9b48-00ef-4010-bf95-5e7699f87041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7cd34a-6753-4c58-aca6-8d5e147a1d38",
        "cursor": {
          "ref": "ef190b33-5bb9-468e-9af3-f79624bc7f7d",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2a8fe093-404e-49bc-b9c2-222236e8409a"
        },
        "item": {
          "id": "dd7cd34a-6753-4c58-aca6-8d5e147a1d38",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e18d4242-ad88-47d8-9a48-f612225d27e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9274381c-1c4d-4cd8-a9ea-de2fcd121c35",
        "cursor": {
          "ref": "e232d612-16d5-4f1f-bab6-c13c298a5c89",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "84809887-e184-464d-b82e-f276d63311e5"
        },
        "item": {
          "id": "9274381c-1c4d-4cd8-a9ea-de2fcd121c35",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8a233b23-5579-4b50-a751-b7204d4130ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71435a3b-ca95-4644-99f9-86b1cb6d8e5c",
        "cursor": {
          "ref": "4829e421-d60b-4769-a337-8c520a59a4e6",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "145cd8dc-bbfe-4fab-b064-c61d4e93f504"
        },
        "item": {
          "id": "71435a3b-ca95-4644-99f9-86b1cb6d8e5c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "49c98178-1436-4979-8684-1ff01305abc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e5b018-69bb-4bb9-adc0-5dfff919a02d",
        "cursor": {
          "ref": "03403cef-d748-4209-9e96-37b7114dd13d",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "54503d84-01b4-4f0e-a753-6a10c981af01"
        },
        "item": {
          "id": "d4e5b018-69bb-4bb9-adc0-5dfff919a02d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7bead55c-ac98-4694-8558-cf263524b4b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088d3880-0067-47e7-bb03-e7e3362aa17b",
        "cursor": {
          "ref": "45179601-647f-4e02-84b8-6c2d9b916aa9",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "95d1c115-88eb-4581-9468-6b4dbdb3a807"
        },
        "item": {
          "id": "088d3880-0067-47e7-bb03-e7e3362aa17b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4a04471e-dc20-45b1-a3c1-94c3495b1cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d96724-6c33-4620-8068-00339b320205",
        "cursor": {
          "ref": "23335913-11f0-4ba1-a29b-1bfe5cef68fa",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8360039c-c5f0-407f-adae-9143a4219126"
        },
        "item": {
          "id": "f5d96724-6c33-4620-8068-00339b320205",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ed70b7c8-dbbf-407d-b544-f1ffb846f5a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ecf850-87e3-4e79-a09b-0393339470bd",
        "cursor": {
          "ref": "4772b077-7442-445b-acc4-829c373db91e",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "38a3be62-f6ae-4bf4-be25-433ff0533010"
        },
        "item": {
          "id": "53ecf850-87e3-4e79-a09b-0393339470bd",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c5a4f523-9e3d-4ba8-a303-691c13f70da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bfc8d49-551a-440f-b964-f4f678db5dd0",
        "cursor": {
          "ref": "b5360c6d-8464-4921-9da8-faeacbfcef38",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "05540b68-5a50-4db5-a529-c62b21f2c441"
        },
        "item": {
          "id": "7bfc8d49-551a-440f-b964-f4f678db5dd0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fd4f6e0e-74c8-4a34-92df-dbb4600ff09c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d329c4a-2f85-4f0c-81c7-ddefc3378501",
        "cursor": {
          "ref": "510f7f7b-b083-4889-acb9-189d7252207d",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "07cbbdcf-4527-4820-96b4-f1322810d2e0"
        },
        "item": {
          "id": "5d329c4a-2f85-4f0c-81c7-ddefc3378501",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "353fcdb4-3517-4a8e-b1d2-6dcce61b4e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b426dc0c-da93-458f-8095-5fb9943d036c",
        "cursor": {
          "ref": "173af59d-965f-45ec-8a25-7cb3d18f116e",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "57b9ff9d-a146-440d-9a28-868558934f3c"
        },
        "item": {
          "id": "b426dc0c-da93-458f-8095-5fb9943d036c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2cb8a4c4-83ad-4e05-a06a-e793ea2d0b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f5c672-984b-4783-8dbe-08de6e18189c",
        "cursor": {
          "ref": "3fb6ebbc-4ac6-4d2e-80de-7aa0bec1c15d",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "16c1ee38-f88c-4e40-9020-1d94fa07fc1a"
        },
        "item": {
          "id": "32f5c672-984b-4783-8dbe-08de6e18189c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f1b531c5-80fa-40e1-8f03-262a2b901e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3624f2b-98f1-410b-ab06-fffa195ca4e4",
        "cursor": {
          "ref": "42e26b02-7776-4dbd-b6c7-5ac578d907c7",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "077fb19a-9c44-43c8-bc83-9103da1aa489"
        },
        "item": {
          "id": "f3624f2b-98f1-410b-ab06-fffa195ca4e4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ff1c4c99-f8a6-4f17-998f-faed6036c582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d11826c1-e0a8-47e6-941b-242ff47afb3e",
        "cursor": {
          "ref": "75df1896-3e0a-4907-ba8d-b4d3784a9084",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c322dd96-25b9-4169-b7a6-049e46f37027"
        },
        "item": {
          "id": "d11826c1-e0a8-47e6-941b-242ff47afb3e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a0a7d661-3fbc-411e-b698-e71a01e0e334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6fe2a25-8b51-4b9c-8b44-fe41ae470ea4",
        "cursor": {
          "ref": "bc61aa8e-2058-4aee-b3c6-6582034473d1",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c8a7377c-d7af-41eb-a4ab-0cc8fcdf17b0"
        },
        "item": {
          "id": "c6fe2a25-8b51-4b9c-8b44-fe41ae470ea4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0f1eb08d-b889-42fe-b1cf-401384dd8c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0f71fd-9ee6-43c1-92fd-222b89da88e1",
        "cursor": {
          "ref": "531abd9a-4970-42ef-9b9d-3fcc3177d737",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "51b8e3dc-772b-483f-9ea9-81f83608f348"
        },
        "item": {
          "id": "5f0f71fd-9ee6-43c1-92fd-222b89da88e1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "bd1094c0-c7a0-475a-a816-531269271b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2607c0e6-5f82-4b91-b2ff-b98a415c2534",
        "cursor": {
          "ref": "8c9c5ec9-c2cb-4f98-9532-9ff0a070f7fc",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "64830d46-c3ef-4918-b959-aa6a8152f7d2"
        },
        "item": {
          "id": "2607c0e6-5f82-4b91-b2ff-b98a415c2534",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "694e5afb-dd94-4ddf-9de7-9a7dcdcd51c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5e79bf-807c-4bf0-b4e8-0f18569a1119",
        "cursor": {
          "ref": "eb6554be-2a79-4c7f-b3f2-6a7879e24ea0",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "de38177f-7344-473f-b782-0536ed47c7df"
        },
        "item": {
          "id": "2f5e79bf-807c-4bf0-b4e8-0f18569a1119",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "087aee68-1883-4ad3-968d-cacd28679aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db733f7-453b-4e8b-974c-9f1d10e6eba3",
        "cursor": {
          "ref": "7257ad3a-a211-4072-a15a-5bba6638b410",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "211202f7-a1ae-48a4-aa5b-9b149747a951"
        },
        "item": {
          "id": "2db733f7-453b-4e8b-974c-9f1d10e6eba3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "272795dc-248b-4407-8fd0-19fdc7988745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a8b6c6-6c1d-487e-94e5-bb249cdd92eb",
        "cursor": {
          "ref": "f9d5f2fd-1d9b-4d10-b738-6eb48f4dcb67",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e75906c7-92eb-48c4-8059-5974a7753a4c"
        },
        "item": {
          "id": "06a8b6c6-6c1d-487e-94e5-bb249cdd92eb",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c4e9c561-b0eb-4bfc-a7a8-a201eec83fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03345aa-d11c-460b-8c64-b9acd8a97e7e",
        "cursor": {
          "ref": "ba08d76d-7dba-4c80-a442-81d67dcb1b82",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c30f4ef3-c272-4386-b55b-733e740f3824"
        },
        "item": {
          "id": "e03345aa-d11c-460b-8c64-b9acd8a97e7e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "60905648-c105-4419-9347-ef790640702d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63293d57-7633-41c0-a080-b15e3ebb02f9",
        "cursor": {
          "ref": "182f8144-8b6f-4055-b5d7-a847a19e1919",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7d12fcd5-bb26-47f4-b240-902353d004a0"
        },
        "item": {
          "id": "63293d57-7633-41c0-a080-b15e3ebb02f9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "dbffee74-6ff5-4012-bf44-c2f7768f54a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d27c5f-6169-4da4-ba6d-2fe68adaa1be",
        "cursor": {
          "ref": "8ba4bbb9-2a56-4498-8a6f-f69cbd291861",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "446edc52-e428-4f53-91f8-11cc7f1acb1c"
        },
        "item": {
          "id": "a2d27c5f-6169-4da4-ba6d-2fe68adaa1be",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5436e8bd-1fc9-4502-9b9e-ac990cc18abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3abbb7b8-ca2b-4410-bd67-7378ceffec17",
        "cursor": {
          "ref": "9efc5bb9-317e-43d6-91b6-ce057de4a00b",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "29a6914a-5f88-4629-8f9e-e6b4646ebc0b"
        },
        "item": {
          "id": "3abbb7b8-ca2b-4410-bd67-7378ceffec17",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ff947297-4bed-43ae-9a0c-d2853a7b6dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb3cbb9-8aea-4150-b81b-3173b8fd8421",
        "cursor": {
          "ref": "86010745-c389-4dc4-8d20-f8da72c1a795",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "701324aa-fa5d-4336-9322-1684ca9d6114"
        },
        "item": {
          "id": "8eb3cbb9-8aea-4150-b81b-3173b8fd8421",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "993cbc17-7fda-473a-bc1a-22e3488295a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79a3c45-6fc7-4e18-8eba-f27de7a485ec",
        "cursor": {
          "ref": "ea52cffa-f5bb-4742-aab2-2858ff1d306d",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b2ab525b-3b6a-4463-b594-0b5949e545c4"
        },
        "item": {
          "id": "c79a3c45-6fc7-4e18-8eba-f27de7a485ec",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "219605ad-3a2c-46f7-951d-b2968ad1b982",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49062be5-73a6-4266-a513-f71b7d5f72e5",
        "cursor": {
          "ref": "f1801a0f-247a-4858-b637-e0c267635a83",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "236b17b1-91cd-4335-af1f-e28481041537"
        },
        "item": {
          "id": "49062be5-73a6-4266-a513-f71b7d5f72e5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "638541c1-9daa-436b-9a58-6ce8bef22797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ee65e0-1e95-40ae-8661-bb6dda461022",
        "cursor": {
          "ref": "64214356-ecbd-4b06-aa2c-026d9ea3ca14",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "44dce771-6918-438a-9233-d284263e5ad6"
        },
        "item": {
          "id": "36ee65e0-1e95-40ae-8661-bb6dda461022",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "540e5d08-2321-4c06-a06e-979b476deda0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7adad68f-ea4b-4b18-a9ba-80d4cc14b03f",
        "cursor": {
          "ref": "aefdb9ca-defe-48b7-b5cf-9e1f2f96bab3",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6c197599-e2ae-46db-9bf4-270db4e54852"
        },
        "item": {
          "id": "7adad68f-ea4b-4b18-a9ba-80d4cc14b03f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4279e8bb-32a4-4145-b2a6-097b7e1b6501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3697cf49-4cdd-415a-9719-294a74a558e7",
        "cursor": {
          "ref": "ab8952e3-6d5d-47fe-a502-416ff07a6df9",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ba61c3da-cb37-4a6a-ab36-4b88b12ac9a7"
        },
        "item": {
          "id": "3697cf49-4cdd-415a-9719-294a74a558e7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "43551ea8-f4ee-4023-a6f9-b40c2ebdc6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f066d7a-5571-4bb7-8f4a-1898405bc486",
        "cursor": {
          "ref": "26b1f0e7-3f3b-464b-8676-c00e31cd7a52",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "54129487-e43f-43c5-bf99-21400f6e3dc0"
        },
        "item": {
          "id": "5f066d7a-5571-4bb7-8f4a-1898405bc486",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4e535e8e-c2d5-4959-8923-c95a87c7485b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5759b00-bda3-4ae9-a256-2252f847c1ae",
        "cursor": {
          "ref": "5c464356-64b5-476a-b531-7c5dd9f0e475",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a4acfa49-4548-4aea-bcda-21d9a51276c1"
        },
        "item": {
          "id": "e5759b00-bda3-4ae9-a256-2252f847c1ae",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c937b096-5808-431b-912f-6383e3143808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f5d7f1-acfe-4584-b26e-93a6f982d2a4",
        "cursor": {
          "ref": "b82b707a-8bb0-4fff-9531-c78c4d36a9af",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f6d393e8-c639-4878-8926-df318bf5ae72"
        },
        "item": {
          "id": "06f5d7f1-acfe-4584-b26e-93a6f982d2a4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "45363515-c28f-44f1-9016-68e728be298e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3665ada-ceb1-439d-aea6-9cd1df528b95",
        "cursor": {
          "ref": "2aad04cf-8cab-405c-b835-88caf6bc5b0d",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "148dbda4-639a-44d3-990f-0c63247c98b5"
        },
        "item": {
          "id": "d3665ada-ceb1-439d-aea6-9cd1df528b95",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ea6b2bc1-9755-41c2-aa09-9310c31a3d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5840a513-6390-4fdb-b313-97752f4d2358",
        "cursor": {
          "ref": "2f705605-4982-441a-b104-c26592170db3",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "27a09197-1b08-4dd2-ab0f-30732a08506c"
        },
        "item": {
          "id": "5840a513-6390-4fdb-b313-97752f4d2358",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7f3abe3f-1cfb-4e39-b19e-5c43517f9ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f2f2ab-371a-4ad9-94e0-b40d7d531d92",
        "cursor": {
          "ref": "b7e6cccd-18a4-469a-a1cd-d61a59970712",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "823c56b7-fb2b-4e11-b9f8-fdb61ed44377"
        },
        "item": {
          "id": "62f2f2ab-371a-4ad9-94e0-b40d7d531d92",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "17b2ef8d-c6de-4188-926f-a38fb8d57acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4587b0b9-e89f-4cd8-bdd5-69f908b63215",
        "cursor": {
          "ref": "34998fd6-09f1-4a51-8cff-89a7a67b43ef",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "770faac7-c08c-49c8-8ef6-4219030032a5"
        },
        "item": {
          "id": "4587b0b9-e89f-4cd8-bdd5-69f908b63215",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4f9888b7-9854-4f9c-98d9-e408ff018410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740e8266-1a39-4a57-b4e4-5f975823a699",
        "cursor": {
          "ref": "a50ce9eb-f621-4065-8569-b573449b9cc5",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9b67937b-9f73-42ba-9d98-0baf1cddf1ab"
        },
        "item": {
          "id": "740e8266-1a39-4a57-b4e4-5f975823a699",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a1d94dd6-34ff-41f4-b526-6e6483dbfab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1bcb2f-ac25-4f6e-bf37-2730bbad34ab",
        "cursor": {
          "ref": "b617af56-1dd9-4a60-a235-ff60a273552f",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8fca9b3c-f300-483b-9d53-4e6f47efc36c"
        },
        "item": {
          "id": "9c1bcb2f-ac25-4f6e-bf37-2730bbad34ab",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "323a498e-36cc-494c-a499-7556e1c54cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8abe781e-d690-48e0-8691-764c55930c64",
        "cursor": {
          "ref": "9b167fb6-d0e4-4fb4-aeab-f1cf1341250c",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "38b44e6a-9e62-407b-aa3f-95a2daa2e023"
        },
        "item": {
          "id": "8abe781e-d690-48e0-8691-764c55930c64",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b2dd17ab-f189-4366-9025-95d0e09e1f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8de12d3-52b2-4e35-8623-e2f5c8efc201",
        "cursor": {
          "ref": "5e3d0443-2689-48f5-aee8-34908943873f",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9d52b81e-0d7b-4375-b5de-89c602424d69"
        },
        "item": {
          "id": "c8de12d3-52b2-4e35-8623-e2f5c8efc201",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4c332619-e3c0-42f6-bad9-6d3f7a60e7ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2991387-4b86-44b6-b61b-e4bafcae20d9",
        "cursor": {
          "ref": "673cfe86-b7ba-4887-ba96-667367f183bc",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7873019d-b4a3-4f9d-8279-24303faf9e20"
        },
        "item": {
          "id": "e2991387-4b86-44b6-b61b-e4bafcae20d9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0a00fbc8-efec-4bb1-b316-865b4b6c8b12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b74aa8-314b-465f-9c91-93a99cbf5bf1",
        "cursor": {
          "ref": "365cf0d5-06fb-48f0-9a3d-9236431169e6",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "702adb36-5bba-405a-9241-bcef1c420049"
        },
        "item": {
          "id": "57b74aa8-314b-465f-9c91-93a99cbf5bf1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9ac5d64d-6198-4afd-a6d2-508c35ea7297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713af2ae-1fcc-4422-ab85-e669a5b37dee",
        "cursor": {
          "ref": "f18beb1c-54c3-46b8-99aa-bc3e3dbdf699",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "439cd552-5fe7-4fbe-aa53-14ff7b514cdb"
        },
        "item": {
          "id": "713af2ae-1fcc-4422-ab85-e669a5b37dee",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "522b046c-a67f-4b50-a720-dd7838afd4b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b039d1d3-cc21-47f6-84dd-dc4f02fcb918",
        "cursor": {
          "ref": "d580e2bb-871a-427e-9f57-43b750599750",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7792d918-800d-43f3-be4e-22be95145788"
        },
        "item": {
          "id": "b039d1d3-cc21-47f6-84dd-dc4f02fcb918",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3c9e28d8-850b-4c60-be33-9700e0228ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc2022f-ba32-48bd-ace1-ba188faca02e",
        "cursor": {
          "ref": "e6c3530e-1b17-45d4-9ba9-657036f5ce97",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9739ba6c-9a69-42ee-9c60-e0229dd29093"
        },
        "item": {
          "id": "bdc2022f-ba32-48bd-ace1-ba188faca02e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8d7a7ec4-a966-4af3-a06a-4c7980ce0dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775fbba2-9f99-420c-8e47-c32008779d4c",
        "cursor": {
          "ref": "28b8e21d-131e-43ce-8312-50f67d273c8a",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "eb1f1eaa-d1f1-4668-9236-39aa5b2a24cf"
        },
        "item": {
          "id": "775fbba2-9f99-420c-8e47-c32008779d4c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "29ba8655-96e0-4c0f-ba69-7b9631c23996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd087e6a-8934-40f6-a4e1-cfc2d0d56736",
        "cursor": {
          "ref": "23b7a420-1a68-41c5-940a-cfe9b9ab687d",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "579eb36b-1ddd-4d49-85a3-595960ab73a4"
        },
        "item": {
          "id": "cd087e6a-8934-40f6-a4e1-cfc2d0d56736",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5f225a5a-eb0b-4917-b4fa-3a735f425cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69027df0-2d79-4f80-83b3-8ff7497e634b",
        "cursor": {
          "ref": "0abcef5d-9cf6-4b11-b802-79977a8c45d1",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "8161e261-7202-491d-b4ba-335fca20cd17"
        },
        "item": {
          "id": "69027df0-2d79-4f80-83b3-8ff7497e634b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "70a387d5-c377-425f-a93e-40bb5248393b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559561f9-1ace-4f93-8201-3d72f08cff7b",
        "cursor": {
          "ref": "043b5979-c315-4bdb-b066-375f8e78e8af",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "64936f5f-da98-465f-9d25-5c7d52b95db2"
        },
        "item": {
          "id": "559561f9-1ace-4f93-8201-3d72f08cff7b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "00eec3be-06fa-4573-a44f-1903a29d64e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f660ae-325f-432b-a343-12713ff52be8",
        "cursor": {
          "ref": "fdb72b51-7808-46d1-a69d-186f8be83e41",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f5548efe-a540-4c31-81ee-699d978c81ff"
        },
        "item": {
          "id": "85f660ae-325f-432b-a343-12713ff52be8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2325a5b5-ed63-4303-95a8-ebb3f3a0041a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b43de8b-518f-4485-b1b5-949d064033d3",
        "cursor": {
          "ref": "8d0fa887-e265-4d31-81be-be16d0c0294a",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "1990b4da-b671-41ca-81dd-64bb15e00041"
        },
        "item": {
          "id": "5b43de8b-518f-4485-b1b5-949d064033d3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0fe8697a-bb94-4681-929b-0629c9c34fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7e2438-73c4-4c6f-9ffd-f712df8bdc9f",
        "cursor": {
          "ref": "bed9f0eb-a949-4127-a69e-af8233d86750",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "6374f930-4619-459f-9561-728a27b8b587"
        },
        "item": {
          "id": "3e7e2438-73c4-4c6f-9ffd-f712df8bdc9f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e810d88c-f1a2-429a-a0c6-8e583a2a44fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "047c9736-90e9-4125-be70-d0b01a9e1c70",
        "cursor": {
          "ref": "15e1c952-1fea-4b5a-90f0-9edb70c4e27e",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "269a806a-d6c3-4ccf-8634-f1b0b56a093f"
        },
        "item": {
          "id": "047c9736-90e9-4125-be70-d0b01a9e1c70",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d6c40cb0-e985-4663-ad83-37df2f761919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a1a62f-87ce-4e71-8392-497453c0541e",
        "cursor": {
          "ref": "e27f140c-3ef1-4691-9733-5b8b78b57c66",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "56642ed1-397a-4b24-989e-4573773eca85"
        },
        "item": {
          "id": "c6a1a62f-87ce-4e71-8392-497453c0541e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "17b5aaf4-6dc3-4eeb-95dd-a728c414fad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d7248c8-77c6-4241-8f9c-3833cd36cd1b",
        "cursor": {
          "ref": "85efc798-f036-4092-904c-69ce1b18b8b2",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1bb505c5-ca9b-4971-8071-56a4783a122f"
        },
        "item": {
          "id": "5d7248c8-77c6-4241-8f9c-3833cd36cd1b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2946b005-2615-4c10-af04-c7dba0f04968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192fa366-402a-4685-ac36-d2281a1890c8",
        "cursor": {
          "ref": "5cce2eb9-a09d-45bc-a66f-74fba6bc400d",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "de76c0bc-023d-40e1-a714-fe62828e9aa1"
        },
        "item": {
          "id": "192fa366-402a-4685-ac36-d2281a1890c8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9fae6e1e-5afa-451f-ba5c-fb434b35aee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7695af-e0b3-4cdc-ab7b-cc6c1bd86e05",
        "cursor": {
          "ref": "0a415a39-b197-445e-a8f7-6a81556c290f",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "61f1a1e4-f541-4b7b-869f-31988f947755"
        },
        "item": {
          "id": "8d7695af-e0b3-4cdc-ab7b-cc6c1bd86e05",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "fbb9b960-2376-4f7f-98ca-429488431ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a60d9a7-29e2-4936-83f9-b659fee81382",
        "cursor": {
          "ref": "0fb7a9ac-81eb-41db-b634-12a88e62bdf9",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "9fd10950-c71d-4ce9-bc82-28d6f33803a6"
        },
        "item": {
          "id": "1a60d9a7-29e2-4936-83f9-b659fee81382",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "6a062406-2d66-4f12-80f3-08afdd410982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f6c5b5-b251-4a8b-aa1d-516d9b423e39",
        "cursor": {
          "ref": "30473421-695d-48af-9b83-604b5b08772a",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "adb69e2d-2148-40ce-8f82-181cde4879af"
        },
        "item": {
          "id": "02f6c5b5-b251-4a8b-aa1d-516d9b423e39",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "f5ab9410-f6e6-481e-bd64-4357ea2bc277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c54ff5-8b7f-4714-aea5-7c86375eecdc",
        "cursor": {
          "ref": "2091a29e-f8ea-4472-95a9-934bcf5e6092",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "86941dff-336c-4fdc-ac5b-8920f089a919"
        },
        "item": {
          "id": "64c54ff5-8b7f-4714-aea5-7c86375eecdc",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "8d6f58a0-d6e5-461b-ac33-a3e250aa29fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ecb2d6-b65c-4dd5-97e3-b897789ff491",
        "cursor": {
          "ref": "be257906-019e-4551-87df-c7e06ca6d45d",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "02721940-e34e-4346-98b7-8ad37e4d73f5"
        },
        "item": {
          "id": "a6ecb2d6-b65c-4dd5-97e3-b897789ff491",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "150ecd6e-8278-4c2d-b885-b1fcd3707236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71200e2c-82ed-44fc-b9c1-5baf7d93e574",
        "cursor": {
          "ref": "fdf507bc-4871-4cf8-89de-b75a1a3940a1",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d723a4e1-4acc-426b-b30c-9b78d3284a71"
        },
        "item": {
          "id": "71200e2c-82ed-44fc-b9c1-5baf7d93e574",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b0e5c6fc-61e9-4dd3-a7a7-29b92f26daa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "095700c9-67f1-4919-90b6-d8357f61e4b0",
        "cursor": {
          "ref": "fa1d2bc4-126c-4685-a33c-1b9e9d6977c3",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a3b5a7de-bc3f-4522-b00f-1dc8100f8d13"
        },
        "item": {
          "id": "095700c9-67f1-4919-90b6-d8357f61e4b0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7800351a-46ec-4f8f-95c0-167f5c50b96d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60281995-d0fc-4af2-a9ed-c9524b4d9eda",
        "cursor": {
          "ref": "b262f1ce-4269-4811-afc4-026c998deb84",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "09ecdce6-ed84-4195-a7a4-7ea7d4f9a496"
        },
        "item": {
          "id": "60281995-d0fc-4af2-a9ed-c9524b4d9eda",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ffe3c838-7801-4457-818f-3bb9328aa32e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c6c82a-cc74-43e1-8291-80b6dee64f2f",
        "cursor": {
          "ref": "30aa58fe-0695-48b4-ba95-7495c6c36d0b",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d2561120-45a7-4867-b50a-5b207b4ef1f9"
        },
        "item": {
          "id": "01c6c82a-cc74-43e1-8291-80b6dee64f2f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f43196a1-50ab-4f41-90ee-906ff896d609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c556c5-6212-40b4-bedb-3e21efb45dff",
        "cursor": {
          "ref": "75f73c61-b676-4ad5-b7a4-3ad15d352bbf",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f24d8cf3-d8e3-490a-b9ff-e7be4d9053be"
        },
        "item": {
          "id": "05c556c5-6212-40b4-bedb-3e21efb45dff",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ec6b2726-cf9b-4536-bc52-3e266bf82c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc6d25a-16ce-4457-8aca-60d20f7797c9",
        "cursor": {
          "ref": "99a8475e-44b9-43cc-9bf4-599459b22384",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "2f1247ce-0b7d-4e0e-b3da-728ccd0d55de"
        },
        "item": {
          "id": "4bc6d25a-16ce-4457-8aca-60d20f7797c9",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a29e92f6-fe48-4601-9510-b0ff6a26416a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab4b53f-229a-46d7-ad7e-aead3abcd3d5",
        "cursor": {
          "ref": "0ae72a20-78fc-4c97-9ea8-f8c5f7fe34ef",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "eadfb8bc-8b80-4ad7-82ea-6b68c91794a3"
        },
        "item": {
          "id": "dab4b53f-229a-46d7-ad7e-aead3abcd3d5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d1a66d38-5cba-4413-a6e5-68ef5b1b466b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76cf98e9-0551-44fa-ba71-3cd9b8201d66",
        "cursor": {
          "ref": "82bd1b9d-2822-46f1-82e8-947f0b2f0b0f",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8614c3bf-8def-4904-b337-0d742ea2cbd1"
        },
        "item": {
          "id": "76cf98e9-0551-44fa-ba71-3cd9b8201d66",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f934b173-1b44-4110-a04d-55a5c642accf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf72c76d-d5ef-4627-a227-e03b0d4806c9",
        "cursor": {
          "ref": "b4d9e789-7671-452e-85ac-0b6e444d610f",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e71f9696-790e-4e3f-99e1-4006501da78e"
        },
        "item": {
          "id": "cf72c76d-d5ef-4627-a227-e03b0d4806c9",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5be72ba8-5a4d-4f5a-b91a-8df149fa4017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d15a391-1e54-434a-bae4-7eb27da1e107",
        "cursor": {
          "ref": "43ad0eee-98ba-4442-b546-cd0bbf716d84",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "aab23286-2f5d-4619-99bc-58246c70ea7b"
        },
        "item": {
          "id": "4d15a391-1e54-434a-bae4-7eb27da1e107",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9b00d27b-d62e-4ec9-8537-f3dcae98763d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7114b987-4294-414b-9daa-bd2f1ac9112c",
        "cursor": {
          "ref": "d424a56a-73ce-4b92-bf2f-a71585aa53a8",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "198c4ebf-4982-4cd3-9de6-2732a1ab18f5"
        },
        "item": {
          "id": "7114b987-4294-414b-9daa-bd2f1ac9112c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e840c0ee-f4b9-4ee9-9b3d-7de9d18f48fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177da4dd-46ed-4e48-ad82-82b5295bfa61",
        "cursor": {
          "ref": "46f6b4ba-99e6-44e2-addf-f2350feae93a",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "07153d36-5dd7-4837-a753-bcf23de0011d"
        },
        "item": {
          "id": "177da4dd-46ed-4e48-ad82-82b5295bfa61",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ae04c4d3-3370-4f79-a545-9107183a99d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8106caeb-bfd9-4e98-9ba1-eb3cbcbbc695",
        "cursor": {
          "ref": "3c858033-47b8-4490-8d2e-df422a24c009",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7a9c2bd2-dce3-4d98-9531-780bd17569d7"
        },
        "item": {
          "id": "8106caeb-bfd9-4e98-9ba1-eb3cbcbbc695",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b69861fc-9472-4078-82c4-eb9388965824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b1c53e-66f2-4b37-b09d-fc541f674d25",
        "cursor": {
          "ref": "d2f26361-fb25-4d44-b7f4-920025707821",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b3cccfe0-7c3a-4827-8f5e-c3f1ceae593f"
        },
        "item": {
          "id": "09b1c53e-66f2-4b37-b09d-fc541f674d25",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "96759a9b-260e-4f94-87e3-1247c539a83b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc06347-7f92-4faa-8d30-fa511ca85473",
        "cursor": {
          "ref": "0fde15aa-d5bf-483a-9fce-00451015ef05",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "40c4c9bb-8026-4959-b885-da0d109e34e5"
        },
        "item": {
          "id": "2cc06347-7f92-4faa-8d30-fa511ca85473",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d1be8ea6-3c76-4e4f-8886-3e914b211e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84cf480a-2f6d-4baa-acdc-2e91f71e0d5c",
        "cursor": {
          "ref": "41a1eeca-1249-485e-b1cd-414327e6392e",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9210d2ab-94a5-4813-8f5a-be7711eafb90"
        },
        "item": {
          "id": "84cf480a-2f6d-4baa-acdc-2e91f71e0d5c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "cbca6cbb-f459-44aa-9739-b1dcc60d06a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0b5c2f-fead-4d91-afe5-4c11007e4ce4",
        "cursor": {
          "ref": "5882500d-0b44-463d-8981-c90880866055",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c07c6b35-0d94-488c-8e24-bef7fd5422ac"
        },
        "item": {
          "id": "ed0b5c2f-fead-4d91-afe5-4c11007e4ce4",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4b452dcb-cf0c-4997-83de-f536726cee6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0007977d-86d4-4667-b2e1-6f67502a0d32",
        "cursor": {
          "ref": "4def5def-53b8-49bc-890a-6bcf24c510ad",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8007ffef-04e0-418d-9cbd-231e5b888403"
        },
        "item": {
          "id": "0007977d-86d4-4667-b2e1-6f67502a0d32",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a6befcab-e6e4-45ba-8f14-4a60c95892cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf87500f-e071-4378-b4aa-0e72d3c273eb",
        "cursor": {
          "ref": "b2853f3c-88fa-4349-bc2a-bb52e93a2b51",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "140581c7-2dd2-40f9-857b-b0a182cd4ebf"
        },
        "item": {
          "id": "cf87500f-e071-4378-b4aa-0e72d3c273eb",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f0a2eb71-1a65-4790-9aab-3b479138db7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33c79a4-7e9c-4dad-acce-4f5f614b6da2",
        "cursor": {
          "ref": "5fe7bddd-69b7-4cc2-8e84-625d3a9d0a85",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "95ff6af5-6559-4823-807f-43f5a3395910"
        },
        "item": {
          "id": "a33c79a4-7e9c-4dad-acce-4f5f614b6da2",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "968dab9e-5aa6-4e6f-87e3-7e191ce47c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff75a09d-cb3e-42be-b218-997bb43a59b6",
        "cursor": {
          "ref": "d2fbcfae-bab4-40eb-8fe2-0734fd3b9c31",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "06ba3d26-0410-442f-ab7f-29a166632852"
        },
        "item": {
          "id": "ff75a09d-cb3e-42be-b218-997bb43a59b6",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4750c114-f3e7-44d4-9b53-f86492b73342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3837e089-3bd3-4eb8-add1-980af7eba5a8",
        "cursor": {
          "ref": "76c330ea-d85a-43b8-9828-ee79e8886393",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2775afe1-4a56-473b-bcfc-45344f705054"
        },
        "item": {
          "id": "3837e089-3bd3-4eb8-add1-980af7eba5a8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7942c21a-3ccb-4e13-bbbe-b896150043e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44c6cd5-ea99-41db-9ce7-22c0f51481b7",
        "cursor": {
          "ref": "7e9b3dd1-1d64-45af-ae2e-334a3d2973a2",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "cd915f42-3837-41c3-aab6-7676d04d1058"
        },
        "item": {
          "id": "e44c6cd5-ea99-41db-9ce7-22c0f51481b7",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "514c2a04-6983-4ea4-ba33-62b2f96598d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25430d20-c964-4512-8ea2-40557ccda947",
        "cursor": {
          "ref": "a0e72306-08a5-4a08-98cf-9ef2f450e124",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "89a727bb-08c4-4a01-b39d-661479c0c883"
        },
        "item": {
          "id": "25430d20-c964-4512-8ea2-40557ccda947",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7aa102c3-a9b3-4432-bcf0-47dd97ebfeb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a364c8-1722-418a-811c-974b11995d3d",
        "cursor": {
          "ref": "4b738bf0-12e3-4729-9422-25729cf3980e",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4c2c3c88-c5b7-4b2f-b45a-9e2fb3e53ba3"
        },
        "item": {
          "id": "c9a364c8-1722-418a-811c-974b11995d3d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a211f880-ea2d-49be-88f2-74b568c6a527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9af5d64-2d00-49b7-9295-6db769639c43",
        "cursor": {
          "ref": "cb688da3-8aaf-4ae0-a0aa-22f1e986d77b",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c9f00973-f633-42d8-a7ba-62b95b652b5e"
        },
        "item": {
          "id": "e9af5d64-2d00-49b7-9295-6db769639c43",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "75ee4cc4-d40f-4627-ac04-6b2771825168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30dfa130-97fd-45b1-b5b7-6360d22cb4ad",
        "cursor": {
          "ref": "1cba64a7-b107-4a51-9ac5-e07d13f6649e",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ab4bce85-dfb5-4369-8dd6-5e5fbca17e71"
        },
        "item": {
          "id": "30dfa130-97fd-45b1-b5b7-6360d22cb4ad",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "820ba69c-e2c0-45d3-a3cb-3d988ac7a694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 169,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5620a25-10d7-4626-9614-88d9cdd2dae8",
        "cursor": {
          "ref": "0d85c493-b532-484d-a0d7-4cdbba644b8a",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8687a8d1-33c9-4116-bcf6-76808b399fc1"
        },
        "item": {
          "id": "c5620a25-10d7-4626-9614-88d9cdd2dae8",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "347f6473-65b4-4296-97ff-57bd25803a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b3c12c-6a76-47ae-9590-6ff6aba25c82",
        "cursor": {
          "ref": "7b98b8d6-c75b-4c6c-8981-60742ac600ee",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ab48d630-a8fb-41f3-900e-308b5a586d25"
        },
        "item": {
          "id": "b4b3c12c-6a76-47ae-9590-6ff6aba25c82",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "60b833c1-ab79-4f6c-af22-4361d777f5fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8f305c-179c-49d2-9728-d53623e2831e",
        "cursor": {
          "ref": "b68298b8-4511-4987-b620-4765bae0b562",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d79cf8eb-d258-4137-bc08-0383c0d2eaeb"
        },
        "item": {
          "id": "7d8f305c-179c-49d2-9728-d53623e2831e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "40fda5cf-ade3-48fe-a2ba-e4434f2fb054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef2f5d5-44d7-40c9-a2ae-e9102d7d6a4e",
        "cursor": {
          "ref": "46cae263-366f-451f-be0d-f59e89a59d37",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f58c4351-7bfc-403d-b500-cafc1a4be2f4"
        },
        "item": {
          "id": "1ef2f5d5-44d7-40c9-a2ae-e9102d7d6a4e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8157ebec-05d8-4484-a2eb-25193dc7a7d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d526fd-497d-4b32-9762-f7b382c50ba9",
        "cursor": {
          "ref": "1d65650e-91ef-4c8a-b276-a3a138408b5a",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "10b93697-5b4b-4491-be35-df166782b7ad"
        },
        "item": {
          "id": "c2d526fd-497d-4b32-9762-f7b382c50ba9",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "60befc99-ac1d-4200-9010-7a46ed6cbae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63a2773-ea7a-4689-994c-51bad8ec3144",
        "cursor": {
          "ref": "a59c80e3-666b-4437-abc4-7d0595111387",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "490b8941-3d9c-44f2-9480-f49f9ea7d5d4"
        },
        "item": {
          "id": "c63a2773-ea7a-4689-994c-51bad8ec3144",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "5041607f-e8c1-4957-8dc5-11d27c2b3ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152a6bd9-d8bc-43fc-934c-8677abe88e02",
        "cursor": {
          "ref": "f8c28c01-649e-462e-b493-8aaef16322fe",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6413437f-1835-4b48-9f69-ec5777ae54ec"
        },
        "item": {
          "id": "152a6bd9-d8bc-43fc-934c-8677abe88e02",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "1c894453-cb1a-40b1-a78e-aae0187474f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021313f1-cc96-4dbf-99d7-2eba451f64bc",
        "cursor": {
          "ref": "993408bf-b62a-4f1b-b817-70d8e8379239",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e72efe93-cac5-4d77-bd4d-a1c655208beb"
        },
        "item": {
          "id": "021313f1-cc96-4dbf-99d7-2eba451f64bc",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2b3449ee-be6e-490f-8051-bb0127f6071a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f72c60-6185-43e5-bdd9-81db4b8cd651",
        "cursor": {
          "ref": "fd25ee15-0924-476c-b04f-9b92a6249178",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ab47d43d-ecdd-4b91-85ef-08eea9f03801"
        },
        "item": {
          "id": "97f72c60-6185-43e5-bdd9-81db4b8cd651",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "57db0bf6-4ba2-4c34-b424-42f7b09a494c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b35dba0-a9db-4649-a3bb-43d1cc88c416",
        "cursor": {
          "ref": "08a0756f-7159-429b-8273-93b5a4766df6",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "8bf54916-8e7a-4b2a-a945-2820ae524a6c"
        },
        "item": {
          "id": "5b35dba0-a9db-4649-a3bb-43d1cc88c416",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "146f9790-ac49-4eeb-a42c-9827d22a6c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a25697-9def-4095-9ff7-685e43f5b77b",
        "cursor": {
          "ref": "00174f80-fe04-425f-b06d-cb7f33848f89",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c61a0834-a0ba-4250-a0ed-7bb8b09bb93c"
        },
        "item": {
          "id": "a6a25697-9def-4095-9ff7-685e43f5b77b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e8c75e99-9a3a-4a89-b006-6c8b4debc2b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eeeb326-6a56-47fa-b0ae-e63cb02eec1a",
        "cursor": {
          "ref": "86f3f454-45b9-4fa5-a4a9-bc280a232842",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "494b5524-d7dc-4751-bb0d-d85a6f7dafef"
        },
        "item": {
          "id": "9eeeb326-6a56-47fa-b0ae-e63cb02eec1a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "55febe06-17f9-4d34-91dd-37b13a993418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d673d1-5f27-4a20-9b7e-4514564eeb80",
        "cursor": {
          "ref": "d1262859-b155-4a72-ad08-19190bb23019",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1cc999bf-2759-4fa8-84b9-47852b921568"
        },
        "item": {
          "id": "95d673d1-5f27-4a20-9b7e-4514564eeb80",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e1eb2ab4-bca1-4b8d-81bf-d7791d878a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e18268-a1fb-434e-9dd4-a993de61d0f4",
        "cursor": {
          "ref": "b770b525-da05-4934-a05c-89476bf283f2",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4fdaa567-f82e-4381-a8a3-fac1b5634bb1"
        },
        "item": {
          "id": "57e18268-a1fb-434e-9dd4-a993de61d0f4",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "595ec2ba-12de-476e-be7a-73ac5e0f8fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be81144b-c425-4a4c-be2f-bf89f8994e96",
        "cursor": {
          "ref": "a0ac76e6-de1e-4505-ae63-eab3a69fcca0",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e8525f11-d814-41b7-809c-2879ff06c053"
        },
        "item": {
          "id": "be81144b-c425-4a4c-be2f-bf89f8994e96",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "19762c8c-28f5-4725-8c70-94584afb1c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6203f6a8-e479-4272-ad4d-94494eb2c20e",
        "cursor": {
          "ref": "03529ef8-9ec3-4169-83c1-166376beeab3",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "56182f71-936b-47f5-abbe-9893371e6f95"
        },
        "item": {
          "id": "6203f6a8-e479-4272-ad4d-94494eb2c20e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "46c3da19-5f36-4718-9d47-a48e51166a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0eb6ebf-76ad-4cb0-b22a-900ef6640db4",
        "cursor": {
          "ref": "e743cf1a-9af5-417a-87ac-fac020941e84",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b58a6069-f26d-4571-942c-ce2dc0ff7637"
        },
        "item": {
          "id": "b0eb6ebf-76ad-4cb0-b22a-900ef6640db4",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "26fe687e-4789-4e25-867d-3c53382e0ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b71688-6fa6-4ae7-a060-f8f146166860",
        "cursor": {
          "ref": "82eb3ab1-5f3e-4508-93d0-000454578a09",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "12e152aa-08ea-44c2-b157-c822ba0c992f"
        },
        "item": {
          "id": "78b71688-6fa6-4ae7-a060-f8f146166860",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d264308d-8134-4deb-8de8-36736bb2a8be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca3c650-91e3-41bf-9ad5-f65f5737646a",
        "cursor": {
          "ref": "0e645fad-9b50-43d0-8cf1-eac48c58711b",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "54a361fb-1ecd-4b32-a870-025705066e4a"
        },
        "item": {
          "id": "9ca3c650-91e3-41bf-9ad5-f65f5737646a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7f61c9e4-faa4-40cd-a7ec-3b8223258ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9d3bf9-82a4-4284-b195-6c05b28506cf",
        "cursor": {
          "ref": "3726bca7-68aa-4af1-b3ae-2daef7081219",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "64edf3d9-5d80-4ca0-8e7d-9ca3c572c774"
        },
        "item": {
          "id": "3c9d3bf9-82a4-4284-b195-6c05b28506cf",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f15300d2-7559-4bf2-8521-df56456fe634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4bcaa0-931b-4369-9783-c5b2b9c874c5",
        "cursor": {
          "ref": "e38aef35-ccb3-4bce-858c-28e38e5aa8e1",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7dcfe96b-1770-42e9-a09c-025d1632b95a"
        },
        "item": {
          "id": "0a4bcaa0-931b-4369-9783-c5b2b9c874c5",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "89410cf1-56e2-4dc0-ba11-902ca4aa70aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30933e76-28c7-486d-8447-7a55dd4c189e",
        "cursor": {
          "ref": "0b5df0bf-c3de-4b9d-9bc4-b5383f5b19fd",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d44907ac-4eb9-4fe4-b448-c96b6db8186c"
        },
        "item": {
          "id": "30933e76-28c7-486d-8447-7a55dd4c189e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6426db08-86a6-4bb8-9895-f71cd789d9d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a66065-5183-489f-b664-5eacd0877593",
        "cursor": {
          "ref": "507f17a5-5b16-4455-8799-f09da5ac3634",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b89740b1-6d22-4c02-b365-7aa0027a6106"
        },
        "item": {
          "id": "57a66065-5183-489f-b664-5eacd0877593",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "36e9d0d7-fa28-4d43-befa-8fb8f69bee18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c088cd-b9d8-4599-b9a6-c9f84a6af2b0",
        "cursor": {
          "ref": "bf708917-1ce7-4e3f-b01e-7b9a42a0b4ac",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d90ff71e-953c-4846-a62a-85182b0b27bb"
        },
        "item": {
          "id": "e2c088cd-b9d8-4599-b9a6-c9f84a6af2b0",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3b1fa854-c351-4026-97e4-33a25e821469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be925b1f-ab31-499a-b6c4-4b082b260416",
        "cursor": {
          "ref": "b0889984-2210-4a93-91e5-f9b3a5d872fb",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a6268ec0-61c4-4fac-a09d-077b8267909b"
        },
        "item": {
          "id": "be925b1f-ab31-499a-b6c4-4b082b260416",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ce6c2431-6040-4584-a534-32a0e380080f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c08dfb-c6dc-4e9d-9203-4217e0721277",
        "cursor": {
          "ref": "4f356324-96a5-4719-90fa-d7c022129894",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "636c7410-a881-46b4-bbb5-0fca9dd7fcd5"
        },
        "item": {
          "id": "b7c08dfb-c6dc-4e9d-9203-4217e0721277",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2f41cd6e-5c36-4d1e-a518-ce1d47633cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90375c6f-7d59-4d90-98dc-407b1d400cc0",
        "cursor": {
          "ref": "d2b19721-ed31-4924-87e1-69bf08ff1ab0",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "99de60e7-a3fe-4947-b87d-e3ed4c1cc0b3"
        },
        "item": {
          "id": "90375c6f-7d59-4d90-98dc-407b1d400cc0",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "98c83eef-ab6f-43de-a621-f172e991c74e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a852bd-b60e-4609-ac0b-e8e2800fc3dc",
        "cursor": {
          "ref": "152d8993-7fe6-4145-9af4-2d67e838d81d",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b3272889-126d-4552-b62e-ffc22de9c123"
        },
        "item": {
          "id": "a3a852bd-b60e-4609-ac0b-e8e2800fc3dc",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4f8cbeeb-6762-44aa-95d7-1311e837a204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60a2f06-736d-4c2a-94a3-70eab88cce59",
        "cursor": {
          "ref": "6e2d6848-48aa-47a0-b363-32a8cb67edbf",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c2414597-cd73-41fd-8520-171111ee4184"
        },
        "item": {
          "id": "e60a2f06-736d-4c2a-94a3-70eab88cce59",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f48f336e-d4d1-460b-a016-f0d784ffa6b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "686e9627-a92f-4ddb-9803-d5a6eaf26962",
        "cursor": {
          "ref": "94144f78-b03c-43fb-838a-a32a025ac157",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3b7d8735-5f17-4f6c-a7a7-8ec75056f22f"
        },
        "item": {
          "id": "686e9627-a92f-4ddb-9803-d5a6eaf26962",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "eb7a9b38-ff43-4fa6-a56f-847a98ef4e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2250edb-96be-4635-8e1a-517a53b2f317",
        "cursor": {
          "ref": "e3042148-b278-45f9-974f-15cbc52a50eb",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "31fd1c90-f7f2-4c64-991e-6ef1bcd316ed"
        },
        "item": {
          "id": "a2250edb-96be-4635-8e1a-517a53b2f317",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3115e125-f4ea-40f2-af86-1d43c876dfd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e3b245-c989-43e4-9cf7-a2234d47ad09",
        "cursor": {
          "ref": "07bb1476-877c-4840-a3ff-11d921c5a8d2",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "017e2fcf-021f-4859-a61d-7a3075c2a5e1"
        },
        "item": {
          "id": "34e3b245-c989-43e4-9cf7-a2234d47ad09",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1ab82b26-9590-4ad7-b5c0-796dd6cee9db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854d116f-067d-4c35-9325-c3661e23c9b5",
        "cursor": {
          "ref": "c5b669dd-9d3d-4055-bbb1-d6254816f6c6",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "47061132-f466-40e9-ab2e-137693f31a50"
        },
        "item": {
          "id": "854d116f-067d-4c35-9325-c3661e23c9b5",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "58f09bae-c078-4d5e-8c4e-0cf6edaa00ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ea734f-b6d0-46cb-abee-1ec52d0fe10c",
        "cursor": {
          "ref": "271a2ffb-9710-4054-bada-9b58aad8bf9e",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a6ec27e2-92cb-4a6d-9a8c-fa8db7b25987"
        },
        "item": {
          "id": "92ea734f-b6d0-46cb-abee-1ec52d0fe10c",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "fe676b86-6031-4c86-b0cf-4284f10fb5d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "242d4dea-0a23-4d4f-94e2-b1b38e9e1d55",
        "cursor": {
          "ref": "a01cd016-d761-4ebc-a19b-f0f9ee70576b",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "5ee46d49-62a1-44a7-bd7b-a785b4c998e8"
        },
        "item": {
          "id": "242d4dea-0a23-4d4f-94e2-b1b38e9e1d55",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e017a75e-932d-45cb-a3d6-5b47253a2c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3bc3c2-f266-45fe-9bc4-9919ea1ba6a5",
        "cursor": {
          "ref": "23094d9c-6869-459b-81c2-0fa587a0656a",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0772f856-804a-47f7-ad08-03ab066c7dce"
        },
        "item": {
          "id": "ee3bc3c2-f266-45fe-9bc4-9919ea1ba6a5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "52cc7715-c03a-4bd0-a7c5-1e6ffbd159e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0e5678-774a-42e2-a555-23f6f21cc4e2",
        "cursor": {
          "ref": "fb4ab62b-814b-4a9e-b564-76703c2304b0",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "af86bc2d-d8c7-4fd4-9c83-16ff8efd28ea"
        },
        "item": {
          "id": "cd0e5678-774a-42e2-a555-23f6f21cc4e2",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "10a907f8-177f-4802-a55d-f461012c24ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb6699e-33f7-4088-b2fd-2c7ed12a12e0",
        "cursor": {
          "ref": "356dbcb9-9b79-4c49-9b6d-83845d64d053",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "274a993d-9470-49e5-ad16-59b048985f54"
        },
        "item": {
          "id": "9eb6699e-33f7-4088-b2fd-2c7ed12a12e0",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3073d1fd-fa3a-4bb2-80f9-c73b3cdbee98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6d2216-afe2-49f4-9d77-3501c2e9b0db",
        "cursor": {
          "ref": "285d87c5-0950-463f-b064-4c5456ed180c",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "189840cc-5f5d-4a2e-a4a9-8ba89ea02b0c"
        },
        "item": {
          "id": "2a6d2216-afe2-49f4-9d77-3501c2e9b0db",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3af71c9c-3064-4cf5-9323-0de043e95843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f831c8c-e82e-409d-96c8-c4edcf8ea710",
        "cursor": {
          "ref": "be5de555-c416-4511-af6d-fa7715f44695",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "275f3c8b-dae9-425c-adfe-95d6f40542de"
        },
        "item": {
          "id": "2f831c8c-e82e-409d-96c8-c4edcf8ea710",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d5a2aeef-833c-4c3d-9c4d-e194310fa958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcbd12dc-04c5-40fa-9e05-b27013b668c5",
        "cursor": {
          "ref": "69a0fee0-06ca-4ae3-a736-6a154b9ec2ae",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "074d8a20-5fa6-4b03-b644-fb606a2b9fc4"
        },
        "item": {
          "id": "dcbd12dc-04c5-40fa-9e05-b27013b668c5",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "04c96171-4714-40ef-b8fd-1d16bc178582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15848a4-b0e6-4d5d-a8c3-fdafbd0595c1",
        "cursor": {
          "ref": "f1db7b81-9638-40ef-b7fd-ecb643d4b10d",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6b6bab88-d226-420e-900e-9312480e8dc4"
        },
        "item": {
          "id": "f15848a4-b0e6-4d5d-a8c3-fdafbd0595c1",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3eb6fed9-f630-4ff5-bdd1-d24211007c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c400730-c387-428c-a355-c7079442872c",
        "cursor": {
          "ref": "59c7cde0-f63b-4e09-9df4-3bf10f073f45",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "cff85914-846e-4a38-8d8a-c88ca075399a"
        },
        "item": {
          "id": "6c400730-c387-428c-a355-c7079442872c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "3876a723-7447-41d8-8d7e-7c7932d62b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30973bb-9390-4048-a6f0-09287266308e",
        "cursor": {
          "ref": "7c51e87d-07a7-4aaa-92d0-0c8d2c1e7811",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "73c3f6d7-2ff2-4669-aa2f-e40d8c111e5d"
        },
        "item": {
          "id": "d30973bb-9390-4048-a6f0-09287266308e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "038e0d0e-247d-4049-95b1-dd8e1f780601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e22a732-9d72-4189-ab50-5d9bd7314c4e",
        "cursor": {
          "ref": "40b2426d-d535-49c2-ad08-93eb9eb49b64",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2640cd5f-d4f7-4917-9edd-eb4e46913093"
        },
        "item": {
          "id": "7e22a732-9d72-4189-ab50-5d9bd7314c4e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "dd08b28a-8bcd-48cb-822c-5ee1fe4693e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760e7ee9-d160-4dd1-b1ba-2e7533e0cc57",
        "cursor": {
          "ref": "c667c90a-0bf8-4d1c-8d00-c30d3e55abfd",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "957b2c4d-ae41-4f1e-a8a2-d4b629903bab"
        },
        "item": {
          "id": "760e7ee9-d160-4dd1-b1ba-2e7533e0cc57",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0b4fa1e2-39e9-4ddd-8893-653549078fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc281b36-c02a-436b-87be-32fc121677bf",
        "cursor": {
          "ref": "22bd4418-b37d-42ab-bd70-4307f89f9db7",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c3df3504-e838-44b0-924a-5c8657105bd7"
        },
        "item": {
          "id": "fc281b36-c02a-436b-87be-32fc121677bf",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3232c4b6-104d-4338-ac0f-3101616a0c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ce8ed1-2485-4bf6-8ea4-0f4b40b2620f",
        "cursor": {
          "ref": "873db227-3eb7-48b1-a954-bbb7bb974b36",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "3d4540e3-7bba-4728-975e-6e52c76a1468"
        },
        "item": {
          "id": "09ce8ed1-2485-4bf6-8ea4-0f4b40b2620f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "57ea4b47-0606-438a-8afd-dbfb9b7949e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6747d8c-ba87-42b8-9080-e9c0185e6817",
        "cursor": {
          "ref": "806a5919-bf25-46e6-a978-ee801100f6cb",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "0f5b82fb-e439-4efc-a4a8-0d164c5238b3"
        },
        "item": {
          "id": "a6747d8c-ba87-42b8-9080-e9c0185e6817",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "58552c2e-9398-49e0-8787-644c931cbd1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c055b194-5a9e-40ab-b0a1-17a1b586c420",
        "cursor": {
          "ref": "3447b69e-9aeb-4c54-999d-7b6baa0377a1",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "8a51456d-fb35-4ab1-acb2-d2813043020a"
        },
        "item": {
          "id": "c055b194-5a9e-40ab-b0a1-17a1b586c420",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e23b5a3b-fcba-40a6-be48-23ed70d6794d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c9a7d33-254a-4c66-b072-d1688c4785fc",
        "cursor": {
          "ref": "a0caef38-aab7-4fa8-adad-906b6d727453",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "2983b2d6-d1d1-4174-8f08-d14607f55881"
        },
        "item": {
          "id": "8c9a7d33-254a-4c66-b072-d1688c4785fc",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f9c5acb6-9b32-4f91-8df7-fd2f3b4dc403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2638ea84-2426-435d-86dc-a5bf2eb43aca",
        "cursor": {
          "ref": "cd249159-3a2a-4b23-bfd7-59e6fdd93188",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "2c060cbf-d429-48f1-a048-19c06c66378f"
        },
        "item": {
          "id": "2638ea84-2426-435d-86dc-a5bf2eb43aca",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "98a465fe-a4e2-421b-8351-c8628d95e597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f3213c-c71a-40ea-9b96-a29ef000b309",
        "cursor": {
          "ref": "7b1f283e-cf2b-45eb-b0a1-efe890e7f9af",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "154a049d-773c-4da5-b23b-124167ca55af"
        },
        "item": {
          "id": "a9f3213c-c71a-40ea-9b96-a29ef000b309",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "767131f2-acc5-479e-9a60-f8453e258d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074eb40e-5dab-4aff-b4fe-1df609f9541e",
        "cursor": {
          "ref": "b65d64c5-d6b7-45c4-acf9-8e0da7249cb1",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "8aee4197-fb23-4faa-b01a-9d2a34a717b9"
        },
        "item": {
          "id": "074eb40e-5dab-4aff-b4fe-1df609f9541e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f3da0703-df74-4b88-9081-66f5537d58d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7d471e-e6d1-48df-a374-a5a7c81d9da6",
        "cursor": {
          "ref": "dac17575-a61c-4628-854f-0fa26e8d7cf7",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "259b139a-00e7-4225-b888-079a50279a9f"
        },
        "item": {
          "id": "2c7d471e-e6d1-48df-a374-a5a7c81d9da6",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "20f07e31-15bf-4eba-8d8e-a81b01f354a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43040254-99f1-443b-aa16-fbeeec950456",
        "cursor": {
          "ref": "0428ffa3-6b3c-4f40-9d52-d96717526a57",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "480fbfa5-ab03-4625-ac6f-4bdb3a001a0a"
        },
        "item": {
          "id": "43040254-99f1-443b-aa16-fbeeec950456",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5a5ddac7-4d61-408f-9f28-499f832045e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd66c39d-ba8a-4009-914f-ddbeef8d8b1b",
        "cursor": {
          "ref": "5e339f42-fef7-4896-bc0e-3843fa024174",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "a0ab2937-28f4-442b-b789-d96da353d031"
        },
        "item": {
          "id": "cd66c39d-ba8a-4009-914f-ddbeef8d8b1b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b9cd049f-3151-4fda-b74a-5096f6e13478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c657f603-fafb-44f6-8075-60e7b607c437",
        "cursor": {
          "ref": "94537104-e813-4a32-b112-74b6d5a1999d",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "7826b7ba-4fc7-4e57-8c34-a9eb3f982669"
        },
        "item": {
          "id": "c657f603-fafb-44f6-8075-60e7b607c437",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f84c1f38-58b5-4ead-9da3-9c0f7add4594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96459431-4f62-476b-8a20-d25ec9a8b778",
        "cursor": {
          "ref": "54cb55c4-8cdd-4742-8fd6-1fd4478f18b8",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "e887ef6c-aa9f-482f-8590-f1e1a27e6a9a"
        },
        "item": {
          "id": "96459431-4f62-476b-8a20-d25ec9a8b778",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "eef6652e-e92f-4e63-8097-dff7c119c6ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2ba855-f1b6-42d0-9e95-6d36b08426de",
        "cursor": {
          "ref": "efa541d4-389d-4e1f-b04c-ad3fb83c00d0",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "03004341-57af-48a0-8520-7a20e9b4c6fc"
        },
        "item": {
          "id": "1f2ba855-f1b6-42d0-9e95-6d36b08426de",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ef289e87-f5b2-4246-ab9d-fa92c74a4f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8fea9cd-f665-48e4-b347-3179c637cd94",
        "cursor": {
          "ref": "cdfabc33-5140-4f2e-9ec9-3b12044ce3e9",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "8c632f6c-179f-43d4-8323-90a5b5f09903"
        },
        "item": {
          "id": "f8fea9cd-f665-48e4-b347-3179c637cd94",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d82fef61-9807-488e-9f90-0541866fac49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80d2ea1-2a65-4c0a-8e2a-3b20a7126f55",
        "cursor": {
          "ref": "8aef7c58-e68d-49e3-bf34-c949b5d7057a",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "fd0957ef-cb7c-4646-8442-77f7816237e9"
        },
        "item": {
          "id": "b80d2ea1-2a65-4c0a-8e2a-3b20a7126f55",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3af3d247-113c-4785-b152-c93ca5036d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309172eb-c40b-4471-8f23-5faedbacad6f",
        "cursor": {
          "ref": "f816a21c-01b0-42f4-b612-ef5078535c36",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "d3dc6a9e-7f63-4d28-88f2-8ac522aa1272"
        },
        "item": {
          "id": "309172eb-c40b-4471-8f23-5faedbacad6f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "603edd2d-7bac-4219-86c9-ef75f65441cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550ee3ae-19f1-424e-9ff8-07819f25ebe2",
        "cursor": {
          "ref": "621b07c6-977d-45ba-857a-105dd7ddaf0c",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "d8992352-1bf1-447c-8ea3-fa854e572e75"
        },
        "item": {
          "id": "550ee3ae-19f1-424e-9ff8-07819f25ebe2",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e9feb874-ba10-458f-84bc-110df161df6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a672db-b1a6-4b84-b887-d2b335a878af",
        "cursor": {
          "ref": "9d2a83c7-6b68-45e7-be8b-56469226bf0d",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "f34430a5-0f06-449c-8941-3f236fa6a1a6"
        },
        "item": {
          "id": "c9a672db-b1a6-4b84-b887-d2b335a878af",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6e1eb1b6-21a5-49df-90a3-fcf87bb49224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba1b36c-e175-487d-a5f5-77ce86ed4499",
        "cursor": {
          "ref": "0837c7df-e6c0-4b91-ab25-abd0530e91fc",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "e84065ce-09e1-43be-92f0-7d26c9b590de"
        },
        "item": {
          "id": "0ba1b36c-e175-487d-a5f5-77ce86ed4499",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f3452aa6-19b1-4333-ab97-f1ddb420a045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929f6692-ef7c-41cd-b2f6-418b61e4787b",
        "cursor": {
          "ref": "7b008510-af1f-4231-8763-b4e55908e105",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "686a1109-dd5d-4625-a4ec-123872ad9b50"
        },
        "item": {
          "id": "929f6692-ef7c-41cd-b2f6-418b61e4787b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5823198a-fc79-4d71-8079-90e3d58381ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e938620-84b9-4321-bcb9-fbc1618f13bf",
        "cursor": {
          "ref": "95ea2992-57d8-4999-aeff-addc9ec73fbf",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "e63733b7-4589-423d-ae12-a5cba2e12291"
        },
        "item": {
          "id": "6e938620-84b9-4321-bcb9-fbc1618f13bf",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f79cdee2-c2b9-488e-80ab-dd99fb94c472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f7c3c1c-20a1-4fbc-bb45-737f6c497596",
        "cursor": {
          "ref": "9f34690b-f9d2-476a-8a31-2a1873f5ac50",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "56fb28ab-e418-43f8-8657-3ecdc9f2e210"
        },
        "item": {
          "id": "3f7c3c1c-20a1-4fbc-bb45-737f6c497596",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "67afc3a5-88b2-4990-b769-8d63d139d42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c9764f7-a5bc-4d91-8a4f-957f4071779a",
        "cursor": {
          "ref": "d7ae775d-0ac9-49bd-a0cb-1a6b29bda830",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "bcf68478-14bc-43c4-9617-babf7bf22202"
        },
        "item": {
          "id": "2c9764f7-a5bc-4d91-8a4f-957f4071779a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b15eaedc-19a5-41fd-ba5c-b600e0a30e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d43d80a-6c8d-4b3b-bd4f-39e4f979901c",
        "cursor": {
          "ref": "855dafd8-0edc-4a26-935b-478139a9e9b4",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "3119d1e7-4f1e-4bc9-9855-a26ef1ad25e9"
        },
        "item": {
          "id": "1d43d80a-6c8d-4b3b-bd4f-39e4f979901c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "2f1482c8-909e-4870-83f1-3eab44e99720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd52ee9c-b979-43b3-8690-977230afe500",
        "cursor": {
          "ref": "c3554115-a1cf-4735-97e7-6a21afa45337",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "8b62c7be-d77d-4b82-a035-a56f53284c10"
        },
        "item": {
          "id": "bd52ee9c-b979-43b3-8690-977230afe500",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f6722c72-22f9-4413-9fca-01669c0e0ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c570eee5-59f1-439e-a712-34c2e204de50",
        "cursor": {
          "ref": "5cc9df8a-38a1-4a8b-ab65-7787ea63e1bd",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "d921e5d6-2233-4c38-999c-6706c15a5343"
        },
        "item": {
          "id": "c570eee5-59f1-439e-a712-34c2e204de50",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d69d4565-6f3b-4abc-a476-4803a53aade0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c221d3-e9c6-4525-820c-b4afa5075db3",
        "cursor": {
          "ref": "12666adc-c9bf-4811-827f-23eff689788d",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "12f62cd8-808b-408d-8aac-bf65559ac4a5"
        },
        "item": {
          "id": "b0c221d3-e9c6-4525-820c-b4afa5075db3",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2c953d03-b450-4a4d-8837-b7aebd463ef2",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f685798-ffb0-481c-8789-cd0f2f83ae74",
        "cursor": {
          "ref": "55594c1e-31c9-474e-b321-ca681f3af4f4",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "edd77121-742c-4c39-8bef-d17c052cf213"
        },
        "item": {
          "id": "5f685798-ffb0-481c-8789-cd0f2f83ae74",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a706648d-44cb-405a-a599-48531bbe0562",
          "status": "OK",
          "code": 200,
          "responseTime": 27,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "88422df0-4714-48f8-8128-8d4435498d32",
        "cursor": {
          "ref": "387bcf5d-78ec-4b2e-8d2f-d5aaf7b4ffed",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "cf83c515-33eb-48b2-a173-e0cd925a2d40"
        },
        "item": {
          "id": "88422df0-4714-48f8-8128-8d4435498d32",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "82d1f019-ef0a-4873-adbd-369a456343cc",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7bc013d-79e0-48f4-88e7-b51ae04e8eb5",
        "cursor": {
          "ref": "71fc6c03-695b-43d0-b42e-5736bd1441bb",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "1f183434-e3a4-4734-9400-eda3f4d660e2"
        },
        "item": {
          "id": "e7bc013d-79e0-48f4-88e7-b51ae04e8eb5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d5811ff7-511b-4ae8-bc3c-8de1e37d4215",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7bc013d-79e0-48f4-88e7-b51ae04e8eb5",
        "cursor": {
          "ref": "71fc6c03-695b-43d0-b42e-5736bd1441bb",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "1f183434-e3a4-4734-9400-eda3f4d660e2"
        },
        "item": {
          "id": "e7bc013d-79e0-48f4-88e7-b51ae04e8eb5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d5811ff7-511b-4ae8-bc3c-8de1e37d4215",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f302f93-da31-40a8-9308-64b5ed8ae896",
        "cursor": {
          "ref": "c640efbc-3d95-4d2b-8bbd-d43643f31ea7",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "9731794c-2391-4946-b8c2-0c89a7a24b8c"
        },
        "item": {
          "id": "4f302f93-da31-40a8-9308-64b5ed8ae896",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3b5e32fc-c21e-45d5-873c-a16d5dad0546",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5be9eb-07d7-43ac-b80e-f7185abf053e",
        "cursor": {
          "ref": "6b43e227-5621-4063-b972-72d4188faa8d",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "2829e1bd-7363-4772-8c98-bc7037980295"
        },
        "item": {
          "id": "3a5be9eb-07d7-43ac-b80e-f7185abf053e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6ce32acd-321c-4460-a74d-791a2c6a3b7d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}