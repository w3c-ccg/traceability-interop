{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6681c6b0-1404-4578-bcbe-8442ddd9974d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "65c4e77c-673a-461f-9445-cd40c697348d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b0c69f69-0fa1-40e6-8b73-2f88d464232a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "61ea8ac9-dc88-4516-a68b-17a313c451ce"
                }
              }
            ]
          },
          {
            "id": "4110be05-8f94-4041-8853-1a963c094718",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f505d827-adb3-4fb8-a1e0-605b5999b0f4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ceb18caa-02d7-4d88-b4c8-900ae47f83a7"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e38edeb3-fe86-4489-9db4-371f1ef7bb23",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c5ae0c81-626c-4556-9535-c90a134ed235",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7f7e1141-9b0d-4b2d-97e0-5ea0ecca25ea",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9a101a8-aa2f-4ab6-8737-bf5874f1a3eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "63a55313-d800-4790-8aaf-bf819c7642db"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "85856758-ad06-4752-869e-fa1df710e827",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e115e06a-43d9-4120-81e9-fc0e6426e035"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6244bb72-27d8-4ba5-a501-466a6df747c9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7ca3cb6f-8655-4dcf-b8a6-8af62d91182f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e314594-1291-4cd4-9755-0df9c9324f8a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3936380f-3023-49ef-85bb-87d06e8fe552"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "30bec9fd-f665-4529-8b6e-edf93af09574",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2bbf45c7-3683-4caf-aff1-2bbb39be76a5"
            }
          }
        ]
      },
      {
        "id": "a83aa2ba-f671-4a41-977a-5a730f8e2f71",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "92cdfbfa-ba00-4648-be05-911ad7bd0517",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8f209c7d-1181-42e8-bde7-1f32762834fd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "84c15315-db80-47be-97fb-3dcfe1378496",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b7d19a-db8c-49a6-8906-9ed578a69a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff78bc95-1494-41ce-a337-ebe3b11049de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4c5343-b6ca-4462-892f-d8adb5b2f60c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b31a72-8b7c-44c3-b2d2-a76ccbd86091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "95c92104-3908-4ddc-aeda-e83925585098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5048c613-6279-4ce2-b1b0-f6bcdbf6a2c9",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4d5e4c-3482-4876-9e92-c171d8eb8483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "41097424-2c93-4fb2-a9a8-2cc0e6164d1f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "367297ec-d6d9-4a85-80b2-2456b579ac0a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "74edb86f-40aa-4728-ad6f-5a4cfe81681b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aafdce56-5eb4-4897-a98f-b60067012f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa5579e0-fcc8-4627-903e-db9c9160ca6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d6770f2-8dab-458e-9180-e6016ff516bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb2bab11-9a29-40b6-865f-0305dfaacb7b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8222f65f-6f6d-4f31-850d-a5b3a3369a88",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a9c7ebd2-7f72-4544-984e-30f6870c0b10",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c067969-348c-46fa-a170-53ec7d016a6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "3ef6c616-81f1-4f37-80fe-06abe7c9d8af"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b8cfcf78-198a-4053-81bf-5548066d1916",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b9b4f55e-6aa9-4b2f-a085-fd4058bf37a3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a9c5391f-8e7e-4f32-bd60-a4a0e57cfc66",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "02285042-b425-4198-85ca-7e5c31c02f18"
            }
          }
        ]
      },
      {
        "id": "2cc0ac2f-7cfe-4899-89ea-bb4f5b2e560f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "82762587-a8b8-4822-8ba1-271c82cd7bf2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f322d541-3271-4167-bd8b-b7993bcd5353",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "071dfa0a-59d4-46ab-974a-631de72badda",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ca56ed-c71c-48e6-b00e-5e1577981e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "821985db-e403-4212-a1af-31df8bc4c999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e018d2b0-a493-464d-89ca-49421725d875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49f790f4-b33e-4c6c-b486-b5eabdeff6eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076f1255-607d-4067-93cc-33e96e4b0aa8",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd6e579-5810-4405-8882-5df45c531e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49d4cd14-da65-4d95-9f26-17d5ec1bfa82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20236ad1-1f87-4a18-bfc3-2dbb5831ddd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21823caf-d738-4ef2-bd4e-54be794caaed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc753ea2-5717-4155-994c-598e09968a1d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f77e30-8c5a-4442-8f42-33718fae602b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd452e45-df7c-4601-ade0-6e37a573627a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26796f0-c102-456b-b353-2a829899fbd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1fd077dd-4b38-4aa6-ac41-c4bb5c6e14c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61598670-086a-44a2-b688-fa52de78da02",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea68b56e-72fb-4b2b-8cee-f3fe4e7fe524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00b5294e-e47e-4e09-92a6-93976c5d0411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed572506-703e-46d8-86f3-462e78de43a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53686d61-eedf-4c8f-b3f0-222f121da76f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbcd4c3-24e3-470a-85e7-e81156cacf4c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14360688-58e7-4805-9f23-40a9745ed244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0874f85-f597-4732-b2c9-bd744a5de117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d8080d-582b-43c7-8258-43fd2a276f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eef7f893-e041-4cb3-9a51-d51018d4520b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1df97eb-82b1-4843-8339-6b15283d51c9",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d2682f-3492-4ee9-aa9a-0b9ed9d224de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59e4a8d8-4f49-41dd-982c-7a6b8c5b6404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e69d131-25d9-4508-b4e6-e15ccd89fbc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f7d6c72-cf7d-4a63-8aaf-c6c066ea8544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5deab8-66a8-4bbb-af1a-be6827319485",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a64981-36ed-4895-9b10-ac65db2c4bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2389a4e-02ac-44e1-b7bc-7e8e7a7543d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe25d630-8be2-40e4-b633-69ffbd8252a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "104df2eb-df68-4dc4-af8f-d917968ecbbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71305610-e160-4a78-8f74-dc9e32921d5e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8ed7da-1af3-491c-b73a-d08fd244daf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ecb7b09-ae72-4f41-94eb-490406d53eec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac26687-0d9a-4e9d-8523-c8e7bb6c3397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29254653-2c70-4bdd-8180-e3b671da637b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7182ea6-daeb-4afc-99cc-be391d0def02",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e978436-d47b-4229-8baf-d122aabaed5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d51a8b5-b383-4f6c-a221-72ba8673b0ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4c55d1-ff4c-4d7e-a168-57871a66bb58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2487a1e1-4b99-41b7-8637-f566d89034c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a46ae61-32ad-4bba-ae28-b1e5c181633e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3cefb0b-1ab3-4668-aa5f-17ebf905c33e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6f3c060-550d-488f-897d-8dad40f46515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "999436c8-21cd-4d07-aeaf-fd6fb9c8f361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ae5030e-2947-44c3-b519-0687e643b795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cecc71f-3a88-4be4-882a-a19c6aacc82c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cfc4ae1-316f-4b45-8980-9b44f7db8f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95781c1d-5bda-49ea-8c71-35975ed4cd20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a58fd17-feef-47eb-ab73-fef313e83cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0197c0d1-e043-4980-8c68-0c3fcc8a7a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f43feab-76b7-4bb0-83cd-41ea4a0d725d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13a9fe2-1623-49db-87b2-b6502e88762e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db659324-89ff-407e-9d6a-c4d31f4b4de0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67922467-8c6e-4c3c-a84b-869d23330c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd3bef67-f8e7-4e4f-85f2-76506585bc9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929fec1c-faae-4139-bf53-4b86f7f0d108",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "787feaa6-b594-4466-82e8-f00aab7584cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45c2154a-5852-4fac-b13f-f3f0ebd1d494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb9ee25-c239-44b1-ab31-f985000e604c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "815d15bb-824e-4d03-847b-938bd9e3fd00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5dfcd48-031c-4669-a985-bf8666c8b5f9",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35088aa-8bf5-46be-afee-a1de13ed5478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bd3bf03-ef6b-489f-932e-c13473b5613c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23cb4076-8bf3-4b44-bcd9-7d14e74fbcc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68024d79-bb23-4aeb-a90d-462e7523e347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302c5d4f-0dc5-4bc6-926e-dad17a888a40",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a56791-e14c-462a-9109-483c55a97503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46f27472-7553-4898-a1de-68e13c16ebb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a8c96ee-813a-4c3d-89c8-5645a021a70d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8aedb89-13ed-4853-8f51-ca015cefb243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79db1b7b-2065-48e9-9288-6f3069567f65",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5aafb89-77ce-48a6-a011-a6642d21fece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "031f9cbf-700a-4f25-ab80-f81262109840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f103af44-b71f-4d51-ba74-d30f63c5251a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e34ca10-3451-4be7-8c36-ef1845dad9f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba624ee-2a2a-4516-8ff1-084170646d07",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d8c57a-7b4e-4635-9d73-2c0eed5f9317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39262f79-6479-40f0-b7e9-b8421751ca3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b94358d6-72c1-4007-868b-1c7eb87f3e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9c57cdf-80ae-448a-9b42-e73b993071c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff4eb65-b40d-47ac-ae3a-75962596fe4c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a38fad1e-a9b6-4d96-b444-aff590aee7b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74813a0a-87b4-4a8a-8e94-a695c3b98215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "571125a5-ef5b-4d9d-a5f1-72cf5b94ad50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "043bc077-0e15-4170-a7a1-8448ebb2d563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb5a332-5be0-4920-b6f1-bb672602dc22",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e495f86-3734-452d-bb67-3b96df62071b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8356ab1e-4b9f-4213-9967-07e46db889a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a408b0-067b-4311-82be-705555b185c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c9c5317-1839-42d6-a455-b0c27ecbb650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58144d89-d87f-47a1-8df0-f9a3f48ee53a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2072977-388a-441b-b410-08fcc0633a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bbee1be-c4b4-4bbf-8632-dbd90f5772a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "278bf15a-b41a-48bc-95b8-41ff06876a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fff2aefe-a2da-46af-8ad6-bbaf3d5e1d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1084c1fd-3bcf-4df0-9324-ba69fd607750",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebcefae7-6d20-49c8-a75c-43b2219c441a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdd559bc-afbe-4933-9cfd-2610998c74e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4d63ca-e0e5-43d6-a90f-08bafad1c31d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6398f33c-69b8-4608-a772-383b87225b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bfc7897-4627-497a-b3c2-fb96dc33597f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85cf4563-5182-4d73-a755-27dc3761110a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "118e0cce-b942-46a0-b47e-a5ab3f64628e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45357afb-7785-44f8-b644-67eb98436f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "38653e03-3867-4e7b-b69d-09d5ae509fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db804086-42e0-4e37-a9ee-e659cd805795",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e10632a-1472-45e8-887e-1b1f24928700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7542343f-3327-48a2-9596-48362a70ee7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d7ca0c-2a50-4b50-814e-3812b1d658f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8a764d37-9584-41f1-9997-b56333f551d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520feebb-6407-4609-b931-ca50099ad275",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "260681ee-c202-490b-986c-de33c672119c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ad2e69-a2d7-4b60-a10d-ac9a1133d1e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "143fd4ed-10b3-434e-9912-4b83f5234bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "73bab89a-f812-4262-be96-60af3c49ed94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42509b0-c0d9-407e-a700-121f52f912b3",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16fb2095-3721-43e2-bcee-dfb0f3139961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7f67312-bf6a-4982-9fb9-8b326b8aedf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532173aa-3c82-4c0e-9917-42bc3bf2a688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "265f5c71-2c9a-4292-acfb-db54846abe05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a00a09f1-c479-44f0-9420-61a8a0ed6f6e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d83d2e-c9a6-4c5d-8dc8-0ce9e5d27a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "312cdde6-b6ed-40e7-bc92-5d97d1737238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2740068d-449b-4057-8db3-cacbef6988bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "af8c2dc9-2667-46a9-a9b0-5dc6382f9775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb9495bc-71a7-40a7-859c-d1cee24a48f1",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b874a9-7508-4118-bf8d-33f12deeaada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "792cae3b-6443-41a4-9eef-bec3b2e58c28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e15fcb-2029-4f4f-bfd3-54953aa11d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a647ef3c-0a2d-4f8f-9a45-a03dedb4da95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d1d00e-918d-4ee3-9a14-15ebcb7b5fce",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2562c12-fac6-4450-bb0d-5495beca4644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbd9fb0f-fde4-4ec3-a329-0ae089aaf43f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c745a2d3-3730-4b32-95b0-8ac13b48b5ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "15d4518b-e545-4b1e-a4dd-c62dfdd5952b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "875fe9ce-b096-4e29-a1a0-66c949be7e3c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc07d970-5b6b-4cb0-8a14-843ccec54065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35398286-1c72-47c6-b5e8-4a9db1170133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7928b6ca-ed97-4195-983d-b1b079e16294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9f2e6b6-0549-4ce9-8440-bfe4be732d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81366bbc-5120-49ad-8b1f-d472a455a59b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02931f3c-bf3a-4cd4-a32f-8dcc941f8c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45c62177-f74b-4601-a34c-b50eae94e1af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ad4f88-7ba6-43d5-9a40-8e00b3b25be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6382e17-c603-4eeb-8a08-06d84be283d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb1a3b5-ae5c-4b92-8937-df454eb01694",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ccbc6f-6b55-4c9b-9b44-130107144f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c5387aa-2cf9-421b-8696-da9e54105267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad915abb-a550-476c-96a1-cc31dbca2a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e953d74e-a51d-4456-85fa-97b96911e142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef950825-443d-49ce-a204-19a8048c9992",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "236b555f-62fb-4f1e-a66c-2fa94eb00153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7551f6b-154e-4526-8cd8-6e5368003a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d013e52-ca71-4d39-a0fd-2816f263e2a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "928df205-edcf-4c3d-99c5-5c910992a198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72218ade-878a-4219-b094-5d4bc4a486e8",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06bcc8d4-335e-4f51-a79c-518b313c378c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76068ab7-933f-46a2-9cfa-67ddd0204d43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8badab-e77d-43d4-ab42-bee2023b4913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "449892d6-302b-4afd-9d5d-fb962fadc382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9816ce49-382a-4b6b-93e0-06cec9856640",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "742e344d-0447-40e8-a857-9276ec60084a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4c3ca40-c21a-468b-87ec-b0905f406eef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec53e94-73cc-4e59-b9d8-b68dba77c7c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "55245ac7-49f5-445e-afc5-1fbd97113dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b57370-5903-4e05-91f3-e47a43204408",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67257f80-51e6-404a-b4f6-555b3af46b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0803ad56-4868-49e1-9255-979302d34ed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82353dab-4359-4e6f-842f-062ee2726cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a17b6bcb-6e08-4558-8333-f9d7cbdc659e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f334395-be08-4e42-b961-0551e69fe246",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "159cc05e-0b4b-47ff-ba16-7ce7d2863c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05672a43-02f6-4f76-a2fc-2dd74eaf5f90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa71c76-36af-4ea0-8767-d4cc79b8203a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "da9b9058-aa21-4033-ac61-f83fbde71e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb227504-4aca-485f-a204-2a01cd9679d8",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b25413-2759-48c4-999f-c8a02ad419b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a24b3340-1381-4869-a000-6d08a91eea4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e36eb34-f165-4a3b-aedf-ded9229d7c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9354f259-47a4-4a53-a199-1aaa1f140e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d89a96a-ff80-41ea-8ec3-4a2c7290146c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba75567-b000-42e4-9819-f65fdab46fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "720f6968-9de6-4f2a-b682-9ac19139da72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43adf642-e07e-44f5-959c-21a7fa9b4009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "88e1be39-1122-4088-99d6-b8549b4a0022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dbcca2f-753f-4f78-a927-b587ccd304f0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f5020c-ffb0-4d64-855c-89b94ae79050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c942de0-d5d6-4655-8bf3-70fd3e8c27af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2517a05e-24a3-44a3-9b66-1128c1b77130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f5e6e9f-9465-4499-88f7-fa7381b75329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c9d194-4165-422a-9a00-272e10514fd6",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "995e88e0-9945-4a9e-966d-1d4eddc1eb35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ae6e930-04ed-49a1-a4ab-e63b3a73d7f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51979582-415a-4ece-8e1a-16f4e2c8bbec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b92b66c-3bc2-4920-9a95-127e2190ef99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae029979-4eae-499c-abd3-b96f37e52111",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "129b9160-d359-4660-b612-f57b6634c153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "750f12db-f3ca-4406-b3ce-50d515e0213e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d7ea55-5607-4d91-a8d0-70019dda3060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f9ae00d-70f9-4cd1-ad71-7262748f305d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca054a5-eb35-424b-9476-85ba0093cc77",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ba7f7b-2a19-4a14-9265-7480cee244c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b88696d-3aed-40da-8dbe-6ad2f534f9a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16c00e5-efd6-4980-8343-96d87d5421b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c2069a0a-049c-4f60-a2a3-800203f91f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8632c23b-9757-447b-896e-ef339b245581",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ba42e5-c12c-4227-8d50-1d7c303eb081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d36279a2-5d27-47cd-a2ad-104e9f8f678e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b21732-ef21-4b5e-8d3b-c072a8a14bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ab9a960-b130-49dc-bb6f-628e4381ad48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc38b3bd-15c7-4f54-b2de-87b75cd7b0b7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3cd5cdb-cd63-4340-8580-23ab4ec855d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "033209de-eb12-4277-8092-6f689ff82419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "380dc3cf-fb9f-4261-bbf1-6f455ec39ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8a41a9b-8d87-46f4-9c2d-c3d1d2276aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a2a8ac-9d98-422b-9464-b3b6423f4e99",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b148d6e-9ea3-4c5a-87dc-0fa530d1acd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd8827df-2aa0-49cc-a3ad-009e45e3b759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ae5678-be40-4146-a66c-a9bffd5bc9be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a697c53f-1594-48f6-a721-a4bf95f59958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55da409-117d-4287-a3a8-39b4236e7101",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44163b78-1f10-48c0-98ed-03f890671af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "689de727-34e7-42db-9707-10f78969f8e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e78d1d7e-0456-446b-bcde-cd2b75bd0d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7d6ab9f-7213-4d69-a7c1-acd3460d2168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879d5ed9-ceb7-41bf-960a-09085b699f56",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba8b2bab-1508-41cd-a633-f042de68d94d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19507356-956a-4274-8b7d-9d4a31dd3651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99be35ad-240f-4679-b5cd-8521945d6c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba053da1-8926-4d11-8e13-5099522be176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2343640-ff0e-478a-b27a-d2afd2df23cd",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b142812-0aa4-4f8c-9149-7cc40b6b8037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93de2bad-c93f-4be7-8878-7ed36c0628cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8baec07-84d7-4ddb-a09f-d2c56183adcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2307cda5-06ec-4b80-b41b-173b2f30e769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d0a1013-f619-4039-a578-7219b059dd77",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea6c6e0-237d-4bb1-b999-ee238763d215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9723f79c-4989-49ab-8bb9-caa4ba072f4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b775117d-8f6d-4e74-a805-727f2844835b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc6d715e-3c47-4408-93a7-954a40ee008f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02aa1183-f784-43ed-87bb-a59c47db0e7b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6442466-08b6-45dd-86a9-a7682e734ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "282135ec-605f-47ea-a2c4-31fbf75b0fdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "890cd4dd-1f2a-4b6c-becd-477eaf742a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2fb33dbe-74f2-4472-aacd-c01f840620d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa657a7-2f5c-40ae-a7ac-2985e9e171c1",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a064540d-7dfe-4326-bad0-2b5ceba11764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eccbb352-abbb-4601-ad4d-4049456456b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6cbb93e-9329-4940-b5a8-8ca7e4b382b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a1060d6-0e3e-4560-aba2-a98d34153ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b5cfef-ddd6-4a80-93f9-71822f03e300",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e2242d-ea60-4525-b802-d74e2482d474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcadae9a-880a-4be7-8d6e-47ce737c3fd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47679848-0595-465f-abeb-475e0d235891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "43b5d2a2-ae19-4366-be11-c5503595ad26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d00b07-471b-4b8f-b668-efbc46420782",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e419f6-cc28-488d-9e57-8f50cedf2237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "570c6219-26fb-44b3-a43a-30a9a22951b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72f8e27b-f9fe-4c69-9781-1e03f4598c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "108a9cc1-813f-4b1c-8147-f795f734be54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5359db6d-b0a2-44a8-b88e-be54b1ba8162",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce32484-3d57-4297-bc16-eea29eb29ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd625f0c-db96-4b68-8605-50eff2fd47e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42948448-3691-48c0-a7b0-734f39241083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57705340-db7d-4623-a09d-420771c57224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52deeea1-d8bd-4351-a432-3bc0313375f4",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c6d417-1ed4-48dc-984c-c5cf4a236886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22c777d7-835f-441d-8926-944b91b569e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca67e09-aadd-4a64-9abd-84f09ad051dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8aa226e2-faa1-4c3e-83a2-b66834d2fcb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fcd35d3-b6a1-4e90-a6e4-f2fdd228d0b8",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e705b0ab-76c8-47be-88f6-910fbc06e7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ee23394-8a0a-4bb4-8ba2-e9588f98864b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97cefe8c-dc4d-4273-8e9a-b602c1ce1685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "64ba1664-746f-42d9-84e9-2a40c0720df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462172d0-e718-45df-b2ab-32f476f0ab07",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "586b3f6a-bac0-43f2-a48c-e8766b663850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8006d60c-1801-4922-9ed3-d28c8429e510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97a10ea-15cf-4c52-a4e8-862014bca829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "737e4147-25b2-4256-9939-cdef97760369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24438274-1fa9-4c67-b4ab-09f25d8160b5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24e9753-81e8-461b-9a76-b391c3a620b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d11e53a-7a5b-4a75-8f43-0af65c956d2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98fd22d0-2e03-4d53-b456-586dc8af7c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "53552587-ff3a-44f3-a22a-acfdb9f4de33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0bd5e7-cdd1-4341-96d2-1d1d9fd66284",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8b5dc5-6a62-4daa-907b-7f98b0cd1492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea8a64e8-2e44-4b8b-9a53-a1234dddda04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425bc8c0-41bd-4e61-8ecc-d94fc22fc68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "75ec259a-1d5d-4809-ba38-fa2c851d13ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0afad11f-c757-486a-be09-ea86d480d9c7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4226395-400e-46f6-8387-14a13396bb88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b6bc7ec-8c7b-4005-b818-46d85e190ac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18946155-19b6-41dc-9994-e59f78f43346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c9dc455-c577-409b-a9e2-2bc30d6eee4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "298eb5e2-32cc-43f6-a4ec-4021a378d20f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b47c25-11fc-46b1-986a-46e563a5ce7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76c7bce6-18d6-4c05-90cd-166a14bf39c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e1d212-6230-427e-a0bc-e3aa1c12f6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "126e5633-97e3-4aa2-9d7f-5586068b6da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe05fcd9-f536-4850-a400-0f0275beffea",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b0f7c4-57db-4f3c-b788-e2fec6277050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6b17922-866f-42fe-a7e4-527cdad1346a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da177443-2d91-4f51-9af5-b5e29581286d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e09162f-06e1-434a-8cb6-7ea5c6830be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de55e6da-17bb-4679-8fb0-35837aaccc74",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d43de0-4a95-4b92-87d4-276a4eaacdd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e901c89f-5e94-4974-a525-57fc12e85813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00f2682-4464-46e2-a8c3-272e41b4ed0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c240590-ca29-41fa-a343-234576a65393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f8b0e94-7e6a-4de2-9e65-3ea864017a97",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18485ba-d3f5-4a7f-8671-7269e3701b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce80be86-27c0-4776-b219-28657f1b811b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8e6712-0247-4cdc-ac13-763caef9eb06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1de61b85-f1fa-4bb1-b576-6c7e47e2229e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c841b9f-51c8-40fe-846d-a8447d95f161",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67cc3754-bd68-40f7-98fa-afd2bba2beb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfd3451c-a898-4c0b-86c8-91b3807f439a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc575b9-6209-453c-8f67-007f06651c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9461548d-4e6a-4567-8a8f-b9cfd4d4eff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d256915f-6f59-4104-83af-8a071bbee61a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fabe0e1-3611-44b8-b46b-b2a14c8314b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c085f174-365f-41ae-9fa5-06db6fd3dfb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a90f475-6fc8-4c6b-83ce-ed425a0b3d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c06fdc4c-eccf-4ff5-b702-26ea780fa3b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1809382b-c042-4aa3-b78d-ba3098077552",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a9c5c20-5779-418c-a1a7-fc5dd4954ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a757d9f6-6068-486c-a4ca-cadfcf68bf1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8afdbdc6-aa5b-4fda-bbb9-8e788c103f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "97e3d278-f3fb-4c8e-8c70-ccfe9b1c3e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71cb32c4-ab70-4824-8cc1-1cc16f28f85e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b2cad2-74d6-4609-9e7d-176d7e56ad09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20f13987-4e0a-4851-a44c-8241fd5bd86d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a40cdb0-d86b-4a64-9d03-4888abf7bc5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bb665ac-9b8d-47a8-9005-60d7d556a93d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e8d8b31-3920-4033-98bb-3aeea056090c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f815f416-55c5-4814-ace6-ddc9d80d8f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7608eee-227d-4721-b160-61c7f43c7c39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb059dfc-b8f8-4dc8-9869-0d08568fbdc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbdf05b3-2050-42be-91cd-0dc215b8dcb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca19bb9e-0418-4477-ad94-b3acd3f6edd1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "495787e2-3a40-4800-899f-3241e2fa2cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91c1e195-c67b-4154-bf2e-159a8fbfba50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b818230-eedf-4de8-a588-3ba71d5fd763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2669d4a-82b1-440e-8576-7d9d7d4f8adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5926f09-3c08-4b5b-9108-37e731dcb81d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a289dbe-d0fc-41e2-a1ef-74f1bc5c790b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f1d7a41-63b6-470a-a6b2-75aeeb4e60d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0098066a-6d37-4cf7-9d4b-5dcda81f5b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c99ea490-38d7-4123-ac2d-469c5dd49aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c64a731-b02c-42e5-a21d-8422fe636f0d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e42c23-c503-4a5d-9ffe-0c04a3a7ccbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "549b7bae-057c-49e4-8d72-295472cfb973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f00619-af36-41f1-8150-3bdbc068b420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cca109c-a574-4ea2-93a8-344003980b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e7b467-4b3d-47a4-8a80-2ebdb928e932",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4951b30-480a-4c35-be84-196c4588605d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40016294-7aa6-4999-a51a-955adfd02494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87f321f5-2901-43eb-b5e9-b176235e7f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f9c37b9-4a5b-4bad-81b2-a58bb76294d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e614a013-d906-4706-8ca3-80d3bc5826bf",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "411837a1-3245-4bad-b636-099f3207049e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d55dcba7-b82a-41be-b75c-6fc0fc7163ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c6d2d9-77e7-4bd0-a837-6988aab0591d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4985cf69-2708-499f-a5c8-c8b1fb771833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328024c4-d1b9-4521-b528-9240687155d5",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e1253e-e675-4fbc-b528-a56f2700801a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ed8cca6-8c01-45aa-87e3-fd3373392581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4297b2-3883-4347-bb3a-014d59524c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "77a0b895-7159-4646-b7af-f65a28ee354c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a48ac1-a55e-4c25-99cd-2fe13318ffbf",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8c493c-8569-4097-99cf-d89010caff43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abb7ad2f-c120-46aa-90f3-8584d6a6380d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59689336-3319-4eaa-842d-eca1d9b15564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e230ca14-6633-49ea-95e0-3c176df0a7db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aebf1885-ba84-4d89-abb9-07a290953f06",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c40a783c-dbd0-47b6-aa33-6226e781a565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bfebaaf-6630-4d17-a073-4ee495876951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10738345-87ae-4c76-bbe9-3b85a6be0c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "512b9b16-6506-43d9-8b05-162efa9080c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d8c3fc-cba9-40ad-bcc1-6ec55bc25093",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8147574-cc2c-4e1a-aa4e-1da23a0cd0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca9940b4-701e-446d-845a-9b6bf0107630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd29139-1bdd-4fbc-b7fc-9bc65c1888a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eeb55f9f-7468-44fe-99b5-cbc16683cecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feaf003c-1d63-4c0f-9659-7ea1f11c17a1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3048422-8a48-4f5b-8d01-e6536dda6ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ee96ab2-39d4-477f-81eb-4d9c78746e5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84439948-8637-41f3-836d-75152dbb039d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "801d5a51-4781-4bb9-8eb4-2d567d84d27d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7806f05e-cd45-413a-a26b-07513fd1e27f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f8dadc9-38b9-4b76-92ac-4495ad71965c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b7894d2-3a6d-4597-967b-e463454dfd80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e39889d-e3b5-4bd8-9405-3f4383160847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "330ee9e0-ee17-4b13-86b5-7dc8a64b24f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1531734-219a-45d8-a880-bf43dcda58a9",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f89fd7-b5ab-4fdd-a6ce-d73ec4325bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "060c5ef9-0802-4557-80b4-9ccd71f7f627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b0e5f4-af79-4e4f-8fda-0a3dc213adc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4411a161-3bc0-4f13-a414-c7b3d24dc8c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d81cb48-1ee0-405e-9188-1d3bfa5495f4",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "858446f8-c665-473b-85dd-13bfa06994ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8739f06e-4464-4605-b61f-2f1faf1ef2a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "536aef2e-04b9-4b15-88b3-060e02c2a4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "601953a7-c567-4892-a683-b45083cab335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f97556-b9ef-4812-9e36-f76fcc648757",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2cd9b0-6cf1-433d-a721-60f5b587bd74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01fe0431-7e12-43fc-81c6-23088f8e9877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7265bc-893c-4e91-99bf-1c09913eee94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e95b1103-3a5c-4099-b89c-2b6466a2994d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f142c2-5ff6-4413-a2d8-c074e89e4d50",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1306ed88-562d-449e-921e-5541f26f04e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80bae32a-aaad-416f-a478-ee2416f8b95d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1c9249-abfe-4381-9cd5-c01df5d7d178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "30cf8d81-ad68-42bf-b535-4102dd507aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c67d032-0c71-491d-9cba-d7dad432304f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5c23bb-0520-41c3-adb9-c64b633d24ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd5a0395-8cd0-4e0a-8704-400bf7b1efd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9584fb4-1268-4c45-a6fd-ddf1eb597063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "39138272-45d4-4ab4-a8e5-b42b91ea8675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7d7ec2-27da-4218-a4f4-3f3f189f097a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdbaf7ac-daee-4756-b6a1-a24fdf3ca0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35e2179c-ce83-4ded-9feb-ab4753a90482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4367735-b67e-4800-bb57-434e0ae454e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "13ba2d5e-4281-41b6-86f6-5b45b04572ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1221bd7e-6187-4c7f-8dea-3e7e91497d64",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cab2876-69ea-46a2-a54a-846e82768eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d9bd862-b084-4d58-b092-b432cca8af26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be89f38-800e-411e-91e0-d26ac9401fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9288a6b4-a4ba-4343-a5fe-79465ce03f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f07144ae-1d4d-4db3-9f0f-4b2a3061647a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee600f2-e4df-40ee-ab57-140c3ee291ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b7ac2c8-4cef-4f69-8d1a-8a32e7447fce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7248d14e-b784-4927-839c-782f831b2be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9dd6b17-f103-4664-91eb-366054855951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b4184c-642d-4968-ab7e-8f323996d193",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0e53e8-2888-4c06-aacb-6e467e3b38de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c92401e3-583d-40bc-a32b-8581f46e7907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "822dc7c3-fc1a-496f-8e32-3f1a9d193377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "70ec98a7-1aea-4631-b8fd-1b7738f3391d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed348d70-0751-4738-93d3-6bf830cb4b59",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba895dd6-8833-43d8-b561-b4d6e9711d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "357f72f9-7637-4973-996b-9ee103b44324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ee1d28-e073-4064-92fa-7c1b01bf5fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "25d500c4-d619-48ad-bdfd-0e7b60f44c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddbd570e-646e-4cc1-af21-f46c026c2263",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "846940a7-75c8-4bc9-9c54-847687de44d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45b7e1e6-5269-4bc5-adc4-ae9652c2e50d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115ece76-c30b-4f30-bb45-654c419c2066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f655d52-a4d6-48cf-8f8a-b0dbcdc2a411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f55692e-1dc3-48f2-9fec-7b3217e05c82",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5860491-f3c0-4089-8510-4403402c4079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2c0a0ae1-af6f-4a6d-9a50-524fe79eb1da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133fae22-029c-4f93-a688-06f53da529ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c65e2219-1711-4681-8d80-7f64ce50aa8d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a55c14f4-8984-4ce4-9e02-f27c4e9949c8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f7ccbe94-7b55-4a70-b719-a47b7cca6dee",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a03268-f5b1-465b-92a3-a4ba54ea47fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ebba847-4b3c-4499-a3ce-960e85f73d9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "156ab0bf-cda0-4acc-a6fc-5817fd6d393b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a32d7e3-08e2-4b2e-a3d0-f3139e2d75f1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85d5954a-07ee-4142-9b76-858869635c3e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "826790a1-64d9-46b6-bb93-026229ee3933"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a97c964b-055a-4c82-9b14-b52d33736017",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c299413a-1e23-4973-83d9-8d6d14b3e337"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e6b4e29f-3b42-477f-9597-7bd4cca594bc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1c03f496-83ac-4b61-a687-1b87cf27ab2c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5a5829b7-d5d8-41ec-ade0-22a89a2732db",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "59bd1515-e48c-4bdd-9235-ee018851f0f5"
                }
              }
            ]
          },
          {
            "id": "0326fab0-0ac3-4e94-bc0a-7d4a1a2b88af",
            "name": "Positive Testing",
            "item": [
              {
                "id": "afda5f54-9783-4e7b-a267-86999282da0e",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "ee02bf33-fb58-44b5-8950-effd0bb188dc",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00da8c0-064d-41ea-9ce6-ed6a013932f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "501e9625-00b8-4f12-b337-3058fcddb6ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e53da1-6b58-4b53-8407-fcfa2a35d74e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "172d835f-57df-4694-8226-cda918463e94"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "45e6e648-2d3b-4f29-bbb6-da4e9e8858a6",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e969d7e-0520-4bf2-86d0-99137ba81750",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "da25ad6c-226d-4a22-9a78-7e8e0a4f8dfd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9504a3a8-10da-4435-ae44-4ca725654962",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5acfdbae-34b5-44ec-aa13-525496b59932"
                    }
                  }
                ]
              },
              {
                "id": "6b556757-fb52-4f00-9dc9-34fb603782a4",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "583f7b94-9040-4353-9ebf-46f400c6ed37",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "27b5e866-43a3-4e26-971e-b309dd248c77"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c2ee61b-2584-4e87-bdc1-1f20475f0295",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9f91c2c6-2db2-4462-bf8b-61a947e35cb1"
                    }
                  }
                ]
              },
              {
                "id": "dc0763ba-1541-4710-a9f4-e8fa187cee2f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "11d0f016-2143-4f8d-a19a-37e5b489d0c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d6b52142-cfb6-4b34-980a-495e1c6d19bb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98074b65-97e0-49ae-8c1b-c8f9bf524b54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "18be3e7a-d8c2-4844-a501-f982af279abe"
                    }
                  }
                ]
              },
              {
                "id": "eb228924-3c9f-4b66-b1c3-55b235445271",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "227657a6-f323-4dda-b10c-d8063247000b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2dc37eab-0635-4116-8d3a-db048b83843f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f84bf458-b273-4757-b4d2-f78b6df591f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "625b9f43-ad26-44f0-a6dc-0d6d2b7693ff"
                    }
                  }
                ]
              },
              {
                "id": "9f80c73b-d49e-444f-888e-ea4bc916416f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b3f1bc1-d2fa-4204-9cf9-c657b672f006",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4d15e144-025d-412e-925f-0be8867962c7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40616bc5-b281-4c6b-9346-0798fb5eeb1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "28fb574e-35b2-4fc6-b868-be30587a599f"
                    }
                  }
                ]
              },
              {
                "id": "40bc74f2-9a1d-4937-bd67-5ed9fab4d955",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3fe487c5-7b20-4f98-af74-dde7bfcd2457",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "27bbc413-2da7-4208-aad7-beaae9ae6903"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c65eaf71-f4ce-4543-a244-0b127378f413",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "36928ddd-e057-47ce-8abd-df98ded69c54"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0ae52a61-65d6-45bc-93b9-f94f08fa32ab",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4cdc6bcb-31c6-4cfc-bf5f-270bb8afa5f8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "023b6697-23b8-47da-bb9e-193d24304f16",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b46257d9-0e87-4b4e-bac0-4ea4caa04e10"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a34130ca-976c-4a61-b3d6-492faf0f86e9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f1ecd2cd-08af-4a03-abaf-28472f44e0b3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "819fc536-10d8-4ccb-9fc0-ce382e66236d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9fd4950e-7042-46fe-876a-80e31e3affdf"
            }
          }
        ]
      },
      {
        "id": "b0d7a1cb-9195-4929-a84f-c2488e3e17a5",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ea120182-66a8-46ad-972e-77ad4fab3bdc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9f2503fd-0531-4217-9145-e04d45817df1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9ad65c63-b3e3-4874-a3db-0d27194b501d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36489528-f148-4939-a3b7-0dd9e17ec778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "426033a3-a1b7-42cd-8c74-fb7d06837c8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db2e185-e883-461b-a314-6e6b04499b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c714925b-26ce-4ee8-ab28-892c846f3fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da165fae-fc69-4c59-8000-1a1980ed4ca8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29554462-ee2a-4927-b0c8-c8aad26d7664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f02c14a4-17de-4746-bfa8-578a3dc8c6f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea6ab9b-7f08-49d1-93b2-f66b9ac755ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "926494b2-59d7-4ad7-89d9-1cdce3e78541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afcd87e7-8552-4753-bb74-865b89cf524f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11e2ce8-53b0-4a92-9ffb-a245a1b5e484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47a2db13-cf1f-4127-8f10-12c8d4e86aa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a84ef7-6e75-4512-97a5-fc1ef08ca99e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf7a2e67-19d6-4576-b307-ce5835f3055b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f33b5cfd-3ec9-42cc-93c6-a8c16c6d7005",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0187fa-dac7-4223-b34e-35db91b232a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0bbc08c-7026-4d7e-b4bf-68fa76602974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d29e4a-e3c2-428a-ab95-c043732e9343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "55de78e2-6df7-4f55-9a21-8ed8411f7eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb5537d-c00f-4342-9890-c446bdf40dff",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8b0845-4180-4ade-9454-34a9734c2959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a64ac595-8372-4a53-93f8-ad896a52211a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5045ba5a-9763-48f8-a9e4-6c7d1f070db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8331d457-48f4-4031-b696-3474da302d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d29e4d08-c665-4b0c-a862-9cf886741c53",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48dd0389-2497-434e-9342-8a722821c45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e2f6e9a-c26d-4288-9eaa-806bdf9fa9e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca47714a-6091-4742-889e-7238a0f3f453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3eb2a30-fc6d-4edf-8e2e-4c2b048eb184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "111698ad-7674-48ec-ba6d-7089678e71d1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1695bf4-2cf2-4dea-b675-01df8ca34a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4b1bb50-b1da-4fb7-8856-ea8c96fc926d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2121ca41-dc22-4e33-8554-4e7b70a842d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "acfac313-23d8-4ffa-9595-0ef7c86d732c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba1d7841-aec6-4e65-85c6-e273fc7e4884",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6a9497-8f5d-4123-9031-affdd3a17a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3b74b25-0436-481f-a261-57300ae7f7c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22c382d-6f20-473d-b0a3-3d8371067f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "321ddd34-2343-4e1c-b1d4-9eccec22a540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae76de22-c3f8-4602-ab68-ac48ee7c3f07",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98282060-b983-4997-af42-9f0c2ed6c930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b88410f7-75cd-4258-8074-0c80ad43946c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463ac425-cb84-46a7-b89b-55fe8e5e9871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9297bbf7-0da5-457a-972b-2feda8acfb95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "437cd0db-96c1-44d0-864f-d5af77afe87e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6a65ef-c171-4c1d-8436-273dc856899c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f24b7e26-6308-42bc-a296-2e65bf9f2a58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f7cfbc9-770c-47e5-a65a-334cc0fd96a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "421060e2-61b7-4055-9afa-1fb97d938a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37742278-85fe-4ed3-a7e3-6def32b8e688",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1da7f55-aa02-4f02-aa11-ad72c4a84622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d413bed-f5fb-43e7-a9e6-2729f5970cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e4dde7-2035-4af3-9c2f-3b6dd5835395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fe404591-6c26-40f4-97e9-a1e3e5064c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9de1fce-b29d-4d1c-bc82-be273fc41ea3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b91c69c-6ef1-4793-b128-22bb14ca5295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cdfa1fa-95b1-45b4-86ad-da26f13cb07c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd8fb8a-5f49-4963-8e1b-ba8273f668e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b11ea4b6-de47-4d42-9c61-b00a9f3b0a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0dcd119-d62a-436d-9774-f4394bd2d648",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dad7227-03bc-4972-8be7-fae6057160c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cda55f06-1913-48e3-b9d8-dd365133a267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8399c22b-08a4-4df7-a75e-bd82dc0e9e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad02babb-5b95-4bd3-8f6d-ac4f27fc9766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c73f38-f980-4797-8162-2cf73a9d33f5",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c05cff3-57b9-4044-8f4f-3a6e0a28f97f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "461ec532-2b3e-40ff-bbe0-a993d964fbb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26bf143f-27e8-4bfc-88b9-2ff766b56ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c8a66e4-47a6-452a-9d3c-f1188d951f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f33082da-2c14-4e0d-ae89-478e814fa02f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d495f6e-a56d-4112-8a9f-acdc8de6193c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25947f7b-1c4a-4b3b-8a06-5b3e40a113ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e6ab67-b1ac-495c-a5af-c670d65a64b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "03dc6223-e988-496f-825d-aff6cc3cee26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f94a20c-970d-4023-bfaa-e08f5cdf83cf",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c5b61d-1ac2-4be1-967d-96d80a83dddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "962d14f4-ee94-4f37-8d1b-f7e8f8be7998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f6a71d8-3329-445f-a9eb-feec01be0152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "01baac1a-c5ce-43c9-9baa-b7c5d0649c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b234b0-3df7-47f9-9f21-0020f835dcfd",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32d3ad2-7761-4148-bde3-903df1f98607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d48b502-20a2-4c21-a59d-007acc1dfe61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4db8b5-a0ce-4973-bd84-f62501bc8888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9528d75c-e2e7-44f4-ae25-ac6cd7445246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a43243-484f-41fd-8d9c-c52efef19a14",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b887ac6f-4381-4904-a1f8-48a8b7ead724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "090cb200-d54b-4484-838f-bcb22cac18a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc92d289-2148-45b2-90d2-c341fe4874d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5270cc82-c1f9-4803-a604-84085f7cee0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9617a5e2-f25c-45a9-85d7-c6596317f780",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1985e80d-6b9f-45e2-a5f2-d585cea2ff60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47287aa3-33f6-41c3-b617-fa1091f99a37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394b598f-7b4f-457b-bedf-96671af3a2a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e4cff44-58a4-4874-9e00-59f7f5e7277f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543cb749-d94c-4012-b8bb-9a5285e3d5fa",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dde5baa-04d5-4238-a31f-dc07e540666b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57aa2428-b005-41be-937f-cbcb4fb6bba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce431243-7cf5-46c6-b251-1fdd70f41c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9635cd40-fd76-440e-9d11-b44f934e1473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f34b35e-1bc4-4cef-8218-fba31aaab877",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d006c808-81a0-443c-b2ec-755adfb6fc95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6692dba2-fbc9-4c1c-bffe-2e192cf3effb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4182390-2dfe-4b0d-95e2-b78244bf5297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9da1fe3-bc30-4f6f-9d8f-b5640c71f369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb9b403-1cb1-48f8-a611-5a7d885e3382",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f66ee4dc-2c5c-4051-9dff-0e673b21992b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbcc8d31-43f3-48a9-b518-0073d208a49d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e44fa4c-4226-4b81-a195-80dfdab60373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdb400aa-f86a-49c4-af24-51c2772c8682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2bcf4b3-9123-4150-a1f3-fca6b9376d35",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f83b24-665f-487f-b562-75358714111f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03cb413f-fd3c-40af-801d-03cc0908a3b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ddd13e7-9c64-4d03-8595-a07f34a30e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3302141e-ee9d-474b-8fa1-cc4ac85f78a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df4f0cc-9f6b-4c5a-965e-cd97c2205063",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e472c3fb-0548-44cd-a5c8-01ed25c52c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd5d3f52-4725-47eb-9396-b7cd26eb4873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f214000d-ea37-45bb-960a-7303ee149049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63507745-30af-4199-8cca-dc89b0138bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a970e2-f5d1-4725-84d6-9606e7db6ff9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee824d8-7a71-4ae7-a67a-91eeddddc344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fce7cf99-fe09-46af-a967-7aef808d9fce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35cedad-45ad-4f5d-8f28-00e9c1b356c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be5dfaa0-9d44-4c47-9785-a3df9da429bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84106210-84c9-49bc-b6a0-d047ac44b362",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a303766-7088-4052-9eb8-60f6981ab3f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21487b4d-92c2-4e9c-8032-7452d5b58b05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d34e86-7ed5-48c0-98fb-c04b2c4e698a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19de1d2b-9fde-42a7-a954-c2f11216687b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fffc69ef-0122-4072-8aac-0f59121ace78",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a144ec-c66e-47e6-b695-0247de406ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37d5e292-18b2-4d5a-98fe-13537fc3eda7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2d2656-6da6-4745-8c87-540c53792837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f42cec60-2b58-4d1b-bd07-8ce498c03692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb8805c2-56f9-403f-9275-a4c977e316d1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f47974c-839a-4d26-84a7-19eddab4c361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "635aeec5-3a87-43a4-b1d7-506ea85ba678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2e6248-4501-4cba-9b83-2a975ad4301d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ac4d710-f24c-498e-b602-b320f4808b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d919b1b-2962-423a-a589-1f9dbb3c608e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e92a1c4-6544-419b-a14a-eb96d52a3682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c74feb7-deb0-4264-9d49-91c32be811d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d22025-a2f9-4951-acc7-889435fdc90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "caaf88c1-39a5-4ef7-bc57-9db61e15f1b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd232eb6-ee9e-4219-ac09-0be94f9d9f62",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d778a8db-44eb-4b89-9d17-5523792b4f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4092e971-7fc5-49e1-83c7-36d7d066cc45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b2e5b9-787a-4311-8cee-590b094583c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62a7ad05-8dec-4403-93fe-b034b97e3ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "064dcad8-3f40-459f-a165-2c13e7394036",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ef0ea4-45b1-4b15-b814-39ec9979eeee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce6fcbbd-b810-48bf-b7f7-dc44b9c8f1ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b67d34af-9b60-477b-8acc-f587c3588359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0b494d3-662a-4e50-bb8e-d67d28180423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3025d640-9450-48e4-b1e4-36028f20e118",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be7c44a-4104-44f3-870e-19fc82bc151c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25fa0d9a-77f4-4c82-b5f3-cf3db9c30679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a17c3ae-6a15-4e63-9655-2e67635be1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b04cb525-5db9-4b07-804d-233c24b349cd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c9a3ceb0-35a9-40e3-bf47-d50dfb2501ad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2cbcff2b-8ccb-4674-be1a-7b1f0532b66a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff3e547-0df0-4a7b-9d20-7d4264fffb14",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ce04b6ac-c5c3-41cc-bc21-11f2d4f1f2b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a014bae8-ad12-498d-bbb7-92b770788545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e68e0374-c265-453c-b2ac-1519bd2f27b9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "beff3e18-0674-4ea6-bd1d-7388cf1f8ec2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68504854-b528-47c4-b1a0-9e51849cd857"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "75335dc9-e55c-416b-b939-83220906b8a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7085d62f-4410-4e99-b582-03c130b92767"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c7f74c92-e6db-4351-bcd9-33bb33729a38",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8c788a72-278d-4350-8d3d-0ab2e8543cc5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e008f53b-7ba6-4253-a779-cb2d50d688e9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8b64331b-e6a0-47d9-aca8-3a04f9721e61"
            }
          }
        ]
      },
      {
        "id": "dc819858-4e8d-4bdc-b71b-01124b5db487",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "2cb55ddd-eab3-4687-b9b3-c5a9d06f38c0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c9db087f-9e99-414b-9b2c-bb89d3bc0bc6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "eb5ddb28-fdcd-4acf-9b49-3700baf7ba4c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76781324-10b3-4065-9648-c34d69cf1220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bef48d54-0b48-4225-9a37-4e032b686dde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3eb5e7c-0724-4c2a-8acc-2c6e03e6bc6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e452010-2e60-411e-88e3-d8cfd20f78bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38475a9-77e6-4948-af02-55f4e9ca536d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e37247b-9b9b-4ac2-9fbe-26dac90556c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3b1769a-277a-4a05-91f7-54a5a1336620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e986701a-c40a-4dc3-ad46-31b2d037fe38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fee1a75-d83c-415b-afda-959cffa99ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adccc26c-51b9-4c4b-b29e-ad44fedc1572",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a111e79-f605-40f9-bbaf-93a9be0db641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49e1afb7-df80-4f3f-9584-1e8122e22922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c429df-556b-48bd-927c-df7d4bb530dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7a538df-eb1c-44fb-a49f-8219308a5e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d7b39a-217a-45e5-aae1-2e85597b2c1b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3951833-85d0-4627-bc18-ea53fdb736af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02cdc968-0616-4a60-a2d9-490694ec3c59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "374d8afc-03f8-4f39-b0cd-392b705b92f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf4d1285-00b9-4c35-96c1-4c66cc315596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8756d7ba-0159-4d93-b2d9-9fcfd211c949",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead5888f-7135-438f-b3c0-7fe9999203a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeacb7cc-4f0f-4ed3-bf2a-9478b882bc81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "553ef35a-8e42-4f54-b727-9e18233127e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc5f7df1-62d5-4b71-8143-194bead580a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baaaced9-0825-404d-9a27-93d63d1ab652",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24841e05-9744-4620-8d1d-f614498e3e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d0b7c8d-ec18-4576-87b5-52051174839b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c449c63-dea2-4759-9141-f9cb5dcc5244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cbdd1db-3f6e-4e40-97d4-164963d9960f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c1afe1-f98f-4a04-970d-922412d66c6a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d75c4b-0e23-4c33-93bb-4c056a5547dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fb20292-04f5-4c19-926f-90309c3d8e5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ffb03c4-a55a-494d-af2f-d3fe7b5dbc4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "07745614-3462-4ee9-bedb-1b42e3532593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e7f508-d394-4917-9b2f-67b9fa7fb2ab",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3211c01-82df-4303-a6b0-4c130d43cf90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df6972cc-da38-495e-96cb-069880614fd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124ac5ed-db09-407c-adbf-81d07ef7f786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6c139da-dec2-491b-9889-205c6267ebfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b183a269-10e3-4b12-b776-6066217c9bbf",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01f5dc9-34ec-4ca3-997f-3b342c230100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bdf11c6-2536-46e0-8da5-5853dfe6782b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb1da3d-dd2d-4f3a-a72c-a58aa3ede6e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "33059e6f-b0e9-4988-b2c0-6d736289fd4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568ac618-2b6d-4f1b-a9b1-da767a0a8bc1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43863553-2ef0-4afe-8f2d-f96fa9b9abdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a537119-77e7-4e1f-8ac5-247ea2c01802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187c7cca-a63d-431f-ac3a-f8c86ea18f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "33db3e82-5d23-4996-85c9-a4165aaf7d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f033aa0e-63ca-4e1f-89bb-2228d2d478b2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c025306d-febc-4805-930c-0f9c33ea76d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80f20a2b-0150-454d-b43d-3be21d20f85c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70cdcd54-7348-451a-afb0-d346d6d3f71c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fd4dad70-b50d-46bf-98eb-818a3558090a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec300199-19ad-4193-975d-ea96b43e8cdb",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab1ced6-b5a5-43df-8223-cfe254495e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0bde0f1-d255-4727-a759-5ab6f6325e56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f8152d4-9536-4ad9-9857-b5a3302fc972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f0a37397-f8c1-4d73-90ca-a11932bed753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13071396-76ad-4986-b158-b39eb374973e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb17485-9e4a-4aae-ad8e-06533db81fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7a5a703-8d24-4968-bc9c-a68870c0349a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e205b26-4524-4849-af09-9afd1a3e0566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9fd085e-de9e-4e12-8006-9ae977ab28cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929f44d4-0cd0-43d1-a1a3-675a5151c040",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5643bc3f-3f01-4c57-9011-06a92c43e9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c240e524-df7b-4f09-96da-ca480a50d383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a26972ee-c238-4d64-a3aa-a644f562dfd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a06a7b7a-15e4-430d-9a5e-0bf9ac121bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a811a95-745c-4071-b5fc-923f4d310d35",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a25176-f027-4733-8bd1-726af3dc5552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "460b2ef4-4b6a-4c19-ace8-88fdb490b975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcdd8467-5dac-48cc-8ed4-79f2d55810b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ccd7c5d-30df-4c51-a8c6-fb23c20ed30a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd80ec2-72d7-4edc-a667-fef656164672",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "575a77a4-34c0-4411-92ef-fc7344b1c8b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9208ef07-af2e-4601-a0e4-20b646694bcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c9c0ef-0a46-408a-99f8-ed6717498e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "29c438c2-5c73-4079-8e67-68d376a9122d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "379ffec0-3b03-4f34-adf4-b0250fe89bd9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02814d65-2f16-4328-bc13-d3019568af17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1685fba5-fccd-4511-a83f-3b76448e1b08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41e3eb0-7cd4-4c62-8d23-c49ae16cc067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "24ed2b32-a191-4c6a-9d49-ed7e16e5a34b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ccfb17e-a375-458b-bd5a-8738a2c9f3f6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f9101e-15c6-4497-99c0-df4cc8f974bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edaaff4b-b34e-4cfc-bb6c-41a7dc04b890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f58184-d27e-46ba-a651-386f9bec0a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5df80c78-8232-46bf-977b-6e6b9e3a8487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf59bf90-233d-44d7-8f6d-be073b1506d3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c596e42c-a611-43ec-84e1-95c2fe92609d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f5bbb37-f35c-4a9c-980f-332d1b51272f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab8b198-655b-4928-a43f-fc1730242cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae6cf193-743f-4778-a488-30cfa21b8eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "991129ec-9e1f-4489-8af8-87ee5d8a97ff",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e09054-01d5-417e-8cbd-c4b83307d06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ace892c-b266-47b1-b7fb-0195a035ed51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867f7068-8959-4589-9521-7a18a784bb38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ef47b28-8173-4f13-a7fc-9865dc04a06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "412a56c7-9a1a-4d6b-8875-d9ef63794ddb",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6736e94-e5dd-4afb-8d7b-b9aae8b8e5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b1eb134-5fc4-496d-b5e1-ce198992ec60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c852df1d-046f-436c-9032-2a776e55dcb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "206b4f48-1ec4-4f7f-bdf2-4363733eaace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b290d5a-72b3-433a-b190-a39a942b4d5c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b18934fd-1fcf-4d7a-a6a0-6dfac17fcf5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ad6ac59-be2a-40db-b81f-c2695c250cf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f381c4e-13f9-4deb-a345-a5a743317830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ccee37e-23e8-4edf-acd7-a3ff178f7e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653d47b2-2071-4ee7-81f3-6fd6dc9fffbd",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7494d2c-75b6-4c1c-83f0-fe220cd3d6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53032b24-4a9f-473e-94e7-50a51cb4e0a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d42fde4-9877-4cfc-8e3c-4cd945903b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "589b4f3b-cd97-4625-950b-449b755ee266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b39c4a-133a-4d97-86f1-4deeae888b12",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f880c93-0057-4a3b-8552-f9196d1cb57c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62a60bde-b713-4012-86c4-0a787f19abce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0663c98-dc1d-4101-bbd8-48d5a7779748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "351f7277-7c6b-49b5-8279-00c609bf19ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ef8c43-3957-4eab-88cb-9a21f1acf8f1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa2600f-5c3f-44eb-821c-524087c20c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92899d37-5426-47e0-8188-8cf55b67e140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d75b6d-0409-471e-9da9-c1608b1d21e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf1dcf20-6a76-441f-841f-56a923b92743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "164774b1-a605-47e6-8e9b-6628bb8a9509",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea34e7e1-92e9-4d05-b3e7-1f305d020729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e55868ad-f3f9-4aec-ac88-b2063db657e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1c2a72-077f-48e7-ae1c-049e9131436b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "631bbbb8-9f5e-4204-bd8a-b1ce8928b215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb4e965-410c-4bdc-ae0a-9d1fc9fb7c6c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9bfd00c-1872-45e0-9270-57502df4e546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ea47f82-ffca-42af-a22f-969ad32cae13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49e49b5-52f8-42dc-82a7-56c42a803165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fae9bfb-47dc-4bb7-a5ab-208b24ea5fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab963dc-3782-45eb-a5ae-6d823e7de056",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89585a20-155c-4759-a69d-efbd1f5400a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "544d92b7-4762-4af4-bfdb-3e0a3334c144"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06510855-be8e-4299-a800-736acb7aeea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90734e48-6947-4b6b-ac59-7e6e55b91fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "defe0083-f2a1-4264-a039-150a89539cf0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "843057e0-e293-4bee-96a8-de18c6fdeeb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c0e1cb7-e111-42e6-8177-1d7cd0027441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aff4927-23bd-48a3-9c0c-f7414ebe1557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbc98eda-f02f-4012-ae8e-65bc30db0f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d156c6c7-73dd-4aa4-a568-c500c4abc0c3",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ededb9d-5f90-406d-905f-b4c9ada72d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7d3af95-5bd3-449c-bc20-011e9fd0551d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e72470-0f8c-4a40-bebb-1722b11db906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a6c3dfd-041c-4efe-be9c-af6b02a7e54b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db8fe9fb-6000-4870-9274-a0454a769a4d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fafded0-9ffa-4615-bca3-178f7a8abdd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "813f5867-aba3-44f3-be9d-f18ecdc330bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f255d27-58e2-45d7-bede-bbd7d53fcda8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6453c37c-ee83-4ce2-a250-de03ff2e9c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce66fede-7ceb-45a3-acc6-ea995a47e433",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa91d08e-c7f9-496f-9c4f-7c4c1f8c6e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6faadf81-2adb-4d23-abf0-2fa5d3971745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9a1ed8-4fb5-441b-82f8-cff916271cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6792971f-d3e6-43c6-a8d8-3bf0b9d6f469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7979116-5978-49b0-852a-f690d729e756",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46df544d-0f29-4c42-b032-1f768983cd1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "388a2b92-14a2-4b65-8d53-2a76820c8694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ccc3771-2f03-4b1a-a0a1-aefc2b778e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f869bc2-4d39-498f-8207-40735502cfcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc73f888-faac-4aaf-9ba2-0241ccfce7c0",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54aaff03-c298-40ed-8a8c-f4e45f7c2c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee657f79-b972-463b-9dfc-e6bacbab431a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b1d690-fe15-412c-be3c-f43cb640a3e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad2bd275-f4f6-42cf-9578-5ba5f4573136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a00399c2-c4b9-46da-b661-9e7d20e143e8",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26803fc3-5979-458c-836c-d39ca2b46e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6f92ab1-e081-41e2-9785-64595d113e3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d1aca1-2211-4b6c-9f60-046f077ac808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28c19caf-e810-4dad-bb39-a095ef337df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47144020-9d43-479b-96c9-aff9d2e65cef",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa522560-0285-480d-92f5-c05dd1f38c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67c39a66-5fd0-4a1b-9d0d-1f7d40fcddbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca24ac5b-f435-491d-9505-d5e518b188c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3f643eb-f13d-4c24-97d2-ca9f71598c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7bf051c-a41b-458a-bcf4-bd14c4fb92f6",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "816956c3-e331-4a2c-a20a-e8bc0c0e8429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4222a698-ca0b-4082-b964-12c431553d2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2f095f-dc07-4cb4-bada-8ce799992761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e5e3f90-b1f8-4ae6-8846-14adf111483b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0508c272-099f-49b9-8c41-0f00257819d5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e6c5de39-e2b0-446a-b81e-0aa1b1e3ac7e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e33ba8-c7be-4646-aecc-b29b50aa1f83",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9faec6f6-b527-47fe-9213-cc54e22dd678"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3fc0558-9e63-4e37-91b1-d031f5fcb0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4464a59c-b72c-4605-b5fd-0c42c8e68d7d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b587ebe9-4054-472c-ae03-0a7125133f7b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28139754-c73f-4d7c-a0e8-cfadc33bb971"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6e01842-5e29-4e0e-8a11-dd4090a50166",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d89796d2-6819-4065-886f-4508884f798f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bfb75a05-4bbe-42ef-9cec-91d55bb3545c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "528fca21-07e6-43a8-87b2-d602beec991d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3581b726-a228-45a6-ad36-b85a5b6f63c3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "de06567b-8358-414a-8c2e-dc699dc0e865"
            }
          }
        ]
      },
      {
        "id": "63c8f322-e941-470e-9d35-21a690b9aa23",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b45343c6-b84e-4af2-b589-393d74f9d6ab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7da187d7-bfe8-4e56-9537-9d7f31b2667d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6f468f66-ee00-4eef-8244-fbce44660d4d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a7dfb5-d2c2-4ceb-a306-4e4538dd8611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c10537-508b-4ba2-8f41-95a57ac7cc68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd8e78e-f496-4221-aae4-68965ca28248",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d209dc4-a4fc-4853-8b68-11f5fbdd4b79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e805a6a-7e15-490e-893b-c43b146f00ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e6bad6-eb77-4e1c-860d-0de688a4ac6a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d3f666-6d32-47aa-99eb-30d330d81783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e24f724c-f625-471e-85d8-93a978aba2c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41aa607-b6df-41e1-8717-92da1199b715",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e30857a2-faf5-4af5-afaf-0ef0b11e6624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d88ff69b-9e4e-499a-8191-5cec07124b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26213081-75af-4a61-86d4-98560be777b1",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c173753-18c3-486c-93a2-7767428a3365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ec377d0-78a5-4458-9466-954c30a2452e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085ed00c-9f9a-4188-9afc-f3b4f73853ae",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34cf0e06-8863-44bd-b623-8331da7d6b09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "245fccb8-6511-4333-9f74-0ea0fc2d1221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e21946-3554-4872-9ea4-063eacb4f729",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7455065e-b8c6-4680-8e93-5b7f8773f85f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "146898df-795f-4180-8052-5e8114171f8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "281c2108-76b4-4565-989c-c61690b12dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92262bb7-fb36-405c-bd04-497803f015ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59800c0c-e1c7-4c64-a000-9ab58ebaf792",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9adf1c8b-782f-4474-b02c-a91a7548f511",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d2daab1-2a76-431c-a75b-73c12bed3063"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08c110a-a9d1-4075-b8dd-e75ba8326f94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d00570f4-973a-4823-9413-c909afd25641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b108a946-e121-4d0a-b6bf-696f67733998",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c2f2db-d0cf-40fc-a52d-d484fc2534fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31c875d4-aea6-4eeb-ab6b-a8b8d83b70c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80dbead9-5416-4de1-8c3c-b6267639452a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f37f8f9-0308-4349-a4c5-a684385d498d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a4842e-c548-4d03-8041-6be558e85512",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2b6300-ee01-442f-bb40-90e26d80cc43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bec01f8-e17e-426c-9d0f-59c69f1816ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e0544b-fc4b-4576-93f2-624e17432398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc3b7a8a-d592-42aa-a7eb-19db6b689b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3bdf98e-5e6c-42c8-84b1-90c2e1e14e14",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36c0003-e827-4464-9ecf-662113fddec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e95e0e07-1908-491a-a1ad-ad6193689f1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08b5c6b-9218-4901-95cc-c887a6d8b8f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af908a98-0161-43b1-856b-1b1ed64145fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5837995d-9291-45b4-b9ff-35bf39a7549b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9fca006-1a81-44ca-a0a6-b15b2f0de764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c3d6412-30a2-4199-9abc-31d9569ba9a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0172269e-c536-452c-a1d2-e11a8b03e4ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56652894-f95e-45cc-9373-2d3ae6abc68b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d754403f-a386-4081-bba2-817170eb358c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "091802e3-1239-4c94-a017-628f40e768ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1a8204b-fdf8-4ced-8c7a-1e005b504f76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81161be7-ff42-4e34-8086-57b901e9eb3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba335dc0-6acd-4b9d-9082-ae9aa2afd9ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5d47e6-8c6e-4d44-aa7a-ee74dad975ca",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5e43c3-97e3-4995-9b33-84f8aeedc13d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76993066-7849-42d2-a71d-fe3df49a1fd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34dadd65-b179-4b96-be06-bb51f72b2716",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d5f2b42-06f1-4e32-beb8-8195f76c3478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f827966b-d71c-4968-a264-99d8150b550b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c2132e-330f-431d-8d8d-86759edc67b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6452b69b-91fc-4af3-be3f-e364eb04a6ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3779f8dd-1901-4b71-8be3-1e29b96207ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b09bb99-389e-4315-8c1e-25d31a87e4fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db929fc-cf60-4c56-a6af-a006c709c0eb",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d0ea564-c292-49f9-b46a-712eb8ab805d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b286dc80-db3a-4243-8c46-e821d4a0dd71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00aa09d1-fa3a-439c-9826-2e6322b303ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6dc31f7-f9b5-47b6-aaab-1f31731a15fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b19f20-49c3-4383-b301-e1856b5e3440",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2cea674-262c-4ce1-96ae-c8866115e2f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65bafc20-1bd7-4c63-a3ea-08805a54f200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4b2640-884e-4bd4-be20-1b33dcedbb4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e9e734a-5aa9-4bbb-a6b2-5eeb16fb904f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a04aa9-3309-4731-a490-86f85def8333",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44292014-13d4-4323-95ce-862c23f0f5b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b35fb917-683b-46a8-854d-43a20da56071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dff325f-ac6b-4d0b-b6c0-7e0c78832728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc98d06b-3b29-49eb-ad3e-89b0a08334ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e60a22-3442-4275-9d5d-53e8f90105a0",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cae868d-43b9-4e85-897e-ad7a97338dae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64504493-edea-4cec-a087-326772508493"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b699c5-cb2e-4609-91a0-6cd3f08ee9a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1a87429-9bfa-44d8-bc7b-e8c684971336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b49bce3-a1e1-4aa4-bf63-f25f58abca67",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d4d020-d05d-40ed-ae5c-98524f50773d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86107aff-92e4-4b21-bb1d-3de2e1c2c7cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3abf8d0-1676-4972-a270-2b6ec736df25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0d23e3f-2ed5-4c8c-ae71-d8ee70cd0808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f63723d-5e46-498a-b422-407e2a90f6e0",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "363266b6-905d-44da-a509-d693b43775ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cd92929-d8a8-4b3a-999d-151e9e546551"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6ff57e-8bda-40f5-8dc7-28c10c105ff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c668db4-aeb4-4489-a289-7bfecfedd8df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7dfbdf0-ff18-4263-9f04-80538a397125",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "746cb71a-a331-47ea-a57b-3e30f1b94f77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6dc79ac-85ff-4b29-8711-b6beb1f8bfab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c1eeb5-4346-4955-a464-a43ba853e7b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6e3ea39-0e1b-4b75-bdc1-18f1b92d32e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0676033c-748b-46a7-8a0c-e04cb3057899",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e40b94d-e4a9-4581-b430-67a88bff3461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6710e9f7-6959-43be-96f5-9d9b47a5a34b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bdd75a1-fc9b-454a-972c-87da4fb047e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d0e7d82-0958-4e0a-9933-983d24ee9961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "686771bb-42c4-4745-aa70-9f6cb5664f63",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1bfdbb9-6824-4aae-b697-8531f463d3c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b09ca31-33c5-4e11-bfb9-d6f52566e983"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd57638-6456-4e1e-bba2-b11fd74ff85c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef2b3324-8866-4639-ad78-17a31aaa3891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dad9b04-5d49-43c5-a319-dc2fc80a57f1",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62fb381d-d376-4238-bf31-a9ef682304b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db34d90d-aaa3-49b3-8182-09e8749c3dbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "228c19fd-497f-4ab6-956b-e570cbf7eea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc29ff05-41b3-40e8-87b5-3657bf0a559e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820c3293-4a8e-4164-a156-6f576b1311ee",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f927474-ab67-4628-9e21-225f460342ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d6175a1-983c-48f3-8cda-91d75a36aab4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "193ad64a-567a-46c4-b7d5-b197cfea165f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e947836a-7a79-47e1-a6b7-381e3af53ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "166455dc-43ff-4754-908f-d88dc7b4b7bb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d42a614f-0ba4-445e-83cc-2c2d11548527",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc707399-bc28-4253-901f-571b063a498f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9765459-fc16-4786-87bf-9a5b53e1e9e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80a3a3ce-4b45-486d-a0a0-8538b1cb8a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08277eb8-cdbc-4d6a-ba0b-7c5d3af3e445",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b225e8d0-d7c4-43d3-8231-2ca194a33efb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e6b0b74-3140-498d-b68a-c8894fa80c09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c16e98-42c6-4aad-875d-c1ed7302e5ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6348836f-f148-47c7-ad10-343303a76574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "900f20c1-b893-4596-aff9-921f5d7c46ce",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3622cd1e-025f-4222-90d3-43ba68a9bbd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8ff8f81-8813-400c-b47c-03f449a7231f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1adde1-40a8-4412-9c8b-92cbd91b678d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d18e98af-ffad-4e2b-b919-8207f4ed20c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d150a667-2d1b-424d-9ccf-44c356506cde",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f28788-8d97-47c0-9236-40a90bb3ab29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "480723e5-7b9a-481a-9f71-b1e2cd5acb1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f788e8cb-6e0f-48dc-8e23-41ee09dcbf4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e758f38b-157c-468c-8b25-0027da0e415d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc3b2f5-9a63-43ae-9eae-b01740f26f6a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd53094-bfff-417f-b695-973847f836c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2495f870-de8a-4a81-8624-f0af41ce19c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b9ff0a-cfbb-44a6-b0ff-185c3fde3fe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2344676-b760-4fc5-bdb0-044b691ebc28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a830e4f4-02f1-4ccd-a97a-2506ad55691b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2436ea-d075-406b-9713-56864f5e9a1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed8728fe-f99b-4c1c-ad3a-338e391c7298"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfce30c0-955a-4cdf-9e98-5a611811557d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33214107-909a-4fa4-920d-43ab40b15540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f3b176d-498b-4fa9-b039-c63addceb941",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6164331-1e41-4a8f-ac87-c977fb55552f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e50462e3-e40f-48d0-be55-82ac00161beb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b79781-95db-4c53-80dd-ef484858472e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa8c6785-7237-4f9c-b84e-453b89a788f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1241fb60-b9eb-40ee-a963-e5d25c93007a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "534c6b2f-cb08-4851-935f-72329b6c8241",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eeb90b98-bf7c-4c4e-b6cf-45a94f40ec09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bdd07c4-2e0e-403e-890d-b663903e3566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75301eaa-3df4-42e1-a9da-18cd53f1d746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c4e93d-d317-43bd-9e9c-25aae02ac356",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55878add-f370-45c5-a630-436a4f2d2bcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3f82ed3-7016-45bd-b4ef-d1cc1ea0f922"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75cc5faa-1d8b-4a8e-ad73-34e51afdcf59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93a32cd6-4f3c-48c8-b447-5c089e24ce62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b61fc7e9-1079-48fc-80e8-31c8f6f55eb8",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb07f212-0971-4100-a3a9-35396c5070a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7bcdea9-8fb5-40c0-8855-fde6d669dd52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b904f1d-3803-4102-a577-930c935e03d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0979f6a3-c725-4f82-8a27-c9ffcf4afb75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83964b2c-cd3b-46ff-a9be-7a8009fc2d19",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1542ad90-143e-481f-9297-c2bce46918c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5df7881-3042-4337-b50b-08d74ab7f5f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6356cdb1-7a7f-4b67-bc67-7083159d7fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4b7bd43-754c-4626-b324-adc67d4ce02f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39444096-17ce-4801-accb-2dc0450d8061",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bcabc2e-228b-48e5-a60e-dc618586cd3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67d7944e-f854-47e5-b86d-2d9e64809bff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88488526-ce89-473d-8bf0-51c00216edd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1b64970-5937-49dd-913c-dee0fff5424c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "714f5f2d-9311-49ac-acdc-1b03bc81555d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "994c868b-7008-41ae-8911-cece59656f68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a51f4b2a-748d-4090-8f18-8fd64bf1cdd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc2794f-a5ac-4436-8655-db75daba5e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b820a0e-6c0a-44ec-a6b5-9762fa7c3673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a388e8e5-d24a-4236-9ac2-e1b09054a979",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38efc15b-1666-43e9-941b-eda1f5fc3a21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e23eae74-493f-40a6-b545-586fac67eded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b371116a-d2b7-4a13-81b0-0bb2231c0afc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9ab7e8f-d53c-4aa5-a906-674af7ca05ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee755d6-ed12-4876-82f2-775e0f446291",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0c71c5-4ab4-4f43-9ce2-f4d56cda20b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16f1b5c1-a194-4890-9434-1484483b7248"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd6bef5-43cd-49c9-bef4-586a63f530e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78ab344d-4897-4fb2-a843-f3cb3c6febba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01753b64-298e-4de5-9bf7-0b5c0b19445b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e671eca0-fe58-4f87-b36c-c71eebd081ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "173e2aab-856e-4be3-8b3b-a388602ddc48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d3e3b6-63af-41d1-9e19-90c8a855924e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f814c90-b206-41f4-a0bf-bd8a21c2d9d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e380efe2-4f56-41ff-a996-69c363db52c0",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d47c88-49a7-476b-ab2e-079219111229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2aa085d-2105-48a5-bcad-28eeec794e9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4a27df-da6e-4cd7-a160-3603dccc54da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f21850bc-f202-4bc8-82f2-f8faa13b6471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdcd5086-cc1b-4b34-bb17-20fc7b66aa0d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25780762-f6ca-42e9-8e5f-2904c48b6b01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c99ad640-df31-4501-952e-c59417152107"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "130eede8-a15f-4317-baee-cb9ad39d9094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2e6e629-5146-49e3-b770-668a2ea96593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d32a691c-1ab5-45fb-82bc-ea1f7ea76ed9",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9edb3601-e557-4853-adf1-950819edbb8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f74e59a7-6bd5-4761-9773-cd396b4bb1ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "311530bf-6777-44de-9c68-de6e2cc6997b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd62ddee-9d29-4ef9-8e48-3ae9191c577e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "304d2bf5-9eca-43b3-b242-d7cf97b6c0ee",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425673d4-f261-4704-8eb6-bc2aeb865447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44a2dedd-ca02-469d-bc64-e21112c4957e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72f3e43-3bea-48b4-89f4-704b59881d7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86139c91-e3a3-44c5-8733-8036f84ed46d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35c6e22-dd7a-4359-869b-b8a8b28a5676",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b71738b-680c-49f4-9f81-3480e66fc491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45d7e443-3205-46b8-a8dc-b58e4999ed00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bea9d2f-209a-451e-94f4-94edab8c97ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "644ea404-2c65-40c9-a11e-da19477c6619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a68e93-9fc0-4081-8c92-4cbd4b222378",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "652d7277-ec1c-4444-8872-7ae7bb3487b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "991f130b-33a5-48ac-a593-d524239e578f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4357a55-512e-4981-8dbc-25a922e21686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18471430-0dc3-40d6-85c3-03c59d9091d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d99449-37b4-4b30-984a-72b7b36e33f0",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd4e82e-ec51-4ddb-a873-0c5204202a78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c86d4c2c-e244-4ea7-8d46-504fa5ff390d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "976fe9bf-a168-4c4d-bc1e-547ebba11a60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fe520ff-dc6a-4add-b565-4f894b515706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0822eb59-5db3-45ca-85f1-a3af255013db",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92ab4b0-18df-4614-b614-74f450e80b54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f62f7ad-94db-4152-8aaa-c74ba289075e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a7a5841-6beb-489d-ac49-f27ab6d5bb36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d10303-a912-480c-84b2-a32de29e2d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa6ab96-5c7c-45e6-b7c2-4eb765a43aa5",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e803b7b9-c7fc-41ed-b882-cb8b23ad10a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11268c1f-ac25-4663-ae2e-095fba65d499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "459ea333-02e8-43a6-b09c-12406d88eaf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42a8b7fa-b8cf-43ab-ba5d-d49bdc923aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bfabb3a-ec09-4f22-95c8-171861228a58",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5765f81f-f3c5-41cb-9010-3c606c61d45d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af17a820-8dc7-4dd6-bc38-5a7d64cbcedd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7e18ab-49df-4c07-b347-97565cec7c2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b99a2090-b8e0-4237-a797-27087b540c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39da94d7-1419-46fb-affe-dde748880715",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28769be3-5417-4587-84b4-65d5f2cfe4c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf618a90-f351-4039-b406-cace6fa46fe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "277229ff-d2dd-472f-a3f1-058dbf1d92cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcfa9783-b7b2-439f-bc41-013870f55e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3114ac6-54e2-473b-ad09-dd4490bf4823",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2565679-1e24-4001-8c3e-4cf8af47adec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "594d1ef4-ec04-42d2-881c-78eecb689679"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b175b5c3-350c-451c-82be-8ba050d08d32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f11ce2a-5eff-4d6f-966d-1f8f43f87f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac8916aa-2a8b-4b2c-a6a3-6b3b2f95e360",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4fbff2-3554-46da-b589-004c978ace91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9e8c96e-d463-40f6-bc3d-a25ad8ee39d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b258f1fb-ad3e-4704-b2ed-883c71cb5ce8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25763b79-7460-4f52-88c9-91a9e391fb8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "644de45c-aeb0-49d0-941c-86e810749746",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ac0e44-55ed-4c00-a9aa-a85a8133700a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8cc65fb-6532-4169-81b9-a0c32df26375"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb8b799-94ff-4174-8937-d848462e2fca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a73aeb9-d3e3-48a1-9142-397ded3dc690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b95e701-c48c-4a8c-8432-4e2b0af23d14",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b72450f-84c1-43ff-b605-b1f686002ba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae0b3f7f-6271-4fdb-b1e6-bd9b0cab50ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e9c546e-4135-492e-ab55-b2fa073eefaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30bc47c2-2cbb-4d8e-88a7-00f5be622972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2347e719-25a3-4d16-99e7-8420cc0c07fd",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e54f164-58fa-499a-8c62-47e1d6384bfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abe9db98-53cf-4818-8183-03b74e987750"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a33abe-3c50-4a81-a580-87542ada51b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "144b9c27-08c7-446c-8c39-9badce7759dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b257b63-12f5-4fe7-a317-3b9608677ced",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced36c1e-342f-4a1a-8525-b5e1c8ac3137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fec8fcdc-c493-4681-abda-df1ce8572d03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8c61f7-b0d3-44e6-9df5-8e3567f35af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c7b2914-d047-42dc-b54c-c061a3a219e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c403d4d8-9963-4745-9115-cc3b9e9a75bb",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac4a393-1d51-4d21-b767-c2de3ed50753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a62bf32-153c-47b8-a61e-915bdff33d59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d8a50a5-a9c4-489f-a4db-4521733271dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1443a0e-140d-4baa-9d2d-0111986407fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c548596-c57b-4190-aaaa-87f0b0a85bcb",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9656329-5633-4086-bc91-4418d90bc416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f63e4e2-9359-4657-9f4c-93722aa3954a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da1f1b82-6617-42ea-9b5e-c0f7a3d5cb7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52db6cf6-14c0-4dac-8a6e-7927c26626ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4286cdb6-521e-4f92-b53f-746a0d77f484",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b66cce-c6a7-4e3b-b5c1-7048e1825914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "900c85a4-8d59-4b48-8f34-cf4280e295dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc252c9-8690-4f32-825e-304a150849e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16f1defa-4432-4ccc-b423-e27831b96fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d954fccb-3860-4644-9ac7-d59c9c814de5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbcefcd3-5764-498c-8a9b-bc3eecf9ce20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e071fa4b-acc5-4313-b9d3-4b0ad5cc43b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9007de6-f674-41f1-8997-c8ec9d9c2d9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa6667f2-9fc1-452c-9f0f-39e46dc6f31d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e783ad2-52c5-4ee2-84e5-2103c0231f8f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42392f19-c2de-45b6-834c-33e50b74f44c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10811bec-5952-408a-89bf-8eba0b1668eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4547edea-978e-452b-95cc-b3105e14c58f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00f7b2fd-468c-4b75-8b5c-d02d20f3808f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf708f1-e9a0-4526-86c7-9ecbb17cb5b2",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac19133-3be3-4399-b8da-e06b3922b049",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16e0a8ce-564f-46ed-a7ab-82701cf381ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4daf3d-4d91-486a-bb3a-90a89cb36bda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06bb9e7f-5657-4faf-86b7-9d7f160806a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11efdd38-1aa6-4392-87ca-c0cc80a961bb",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04ed947-a53e-48b4-afe6-ed9adc04777b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a7f5a96-3808-4722-82da-17f79ea77f2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0f28ba-4af6-4f76-96fa-8ac01396d19b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3abca9b-fd5b-4cd3-ba7d-4debaa8367d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "234b1418-38f6-45ab-9b8e-ebb73e038c13",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca356ea6-dbd0-4453-b333-7a88e04b1eba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cede670-5856-4d73-a896-e074686650b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e0fc54-2cea-4902-a2d9-8844322d24db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33f722fe-d9ec-4190-8466-62d0c54b46f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e388902c-ab5f-4322-94fd-019582046d35",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae8a325-02b1-4903-8514-3f901539cdb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67df32ad-aa51-4e9f-9544-75cb0e5aeca7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26a4e7f9-5094-4c30-8b99-a7a5bd6f4243",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc9239fd-741c-4de3-a4fd-5a12e4e9309b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f04d731-60f1-4ad6-a2ed-f1db8cce8ffc",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d3c008-aedb-4918-a0ff-e30fd1f46d86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e39e315-95e0-4d17-a351-e5a306c43def"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1764b273-3971-4381-b248-edeafd2afabf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5870e0b-6af3-4450-b6c6-80a92e7523be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add98909-bae4-40a6-a17b-b6b5c3ad5c77",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345f16d8-bb9c-4893-9776-986fd8a3082f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2bb0ca2-63a4-4465-a3e3-ce2594f180a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e05da4-e257-401b-9d58-6aa17711dede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2255f321-3816-4fee-96da-12b0b096dcb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "103e54e2-139f-4ec1-a16d-f444f21918c4",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e54a0f-8d50-4b32-9b16-a07518d99d03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7eca1dc2-78e8-4564-a5a5-8b3146240f18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4c205e-091a-4d07-bab7-3a858e76c140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aacd828d-7dae-4c1a-928a-ee04a41b0446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7fd4f5-e827-4044-899d-2ee843cc3892",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0c591f-2026-4e8f-aae4-c05026dfd146",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "449db11d-2413-4ee9-9d25-852dfde12ae8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad9b3e89-325d-48ab-8cd1-03901d4734c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "610bc483-b8d8-4059-841c-daeabf58a935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab27678-5881-46a8-afbe-91288f5d3a8f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533329d0-9963-4aa3-8369-9bc34f69bd49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9f27260-6612-44d4-a987-2f8cb7647fa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "436bd79c-a608-4478-a762-f9353ff8c249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "715fd1b1-2e6a-4f38-9fbc-38ac13907d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ddc840b-bc68-47ce-aefb-d8897165f44b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81293e11-921d-4552-8dac-3ee058464d24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6610fdc-dd67-426a-a683-e46617029524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0a7b0d-265b-4184-8b1a-a2ffdcaf56ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03ae1260-6558-4e81-9a5e-2bbb77f13476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd1a7583-5ef5-4d38-8a7f-a262cbf1e005",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620db3db-3265-47c7-a4be-99b610463efd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc3b1531-59ad-4a27-8229-4318010dfc1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1685a52-8892-4716-b8e4-b12a90aad9a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aadbfeb-fac8-4590-a392-bf7ab1b26eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d295d470-464e-4a81-9caa-b8a5d926bbff",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4252442-4f20-4a13-a920-105335e868d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddc49471-ce38-459b-b7bb-9eb3e0bc774d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce2d8ff7-35c3-471a-acb5-ddb7b5bcb426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62e01ec4-1063-43a1-80a1-ccc35c466c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d24d115-7f31-4ae7-b6e6-4519a50a2de2",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b38709-1bc8-4ade-af22-ea848c88ff5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "881a546b-0b94-47ff-8536-523b4d67f657"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "092fbe6c-551f-4e9b-8f3f-5cb75aec60f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95966e0e-0db1-4450-b7de-f4f0ce406982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e7c856-bbc5-474a-b13c-ce21dcad7fe8",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fefcedbe-475c-4d59-b22f-50980af333ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6338f73e-dcc2-43ee-b661-bfae9730bae8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b36453-ed35-49dc-9be8-8a8296e53b98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fa72005-cf5b-4def-99ae-e95cb5cd8547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42d3683-3ab5-46e9-b617-aaa033b99d79",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b72f379-cf8b-4ecc-b22c-8d50a724a5d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a6ee3fe-f154-4543-9cee-e66f866578fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a9076c-7337-422e-981d-035cc7199ce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5196d36-7083-402d-9059-40ec79e9854e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93abc82-7f73-4551-8b4e-7550fce9bce8",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "361ab3b5-c596-422f-b0cd-27892bd7849d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06b35600-2aca-4f1a-9252-cd565e46e2e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27536666-e694-4965-91b8-acc0a42ad2eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beadb0a1-fd7e-4a4f-b948-009dfee34221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a2489cb-b340-4a7e-98a4-3bd194d9e722",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1ee715-2bd6-487f-90bd-5f1fe91b6a9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a73d89d5-eb11-4f34-828a-c9816bf75a4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29798f66-13e5-46c6-ab72-7b03ee06d54c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dac33436-0f12-420b-ae18-5cd55bbac416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2291e308-4294-4bbc-bdb7-845084d439fe",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e302aab-23a1-4cdf-9be7-5d2d92bfa065",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "838f6dc1-6ec9-4eed-a7d6-296b41846d31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "079d6b27-58fc-4b8e-850a-fdca521a511e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d3e43f1-a2ab-492d-a944-1a1c06aa8571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230c2a91-e629-4a3c-8d27-4415d467b409",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b4d805-3ae1-49d9-8207-725c498d26f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3597a438-2b2b-4b53-a40c-201be5b6a79a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f62f9c9-b6f5-41f8-8cb4-d77d7272f9af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a2b0903-a180-4731-a450-9aa790ef43ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d81dd9-0868-499b-9c26-ff8c75b7c866",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab8d1e92-a911-40ab-a5ac-60fa50654b15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9a9356b-2d37-4bf0-bb51-96773605a055"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "175e02ff-81cf-4996-a433-730ead13ecb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b99ece4-e820-40f9-8d2b-e49a458646e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16cc0dd3-7426-4abe-8eeb-9cf4b7f1b68a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b70a0ec0-0354-46d5-bff6-d4c2aac88d53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5a917fc-f6a8-4858-af66-709186fc012a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2529cfd8-79c5-4bc7-8560-c63f523c5a72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90ff4861-90f4-4cb1-ab42-b0d179348765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdabc2e4-506f-4b97-8853-c61abc5649bd",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d037e754-88db-483f-950b-26e7f840a94d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68c3152e-f4fa-488d-9bcd-e942b6a824e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eddcba96-8f14-4e49-9451-4abeb4307a8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "927dd480-43f7-4db7-b80a-f91c1f7165d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ce9d39-dd0b-4bca-9368-42e1ce6b8158",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0202542-63aa-4b26-aeab-c4eb88c18073",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a3c2def-daec-42d3-9394-0311bc8bbf48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b28e26-8869-4859-af9c-df1782500d04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ee1fb73-725e-49ae-8a00-c0abcff0d0b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2805a11c-cd5c-41e4-b0ee-be16ba1bed30",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044a8cf9-46fc-4f85-805d-d4cf2ddc51d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaee7496-189b-42a0-9fc5-e030f557f765"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a95ef08-d183-4a54-9438-d5e53cfb5f18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4166f391-f7fe-408f-88bd-3499dcd3c6e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1340e01-2016-4b1a-b209-e0dfd8505fa7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0507209-3c84-440c-ac4f-b1134ad506c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9eda8627-4427-4b23-a3cb-13fee0c64aa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7c9188-339e-4f56-b59b-befc775071a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f40b5a59-b128-4d70-b475-e5a02e737ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e171f2f8-0b13-4fce-8632-a6311fb0a26a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc08bf8d-803c-420c-b842-e65ee8faff5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f0f4e2b-fef2-4ee6-bd3c-08aa8151a3d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ccc9f80-8d01-4dcc-938f-8e84f8730d7c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae2162db-c7b5-43cf-a9b1-95ffb92d4533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1a8e20-8608-44e5-a9a7-a2f502c17c13",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0783c2bb-17ea-4962-9629-5043e5b99336",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49d5c5a0-368a-470b-85b5-cb81929a890e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c7ce2a1-a3da-43f6-a37c-e532e5773733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91029e3d-b073-4442-854a-4095922f4add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f3ce87-fa16-43b4-8c87-b02813a2153d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07053655-9a70-461a-89e2-bc0bbf8df68e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "305c8683-cc9d-46ea-9c24-a39d5f34fa0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac84196-871b-45fc-9d02-c53f782e8c70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e011a8d3-708a-4041-a592-9f8564e47415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd711ea-5ec4-43f0-8474-2fa68573836a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20d960b-6935-46a1-b79e-0403d9f46992",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a2e3df2-d1b5-40de-9543-9a121186ea18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98fe0c45-d44c-4094-ac5d-cc2cdb403a7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d809fcee-6ac8-4715-ae35-0d8264b9b12c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "badfce96-ee9f-4ad1-8649-6a7de9bcec4b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba721478-efff-4a43-8617-12eff98d08de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bac75b37-7094-495a-9525-c29ac2d6d171"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e455a36c-a2bb-4647-bb33-8e768d5d018a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d3dbf43-2d94-4b3d-b9ea-623d7085e8e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee957129-68d9-488c-aabc-454258c7e12e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa7c5e3-07ff-4ac6-8f74-d1ad3bb3b760",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d936762-0f62-4b50-aba1-b5da0fcd597f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b33d55f-f6a8-40e1-afb9-a94075f25727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11d61142-8385-4fdd-9901-b0ed5790e3c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f94cbd02-a303-477a-8d16-3ddf11c003c3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f439a974-e923-4c40-9ff5-9f2aca946647",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "715e1521-ab62-4960-a4d5-0f0175a50e23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3fed57d-1d06-4069-97fe-cc89c8505afe",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d66176f7-db31-440e-9b59-c8d3e6b1eed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ad49c7-6a60-47e7-a9a9-9a7498e1dc5f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "890a9e79-6f4e-417b-9ce6-031a14bac778",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da8e5a40-5153-46c2-97c8-79bf8d456e07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2fc8aee-9ff9-457e-b898-0d34793800ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98a201dc-3dd4-4359-bc87-3b73266be640"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "996d626f-7884-4591-bc44-5aa8fdb390dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05f13f11-64f1-4a31-8895-739e870a55a9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e11770be-12b8-482c-b51d-9c33a092f28d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "be07dabc-1b49-4251-b8ce-b902c04703fb"
                    }
                  }
                ]
              },
              {
                "id": "efb96458-acf2-4ebd-8a96-e0b32cf8005d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ada86a75-d652-4c32-91bd-02220f6d9068",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b3972e-bb8e-470d-8ec3-744247f6eb18",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6edc937a-2c22-46f9-a733-9a618bb0e030"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfed8a12-c0bf-45ac-9c1f-b68ee0235002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "16e50d0f-f3fb-46e9-8c90-25a53f91ce98"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6149ff7-ba82-44fa-9eb6-703c10af8e7d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "156cf69e-1d33-4169-a5f9-cfb0831d99f0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d7b94a6-ac42-4624-b5c7-b55161914032",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d3caf83-3da3-4b1c-81da-0dc6e5ad1b23"
                    }
                  }
                ]
              },
              {
                "id": "713b0e32-1c68-420c-80ad-82e46d4729c8",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "75bb52f5-d5ae-40dc-ac65-f31d762cbb45",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c6f08af-ff83-4579-bb55-6f9ce4b4357d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f0521ff8-a3b6-4860-bc24-581e02b7a094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc7da86-fe30-4123-8ee8-3f85d27d5adb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ba806ec-19f2-401d-947b-116e85b72f9f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "39729dd8-9a00-416f-8fa4-e15ea5ca92b6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ad5bd7ab-ca18-4f40-998c-8a4ad5f8230b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "48d8bd86-5761-4c5a-97bd-4dfb29010108",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b6fee339-ebd9-4e7b-a6cc-739f7f990de4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19763522-4faf-4f81-bf26-5b39458de907",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "12e11443-86d5-43f8-b8d7-e4a799aa7b3d"
                    }
                  }
                ]
              },
              {
                "id": "2f215c3e-d0eb-457e-b902-73a9c7a2b68f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "673e72f9-e30e-43cf-85ce-66af71ef0096",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "08a42d0d-c525-40f7-a065-3301aa82f145"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15a54228-ebcf-4579-aa73-9591f11ac433",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "903a6e3c-8fe3-493e-944a-8fc476bd0a1e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee8c6b80-64cb-4f45-8f46-1c1624690b2c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "07aceb4f-4526-4979-8260-85ae852d82e2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d19c2e9-db95-471b-82d3-4a2641037767",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "96971147-540c-4b4a-b1dd-8f8911bc3e0d"
            }
          }
        ]
      },
      {
        "id": "aaa70242-6b82-445d-9ad3-b9029eed2cce",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "62482fa5-d19e-477d-a85c-88777b9ed3fe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b09e6492-db77-42d2-a935-077093108d7d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5e6e8867-866e-42a1-a374-e7753966034d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c574a091-51ce-4a8a-a34c-b3feee15b4c4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "76e8c8db-fdba-442d-a072-1c74941badd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87729387-3786-4013-b7ac-91a335946f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78227504-efc7-4c84-b517-8148a96bf8a6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "593ca8e8-f6e7-4d04-9749-bac12955f145",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e0e0b42-7bb7-4412-9e30-a0751ee1e201"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e0b7593-1f83-4097-b783-c33aae21d633",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1953ec8a-03bb-427d-9f2a-9f61342fe908"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2c861e21-7041-491c-9391-d2021a3b89e7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "62d05fc4-cf4d-4974-8dd4-3560eb590fec"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a122a6a2-9fe8-4407-9f18-0207a22279ed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7da9c414-488f-4b08-930a-82fcf14fae0f"
            }
          }
        ]
      },
      {
        "id": "41388183-ad4c-4ec1-9735-84d59466eb75",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "3ea565aa-7f63-4b6d-82d9-88fb8f3ff0d3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5a36b585-52f5-414d-aaa1-049944b816f7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c78ead35-cf33-40eb-8a15-5f7f016dfb39",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4636d0c8-7f08-4f03-9e76-a44b9889fd16",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a03b9bcf-271f-4df8-a763-532d0441ea84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6242cdf1-ca20-40f0-96e7-719c2b1ada0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cbfe1bd0-88eb-487a-b7cc-3852a10bab45"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb22943f-1227-41f0-bb68-6eb3134265bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f06d5db-94eb-49b5-8ea4-5763981bcf24"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3629e296-32dd-4855-9449-ad20680305f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5d587c6-41b0-4fae-816b-943f021e1e35"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7f251163-6f17-447c-9510-242e5db3a21e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8ccfe5ec-ba7d-4b40-bbc1-06227b36a3ff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "269ba9a7-9e7f-4c6b-af98-35667365322d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2223af8c-39f0-4f39-9135-85364a608eb0"
            }
          }
        ]
      },
      {
        "id": "e4e07f47-5a9e-46db-8aa8-fafbd1bedea0",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "470e24dc-f9bf-4b91-bcd9-412f7ab746b4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4520ce5d-d7bb-4f0e-bd27-d0016b5dbf99",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "13d6402d-5dc4-4b98-9cb7-e91f76868846",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24ed4e0-29c6-4be1-9a7a-f25b026764dd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba5edfff-eab3-439a-9e25-255d0420c739"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da1c4c2-6573-4650-82e0-88921f4c1a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21cdfc22-2f43-4112-b895-6724c54fc405"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b58c9132-5626-44a7-98b4-bfaea5871b15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9a4e7e4-91aa-4fdd-b237-7faa3b4fe3af"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c20f9b58-6f54-4b5c-9d0e-c841ed641635",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4f35149-023c-4916-a6bd-f6a289229edf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6d9078b3-9987-4cf2-b277-3aa0edd4729c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "67c51398-8049-4874-9f78-b8a15950d49a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b11941d7-aae1-4629-b168-551f2fc60076",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ceed057d-594b-4789-b49d-2139b5c9a871"
            }
          }
        ]
      },
      {
        "id": "cd694e21-1ce8-4661-b0c5-a43f3bff4d8b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ca59fe07-f93c-4e7b-a3be-8e270bc44d81",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c9fd5c96-24c0-426b-8c33-654944c298b4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "9584c917-0eea-4f3e-9cf4-009a17a14610",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4181b5a8-9b7d-4f27-a534-4fd4137a4d18",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d3d6455-bdbb-4577-9b3e-ec3a72d41b08",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 405.7508771929825,
      "responseMin": 7,
      "responseMax": 11787,
      "responseSd": 1215.9482262066163,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1697675624103,
      "completed": 1697675754861
    },
    "executions": [
      {
        "id": "65c4e77c-673a-461f-9445-cd40c697348d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "28b7d12f-0f54-4b96-927e-efee10a81d12",
          "httpRequestId": "2e062a82-367e-49ca-9624-a5d9d909d0f1"
        },
        "item": {
          "id": "65c4e77c-673a-461f-9445-cd40c697348d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "14b781fd-451b-4917-8cd9-2fc336e6dd77",
          "status": "OK",
          "code": 200,
          "responseTime": 73,
          "responseSize": 0
        }
      },
      {
        "id": "4110be05-8f94-4041-8853-1a963c094718",
        "cursor": {
          "ref": "74136abc-95f6-476e-818b-931af0775a3e",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "14196961-2385-49ce-944c-4ed083788c21"
        },
        "item": {
          "id": "4110be05-8f94-4041-8853-1a963c094718",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "cf4d1b2a-6aa6-4ec0-955a-188668dfd1a9",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "7f7e1141-9b0d-4b2d-97e0-5ea0ecca25ea",
        "cursor": {
          "ref": "24da647e-5e78-461c-8b03-ab68ca58b355",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7bff97c2-b1f2-477c-82c9-da413181bc5f"
        },
        "item": {
          "id": "7f7e1141-9b0d-4b2d-97e0-5ea0ecca25ea",
          "name": "did_json"
        },
        "response": {
          "id": "4bd23265-dec6-4b15-b9ed-5e22ad26810c",
          "status": "OK",
          "code": 200,
          "responseTime": 1622,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c15315-db80-47be-97fb-3dcfe1378496",
        "cursor": {
          "ref": "d58b8c32-de56-456f-85e3-e68173a5531f",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e22200d2-91f4-49df-9f37-167412b68b48"
        },
        "item": {
          "id": "84c15315-db80-47be-97fb-3dcfe1378496",
          "name": "did:invalid"
        },
        "response": {
          "id": "3fdaea6f-273c-4e63-a460-8fe174a22747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c15315-db80-47be-97fb-3dcfe1378496",
        "cursor": {
          "ref": "d58b8c32-de56-456f-85e3-e68173a5531f",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e22200d2-91f4-49df-9f37-167412b68b48"
        },
        "item": {
          "id": "84c15315-db80-47be-97fb-3dcfe1378496",
          "name": "did:invalid"
        },
        "response": {
          "id": "3fdaea6f-273c-4e63-a460-8fe174a22747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4c5343-b6ca-4462-892f-d8adb5b2f60c",
        "cursor": {
          "ref": "99cce000-e20d-4aaf-bc08-c6c2c08c492b",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d611f122-fd5d-44ad-b584-ae84b57fe1c4"
        },
        "item": {
          "id": "0b4c5343-b6ca-4462-892f-d8adb5b2f60c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4b0085b1-cf68-41b0-a3f9-7fe7e58b3efa",
          "status": "Not Found",
          "code": 404,
          "responseTime": 460,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5048c613-6279-4ce2-b1b0-f6bcdbf6a2c9",
        "cursor": {
          "ref": "04048d9a-fc30-49e7-ba40-167b5357fe33",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "82e89403-cb4f-4301-9f98-6edddd4baf7f"
        },
        "item": {
          "id": "5048c613-6279-4ce2-b1b0-f6bcdbf6a2c9",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "68060940-38c5-417e-8528-d90149159b64",
          "status": "Not Found",
          "code": 404,
          "responseTime": 320,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74edb86f-40aa-4728-ad6f-5a4cfe81681b",
        "cursor": {
          "ref": "480a966a-7a98-4fd2-b7c3-5ae9fc0aa087",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "056d1db7-dd0a-4784-8741-f4e3de1c809e"
        },
        "item": {
          "id": "74edb86f-40aa-4728-ad6f-5a4cfe81681b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "0ab1c905-e4be-4aa6-9ff2-ed64239a4ac8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 81,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c7ebd2-7f72-4544-984e-30f6870c0b10",
        "cursor": {
          "ref": "1630554a-4286-4245-8379-140d5037217d",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9f008705-9216-4b3e-9dbb-9c74611f3a16"
        },
        "item": {
          "id": "a9c7ebd2-7f72-4544-984e-30f6870c0b10",
          "name": "identifiers"
        },
        "response": {
          "id": "0f4e9ba4-ee0b-4557-9f63-fe525ca80747",
          "status": "OK",
          "code": 200,
          "responseTime": 1461,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "071dfa0a-59d4-46ab-974a-631de72badda",
        "cursor": {
          "ref": "da5f2cb1-fb2a-4f7f-9ed5-a02253575511",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1452fec7-e94b-4da5-88f2-cd20ff967b95"
        },
        "item": {
          "id": "071dfa0a-59d4-46ab-974a-631de72badda",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1421c92f-e3dd-4991-836a-f94c93afc9f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076f1255-607d-4067-93cc-33e96e4b0aa8",
        "cursor": {
          "ref": "825fca81-58a6-41e5-a97f-9b11e2950756",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b23ea563-ff14-45bc-96ad-e1e963ec0122"
        },
        "item": {
          "id": "076f1255-607d-4067-93cc-33e96e4b0aa8",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "180560a8-c680-4fa4-84da-7732de551ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc753ea2-5717-4155-994c-598e09968a1d",
        "cursor": {
          "ref": "c8d4e5ff-db74-4bb5-85dc-d316720abe77",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c9085c91-eaa4-45c5-9668-e371bfefa0e6"
        },
        "item": {
          "id": "cc753ea2-5717-4155-994c-598e09968a1d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "87ac6215-dc75-4532-8672-ba10c01ec8a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61598670-086a-44a2-b688-fa52de78da02",
        "cursor": {
          "ref": "b248c1c3-2291-4ebb-97df-a50509710502",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5aad707b-8fe9-43ae-90e5-1004b244bedb"
        },
        "item": {
          "id": "61598670-086a-44a2-b688-fa52de78da02",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "6f705b42-1c26-4895-bf2c-a42607b63953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbcd4c3-24e3-470a-85e7-e81156cacf4c",
        "cursor": {
          "ref": "3c70a2f5-2faf-4b49-84ba-e951c67dbe8d",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9fe41008-0535-4c08-bdc3-c04a09a39b22"
        },
        "item": {
          "id": "2bbcd4c3-24e3-470a-85e7-e81156cacf4c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "69df1764-9879-4e6d-b9ef-d0f1d52245b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1df97eb-82b1-4843-8339-6b15283d51c9",
        "cursor": {
          "ref": "d0808257-ee8d-4389-a74e-ae51c8931193",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f26ec052-1ee2-479a-93d5-afe041943502"
        },
        "item": {
          "id": "c1df97eb-82b1-4843-8339-6b15283d51c9",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "13582875-b7ec-4d35-8113-293d82913863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5deab8-66a8-4bbb-af1a-be6827319485",
        "cursor": {
          "ref": "1d86124b-c304-4346-baf2-dd087e11fffc",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0dea7f7c-97d2-4493-805d-8264ca116fb5"
        },
        "item": {
          "id": "af5deab8-66a8-4bbb-af1a-be6827319485",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "276050e0-376b-4ac6-8cdf-9625f0b50c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71305610-e160-4a78-8f74-dc9e32921d5e",
        "cursor": {
          "ref": "b14b7031-51c2-4eb0-b915-6cf1e4a3720e",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "fc1867ea-ab44-47e1-9814-761e9f8e76ba"
        },
        "item": {
          "id": "71305610-e160-4a78-8f74-dc9e32921d5e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "4ce85f38-5954-4f34-9eab-58dd2483faa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7182ea6-daeb-4afc-99cc-be391d0def02",
        "cursor": {
          "ref": "5a0282f6-00b0-4001-b91c-42206fbf743b",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "17d526d6-e523-475b-b201-fce2733f7aed"
        },
        "item": {
          "id": "c7182ea6-daeb-4afc-99cc-be391d0def02",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "06d32ad1-c789-4554-9655-7add30580574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a46ae61-32ad-4bba-ae28-b1e5c181633e",
        "cursor": {
          "ref": "0a01c522-b6a5-4cce-b811-f97bffda5c21",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "215c0dc8-d764-4aa0-a44c-f41a2ec6151d"
        },
        "item": {
          "id": "8a46ae61-32ad-4bba-ae28-b1e5c181633e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b715f741-97b2-405d-a625-f89f3978f9ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cecc71f-3a88-4be4-882a-a19c6aacc82c",
        "cursor": {
          "ref": "143910c5-0453-4ede-8b66-ff6e6fa06617",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f7cd7a7c-0751-48ee-ac5e-1afafe1daf59"
        },
        "item": {
          "id": "2cecc71f-3a88-4be4-882a-a19c6aacc82c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "17ada235-6d44-4e0d-a79c-06480d4864df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f43feab-76b7-4bb0-83cd-41ea4a0d725d",
        "cursor": {
          "ref": "832e6726-3c78-41af-b186-2ee8184d8968",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "757bdf2f-c306-408b-be8a-95922e9e1611"
        },
        "item": {
          "id": "8f43feab-76b7-4bb0-83cd-41ea4a0d725d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "06c74eb8-effe-40b2-b810-16808c8a9be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929fec1c-faae-4139-bf53-4b86f7f0d108",
        "cursor": {
          "ref": "37c2185c-6227-434b-87ef-c0679ccc1b2f",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5ab8c56f-ae61-4e3b-8f63-7c1f911b0ff4"
        },
        "item": {
          "id": "929fec1c-faae-4139-bf53-4b86f7f0d108",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f85c222b-960c-4b02-afcc-0579e6b15593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5dfcd48-031c-4669-a985-bf8666c8b5f9",
        "cursor": {
          "ref": "526a4387-dcb1-4878-94d6-4f756f7608ea",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "28bc4d3e-b4fd-4af4-ab40-3627db436ef3"
        },
        "item": {
          "id": "b5dfcd48-031c-4669-a985-bf8666c8b5f9",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5d1788bb-f2ba-44a5-a083-3e0d8e3e9fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302c5d4f-0dc5-4bc6-926e-dad17a888a40",
        "cursor": {
          "ref": "f31a541d-aa2a-4660-bbe8-1e8f3ea8ccbb",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e3adacda-3022-4f9b-81b0-a53494ee0db0"
        },
        "item": {
          "id": "302c5d4f-0dc5-4bc6-926e-dad17a888a40",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c16ce5e4-3af8-4dda-8e9b-d15338fa8ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79db1b7b-2065-48e9-9288-6f3069567f65",
        "cursor": {
          "ref": "2cbb03fc-5f21-42b1-b032-d7d7ab7670cb",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "96380ac6-f3d9-40fa-8b4a-adcd388c3406"
        },
        "item": {
          "id": "79db1b7b-2065-48e9-9288-6f3069567f65",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "087bea5d-a654-4dd2-91ed-0f908c624ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba624ee-2a2a-4516-8ff1-084170646d07",
        "cursor": {
          "ref": "b031e88f-53df-40b5-849e-95668d0acc9f",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7f2d79d3-54ca-4b8e-aada-30f57954a28e"
        },
        "item": {
          "id": "4ba624ee-2a2a-4516-8ff1-084170646d07",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "55280d31-2dda-4078-914f-6957513d8b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff4eb65-b40d-47ac-ae3a-75962596fe4c",
        "cursor": {
          "ref": "cc7ebaa4-41e4-4ac1-be28-0200a36b2c4d",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "8125af88-39d7-47b1-b48b-4818f6814f96"
        },
        "item": {
          "id": "6ff4eb65-b40d-47ac-ae3a-75962596fe4c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8ec4b542-bf41-47ff-888b-52ce9b5c8c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb5a332-5be0-4920-b6f1-bb672602dc22",
        "cursor": {
          "ref": "acc75a6a-2c32-41f7-a09c-f931d618333d",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "02cae1df-b89b-4f3a-858d-4ccb803feeef"
        },
        "item": {
          "id": "2fb5a332-5be0-4920-b6f1-bb672602dc22",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e80764ba-6215-44bc-a075-c8b4df029c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58144d89-d87f-47a1-8df0-f9a3f48ee53a",
        "cursor": {
          "ref": "5784f5e5-a0e9-4aef-98e6-43accec95a2f",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b27d0093-71be-4bc6-b91d-dd720ab55604"
        },
        "item": {
          "id": "58144d89-d87f-47a1-8df0-f9a3f48ee53a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "9d9a0880-0589-48a4-abe2-c7df1d8e4bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1084c1fd-3bcf-4df0-9324-ba69fd607750",
        "cursor": {
          "ref": "69b53b7f-acca-4252-ae27-951576385c05",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0be6e04f-aaee-40f1-9f1a-8f97ed416298"
        },
        "item": {
          "id": "1084c1fd-3bcf-4df0-9324-ba69fd607750",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "bfd4199a-b509-41df-a423-bad1cab881fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bfc7897-4627-497a-b3c2-fb96dc33597f",
        "cursor": {
          "ref": "358dd0b5-a0fa-4137-b369-dc46df5e2942",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7dfac3c1-b602-48c1-a2b3-fcd0f3e7d3b0"
        },
        "item": {
          "id": "9bfc7897-4627-497a-b3c2-fb96dc33597f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9e93e228-ac1f-44e0-a95f-71bcf67f8897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db804086-42e0-4e37-a9ee-e659cd805795",
        "cursor": {
          "ref": "fd36c746-3e5d-431d-9093-85d5d25205d9",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f39b5f67-0d89-477a-b21f-27054480701c"
        },
        "item": {
          "id": "db804086-42e0-4e37-a9ee-e659cd805795",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2ad70c9c-8846-4cd4-bbd0-39d44cfefd92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520feebb-6407-4609-b931-ca50099ad275",
        "cursor": {
          "ref": "19de4234-780d-4def-af02-e43c8ab14eab",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9fedb5be-b2ea-4cf4-965c-63571d237845"
        },
        "item": {
          "id": "520feebb-6407-4609-b931-ca50099ad275",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "da799986-84f6-4b5a-a3aa-7dbcb4e7a428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42509b0-c0d9-407e-a700-121f52f912b3",
        "cursor": {
          "ref": "0b6edbfe-2886-4842-b303-f2386677145c",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "695a3ba8-9907-4f68-b191-d15970e6ef62"
        },
        "item": {
          "id": "b42509b0-c0d9-407e-a700-121f52f912b3",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "38f45bee-4c36-4b1c-b9f0-ca2221e1e310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00a09f1-c479-44f0-9420-61a8a0ed6f6e",
        "cursor": {
          "ref": "0bdc8017-bb9e-47b6-8156-eedc0d6774d2",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "98cdb2b7-e1dc-4dcd-acbd-0b1cfa0ea733"
        },
        "item": {
          "id": "a00a09f1-c479-44f0-9420-61a8a0ed6f6e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f1cceaee-9e94-4fef-afd5-900fb00e6aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9495bc-71a7-40a7-859c-d1cee24a48f1",
        "cursor": {
          "ref": "74f6b09e-e76b-4a03-a44b-aa5bc732e8cf",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a377a9d5-09ca-4638-b67e-200f04c56eaa"
        },
        "item": {
          "id": "cb9495bc-71a7-40a7-859c-d1cee24a48f1",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3d7299df-772d-42ac-a076-aaeb07577ec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d1d00e-918d-4ee3-9a14-15ebcb7b5fce",
        "cursor": {
          "ref": "7ad86ce8-8304-4184-9fa6-2db07500623e",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "14b30f91-2c61-4732-ade6-3c3b1fcb24ab"
        },
        "item": {
          "id": "52d1d00e-918d-4ee3-9a14-15ebcb7b5fce",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "3227bf40-1b8f-425a-a174-c3e00525709f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "875fe9ce-b096-4e29-a1a0-66c949be7e3c",
        "cursor": {
          "ref": "6e9510e7-c351-4054-ae80-dc52476a94ff",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "73a36a42-e837-498a-873b-5b6c691bc70e"
        },
        "item": {
          "id": "875fe9ce-b096-4e29-a1a0-66c949be7e3c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "089dd54b-c66f-4294-b56a-58f1252e233f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81366bbc-5120-49ad-8b1f-d472a455a59b",
        "cursor": {
          "ref": "0ce6f9ac-23af-4c33-84fb-665fb61098e2",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "cdba24ab-4f5c-4d08-8036-ef846b33e3c9"
        },
        "item": {
          "id": "81366bbc-5120-49ad-8b1f-d472a455a59b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "129161a2-d96e-4e48-b838-14cc9419a22b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb1a3b5-ae5c-4b92-8937-df454eb01694",
        "cursor": {
          "ref": "b9fb6746-6c90-4a59-98e7-37fec9b8274a",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d5c9997b-52e2-4616-ac67-414543c2b10b"
        },
        "item": {
          "id": "bbb1a3b5-ae5c-4b92-8937-df454eb01694",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "167923f2-5e54-42fc-958a-48e96f1c4717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef950825-443d-49ce-a204-19a8048c9992",
        "cursor": {
          "ref": "09815623-fd1a-4b31-bc64-0970170c0235",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2757d94e-c49b-48c8-b173-93366c83bfd1"
        },
        "item": {
          "id": "ef950825-443d-49ce-a204-19a8048c9992",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3dc4153b-a029-4f05-991d-be18c20fe855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72218ade-878a-4219-b094-5d4bc4a486e8",
        "cursor": {
          "ref": "3e17e50a-28b5-4665-9594-1c580001ad71",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "538d40fc-40af-42e5-9771-dfaa1a870905"
        },
        "item": {
          "id": "72218ade-878a-4219-b094-5d4bc4a486e8",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ceb32b92-c2f2-459a-868a-aa77509a3cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9816ce49-382a-4b6b-93e0-06cec9856640",
        "cursor": {
          "ref": "a6f2ae0b-154f-4a1e-baa9-57e5f180418a",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a50a89f0-a7ca-46a1-8e0d-81a1120ce193"
        },
        "item": {
          "id": "9816ce49-382a-4b6b-93e0-06cec9856640",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c228ef54-9430-4a11-b876-4ca99cd396c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b57370-5903-4e05-91f3-e47a43204408",
        "cursor": {
          "ref": "0ec9c5c0-b4d0-44ee-908c-345b81f9f7d4",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f9246984-d375-4722-95de-f5d3cb2ba336"
        },
        "item": {
          "id": "13b57370-5903-4e05-91f3-e47a43204408",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "8b7a9096-1919-4089-9d35-3ca4746c745b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f334395-be08-4e42-b961-0551e69fe246",
        "cursor": {
          "ref": "dcfbdbdd-c6ed-4987-a0f9-4aa24f2e3e8f",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "24bf291d-0d4d-42a2-abc7-351289af1c0a"
        },
        "item": {
          "id": "1f334395-be08-4e42-b961-0551e69fe246",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c19f227b-9195-4dec-a8ff-466919063b6e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1615,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb227504-4aca-485f-a204-2a01cd9679d8",
        "cursor": {
          "ref": "34451f38-1f2b-446d-b358-5681f3047a20",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "03d5b638-71dc-47a1-981d-cb05d7de0090"
        },
        "item": {
          "id": "cb227504-4aca-485f-a204-2a01cd9679d8",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "61ba3983-5143-4dbc-bd5d-d5bcedd57307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d89a96a-ff80-41ea-8ec3-4a2c7290146c",
        "cursor": {
          "ref": "93c00e78-3d36-40b4-bd31-3551dd2cfa68",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a6610df0-d4de-499d-8a7e-34881f6e9f1e"
        },
        "item": {
          "id": "6d89a96a-ff80-41ea-8ec3-4a2c7290146c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "fe33fc98-cd88-453e-af9a-024334b77027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dbcca2f-753f-4f78-a927-b587ccd304f0",
        "cursor": {
          "ref": "35f1e7c1-9dc2-4323-be6a-e6969de17f64",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2fa40077-c53b-455d-b94c-7293cbdbbbc6"
        },
        "item": {
          "id": "3dbcca2f-753f-4f78-a927-b587ccd304f0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2abc82b2-cd7f-4fc9-8aee-c253b748d404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c9d194-4165-422a-9a00-272e10514fd6",
        "cursor": {
          "ref": "bf51350d-c702-4b46-8b81-729be837b7f7",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "06577c46-c861-44b6-b2ea-1bbf613c7ac9"
        },
        "item": {
          "id": "84c9d194-4165-422a-9a00-272e10514fd6",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a0cdf837-b35d-41d2-bd41-aaab2c8f9a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae029979-4eae-499c-abd3-b96f37e52111",
        "cursor": {
          "ref": "d7476dc0-97b9-44fe-9a10-b4a8713e6d73",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "28ee645c-d02e-45c0-90b3-c6a6a8cfa74d"
        },
        "item": {
          "id": "ae029979-4eae-499c-abd3-b96f37e52111",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f8cb558c-706a-4114-bc71-7a003f95ad33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca054a5-eb35-424b-9476-85ba0093cc77",
        "cursor": {
          "ref": "5957d22e-27d7-4797-86ee-35476086882e",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "4d2317ec-8dfe-4acd-99b7-dd963428d988"
        },
        "item": {
          "id": "dca054a5-eb35-424b-9476-85ba0093cc77",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "180ab7c3-234f-4ada-ac18-ba257490cefd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8632c23b-9757-447b-896e-ef339b245581",
        "cursor": {
          "ref": "4ed4da2f-86f8-42d7-a079-0461f10bec61",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f5a91cb6-84ed-49a2-9606-715b2ce781ba"
        },
        "item": {
          "id": "8632c23b-9757-447b-896e-ef339b245581",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6c98f2eb-5020-4bd6-b79f-2c4bb42c0b02",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1632,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc38b3bd-15c7-4f54-b2de-87b75cd7b0b7",
        "cursor": {
          "ref": "e63c83e1-2da0-4df1-8d42-01cde105bd35",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d55e588d-0d50-4c53-b1ee-f181aad56237"
        },
        "item": {
          "id": "dc38b3bd-15c7-4f54-b2de-87b75cd7b0b7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "45f2180e-5b0f-40a2-b9b5-09d95b8dbfd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a2a8ac-9d98-422b-9464-b3b6423f4e99",
        "cursor": {
          "ref": "dd3326e2-06db-4bc3-928f-031fe3080456",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b5dea93a-66a4-4f00-a17f-a039e311e06c"
        },
        "item": {
          "id": "88a2a8ac-9d98-422b-9464-b3b6423f4e99",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e5d5c395-0634-4e13-aaec-4ef559f49fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55da409-117d-4287-a3a8-39b4236e7101",
        "cursor": {
          "ref": "d603a956-bf79-4e34-b84c-555c7f5a675d",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ee12e073-bc6e-44d7-9c1a-81f80c63c1e6"
        },
        "item": {
          "id": "f55da409-117d-4287-a3a8-39b4236e7101",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e5484d84-fd15-494d-b4ee-f0a8e69277e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879d5ed9-ceb7-41bf-960a-09085b699f56",
        "cursor": {
          "ref": "53018651-8911-4b3e-8016-9482241d3ca9",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "22e26cf1-9aec-4e07-94b5-b4e434143c0a"
        },
        "item": {
          "id": "879d5ed9-ceb7-41bf-960a-09085b699f56",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "52e75745-cb6f-47e8-9c51-60affd505fb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2343640-ff0e-478a-b27a-d2afd2df23cd",
        "cursor": {
          "ref": "d98325e9-3750-48d3-a4f6-5854e0bdb0eb",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "555ea763-3034-4488-99e8-9091acf2e9d8"
        },
        "item": {
          "id": "f2343640-ff0e-478a-b27a-d2afd2df23cd",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a1b6a108-44fa-4113-a29e-8324266bb4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d0a1013-f619-4039-a578-7219b059dd77",
        "cursor": {
          "ref": "d9815b06-636b-44fe-ba7c-c2a955c4ef3a",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "63e5fcd1-76bb-47b2-af70-52dd4487129a"
        },
        "item": {
          "id": "1d0a1013-f619-4039-a578-7219b059dd77",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "8daf8053-5293-43a6-a952-a6907c2aa243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02aa1183-f784-43ed-87bb-a59c47db0e7b",
        "cursor": {
          "ref": "cebfb2c5-bb0d-42bf-9ba9-a29eb74b20d8",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "97c97bf8-57e0-4344-9b2d-4967bd4a7524"
        },
        "item": {
          "id": "02aa1183-f784-43ed-87bb-a59c47db0e7b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ed60d995-1de7-4ba7-9a10-7911901ece58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa657a7-2f5c-40ae-a7ac-2985e9e171c1",
        "cursor": {
          "ref": "c7775b05-f9c5-4405-879d-ff60f0d4ffcb",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4402d164-432d-43f9-aef8-e4d3a22b14d3"
        },
        "item": {
          "id": "1aa657a7-2f5c-40ae-a7ac-2985e9e171c1",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ac0d91da-bbfa-4cea-a6eb-44707b69449c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b5cfef-ddd6-4a80-93f9-71822f03e300",
        "cursor": {
          "ref": "da873ebf-6588-4e63-945d-5e229f769bca",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "abb9d337-7bef-4953-a476-565752ddefbd"
        },
        "item": {
          "id": "80b5cfef-ddd6-4a80-93f9-71822f03e300",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "54d0d6fd-847a-4c7b-b4aa-e57fce5d83d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d00b07-471b-4b8f-b668-efbc46420782",
        "cursor": {
          "ref": "a4f1ad90-efb6-4a5f-96e0-4ca465a7a20e",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8d678cd6-da59-4259-9422-28a2bb58738d"
        },
        "item": {
          "id": "d3d00b07-471b-4b8f-b668-efbc46420782",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1e0937fd-5af5-4312-afe4-d6bbfc3cfa30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5359db6d-b0a2-44a8-b88e-be54b1ba8162",
        "cursor": {
          "ref": "40e42348-62d8-4132-8907-8e01cffd6cfc",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "349fd1be-f376-4b7c-ba4d-67299a3253d1"
        },
        "item": {
          "id": "5359db6d-b0a2-44a8-b88e-be54b1ba8162",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5f8ab1b8-a3b3-4160-8112-777f518dfd35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52deeea1-d8bd-4351-a432-3bc0313375f4",
        "cursor": {
          "ref": "f8e63d9c-af83-4852-b12e-f46d727b1abd",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "aa23148e-a314-4353-b4e6-7397d4ae8ee7"
        },
        "item": {
          "id": "52deeea1-d8bd-4351-a432-3bc0313375f4",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9cfa981c-54ae-418f-8621-5b0451974ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fcd35d3-b6a1-4e90-a6e4-f2fdd228d0b8",
        "cursor": {
          "ref": "990f82b2-f65a-44ce-8995-f356678cb467",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "4d7a2679-df7d-40ae-9b2b-1f8966cdd1fa"
        },
        "item": {
          "id": "0fcd35d3-b6a1-4e90-a6e4-f2fdd228d0b8",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "fbd0fb88-db4c-438c-81f9-860484813435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462172d0-e718-45df-b2ab-32f476f0ab07",
        "cursor": {
          "ref": "b65a5b09-fdca-4805-97ff-299e5f8c47e3",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "2f10999f-186f-46bf-a46e-8aca686baff7"
        },
        "item": {
          "id": "462172d0-e718-45df-b2ab-32f476f0ab07",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "dfd93c41-314c-447b-bdd6-e7cdfd354715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24438274-1fa9-4c67-b4ab-09f25d8160b5",
        "cursor": {
          "ref": "d072c88c-f44d-4872-998a-afcdb5014789",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "852c0f8e-8ac9-4396-b52e-38bea2f58c61"
        },
        "item": {
          "id": "24438274-1fa9-4c67-b4ab-09f25d8160b5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "70459b16-c72e-4831-977a-69d8889d1630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0bd5e7-cdd1-4341-96d2-1d1d9fd66284",
        "cursor": {
          "ref": "f5e01a51-5b32-4440-8859-3d0479dc4ee5",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "1d92e756-0020-4792-81b1-d48348deadb2"
        },
        "item": {
          "id": "4d0bd5e7-cdd1-4341-96d2-1d1d9fd66284",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "67cf71e4-97b8-4b6a-8218-ae30270073e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0afad11f-c757-486a-be09-ea86d480d9c7",
        "cursor": {
          "ref": "be64f920-a077-4494-864f-b37f73109cf7",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "56a415a8-421a-4085-a9eb-e5cd03b1ea3c"
        },
        "item": {
          "id": "0afad11f-c757-486a-be09-ea86d480d9c7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "51292d07-baab-4204-9e3f-8237dce0a41b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "298eb5e2-32cc-43f6-a4ec-4021a378d20f",
        "cursor": {
          "ref": "a773c633-5647-431c-be8f-4d26c120e896",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "99e1cabe-a81f-4cd2-9e15-747261ce36fa"
        },
        "item": {
          "id": "298eb5e2-32cc-43f6-a4ec-4021a378d20f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "190faea1-2f81-4487-b8fa-64b97481e0d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe05fcd9-f536-4850-a400-0f0275beffea",
        "cursor": {
          "ref": "f22228df-9f61-467b-aa9e-a1fa40508108",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "df90a461-3853-4ad9-8cef-c285a3ab7820"
        },
        "item": {
          "id": "fe05fcd9-f536-4850-a400-0f0275beffea",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f4e7f4e1-ec51-47b3-8546-1f21b25b43a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de55e6da-17bb-4679-8fb0-35837aaccc74",
        "cursor": {
          "ref": "f7ba2a14-60ad-44ad-bf1a-e34de2ca5a94",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "adbaaf42-a2af-4247-8a88-0732391a8dc3"
        },
        "item": {
          "id": "de55e6da-17bb-4679-8fb0-35837aaccc74",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "bd1f010b-e28c-4df2-8d94-2a1c36d89d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f8b0e94-7e6a-4de2-9e65-3ea864017a97",
        "cursor": {
          "ref": "1811b269-3cbe-437c-86be-add8c8398872",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8dabf4e8-56b0-44b2-a5e9-eb0ba1c8b1ca"
        },
        "item": {
          "id": "6f8b0e94-7e6a-4de2-9e65-3ea864017a97",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "663ec8cd-e506-43ec-b95a-e6918793f688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c841b9f-51c8-40fe-846d-a8447d95f161",
        "cursor": {
          "ref": "72bb6e1e-422f-4480-842a-4abac180bdf8",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ea5bb3d6-0e56-43ec-8456-445a1be33490"
        },
        "item": {
          "id": "0c841b9f-51c8-40fe-846d-a8447d95f161",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d81b2f06-9676-415d-aa53-22770b8b7cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d256915f-6f59-4104-83af-8a071bbee61a",
        "cursor": {
          "ref": "4404424f-964b-4360-afb1-9ae61eab9899",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8c410597-7c23-405d-aadc-57661a86d50a"
        },
        "item": {
          "id": "d256915f-6f59-4104-83af-8a071bbee61a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c70ceb27-321d-4190-8f22-64546e787d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1809382b-c042-4aa3-b78d-ba3098077552",
        "cursor": {
          "ref": "4258619d-70d5-4524-901c-2d5f8e8360af",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "631048bc-e18d-4a0c-bc7b-a9afa4e1bb28"
        },
        "item": {
          "id": "1809382b-c042-4aa3-b78d-ba3098077552",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3473663f-5308-4c01-a9b4-c4dde27da11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71cb32c4-ab70-4824-8cc1-1cc16f28f85e",
        "cursor": {
          "ref": "cca12555-a525-47ce-90bb-002ae3a3aba0",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "037aded6-a1f8-4e23-a85f-3583460b049c"
        },
        "item": {
          "id": "71cb32c4-ab70-4824-8cc1-1cc16f28f85e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f061d367-23e7-4d35-88cb-6c5e4d8906d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8d8b31-3920-4033-98bb-3aeea056090c",
        "cursor": {
          "ref": "84274e72-7899-44f7-98de-e25e12d914e5",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6e544d82-e295-4586-9b21-46ebb874bf3e"
        },
        "item": {
          "id": "8e8d8b31-3920-4033-98bb-3aeea056090c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "45cff110-50db-4ee2-b77e-0e03ae286c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca19bb9e-0418-4477-ad94-b3acd3f6edd1",
        "cursor": {
          "ref": "2a08f323-e598-47c7-afb5-1fca7157ad44",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a3980dd6-815e-4681-aee5-d7eaa9805883"
        },
        "item": {
          "id": "ca19bb9e-0418-4477-ad94-b3acd3f6edd1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "50c45438-97d3-4bb4-966e-273dfb6faf57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5926f09-3c08-4b5b-9108-37e731dcb81d",
        "cursor": {
          "ref": "dc0b5bc7-1964-4713-a558-c0f0eddae712",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "cdf20532-5ae7-4aae-a652-858d8d48f94e"
        },
        "item": {
          "id": "c5926f09-3c08-4b5b-9108-37e731dcb81d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f5034efb-6ed4-4ff0-9503-8c8c5e86202c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c64a731-b02c-42e5-a21d-8422fe636f0d",
        "cursor": {
          "ref": "5995beb4-5925-4f34-9e20-39801e3c3f00",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "7845013c-9289-4b73-bd6c-6af5392f702c"
        },
        "item": {
          "id": "8c64a731-b02c-42e5-a21d-8422fe636f0d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f824363c-9225-45cc-b4f3-84155faa940d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e7b467-4b3d-47a4-8a80-2ebdb928e932",
        "cursor": {
          "ref": "45fbd965-be0d-4a31-9245-5bdcfd3c6edb",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b0b27423-b17f-457e-9810-0462a5f392c9"
        },
        "item": {
          "id": "00e7b467-4b3d-47a4-8a80-2ebdb928e932",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "050c6491-2bf4-4431-b117-003ce9e1a79d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e614a013-d906-4706-8ca3-80d3bc5826bf",
        "cursor": {
          "ref": "05f2fa57-0d61-4a63-81e6-b3e8f59cb057",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f9f88450-1016-41b1-b797-e37ffb248621"
        },
        "item": {
          "id": "e614a013-d906-4706-8ca3-80d3bc5826bf",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "329076d8-805e-4ae8-9fb7-67bd2567ed87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328024c4-d1b9-4521-b528-9240687155d5",
        "cursor": {
          "ref": "8662fc08-40d6-453b-b2c5-9ccb10f263cf",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c128c69b-fabe-4fc8-bd1c-132bd73778d4"
        },
        "item": {
          "id": "328024c4-d1b9-4521-b528-9240687155d5",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "cc37d8a3-2e5e-4bc4-9179-a89938e21533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a48ac1-a55e-4c25-99cd-2fe13318ffbf",
        "cursor": {
          "ref": "381ad764-e203-4818-9b38-bf7e134701ca",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2e82c5cb-81ec-43fe-9856-05b3ef4f3b50"
        },
        "item": {
          "id": "79a48ac1-a55e-4c25-99cd-2fe13318ffbf",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7dbccf6e-09a1-4e8b-bab4-0b8e4c31a204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aebf1885-ba84-4d89-abb9-07a290953f06",
        "cursor": {
          "ref": "44ec3c2a-2d26-4fa9-9640-f0c63b9cac6e",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "49ef4dd3-6e99-4ec2-a73a-e56aec637bcb"
        },
        "item": {
          "id": "aebf1885-ba84-4d89-abb9-07a290953f06",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "197f0975-09b1-4cdf-8d83-13335f638ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d8c3fc-cba9-40ad-bcc1-6ec55bc25093",
        "cursor": {
          "ref": "17a5415a-edca-4740-b614-4967af49df43",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6165873d-efee-47ac-bd69-b641a9345c87"
        },
        "item": {
          "id": "38d8c3fc-cba9-40ad-bcc1-6ec55bc25093",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "8ea6a7db-8197-4d19-a2ef-7dfede824e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feaf003c-1d63-4c0f-9659-7ea1f11c17a1",
        "cursor": {
          "ref": "c23ce691-046a-49b6-850f-252900d04dbc",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "739f2ed5-e435-428a-8c35-7ae8f4d71913"
        },
        "item": {
          "id": "feaf003c-1d63-4c0f-9659-7ea1f11c17a1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6ac2535a-fd17-4039-9a05-0d6760171cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7806f05e-cd45-413a-a26b-07513fd1e27f",
        "cursor": {
          "ref": "039eecaa-c4d9-4bc9-aa9d-1c79f0874d32",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6e758993-a54a-4d47-ad91-f7ac55e0bee8"
        },
        "item": {
          "id": "7806f05e-cd45-413a-a26b-07513fd1e27f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4b9ab911-e00a-4bc4-a5ba-766f7fb95047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1531734-219a-45d8-a880-bf43dcda58a9",
        "cursor": {
          "ref": "93e1dc50-0342-4d8a-85a9-47c5bd6a89f3",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4080e21f-ca2e-49d5-ae07-b722920dd41d"
        },
        "item": {
          "id": "d1531734-219a-45d8-a880-bf43dcda58a9",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e5928c2b-3093-4b13-86e2-5a7aa230c481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d81cb48-1ee0-405e-9188-1d3bfa5495f4",
        "cursor": {
          "ref": "a7e102a5-2275-4f44-9ad8-da3f248d86a9",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "0038742a-77c6-4160-80f8-fbadf2c8f467"
        },
        "item": {
          "id": "7d81cb48-1ee0-405e-9188-1d3bfa5495f4",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f9cc06c0-af8c-4898-8c31-52a13dd24f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f97556-b9ef-4812-9e36-f76fcc648757",
        "cursor": {
          "ref": "ad150d89-c839-40e4-8889-e0483d90aa15",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c7333f84-830e-4bb3-9153-057ac19b2db8"
        },
        "item": {
          "id": "43f97556-b9ef-4812-9e36-f76fcc648757",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "1bc5b6e9-e8ce-4055-aec3-c40b88cfd824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f142c2-5ff6-4413-a2d8-c074e89e4d50",
        "cursor": {
          "ref": "63fbf04d-3e4f-40cc-bdfa-e9bc8b8e24ae",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5be088a7-0aa2-488c-9559-dd0896bfc91c"
        },
        "item": {
          "id": "24f142c2-5ff6-4413-a2d8-c074e89e4d50",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "13b19c89-4f5f-4f9c-8451-28c7487e5f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c67d032-0c71-491d-9cba-d7dad432304f",
        "cursor": {
          "ref": "4ab47e98-0491-4700-a622-08e62a0af26e",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ccd52c1b-90fe-468b-acc3-5b59e7d00a3f"
        },
        "item": {
          "id": "5c67d032-0c71-491d-9cba-d7dad432304f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "06233821-752f-486e-9258-3b684428e6d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7d7ec2-27da-4218-a4f4-3f3f189f097a",
        "cursor": {
          "ref": "2f8789cd-d2a9-46bb-9a8b-af4484e1d510",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5b0e688a-9f7b-4f3d-960e-3510a2c4d043"
        },
        "item": {
          "id": "ad7d7ec2-27da-4218-a4f4-3f3f189f097a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "256c47ba-6933-4dd4-8c2f-650e5bafc2a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1221bd7e-6187-4c7f-8dea-3e7e91497d64",
        "cursor": {
          "ref": "98d433c7-627b-4cfe-b9a1-77c968af77a5",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "16152bed-0a4e-4a65-b889-ec671c198462"
        },
        "item": {
          "id": "1221bd7e-6187-4c7f-8dea-3e7e91497d64",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6b3f9422-e0dc-4670-8fce-c1bc0e70c1e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f07144ae-1d4d-4db3-9f0f-4b2a3061647a",
        "cursor": {
          "ref": "aec9a68c-22ef-4925-aa22-027d373127f9",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ddede0d8-c5f6-49a4-98ca-c85de5cdccf9"
        },
        "item": {
          "id": "f07144ae-1d4d-4db3-9f0f-4b2a3061647a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ed3fb367-b944-44b8-9279-7eccf471074d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b4184c-642d-4968-ab7e-8f323996d193",
        "cursor": {
          "ref": "8d079ee7-45ae-4a54-b99f-7fbfa5abdba3",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "91064d54-7fcf-4690-8b13-831a002d0d58"
        },
        "item": {
          "id": "93b4184c-642d-4968-ab7e-8f323996d193",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8497731d-2405-4ebe-9626-f3d53253bc53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed348d70-0751-4738-93d3-6bf830cb4b59",
        "cursor": {
          "ref": "b15de399-9542-4c4b-9ee8-c9c5e1768ad0",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6c53e171-ac3f-4cdb-ac53-0c0a842e2f78"
        },
        "item": {
          "id": "ed348d70-0751-4738-93d3-6bf830cb4b59",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f24b877e-c98a-4040-bc7f-c1df371712bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddbd570e-646e-4cc1-af21-f46c026c2263",
        "cursor": {
          "ref": "7f010e4d-5cf1-430a-bb6c-5f89dc832656",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4873243b-aa52-4cad-8021-8d4e685ff585"
        },
        "item": {
          "id": "ddbd570e-646e-4cc1-af21-f46c026c2263",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c4fa1250-ae4d-41d9-9e0c-3f4a4f9d07c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f55692e-1dc3-48f2-9fec-7b3217e05c82",
        "cursor": {
          "ref": "4f05812d-7e09-4120-bce4-e9b2a21f6bd3",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "10e6c55c-3f70-4bc5-9923-c965c0abaa22"
        },
        "item": {
          "id": "1f55692e-1dc3-48f2-9fec-7b3217e05c82",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "bcddfe1d-bca0-433b-bb44-afba1117117e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ccbe94-7b55-4a70-b719-a47b7cca6dee",
        "cursor": {
          "ref": "c84ab38e-dc1a-4234-87fd-f8354b6f99f3",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "47a0a054-9fb8-41fb-9b61-45524fc75c39"
        },
        "item": {
          "id": "f7ccbe94-7b55-4a70-b719-a47b7cca6dee",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "06773cd1-a8ee-4efe-bf4d-2b1490de97a2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 139,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee02bf33-fb58-44b5-8950-effd0bb188dc",
        "cursor": {
          "ref": "189f60ac-291e-4d9a-b67f-d9a2d82d6a4d",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0fc7a9df-6305-4614-9973-cf7c7283f4c7"
        },
        "item": {
          "id": "ee02bf33-fb58-44b5-8950-effd0bb188dc",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "1b271335-d152-436d-9800-254a5e6b40fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "45e6e648-2d3b-4f29-bbb6-da4e9e8858a6",
        "cursor": {
          "ref": "92ce67e4-83a8-4950-b280-fc199d9f4b46",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "abd627df-6974-4dc1-bc9d-ca1ddfaa26d4"
        },
        "item": {
          "id": "45e6e648-2d3b-4f29-bbb6-da4e9e8858a6",
          "name": "credentials_issue"
        },
        "response": {
          "id": "9d2e3c49-45cc-4eeb-9373-291fedb23baf",
          "status": "Created",
          "code": 201,
          "responseTime": 8963,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b556757-fb52-4f00-9dc9-34fb603782a4",
        "cursor": {
          "ref": "4c57fcb8-5794-4c96-a3b6-4ec7b0c06a61",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ecef4edf-104e-4642-a37a-101a4923eb18"
        },
        "item": {
          "id": "6b556757-fb52-4f00-9dc9-34fb603782a4",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5de1e0aa-1d9b-4253-aca6-71c1df2d1672",
          "status": "Created",
          "code": 201,
          "responseTime": 8487,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0763ba-1541-4710-a9f4-e8fa187cee2f",
        "cursor": {
          "ref": "28b4d21c-3369-41b2-b349-98d93421b9fc",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8ab37249-48fa-401b-a3e1-9580187dfa51"
        },
        "item": {
          "id": "dc0763ba-1541-4710-a9f4-e8fa187cee2f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0305a3b8-683d-4705-91b6-da4727e001fe",
          "status": "Created",
          "code": 201,
          "responseTime": 8434,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb228924-3c9f-4b66-b1c3-55b235445271",
        "cursor": {
          "ref": "11658b4d-4254-469c-b7de-3cbea0391732",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e9229996-f4ab-49ea-a81c-1ccaada885a6"
        },
        "item": {
          "id": "eb228924-3c9f-4b66-b1c3-55b235445271",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9671a967-a8a4-4391-b364-4540c0d85d82",
          "status": "Created",
          "code": 201,
          "responseTime": 8546,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f80c73b-d49e-444f-888e-ea4bc916416f",
        "cursor": {
          "ref": "a160dd8c-95a5-4378-9f52-4792a51d0c1f",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "fb1ac41b-fae5-4d32-a952-876c94b3ea1f"
        },
        "item": {
          "id": "9f80c73b-d49e-444f-888e-ea4bc916416f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9aae5dd8-a036-4eba-904e-67d6b5991a4b",
          "status": "Created",
          "code": 201,
          "responseTime": 11787,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "40bc74f2-9a1d-4937-bd67-5ed9fab4d955",
        "cursor": {
          "ref": "b41ce8ad-4490-439b-a658-d18d2f069839",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8dcfdf15-6fbe-4e38-8d8f-52a7ccdf8e2e"
        },
        "item": {
          "id": "40bc74f2-9a1d-4937-bd67-5ed9fab4d955",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "7d6a569a-9500-4b41-950c-bd45084c983b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "9ad65c63-b3e3-4874-a3db-0d27194b501d",
        "cursor": {
          "ref": "1cd17459-d016-4d81-9567-daac73c34a10",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "91972b5d-bc22-4199-87a4-3d1e7ec8cabd"
        },
        "item": {
          "id": "9ad65c63-b3e3-4874-a3db-0d27194b501d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "fb16dc22-2afa-49c4-a26b-9a49dbb402fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da165fae-fc69-4c59-8000-1a1980ed4ca8",
        "cursor": {
          "ref": "e74dccc8-4b10-4b79-9b1a-518081651af2",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8a4e55f8-9fb2-4b30-bdc9-0cef7359cc9f"
        },
        "item": {
          "id": "da165fae-fc69-4c59-8000-1a1980ed4ca8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "179200ca-7e74-4b2f-bce7-6687bde6a78e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afcd87e7-8552-4753-bb74-865b89cf524f",
        "cursor": {
          "ref": "9a141a19-5d5c-43d2-8ea7-c73ad40ea75a",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "771fc0d2-448d-4405-b978-0481c1e27e65"
        },
        "item": {
          "id": "afcd87e7-8552-4753-bb74-865b89cf524f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ac7a31ab-70a3-4f79-9a17-b5b7d4349dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f33b5cfd-3ec9-42cc-93c6-a8c16c6d7005",
        "cursor": {
          "ref": "e660ac67-c7e9-4abb-bfc8-8daf204b8c6b",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "1ebb70a4-356c-4c46-a7f4-d4dbdc81585b"
        },
        "item": {
          "id": "f33b5cfd-3ec9-42cc-93c6-a8c16c6d7005",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6b3422cf-b74b-42b0-aa42-bb10f1be5d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb5537d-c00f-4342-9890-c446bdf40dff",
        "cursor": {
          "ref": "2c2b9ed4-a5f7-4316-8c38-45a1c47ec1ef",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "28e63217-303e-4e5c-95b8-18837cf6a9b1"
        },
        "item": {
          "id": "9bb5537d-c00f-4342-9890-c446bdf40dff",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "68f39ef2-4f99-45b2-89a2-bc307a1e63f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29e4d08-c665-4b0c-a862-9cf886741c53",
        "cursor": {
          "ref": "1e2337f8-23cf-4f79-ab76-f812d6f151f3",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ae1f25c1-1faa-4cbb-9d8a-0731bd3816b0"
        },
        "item": {
          "id": "d29e4d08-c665-4b0c-a862-9cf886741c53",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "39832847-0536-403e-a9e4-c5f769ee434e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111698ad-7674-48ec-ba6d-7089678e71d1",
        "cursor": {
          "ref": "28d50b36-7848-49da-aa79-f18e073e103f",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e216ad2b-2d68-4a5f-ab97-cc4f63a124b5"
        },
        "item": {
          "id": "111698ad-7674-48ec-ba6d-7089678e71d1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a0baaf75-c4f0-4d37-a10a-11771ffbd37b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba1d7841-aec6-4e65-85c6-e273fc7e4884",
        "cursor": {
          "ref": "08992c4b-5497-4b26-9d64-fc77dfe57791",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "dc0459dc-26c8-4c46-8727-d2b6c24f75fb"
        },
        "item": {
          "id": "ba1d7841-aec6-4e65-85c6-e273fc7e4884",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e321db52-b2f8-42b2-8001-8cfd32f7c4d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae76de22-c3f8-4602-ab68-ac48ee7c3f07",
        "cursor": {
          "ref": "593c5c95-1d64-415c-bcb4-6b99863dc006",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3a4c0e09-f999-475f-96f6-02f582be6fc2"
        },
        "item": {
          "id": "ae76de22-c3f8-4602-ab68-ac48ee7c3f07",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c4d83953-ed0d-4b32-a66b-69fa964316fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437cd0db-96c1-44d0-864f-d5af77afe87e",
        "cursor": {
          "ref": "95361eac-978b-4795-9603-b04ee5855875",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "10563cdf-13a4-40d6-be76-d2387a454069"
        },
        "item": {
          "id": "437cd0db-96c1-44d0-864f-d5af77afe87e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5fda0f0d-9de9-4089-a901-c33cbb9ef55d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37742278-85fe-4ed3-a7e3-6def32b8e688",
        "cursor": {
          "ref": "6120d15c-54a1-4394-96a6-ea6e84086013",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a774514b-ef42-43c3-8032-66d154ad7277"
        },
        "item": {
          "id": "37742278-85fe-4ed3-a7e3-6def32b8e688",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6f78e48e-90d9-4b1f-b30d-11eb3611bbeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9de1fce-b29d-4d1c-bc82-be273fc41ea3",
        "cursor": {
          "ref": "2a97962e-e644-47fb-9855-cf326fe07bb0",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "dd33e8d1-937c-498f-ba93-c793479eea81"
        },
        "item": {
          "id": "c9de1fce-b29d-4d1c-bc82-be273fc41ea3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7d27dd4d-c700-40cd-97d9-9143bf0fae88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0dcd119-d62a-436d-9774-f4394bd2d648",
        "cursor": {
          "ref": "63d8a8bd-0314-4a3c-abc8-13fd2cb3048c",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "085fea7d-769f-46f9-8139-89dd7d56f59f"
        },
        "item": {
          "id": "f0dcd119-d62a-436d-9774-f4394bd2d648",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5d9fe83c-f4b8-4eb3-805d-b5e1ba20a1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c73f38-f980-4797-8162-2cf73a9d33f5",
        "cursor": {
          "ref": "f2a50ca9-0793-4370-8c43-e6fcdf28ccda",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c0ee1163-2b41-45ae-86d1-b84901652b4a"
        },
        "item": {
          "id": "b7c73f38-f980-4797-8162-2cf73a9d33f5",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c7f44fa0-f9d9-4c1b-9b58-a36409f5f8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f33082da-2c14-4e0d-ae89-478e814fa02f",
        "cursor": {
          "ref": "3ece39ce-b671-41f2-812f-c000fac57aa2",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "7b227885-cf82-42f4-a8b4-aa328fc1ed46"
        },
        "item": {
          "id": "f33082da-2c14-4e0d-ae89-478e814fa02f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "926a677f-c00c-479d-97f2-acca806d8e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f94a20c-970d-4023-bfaa-e08f5cdf83cf",
        "cursor": {
          "ref": "04b2a3fe-706c-4ed4-acba-511a39b4d6fe",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f719faa9-fa6a-415d-9161-da7309b0d99e"
        },
        "item": {
          "id": "5f94a20c-970d-4023-bfaa-e08f5cdf83cf",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c5990702-15fc-4af6-951d-54a087bda8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b234b0-3df7-47f9-9f21-0020f835dcfd",
        "cursor": {
          "ref": "50fae3bf-db31-4409-9f4a-3ff54c3ca969",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9b157aba-d68d-48d5-8076-c69d4d19ef24"
        },
        "item": {
          "id": "c9b234b0-3df7-47f9-9f21-0020f835dcfd",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "65de58c2-5462-44a0-8c04-44a2d42cb89d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a43243-484f-41fd-8d9c-c52efef19a14",
        "cursor": {
          "ref": "df567875-55f7-4edf-ac57-b0250fed9e54",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "700aab26-db45-4562-8692-ff490198aa1b"
        },
        "item": {
          "id": "94a43243-484f-41fd-8d9c-c52efef19a14",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b8a1f154-36e1-4b86-b4c2-b2c506ecd28e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9617a5e2-f25c-45a9-85d7-c6596317f780",
        "cursor": {
          "ref": "2d510ab1-635d-4002-9d6f-08f1c0c7929a",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "366d7f38-7c4e-4c15-8909-6ca45d571c63"
        },
        "item": {
          "id": "9617a5e2-f25c-45a9-85d7-c6596317f780",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d79b1473-4a7c-4c8c-a613-4e8497b9a585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543cb749-d94c-4012-b8bb-9a5285e3d5fa",
        "cursor": {
          "ref": "2d998808-e037-4459-9cd6-abe01228f094",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "79f25582-3044-4cf1-9779-f582e3430331"
        },
        "item": {
          "id": "543cb749-d94c-4012-b8bb-9a5285e3d5fa",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0a7c30bc-2e5e-4391-9a41-36ae698a9805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f34b35e-1bc4-4cef-8218-fba31aaab877",
        "cursor": {
          "ref": "a0120e51-1727-40e2-98a3-3d721321a527",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4f6d499a-1f56-444a-90f8-b9bebb12ba8a"
        },
        "item": {
          "id": "1f34b35e-1bc4-4cef-8218-fba31aaab877",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a47d6cb0-0f6e-4b42-9c18-5f2d91bf8346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb9b403-1cb1-48f8-a611-5a7d885e3382",
        "cursor": {
          "ref": "beeb2622-d7a5-4aee-959b-5cb712ae5e25",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c7cb4729-d925-41c7-b78b-f85f5c8c4ba6"
        },
        "item": {
          "id": "beb9b403-1cb1-48f8-a611-5a7d885e3382",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "91b57cd1-2487-4aa3-b9b5-b46a12d9cb45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2bcf4b3-9123-4150-a1f3-fca6b9376d35",
        "cursor": {
          "ref": "1c4b1a66-ee60-4cce-9d16-93a5cab5c372",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c5ffe7cc-3d2c-4b2e-8455-8ee03942c798"
        },
        "item": {
          "id": "c2bcf4b3-9123-4150-a1f3-fca6b9376d35",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ce91f2a0-d492-4d78-bbb0-8a5fded2352b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df4f0cc-9f6b-4c5a-965e-cd97c2205063",
        "cursor": {
          "ref": "9ac1093c-f6eb-4ffc-a05a-c925df825445",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3107b6af-1c12-48c5-9154-22ba8b8167dc"
        },
        "item": {
          "id": "6df4f0cc-9f6b-4c5a-965e-cd97c2205063",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "211bd3cf-27fd-46cc-a6e0-94bd828f5cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a970e2-f5d1-4725-84d6-9606e7db6ff9",
        "cursor": {
          "ref": "cfa67903-1dd7-4792-95f2-26c745d7312b",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7668eed8-2a9d-420b-ba9f-591511c54815"
        },
        "item": {
          "id": "00a970e2-f5d1-4725-84d6-9606e7db6ff9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "31d73fb2-e97c-4f27-a6f7-3eb41448cfb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84106210-84c9-49bc-b6a0-d047ac44b362",
        "cursor": {
          "ref": "ad9117c2-4b39-4cb5-bf83-9197d60d7bf2",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "86ea3eea-52fe-47b1-9588-cad1b611eb08"
        },
        "item": {
          "id": "84106210-84c9-49bc-b6a0-d047ac44b362",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "697354b4-952a-412c-a819-e5e02b6adf15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fffc69ef-0122-4072-8aac-0f59121ace78",
        "cursor": {
          "ref": "fd9a1cfd-6660-4b68-8a1f-aa98df2a2456",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "0d157c30-f7c6-4949-84c3-18e670557688"
        },
        "item": {
          "id": "fffc69ef-0122-4072-8aac-0f59121ace78",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "811f36f0-0f54-4562-807c-6af694283f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb8805c2-56f9-403f-9275-a4c977e316d1",
        "cursor": {
          "ref": "ba48b40c-d86a-48c0-84a4-f059c1ee5d7f",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "688cfb39-4ee1-4242-a883-a11023592138"
        },
        "item": {
          "id": "fb8805c2-56f9-403f-9275-a4c977e316d1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b3198d32-b8e1-45e4-8a9d-45e8b8a13c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d919b1b-2962-423a-a589-1f9dbb3c608e",
        "cursor": {
          "ref": "c8d6b1fa-d92f-41ea-b2c4-870d69c742da",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "cc594726-f48f-426d-82b4-bfda7e988187"
        },
        "item": {
          "id": "5d919b1b-2962-423a-a589-1f9dbb3c608e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0bfbd382-e4db-4a11-a245-515c68614da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd232eb6-ee9e-4219-ac09-0be94f9d9f62",
        "cursor": {
          "ref": "485a2eef-0830-494d-b5e4-dda86efc59e9",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f6ca8c63-6ec5-4aaf-982e-8647818356aa"
        },
        "item": {
          "id": "cd232eb6-ee9e-4219-ac09-0be94f9d9f62",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ba46858e-2f4f-4373-8007-259e704c74be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064dcad8-3f40-459f-a165-2c13e7394036",
        "cursor": {
          "ref": "b445f2ca-0529-4ab3-bc55-9f13213dac12",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "19c0f2ac-8931-4eb6-bfbd-34431862a48b"
        },
        "item": {
          "id": "064dcad8-3f40-459f-a165-2c13e7394036",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e9ea432d-1820-4bf6-9f98-a08a745e28c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3025d640-9450-48e4-b1e4-36028f20e118",
        "cursor": {
          "ref": "c4e0119f-d7bd-4441-9e5f-6e10af28879e",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3f6bd136-b7d5-4332-bac9-3d0496cf2e78"
        },
        "item": {
          "id": "3025d640-9450-48e4-b1e4-36028f20e118",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "fd432856-f08e-4886-bef6-5cfee9058d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cbcff2b-8ccb-4674-be1a-7b1f0532b66a",
        "cursor": {
          "ref": "6b2bf5ad-0556-476a-9b2b-747390d92bbf",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "735133b7-d120-45bd-8c34-a8259c44638e"
        },
        "item": {
          "id": "2cbcff2b-8ccb-4674-be1a-7b1f0532b66a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cb811e51-2d4f-4910-90fe-c67bbc29ece9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 95,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5ddb28-fdcd-4acf-9b49-3700baf7ba4c",
        "cursor": {
          "ref": "c3a6c881-a8d7-4d60-a638-c96faba6a574",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "34b35fc0-309d-4373-9214-de2ab8abeaf0"
        },
        "item": {
          "id": "eb5ddb28-fdcd-4acf-9b49-3700baf7ba4c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1e922349-852b-4cff-aa92-9e535168f5a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38475a9-77e6-4948-af02-55f4e9ca536d",
        "cursor": {
          "ref": "c8f2d40c-41a0-46b4-b299-ec422d12b8de",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9148e2fd-e494-4d78-ae93-9611e8891321"
        },
        "item": {
          "id": "a38475a9-77e6-4948-af02-55f4e9ca536d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9c6e2442-e760-4786-9515-3cb759ede9d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adccc26c-51b9-4c4b-b29e-ad44fedc1572",
        "cursor": {
          "ref": "504fb2e7-6dc1-4e33-9a86-d27f30c19707",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "57e73d53-6171-41f8-895a-90b3fecdd007"
        },
        "item": {
          "id": "adccc26c-51b9-4c4b-b29e-ad44fedc1572",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0e48f439-9b9b-4315-8280-828f312bb7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d7b39a-217a-45e5-aae1-2e85597b2c1b",
        "cursor": {
          "ref": "b2256ea0-9183-4e8c-a4ca-e0fdc4d320e5",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "21f2b771-4654-41e3-bbac-f9902e639cf8"
        },
        "item": {
          "id": "26d7b39a-217a-45e5-aae1-2e85597b2c1b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1df3525d-8ac6-4ba7-b3b2-a86a1487586e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8756d7ba-0159-4d93-b2d9-9fcfd211c949",
        "cursor": {
          "ref": "46787072-a243-4fc0-8300-e25309556397",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7beb8b5a-4a55-4eaa-99e2-77ea24c9a40b"
        },
        "item": {
          "id": "8756d7ba-0159-4d93-b2d9-9fcfd211c949",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "17375208-6fc6-4e2f-ab07-156409a78b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baaaced9-0825-404d-9a27-93d63d1ab652",
        "cursor": {
          "ref": "ca1d06a2-db83-49eb-9811-2a5df593d277",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7003ecf1-4dd9-4ce2-9758-37cebc9b79fb"
        },
        "item": {
          "id": "baaaced9-0825-404d-9a27-93d63d1ab652",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1217f6d8-c895-4ce1-8937-ac7b664fbf08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c1afe1-f98f-4a04-970d-922412d66c6a",
        "cursor": {
          "ref": "53497c29-0ba3-4cb3-a618-8baeaa56a8df",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1ca526ef-677a-43cd-9c7f-8edb857b7417"
        },
        "item": {
          "id": "e6c1afe1-f98f-4a04-970d-922412d66c6a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "714546f1-9cb7-4f89-88fd-5316c5c2217e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e7f508-d394-4917-9b2f-67b9fa7fb2ab",
        "cursor": {
          "ref": "402d2f3b-f43f-4fe9-bbf8-af9d3241acf8",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c367e7bb-3117-440b-b5bf-d48e491c29f6"
        },
        "item": {
          "id": "a9e7f508-d394-4917-9b2f-67b9fa7fb2ab",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2a4ea738-7ef8-4ee1-a7e9-2905b6d99575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b183a269-10e3-4b12-b776-6066217c9bbf",
        "cursor": {
          "ref": "f58f54b4-9073-4d14-be5d-a8971b24cf53",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6dc653bd-7f07-4def-b904-02dc573e3786"
        },
        "item": {
          "id": "b183a269-10e3-4b12-b776-6066217c9bbf",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "91323608-b24f-4f22-b94e-7172ffeac0e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568ac618-2b6d-4f1b-a9b1-da767a0a8bc1",
        "cursor": {
          "ref": "57f3a40d-a696-414b-b3cd-21544e2ae868",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "440c8f2a-f4eb-4d92-b3db-b5d360287ffa"
        },
        "item": {
          "id": "568ac618-2b6d-4f1b-a9b1-da767a0a8bc1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8a7edba8-2066-4e0b-ad14-27b9cc7ebcb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f033aa0e-63ca-4e1f-89bb-2228d2d478b2",
        "cursor": {
          "ref": "135d86ac-ca59-4281-aa7f-b46eb1ddcff4",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "0eb99893-cf91-479a-b78e-2dd6be5c8c86"
        },
        "item": {
          "id": "f033aa0e-63ca-4e1f-89bb-2228d2d478b2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c575cf21-d6e0-4966-a275-83166f981f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec300199-19ad-4193-975d-ea96b43e8cdb",
        "cursor": {
          "ref": "afe69aeb-13df-4a57-9e0c-bbfac29bae6f",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "2381650d-c0a5-4a29-859f-f0737f6427e5"
        },
        "item": {
          "id": "ec300199-19ad-4193-975d-ea96b43e8cdb",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "69e5b67b-7f92-451a-85da-d7553e948c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13071396-76ad-4986-b158-b39eb374973e",
        "cursor": {
          "ref": "4e05acf3-d715-4a56-824b-a86ad87ee269",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5d2fdc75-de4d-47b2-9e41-5fbc58e20a2c"
        },
        "item": {
          "id": "13071396-76ad-4986-b158-b39eb374973e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c471da96-b845-4516-be61-17cbd7e67425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929f44d4-0cd0-43d1-a1a3-675a5151c040",
        "cursor": {
          "ref": "c200cf79-d9cc-4473-bcb1-250ee530117d",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "07466251-4e19-456a-b4b5-26528d7f3384"
        },
        "item": {
          "id": "929f44d4-0cd0-43d1-a1a3-675a5151c040",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9ce21f36-6853-4bb2-a985-02f4e23d2c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a811a95-745c-4071-b5fc-923f4d310d35",
        "cursor": {
          "ref": "986d78f2-7b2a-46f2-b6d5-566c2f4cd50e",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c7fd4a97-549e-420e-bec6-49df534cd124"
        },
        "item": {
          "id": "7a811a95-745c-4071-b5fc-923f4d310d35",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "82e24c16-e536-4080-bd72-bb84ab16be97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd80ec2-72d7-4edc-a667-fef656164672",
        "cursor": {
          "ref": "f8c5db86-697f-4984-93c4-f0b1c9e29baa",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "dd88f665-b643-46da-8a15-2100e42ed106"
        },
        "item": {
          "id": "9dd80ec2-72d7-4edc-a667-fef656164672",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9319d098-66e0-4607-9a06-c730bf887762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "379ffec0-3b03-4f34-adf4-b0250fe89bd9",
        "cursor": {
          "ref": "348830fb-ac66-4d75-84a2-7a3e65315b27",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7331ebe5-4f78-468a-9717-35da8b76586e"
        },
        "item": {
          "id": "379ffec0-3b03-4f34-adf4-b0250fe89bd9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1c4a1ff0-ff5c-4349-ba17-c51b1c9448b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ccfb17e-a375-458b-bd5a-8738a2c9f3f6",
        "cursor": {
          "ref": "c8700dd0-70eb-4885-99d2-3418c10658c8",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b69d1ec3-0479-4863-9356-005836a3fa91"
        },
        "item": {
          "id": "5ccfb17e-a375-458b-bd5a-8738a2c9f3f6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9fa56f68-02e9-429a-afeb-39847a75252f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf59bf90-233d-44d7-8f6d-be073b1506d3",
        "cursor": {
          "ref": "f5c70654-14d5-403f-952e-f3a781f64ec5",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "42645b2e-6f49-4d90-8ec5-63755509f652"
        },
        "item": {
          "id": "bf59bf90-233d-44d7-8f6d-be073b1506d3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4e21b903-0111-42ed-9029-f1c37b54ad25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "991129ec-9e1f-4489-8af8-87ee5d8a97ff",
        "cursor": {
          "ref": "ae0e5865-660e-47f3-8bf1-2f18306bfffa",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "229bdc8c-3b78-4381-afee-3a59605b09a8"
        },
        "item": {
          "id": "991129ec-9e1f-4489-8af8-87ee5d8a97ff",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "562c16e2-3ce4-4886-8e3b-a2b1ad3dbcc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "412a56c7-9a1a-4d6b-8875-d9ef63794ddb",
        "cursor": {
          "ref": "112a26c3-ffe0-4217-a994-dba2daa59131",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "25624f62-70dd-4367-8aaf-8ed96edc3b5c"
        },
        "item": {
          "id": "412a56c7-9a1a-4d6b-8875-d9ef63794ddb",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3af8f2ae-ed42-4cab-a0e6-98016e5a8b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b290d5a-72b3-433a-b190-a39a942b4d5c",
        "cursor": {
          "ref": "9fc78758-1ede-4d35-924f-fa4a11f0cc95",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "bd72aa5f-22d5-4a32-a0ea-9701f9ee63b7"
        },
        "item": {
          "id": "9b290d5a-72b3-433a-b190-a39a942b4d5c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e8e75dd2-26bb-4dca-b405-1ddb8fa61cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653d47b2-2071-4ee7-81f3-6fd6dc9fffbd",
        "cursor": {
          "ref": "150de0c7-5928-459f-a39b-d6462b75273d",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "aca77b17-1863-4404-9e74-69483d4484b8"
        },
        "item": {
          "id": "653d47b2-2071-4ee7-81f3-6fd6dc9fffbd",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8e64e75e-7da0-4080-bd5b-7ce505178a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b39c4a-133a-4d97-86f1-4deeae888b12",
        "cursor": {
          "ref": "61219c18-4fcd-4de3-88d6-f5220bc2b2ea",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "85f25bc3-a302-4629-ae0d-dc395083d720"
        },
        "item": {
          "id": "c5b39c4a-133a-4d97-86f1-4deeae888b12",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c5fa0a29-0345-4414-8108-bfb5a795b613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ef8c43-3957-4eab-88cb-9a21f1acf8f1",
        "cursor": {
          "ref": "57add1ce-5ddd-41c1-bfa2-c29751bf0221",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "fde53f86-641f-489e-a00d-c7f8810a4ff2"
        },
        "item": {
          "id": "c4ef8c43-3957-4eab-88cb-9a21f1acf8f1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "463c4deb-13ad-41b3-a84c-ef5eb0c14524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164774b1-a605-47e6-8e9b-6628bb8a9509",
        "cursor": {
          "ref": "d0ab314e-e5a8-4d3c-9fc3-fcf3df13ce3a",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e591674e-1bf0-4cc1-a040-c1de4556eb33"
        },
        "item": {
          "id": "164774b1-a605-47e6-8e9b-6628bb8a9509",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "80cb6b13-d0b8-444b-a292-cac3cf67f469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb4e965-410c-4bdc-ae0a-9d1fc9fb7c6c",
        "cursor": {
          "ref": "1652f595-8fbf-4d2d-8d8d-a7446bdecda8",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a217d40e-b5bf-44cd-9c67-d4091cb05f40"
        },
        "item": {
          "id": "1bb4e965-410c-4bdc-ae0a-9d1fc9fb7c6c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "72f3901d-46b0-4e39-9e4e-c39d834d1bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab963dc-3782-45eb-a5ae-6d823e7de056",
        "cursor": {
          "ref": "708985a9-5c5b-4825-8922-907b75fa8daf",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "72981de9-b145-4089-ba7b-e884c8fe5922"
        },
        "item": {
          "id": "9ab963dc-3782-45eb-a5ae-6d823e7de056",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a2769fc2-7c61-4696-8aca-e9b1b02f032f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "defe0083-f2a1-4264-a039-150a89539cf0",
        "cursor": {
          "ref": "8011fcd5-5362-4676-9d3c-18d928c04600",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d41f046f-c59a-4909-8eed-1d0e1c70eb8c"
        },
        "item": {
          "id": "defe0083-f2a1-4264-a039-150a89539cf0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9d5bea76-b411-4c44-bc8b-d6dc7dc0d17e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d156c6c7-73dd-4aa4-a568-c500c4abc0c3",
        "cursor": {
          "ref": "f131d1dc-1e26-4fab-8097-4270972057f7",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "9c95b57e-82aa-4a03-8cec-e788ea0502da"
        },
        "item": {
          "id": "d156c6c7-73dd-4aa4-a568-c500c4abc0c3",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c171a481-c503-4319-944d-d95955974c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8fe9fb-6000-4870-9274-a0454a769a4d",
        "cursor": {
          "ref": "e3deacc9-b0f1-4fc0-a0d0-21b082379b40",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f8e1e0eb-72d9-4dcf-a335-9dd1506a704d"
        },
        "item": {
          "id": "db8fe9fb-6000-4870-9274-a0454a769a4d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c34ca87e-41ad-4974-aee2-7e9fc7b4f446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce66fede-7ceb-45a3-acc6-ea995a47e433",
        "cursor": {
          "ref": "872d9ad1-59b3-4b73-a432-7c50287bc529",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c82fa231-ba2c-4b36-abdb-371ebed8abce"
        },
        "item": {
          "id": "ce66fede-7ceb-45a3-acc6-ea995a47e433",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "382ce967-0a2c-4edc-a0f0-3c5ab9dcb267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7979116-5978-49b0-852a-f690d729e756",
        "cursor": {
          "ref": "e9df5804-11df-4273-a92b-e61467ec5dc3",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b4703aa6-6dfd-426d-a341-851cbfb4bcdd"
        },
        "item": {
          "id": "c7979116-5978-49b0-852a-f690d729e756",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a3591804-9d9d-4dbb-b827-6523a779399d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc73f888-faac-4aaf-9ba2-0241ccfce7c0",
        "cursor": {
          "ref": "c17c2c4d-7bda-40ee-919f-603910df3c65",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "983c743a-b313-42fd-b38d-5feaef8e9f93"
        },
        "item": {
          "id": "cc73f888-faac-4aaf-9ba2-0241ccfce7c0",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "6eb8e1d7-886a-4696-a1f8-7b0daade8991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00399c2-c4b9-46da-b661-9e7d20e143e8",
        "cursor": {
          "ref": "fbcdd659-9a8e-4819-8360-9ab2af7798aa",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b581abaa-e950-4f38-bad2-1ed4ee544bf9"
        },
        "item": {
          "id": "a00399c2-c4b9-46da-b661-9e7d20e143e8",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "4df821ae-21f9-4432-b001-0f522a2c5ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47144020-9d43-479b-96c9-aff9d2e65cef",
        "cursor": {
          "ref": "a1f17bee-f2ed-412e-8e8d-39e7f20776f6",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9a5b9e65-a5d9-450c-84f5-e469bcbcc568"
        },
        "item": {
          "id": "47144020-9d43-479b-96c9-aff9d2e65cef",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "448e091c-2e3e-4db1-ae68-dc68b23cf78f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7bf051c-a41b-458a-bcf4-bd14c4fb92f6",
        "cursor": {
          "ref": "10ece483-cb60-4252-80c4-4ee32b1d5c22",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2c6a2809-843b-4d38-a425-57a2a7917f02"
        },
        "item": {
          "id": "c7bf051c-a41b-458a-bcf4-bd14c4fb92f6",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "cb7129dd-4b36-4932-851c-bb6b44f3acb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c5de39-e2b0-446a-b81e-0aa1b1e3ac7e",
        "cursor": {
          "ref": "e5a44255-e6b2-479b-be21-aa2ca870cc32",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4e32d390-79fb-4b24-8288-88afcd38fcd4"
        },
        "item": {
          "id": "e6c5de39-e2b0-446a-b81e-0aa1b1e3ac7e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c5f90433-b123-4e57-b4cb-dce46069f0d1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 81,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f468f66-ee00-4eef-8244-fbce44660d4d",
        "cursor": {
          "ref": "ebc9fdd3-8609-4d5c-9f40-2aea34eb6dc5",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2aefa9e2-abc6-4d4c-9f4d-6c0933e18449"
        },
        "item": {
          "id": "6f468f66-ee00-4eef-8244-fbce44660d4d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6321f718-6e93-43a4-aebd-1d6a9492e024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd8e78e-f496-4221-aae4-68965ca28248",
        "cursor": {
          "ref": "d60d942a-ad73-4b58-b23b-edeb1d8d420c",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "60744fe3-c779-4b26-b1df-a58e74a576d9"
        },
        "item": {
          "id": "9fd8e78e-f496-4221-aae4-68965ca28248",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c6df19d9-85b6-4fe2-a06c-b4e9d84f0c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e6bad6-eb77-4e1c-860d-0de688a4ac6a",
        "cursor": {
          "ref": "41338bba-1506-43ca-ae60-e068e5bf2ee0",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "62d94aa9-21c9-4a3d-bb4b-d4fd81576e2b"
        },
        "item": {
          "id": "15e6bad6-eb77-4e1c-860d-0de688a4ac6a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "da2b7da9-5533-4349-a25c-c67ab5d55b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41aa607-b6df-41e1-8717-92da1199b715",
        "cursor": {
          "ref": "e1d73f37-94e9-4610-9e94-484904c7d526",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d4d67d57-0dde-44a4-b32b-9aeb835bdfe8"
        },
        "item": {
          "id": "f41aa607-b6df-41e1-8717-92da1199b715",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4ecd8cd5-795f-482c-aca3-46f0aaa55da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26213081-75af-4a61-86d4-98560be777b1",
        "cursor": {
          "ref": "28953821-5703-45da-9b22-b6b7431f95f4",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2100bfd2-ae49-42c8-a859-05e1d540aa4f"
        },
        "item": {
          "id": "26213081-75af-4a61-86d4-98560be777b1",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e5994097-3392-4399-8262-0a04a8b0fa56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085ed00c-9f9a-4188-9afc-f3b4f73853ae",
        "cursor": {
          "ref": "fbf99a87-cf6e-486d-a625-4f69b1749bed",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "af41c865-23e6-4311-8176-4188d5d87356"
        },
        "item": {
          "id": "085ed00c-9f9a-4188-9afc-f3b4f73853ae",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "11aa6510-8560-43bd-9142-d8966df27b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e21946-3554-4872-9ea4-063eacb4f729",
        "cursor": {
          "ref": "5dd08172-34b3-47cf-9955-76d58526d21e",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "529aecd3-96e3-4a64-8500-8adff91f8145"
        },
        "item": {
          "id": "20e21946-3554-4872-9ea4-063eacb4f729",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a3181ea6-46ed-4d5a-a9ed-e379f93c6fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59800c0c-e1c7-4c64-a000-9ab58ebaf792",
        "cursor": {
          "ref": "6923fb13-5a38-4dda-95ab-fd82c72bf9cb",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e3439550-0d4e-4ed1-9e45-2f8e2ab668cd"
        },
        "item": {
          "id": "59800c0c-e1c7-4c64-a000-9ab58ebaf792",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "865941ed-b1ef-4abb-a17e-280c4982923e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b108a946-e121-4d0a-b6bf-696f67733998",
        "cursor": {
          "ref": "b26b7a08-ec46-49f0-af82-d5d9b39f2acd",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "5cfbcaf1-32a1-4aaf-a3d1-bdb1eb686844"
        },
        "item": {
          "id": "b108a946-e121-4d0a-b6bf-696f67733998",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "abeb4e76-5aeb-4d4f-b985-88cc28b7ecd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a4842e-c548-4d03-8041-6be558e85512",
        "cursor": {
          "ref": "7aa32958-5ba8-41d3-8faa-3e89dbff8d44",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "29cdf5b7-5f30-4b17-a171-f48b3c1f5bda"
        },
        "item": {
          "id": "70a4842e-c548-4d03-8041-6be558e85512",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "084b9e40-69c0-4dc2-884f-adc819650d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3bdf98e-5e6c-42c8-84b1-90c2e1e14e14",
        "cursor": {
          "ref": "e5215bf5-1e04-4b5e-9d34-612a3e1d8f47",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f4e9e6b3-cc30-427b-8b91-5acb32361523"
        },
        "item": {
          "id": "c3bdf98e-5e6c-42c8-84b1-90c2e1e14e14",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "cd0b27b0-4988-4c78-b4eb-1bdf9be28db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5837995d-9291-45b4-b9ff-35bf39a7549b",
        "cursor": {
          "ref": "fce03d5e-fb87-4d87-b304-1c1ccc018d86",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "67e56a84-3d44-44ec-9e5c-59e35ebe5f3e"
        },
        "item": {
          "id": "5837995d-9291-45b4-b9ff-35bf39a7549b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "aa796c6c-3406-424f-ba53-21885863e6ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d754403f-a386-4081-bba2-817170eb358c",
        "cursor": {
          "ref": "1c3c733b-201d-4d8c-9bf6-afa7cd5bb215",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9000a909-bccf-4c43-8cbb-b0188f6a5d3a"
        },
        "item": {
          "id": "d754403f-a386-4081-bba2-817170eb358c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f54662f8-926d-4776-944e-1ca59d90cec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5d47e6-8c6e-4d44-aa7a-ee74dad975ca",
        "cursor": {
          "ref": "fbc1c3d4-0c2c-4675-a7c8-2094e2c0e552",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "82591997-29a5-4946-bea6-b1d600ce2199"
        },
        "item": {
          "id": "fd5d47e6-8c6e-4d44-aa7a-ee74dad975ca",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0f70eae7-76f0-44cc-86ca-285cb0bdc754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f827966b-d71c-4968-a264-99d8150b550b",
        "cursor": {
          "ref": "6e3b9527-744b-4045-8cef-fb6bcc0cf32e",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "7679fbc9-6ba4-4e41-8fba-9e2ae4cc8aa2"
        },
        "item": {
          "id": "f827966b-d71c-4968-a264-99d8150b550b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "65576c32-4b9e-4abe-8075-f2b500dfc083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db929fc-cf60-4c56-a6af-a006c709c0eb",
        "cursor": {
          "ref": "8ea5f942-da63-4b30-a959-4219a6821d97",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b3f2118c-a563-4db6-b49d-85e8e824eb77"
        },
        "item": {
          "id": "3db929fc-cf60-4c56-a6af-a006c709c0eb",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "087eb19e-d3f4-4f49-b52f-5aedb9d5dce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b19f20-49c3-4383-b301-e1856b5e3440",
        "cursor": {
          "ref": "54b81ed8-49c2-4667-96fd-06116541040a",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0a7af9f1-ee02-4e02-abe2-afe7b050f0db"
        },
        "item": {
          "id": "89b19f20-49c3-4383-b301-e1856b5e3440",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "523f91ed-9650-4270-8fd7-1f01a045e081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a04aa9-3309-4731-a490-86f85def8333",
        "cursor": {
          "ref": "698deebd-5c85-4a98-a6b5-b5b2bf7a9478",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "dd79d6f8-da83-42de-91e0-66d262f51752"
        },
        "item": {
          "id": "35a04aa9-3309-4731-a490-86f85def8333",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6ffe6b4d-1286-496a-967d-235e9776cd6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e60a22-3442-4275-9d5d-53e8f90105a0",
        "cursor": {
          "ref": "f452b5e0-a35c-4353-a8aa-ce43c216620a",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c0188d20-3bd6-402e-8cdf-5278e38a982b"
        },
        "item": {
          "id": "72e60a22-3442-4275-9d5d-53e8f90105a0",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d1ec08f0-cb33-4c25-b281-99222d5992ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b49bce3-a1e1-4aa4-bf63-f25f58abca67",
        "cursor": {
          "ref": "2c695108-5237-4711-8c74-e47b1a29233c",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ec535ba2-22b8-467a-be0e-fca6e9b39019"
        },
        "item": {
          "id": "5b49bce3-a1e1-4aa4-bf63-f25f58abca67",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a27983d5-bea4-47ff-94f1-66f4e92c5984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f63723d-5e46-498a-b422-407e2a90f6e0",
        "cursor": {
          "ref": "6c05ff2a-a1f5-4f58-abce-77968a5cf6c6",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "01971611-fe72-46c0-919f-e1158b847c12"
        },
        "item": {
          "id": "4f63723d-5e46-498a-b422-407e2a90f6e0",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "90253911-58f1-49b1-98bf-9bb00acdbaae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7dfbdf0-ff18-4263-9f04-80538a397125",
        "cursor": {
          "ref": "c7b69262-339c-4f53-9f1a-20b55b559807",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4808c6d1-5237-4824-80a4-e63f98a4177e"
        },
        "item": {
          "id": "a7dfbdf0-ff18-4263-9f04-80538a397125",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e01c3031-b3d1-41f9-94dc-9f27eda45c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0676033c-748b-46a7-8a0c-e04cb3057899",
        "cursor": {
          "ref": "89288e5f-1168-4807-91d0-96bd2c5ba71c",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f522dd2c-09f3-4d1f-b890-c45de14d7d65"
        },
        "item": {
          "id": "0676033c-748b-46a7-8a0c-e04cb3057899",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "60419dba-ef59-4d5f-86d1-4188c49d5f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "686771bb-42c4-4745-aa70-9f6cb5664f63",
        "cursor": {
          "ref": "0c502058-e1d2-490f-a9e4-1aa9b0e31ad0",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0516f0c5-9649-4426-b4d6-5b8588081c8b"
        },
        "item": {
          "id": "686771bb-42c4-4745-aa70-9f6cb5664f63",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e8e0778c-a50d-442e-b8ad-05c9f7583ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dad9b04-5d49-43c5-a319-dc2fc80a57f1",
        "cursor": {
          "ref": "d8b65a81-29fc-4dd6-8c84-921806672eee",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "bd327545-c0d8-4071-9165-a323f350a309"
        },
        "item": {
          "id": "4dad9b04-5d49-43c5-a319-dc2fc80a57f1",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3f4acae7-62ec-4cee-afd1-4a38f1e948ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820c3293-4a8e-4164-a156-6f576b1311ee",
        "cursor": {
          "ref": "1c66632d-d18a-4e3e-8ddf-58b5f2300515",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "3b357112-ed0e-4532-b9cf-f2e466226b34"
        },
        "item": {
          "id": "820c3293-4a8e-4164-a156-6f576b1311ee",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e85e217f-4c19-4da6-92e8-1735a2405e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "166455dc-43ff-4754-908f-d88dc7b4b7bb",
        "cursor": {
          "ref": "97c40625-b2e0-4863-871c-e21f518558f7",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c33fa58c-0f64-4fc2-91ee-75eff8e49ebc"
        },
        "item": {
          "id": "166455dc-43ff-4754-908f-d88dc7b4b7bb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ac60bb08-ff0e-448e-9700-16d8401ea2c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08277eb8-cdbc-4d6a-ba0b-7c5d3af3e445",
        "cursor": {
          "ref": "fd976119-5c3f-40eb-b5e3-0c3a35590e47",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7d66cc1a-8061-4994-896f-c1b3c23bf333"
        },
        "item": {
          "id": "08277eb8-cdbc-4d6a-ba0b-7c5d3af3e445",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a0bec963-b468-4b5c-8af4-b374e6d95b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "900f20c1-b893-4596-aff9-921f5d7c46ce",
        "cursor": {
          "ref": "e41f1dca-9e33-4653-8e2b-e2829255d7eb",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "457b3b8c-9d11-4ef1-8ecd-c8633145177b"
        },
        "item": {
          "id": "900f20c1-b893-4596-aff9-921f5d7c46ce",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "09beabce-828f-4fc2-82f8-0b2a46b403ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d150a667-2d1b-424d-9ccf-44c356506cde",
        "cursor": {
          "ref": "e0a87e65-47ab-4414-96ce-61275c4fd183",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d03cc1ef-4453-4e24-b222-4621a791a688"
        },
        "item": {
          "id": "d150a667-2d1b-424d-9ccf-44c356506cde",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "dd597891-f1d6-4a33-90c1-1c603001c47c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc3b2f5-9a63-43ae-9eae-b01740f26f6a",
        "cursor": {
          "ref": "8546f3a1-57ce-4258-acc2-9b0abee50406",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "52a1406b-90f5-4d2e-9f66-c73563732449"
        },
        "item": {
          "id": "dcc3b2f5-9a63-43ae-9eae-b01740f26f6a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3c19cfbc-dd60-4978-9b6e-eac78c29fdcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a830e4f4-02f1-4ccd-a97a-2506ad55691b",
        "cursor": {
          "ref": "4c88a2be-2359-47fc-a19c-45274c88a83c",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f8fa9c4d-7c74-4649-be98-45ad6673db9a"
        },
        "item": {
          "id": "a830e4f4-02f1-4ccd-a97a-2506ad55691b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "70dcf07e-262d-42ae-8540-1ca1681d1f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f3b176d-498b-4fa9-b039-c63addceb941",
        "cursor": {
          "ref": "7fad917b-4519-4059-966d-9e517f6ccad0",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2a770cca-ca5a-49af-a2c5-76c54530b3ae"
        },
        "item": {
          "id": "6f3b176d-498b-4fa9-b039-c63addceb941",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "695113cc-10d3-4968-aa8e-777a3f389091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1241fb60-b9eb-40ee-a963-e5d25c93007a",
        "cursor": {
          "ref": "efef675d-2435-43f5-9cee-6520f53a83c6",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0bacd561-f8e2-4c3c-aa8d-d4a751823ce2"
        },
        "item": {
          "id": "1241fb60-b9eb-40ee-a963-e5d25c93007a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3baea506-6c7d-402d-93a2-04dd23c2d0c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c4e93d-d317-43bd-9e9c-25aae02ac356",
        "cursor": {
          "ref": "cddfce86-45c3-4463-8172-a85e325a7d1d",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "09eeea7a-09ad-4590-959b-a2ebb9e2079a"
        },
        "item": {
          "id": "18c4e93d-d317-43bd-9e9c-25aae02ac356",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "52a3c2de-e213-4471-bfbd-658b0e217bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b61fc7e9-1079-48fc-80e8-31c8f6f55eb8",
        "cursor": {
          "ref": "8a2498a1-30d5-49ab-ac9d-d7a4fe225700",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ed2fda99-54a0-4b54-9bb7-e5ad34de3b62"
        },
        "item": {
          "id": "b61fc7e9-1079-48fc-80e8-31c8f6f55eb8",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3f094a16-36a5-49cc-87cd-1ab0ffdc64e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83964b2c-cd3b-46ff-a9be-7a8009fc2d19",
        "cursor": {
          "ref": "030d947e-e653-460a-bf5a-ab64e5eee89e",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "fb2a4b13-2a89-4251-880a-2743084ccb4c"
        },
        "item": {
          "id": "83964b2c-cd3b-46ff-a9be-7a8009fc2d19",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7adb4e6e-16be-4a66-a165-aab578794b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39444096-17ce-4801-accb-2dc0450d8061",
        "cursor": {
          "ref": "204ed7b6-4906-47cb-86dc-2d9b0d27f519",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "fcd073fb-9a13-4cb1-8a63-73220de27cc3"
        },
        "item": {
          "id": "39444096-17ce-4801-accb-2dc0450d8061",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "23b13e4a-4864-49bc-8014-c1b58c20d5c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "714f5f2d-9311-49ac-acdc-1b03bc81555d",
        "cursor": {
          "ref": "4d0feaf9-30de-4eba-8039-60fd65b3027d",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "dd728161-1c50-44ab-af4d-6f0611da9f50"
        },
        "item": {
          "id": "714f5f2d-9311-49ac-acdc-1b03bc81555d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "61a4a451-c1b3-4843-aa8c-254b2f291f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a388e8e5-d24a-4236-9ac2-e1b09054a979",
        "cursor": {
          "ref": "b7862f9b-64dd-44d0-b888-cd79054dfa9b",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "3d34abcb-743a-4a81-988c-5c6e6cacc7ad"
        },
        "item": {
          "id": "a388e8e5-d24a-4236-9ac2-e1b09054a979",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ff68b119-0f80-400b-94db-a5334d7de929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee755d6-ed12-4876-82f2-775e0f446291",
        "cursor": {
          "ref": "50fd1dab-7767-4690-a96c-349619984f75",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7af7fa07-9769-4cb6-8cdb-b62c4f4bde74"
        },
        "item": {
          "id": "bee755d6-ed12-4876-82f2-775e0f446291",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "14dc5500-4f41-4719-b3f8-e6f11e246fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01753b64-298e-4de5-9bf7-0b5c0b19445b",
        "cursor": {
          "ref": "80e8661f-5f03-41c2-94b5-1030b43d3ae2",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "eec21e9b-f49e-41aa-9cd7-fa465e19da12"
        },
        "item": {
          "id": "01753b64-298e-4de5-9bf7-0b5c0b19445b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a1d80f29-a2d5-48b8-b748-b223c068d60e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e380efe2-4f56-41ff-a996-69c363db52c0",
        "cursor": {
          "ref": "6ded0859-e949-45e9-84b1-22defffb17a5",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "13e9b587-8a53-4632-8e1b-0c707fdcd7dc"
        },
        "item": {
          "id": "e380efe2-4f56-41ff-a996-69c363db52c0",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "38607549-11f1-4de5-9613-91807a2a6c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdcd5086-cc1b-4b34-bb17-20fc7b66aa0d",
        "cursor": {
          "ref": "4d23636d-c5d7-4e40-8cb7-306d4b116f66",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b5cd5898-910f-49b5-a3fe-2bdc79c5ad21"
        },
        "item": {
          "id": "bdcd5086-cc1b-4b34-bb17-20fc7b66aa0d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "736cbcf3-bfe9-4e95-967b-ed6cc5273307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d32a691c-1ab5-45fb-82bc-ea1f7ea76ed9",
        "cursor": {
          "ref": "c9495070-1bac-45b0-9e77-8ffa7a2ab3ae",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e8d2a3e6-7258-4e08-b4b2-c8b3735130c6"
        },
        "item": {
          "id": "d32a691c-1ab5-45fb-82bc-ea1f7ea76ed9",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c36c88bb-9712-4551-bc54-9c32fdcbabb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "304d2bf5-9eca-43b3-b242-d7cf97b6c0ee",
        "cursor": {
          "ref": "606e5e79-fb60-4a77-a522-2d8518077b96",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6f9965af-b9e5-485f-a0e3-88be603de9ea"
        },
        "item": {
          "id": "304d2bf5-9eca-43b3-b242-d7cf97b6c0ee",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "f6b0716d-2f43-484d-a1e3-ff8f6b1664e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35c6e22-dd7a-4359-869b-b8a8b28a5676",
        "cursor": {
          "ref": "3c9b296c-3950-4edb-bb55-c6e17ddfaab8",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b71af17d-d29a-4aa8-aed2-6ffea8a923f3"
        },
        "item": {
          "id": "c35c6e22-dd7a-4359-869b-b8a8b28a5676",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5540515e-405e-4340-837a-123aa0ead429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a68e93-9fc0-4081-8c92-4cbd4b222378",
        "cursor": {
          "ref": "c71f139b-007b-429e-b793-140ed8ec1f03",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "3eac4908-feba-4a66-9bc7-95e54fd4514f"
        },
        "item": {
          "id": "29a68e93-9fc0-4081-8c92-4cbd4b222378",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e13004f1-9fb6-4bee-b687-9aad4b8ba837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d99449-37b4-4b30-984a-72b7b36e33f0",
        "cursor": {
          "ref": "d4395c7b-4de9-40d3-8bcf-1f4097841b80",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "19127e67-c5d9-4f55-bfcd-67f482c77e9a"
        },
        "item": {
          "id": "f3d99449-37b4-4b30-984a-72b7b36e33f0",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ea15479d-3146-4506-b477-54ffbc813635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0822eb59-5db3-45ca-85f1-a3af255013db",
        "cursor": {
          "ref": "3f76b61a-ef5a-4a5a-ae3b-6e977bf3384a",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "36db263a-65a3-48dc-80de-cdca91a5accf"
        },
        "item": {
          "id": "0822eb59-5db3-45ca-85f1-a3af255013db",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "28b32b44-0292-4078-85c5-40bd43e5963c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa6ab96-5c7c-45e6-b7c2-4eb765a43aa5",
        "cursor": {
          "ref": "731911ec-ff13-4bfa-b8e8-90087d954ce4",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0e0f6c58-6448-4bef-a98c-8b034a7cc1d7"
        },
        "item": {
          "id": "6aa6ab96-5c7c-45e6-b7c2-4eb765a43aa5",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "370c11c1-11ac-4505-9008-d31956330633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bfabb3a-ec09-4f22-95c8-171861228a58",
        "cursor": {
          "ref": "ae73d726-3fde-43c3-98e4-cf36b10acda3",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6a2d347c-2a5f-40c6-a409-539dc5616e06"
        },
        "item": {
          "id": "1bfabb3a-ec09-4f22-95c8-171861228a58",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "64f6fe92-149d-4ad1-b9bc-77f504e56ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39da94d7-1419-46fb-affe-dde748880715",
        "cursor": {
          "ref": "df7464ca-d3f2-44d3-923c-f4a92655fc5b",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4a7ad10c-a2c4-47f0-a853-856f4052ab96"
        },
        "item": {
          "id": "39da94d7-1419-46fb-affe-dde748880715",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "167b9385-f466-4064-ae52-6138e0eea8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3114ac6-54e2-473b-ad09-dd4490bf4823",
        "cursor": {
          "ref": "9e8ac5ab-ad18-42f0-91cf-8875bdb75f42",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "802eb2ec-31b9-422f-9267-860439a1c0d3"
        },
        "item": {
          "id": "c3114ac6-54e2-473b-ad09-dd4490bf4823",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "80d5a167-0d65-4e21-99fe-c3ce959b21c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8916aa-2a8b-4b2c-a6a3-6b3b2f95e360",
        "cursor": {
          "ref": "c9c56c10-bbfd-4767-9c9b-0c0b97139eb9",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c825eea4-2a67-4e17-9c38-b49e44b4d7f5"
        },
        "item": {
          "id": "ac8916aa-2a8b-4b2c-a6a3-6b3b2f95e360",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2bb4f319-4a41-43b7-831d-45f048f76ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "644de45c-aeb0-49d0-941c-86e810749746",
        "cursor": {
          "ref": "582dbfc2-bd21-46b3-8533-6e0ad2dd7241",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8792a865-b651-4565-a0b3-ac498578a976"
        },
        "item": {
          "id": "644de45c-aeb0-49d0-941c-86e810749746",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "74d0aaf5-9e03-420e-8a24-8e58a10708d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b95e701-c48c-4a8c-8432-4e2b0af23d14",
        "cursor": {
          "ref": "67da2075-f93e-4364-80a4-e730240bc37d",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "36c5f3ef-9fe7-494f-b566-20fe89653073"
        },
        "item": {
          "id": "0b95e701-c48c-4a8c-8432-4e2b0af23d14",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "46e6a283-8fdf-46b4-90b8-066558e3df28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2347e719-25a3-4d16-99e7-8420cc0c07fd",
        "cursor": {
          "ref": "830a3181-0959-4bd1-9c03-b10bd2a2b56a",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "5169022f-c3c7-4725-b3aa-46fa49866182"
        },
        "item": {
          "id": "2347e719-25a3-4d16-99e7-8420cc0c07fd",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "1f781327-a8d2-4168-9640-3b1fcde6144f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b257b63-12f5-4fe7-a317-3b9608677ced",
        "cursor": {
          "ref": "cb47214c-f744-458c-9ea2-40f13c45f2cd",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d718ce74-72c0-45a7-a032-c31d8e73349b"
        },
        "item": {
          "id": "3b257b63-12f5-4fe7-a317-3b9608677ced",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d571659a-7a6f-4819-b48b-7ca1d8318267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c403d4d8-9963-4745-9115-cc3b9e9a75bb",
        "cursor": {
          "ref": "e7795213-06f4-4b6f-9688-f47e5c677a61",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "84d07836-1da2-460f-89d5-b12322b3c2c5"
        },
        "item": {
          "id": "c403d4d8-9963-4745-9115-cc3b9e9a75bb",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c34c67a7-8c9a-4096-8b7e-831896b2c550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c548596-c57b-4190-aaaa-87f0b0a85bcb",
        "cursor": {
          "ref": "507f13bc-7254-4513-a65f-7f3656a11b57",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4126a2d5-6d3d-487f-92f6-487e3c9ed7b5"
        },
        "item": {
          "id": "6c548596-c57b-4190-aaaa-87f0b0a85bcb",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2dfda009-d5a8-404b-adb3-fe2fffb18c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4286cdb6-521e-4f92-b53f-746a0d77f484",
        "cursor": {
          "ref": "e38eea66-b8ae-43de-b724-ef51f0ae8747",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "8f1b8073-69f5-4b94-80b8-11ef51c7e6b7"
        },
        "item": {
          "id": "4286cdb6-521e-4f92-b53f-746a0d77f484",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "89fe0d5b-f766-42d3-9616-98246e0189a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d954fccb-3860-4644-9ac7-d59c9c814de5",
        "cursor": {
          "ref": "2f066c7f-bc9d-448b-81e3-4479659836b7",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "eb4f1641-ba14-45bd-9a2e-24c8e86c2c7e"
        },
        "item": {
          "id": "d954fccb-3860-4644-9ac7-d59c9c814de5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1381a6f3-04b3-4824-86ed-09eba68751e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e783ad2-52c5-4ee2-84e5-2103c0231f8f",
        "cursor": {
          "ref": "234dd26f-6c4b-4455-8e1f-2e155529c811",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "aa94f456-2959-481e-8337-f9b0ec2193f0"
        },
        "item": {
          "id": "4e783ad2-52c5-4ee2-84e5-2103c0231f8f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6d3cfff3-634a-4600-91c6-07a08d975c53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf708f1-e9a0-4526-86c7-9ecbb17cb5b2",
        "cursor": {
          "ref": "e71f23e7-3ef1-47da-8579-9ea75a04ec24",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "57d445fa-e84c-4c31-9f3a-c1170f7a778e"
        },
        "item": {
          "id": "baf708f1-e9a0-4526-86c7-9ecbb17cb5b2",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8b09115b-cadd-4cfc-8cc6-52ad5d77e211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11efdd38-1aa6-4392-87ca-c0cc80a961bb",
        "cursor": {
          "ref": "cefb304d-fb05-4a17-9bc5-1509aa4b15f2",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "5b8c7b07-2bac-490c-bf6d-911847ca0075"
        },
        "item": {
          "id": "11efdd38-1aa6-4392-87ca-c0cc80a961bb",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "76f89741-9c38-4ea2-8fdd-a2a6b472caf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "234b1418-38f6-45ab-9b8e-ebb73e038c13",
        "cursor": {
          "ref": "bcf147a6-9333-4bb5-b3d3-10609afe0b62",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "60bdfb09-8367-48af-aabd-b456c6c154af"
        },
        "item": {
          "id": "234b1418-38f6-45ab-9b8e-ebb73e038c13",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "74785839-5264-4ab3-9843-bcd50eed925c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e388902c-ab5f-4322-94fd-019582046d35",
        "cursor": {
          "ref": "fea4081d-efa1-430d-a0a1-7bd9f23fb780",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1d4bed23-f481-4857-9353-c42b2e0a0a72"
        },
        "item": {
          "id": "e388902c-ab5f-4322-94fd-019582046d35",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "be4cbfeb-a20a-45ed-8fee-a9955c74695f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f04d731-60f1-4ad6-a2ed-f1db8cce8ffc",
        "cursor": {
          "ref": "8714e9ce-4022-404d-bebf-ea77658e9e76",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "305a1feb-dac3-4a41-9365-7c7c37a3f084"
        },
        "item": {
          "id": "2f04d731-60f1-4ad6-a2ed-f1db8cce8ffc",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "78fcdf04-10dc-4478-b37d-495bfdc1fab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add98909-bae4-40a6-a17b-b6b5c3ad5c77",
        "cursor": {
          "ref": "4001ea3c-963b-4574-99a4-c4f3339beff7",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "cb3a815d-f45b-4a7f-b942-86ea89509935"
        },
        "item": {
          "id": "add98909-bae4-40a6-a17b-b6b5c3ad5c77",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4b863bc4-c3a3-4f20-8cd8-95744d2ff6ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "103e54e2-139f-4ec1-a16d-f444f21918c4",
        "cursor": {
          "ref": "a1052f0f-d631-4e6a-a1ad-7e0d846fbf75",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "600c0ace-a11a-4912-8a10-f8c2d3392016"
        },
        "item": {
          "id": "103e54e2-139f-4ec1-a16d-f444f21918c4",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "53511098-c935-4956-b363-98ddda1bd4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7fd4f5-e827-4044-899d-2ee843cc3892",
        "cursor": {
          "ref": "dccf91e9-49de-40ff-934b-78d9a4bef216",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "117bf11f-391b-4d92-9ff7-9aafb6b6b9d3"
        },
        "item": {
          "id": "fd7fd4f5-e827-4044-899d-2ee843cc3892",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9e83b7f2-e2d7-4cb1-96e1-b5abcf66ecb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab27678-5881-46a8-afbe-91288f5d3a8f",
        "cursor": {
          "ref": "a3179d28-6c5c-48b4-99c9-80ded5440b70",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "7ea63382-dda2-445b-b928-dffde8f9c2b7"
        },
        "item": {
          "id": "dab27678-5881-46a8-afbe-91288f5d3a8f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4d9880e3-e6e2-4ae1-8ded-cf5ef305d089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ddc840b-bc68-47ce-aefb-d8897165f44b",
        "cursor": {
          "ref": "81a91bbc-f5ea-4a31-8589-d2e3bc2ec0b6",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "a42f5739-c7cd-496c-8336-628d74735621"
        },
        "item": {
          "id": "8ddc840b-bc68-47ce-aefb-d8897165f44b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "5d6b4982-d8ff-4bca-b3ac-f7c796692c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1a7583-5ef5-4d38-8a7f-a262cbf1e005",
        "cursor": {
          "ref": "98be2ef1-c59b-440c-89e6-2a7e8afb879e",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "7fddb0d6-891b-4261-af53-3555e9db55a1"
        },
        "item": {
          "id": "dd1a7583-5ef5-4d38-8a7f-a262cbf1e005",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1ec29f72-6917-45f2-a612-0fea9501a688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d295d470-464e-4a81-9caa-b8a5d926bbff",
        "cursor": {
          "ref": "268deebd-a38b-4134-94ee-52abe4d12947",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "8cf0877b-80b4-4967-b8fe-51173e584d68"
        },
        "item": {
          "id": "d295d470-464e-4a81-9caa-b8a5d926bbff",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e555f3d5-3b59-4b67-9c23-2886fb07dc7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d24d115-7f31-4ae7-b6e6-4519a50a2de2",
        "cursor": {
          "ref": "e64e31f9-8a98-4ea7-bb15-bc8feaa94ef4",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "b9bca893-304c-4c59-973c-86481a9bdfa2"
        },
        "item": {
          "id": "8d24d115-7f31-4ae7-b6e6-4519a50a2de2",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5b061431-3582-475f-a563-ca7812a20d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e7c856-bbc5-474a-b13c-ce21dcad7fe8",
        "cursor": {
          "ref": "17c2f202-6b5c-4b5c-a249-93c0171e88e5",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "0dfced1d-0fba-4be1-b51e-c22b1f5c9aaf"
        },
        "item": {
          "id": "39e7c856-bbc5-474a-b13c-ce21dcad7fe8",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c33aec4e-bb29-49cc-ae5b-4fb9befc3b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42d3683-3ab5-46e9-b617-aaa033b99d79",
        "cursor": {
          "ref": "a9e67554-5c95-4c8b-b470-a212f3326051",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "5e921b40-339e-4d23-9334-93d899e236aa"
        },
        "item": {
          "id": "b42d3683-3ab5-46e9-b617-aaa033b99d79",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "72771da1-5a2c-4588-802c-498537b0368c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93abc82-7f73-4551-8b4e-7550fce9bce8",
        "cursor": {
          "ref": "d31d21c6-95ed-4aeb-a5c0-18fe079be0d3",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "57bf430f-bcae-4d7b-994d-cdb4981f4c86"
        },
        "item": {
          "id": "d93abc82-7f73-4551-8b4e-7550fce9bce8",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0bfc91c4-311a-408b-b29b-e98e9629924b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2489cb-b340-4a7e-98a4-3bd194d9e722",
        "cursor": {
          "ref": "351a1dfd-f5ec-41c4-b52b-d4d3ddba4e6c",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "033d341e-93f5-4ffc-b345-0252d18373f3"
        },
        "item": {
          "id": "6a2489cb-b340-4a7e-98a4-3bd194d9e722",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7055ea27-05c0-4c9a-be55-319a7e99b2a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2291e308-4294-4bbc-bdb7-845084d439fe",
        "cursor": {
          "ref": "325df619-1747-4069-934c-87e0ebdf8623",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "0f39386b-972e-44f5-a5d4-a8d234e1a6fb"
        },
        "item": {
          "id": "2291e308-4294-4bbc-bdb7-845084d439fe",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8f8142d8-2981-4c92-866b-4c65ffdaf166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230c2a91-e629-4a3c-8d27-4415d467b409",
        "cursor": {
          "ref": "9f681601-2dbe-4686-96ce-8185bfb767c1",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "4ea56a2c-9f88-4c02-be49-4ad64fd8fe28"
        },
        "item": {
          "id": "230c2a91-e629-4a3c-8d27-4415d467b409",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "0dd4f9b8-07f5-42f2-b25a-06eeaa86f4ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d81dd9-0868-499b-9c26-ff8c75b7c866",
        "cursor": {
          "ref": "6781a585-59cb-4081-aa0c-910713fbc976",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "e47da8c5-a54a-478e-903a-be0001518708"
        },
        "item": {
          "id": "29d81dd9-0868-499b-9c26-ff8c75b7c866",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "91add6d7-ed89-4a1f-ad44-39b36f10ab3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16cc0dd3-7426-4abe-8eeb-9cf4b7f1b68a",
        "cursor": {
          "ref": "ece130af-6eb4-48f1-b954-5158d8b476b3",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "4ae85c14-3958-44e3-911f-05280e80ac12"
        },
        "item": {
          "id": "16cc0dd3-7426-4abe-8eeb-9cf4b7f1b68a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "407df0e6-c427-4743-83d1-38850d4e66c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdabc2e4-506f-4b97-8853-c61abc5649bd",
        "cursor": {
          "ref": "263bd788-693c-4f2f-aae6-bddd53e6c399",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "ccd6aca0-4c66-42e5-bf72-38bc43e18593"
        },
        "item": {
          "id": "fdabc2e4-506f-4b97-8853-c61abc5649bd",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0df907a9-79be-4183-b43a-69c8bbd6a47e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ce9d39-dd0b-4bca-9368-42e1ce6b8158",
        "cursor": {
          "ref": "d24a73fd-38b4-4027-8209-31d28cb3d93e",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "f59a7992-91ff-4c18-9f35-bac2586e0ebb"
        },
        "item": {
          "id": "c2ce9d39-dd0b-4bca-9368-42e1ce6b8158",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3c9b283c-d7bf-4b98-abbd-84b0fe1b2bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2805a11c-cd5c-41e4-b0ee-be16ba1bed30",
        "cursor": {
          "ref": "600a2b68-ccd8-4575-b9da-d5f156a2c108",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "0de4dbed-9837-4f31-a9a4-95cc6e6f120c"
        },
        "item": {
          "id": "2805a11c-cd5c-41e4-b0ee-be16ba1bed30",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f5d8a7ff-24c9-4fdd-bcb7-ee70316304e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1340e01-2016-4b1a-b209-e0dfd8505fa7",
        "cursor": {
          "ref": "71fbd62c-e923-4a59-87b1-4df9ebc426f5",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "51634943-5b8d-4a83-bb5f-b7c26aa4893b"
        },
        "item": {
          "id": "e1340e01-2016-4b1a-b209-e0dfd8505fa7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "25b69573-cf7a-49f0-9eaa-5db671e458ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e171f2f8-0b13-4fce-8632-a6311fb0a26a",
        "cursor": {
          "ref": "34c58352-993f-4208-a955-1f83319e660f",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "5ede8977-c450-4e8d-80d8-bf75f75cfb2f"
        },
        "item": {
          "id": "e171f2f8-0b13-4fce-8632-a6311fb0a26a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8bc28e45-98d0-4051-a3cc-d6b59db78026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1a8e20-8608-44e5-a9a7-a2f502c17c13",
        "cursor": {
          "ref": "b8cf8f99-9d7a-4fab-9461-f4335ad2aa6b",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "e0b20d2a-3c9c-4399-a987-dc6da4fad472"
        },
        "item": {
          "id": "0c1a8e20-8608-44e5-a9a7-a2f502c17c13",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a9e6d21a-9851-4347-a556-ba33c87135bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f3ce87-fa16-43b4-8c87-b02813a2153d",
        "cursor": {
          "ref": "f8df1afb-99ba-48ff-b849-bdfb31615792",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "e8f7f2b8-a442-456f-b850-843b3bcaa9a4"
        },
        "item": {
          "id": "71f3ce87-fa16-43b4-8c87-b02813a2153d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f0c0ed1d-14cc-4664-943f-12de4a38bb69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd711ea-5ec4-43f0-8474-2fa68573836a",
        "cursor": {
          "ref": "25d3fab4-1370-4fa5-8f62-0af525154b2f",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "1ecd3ae6-4963-4258-aed1-2fb7efa572d5"
        },
        "item": {
          "id": "fdd711ea-5ec4-43f0-8474-2fa68573836a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "868e58eb-123f-4ba2-90b0-0d96686249df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "badfce96-ee9f-4ad1-8649-6a7de9bcec4b",
        "cursor": {
          "ref": "79fd9390-c223-419f-a2f7-6bbb93dc7fa5",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "9d2c8dee-4f47-452f-9a09-c5b4eef435f4"
        },
        "item": {
          "id": "badfce96-ee9f-4ad1-8649-6a7de9bcec4b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2dbf86cd-ed06-4aa1-94c2-d2f82699960c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee957129-68d9-488c-aabc-454258c7e12e",
        "cursor": {
          "ref": "75e458d0-c89b-4348-9b5c-578f767f89ff",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "861b87cb-28eb-4bb1-8512-118b883d9867"
        },
        "item": {
          "id": "ee957129-68d9-488c-aabc-454258c7e12e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e404f9cb-fc1a-4641-b6fb-7ddb8a13f0c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f94cbd02-a303-477a-8d16-3ddf11c003c3",
        "cursor": {
          "ref": "d2a0db8a-e4d9-47bb-a12b-ba6f23c664fd",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "5e9dd1b5-8a0f-4d8f-b463-c7da01c9d100"
        },
        "item": {
          "id": "f94cbd02-a303-477a-8d16-3ddf11c003c3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "63d36f9d-40dd-47a9-a834-39d72df80e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ad49c7-6a60-47e7-a9a9-9a7498e1dc5f",
        "cursor": {
          "ref": "ac638588-3d7c-43fa-85e4-b84e1e6db894",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "05b6f6a5-e8c0-4496-a860-55345ab88203"
        },
        "item": {
          "id": "b5ad49c7-6a60-47e7-a9a9-9a7498e1dc5f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2b6d2722-37b4-4dc8-b348-2ac3645c41b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada86a75-d652-4c32-91bd-02220f6d9068",
        "cursor": {
          "ref": "abc559f5-5be8-4617-b91e-3f963cff2478",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "70decd84-67bb-4521-bcf7-056b4e3bb331"
        },
        "item": {
          "id": "ada86a75-d652-4c32-91bd-02220f6d9068",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4a12b013-c7b8-4444-99c0-7c276e27b09e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75bb52f5-d5ae-40dc-ac65-f31d762cbb45",
        "cursor": {
          "ref": "2ba8b0e6-ffa3-4656-a4c9-65afc7f2bf9d",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "e80a08df-1b23-48b6-b205-d7ae0722d218"
        },
        "item": {
          "id": "75bb52f5-d5ae-40dc-ac65-f31d762cbb45",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7d7c90b8-cca0-4093-8ca5-d5a094e50ae6",
          "status": "OK",
          "code": 200,
          "responseTime": 123,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad5bd7ab-ca18-4f40-998c-8a4ad5f8230b",
        "cursor": {
          "ref": "301d2ec0-1876-4f93-a580-5477b2a1cf3f",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "a9d6f27c-fc9d-4814-ace6-e8f7ff1195f4"
        },
        "item": {
          "id": "ad5bd7ab-ca18-4f40-998c-8a4ad5f8230b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b5656257-37b3-429b-958d-0f37e7b086c8",
          "status": "OK",
          "code": 200,
          "responseTime": 1577,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f215c3e-d0eb-457e-b902-73a9c7a2b68f",
        "cursor": {
          "ref": "51336d36-5e25-4c6a-9aa9-1e73f6a342ce",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "8de34918-b9c3-4530-af35-f03cfeae288c"
        },
        "item": {
          "id": "2f215c3e-d0eb-457e-b902-73a9c7a2b68f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "00a16678-1441-4f0d-9031-40d139cd0ddf",
          "status": "OK",
          "code": 200,
          "responseTime": 1743,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6e8867-866e-42a1-a374-e7753966034d",
        "cursor": {
          "ref": "51e87b0b-6f1d-43f3-b110-2a2d90a2422a",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "be71672a-32d0-4668-9de5-968ae0d29e53"
        },
        "item": {
          "id": "5e6e8867-866e-42a1-a374-e7753966034d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "28f358f8-8cd5-46c5-a1cd-2406827ded56",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 86,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6e8867-866e-42a1-a374-e7753966034d",
        "cursor": {
          "ref": "51e87b0b-6f1d-43f3-b110-2a2d90a2422a",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "be71672a-32d0-4668-9de5-968ae0d29e53"
        },
        "item": {
          "id": "5e6e8867-866e-42a1-a374-e7753966034d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "28f358f8-8cd5-46c5-a1cd-2406827ded56",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 86,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c78ead35-cf33-40eb-8a15-5f7f016dfb39",
        "cursor": {
          "ref": "452ccbf7-c382-42ff-90a1-b174727f255a",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "8b381217-e4e2-4560-a4ff-5ead50737f81"
        },
        "item": {
          "id": "c78ead35-cf33-40eb-8a15-5f7f016dfb39",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9da02c52-822b-4333-86f4-a9fc5b6f4f1f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d6402d-5dc4-4b98-9cb7-e91f76868846",
        "cursor": {
          "ref": "3bcaab9c-9abc-4fcf-80ed-19137bd0fa41",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "26ecf4d3-8338-4def-b357-faa1621748db"
        },
        "item": {
          "id": "13d6402d-5dc4-4b98-9cb7-e91f76868846",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "53ca826f-0162-460a-8e26-5fcc99db0023",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}