{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "68fd5062-ad09-459a-b4b6-99b60fe192a9",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d45b3e46-cbd2-484b-9c5d-9d688add6fde",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d231cff8-511d-48cf-91d0-f3d88364a7dc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4a9d58ee-88d0-485c-98a0-f689fd6b3d2f"
                }
              }
            ]
          },
          {
            "id": "78f9190c-84e5-42ee-9946-ec9b06b54262",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7e6387d5-eabe-40bc-83f4-1abcef7144ff",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9fdf536d-927c-42d0-b93a-0b6e864fa7ab"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9fd94cff-49ab-4787-9b4d-8167bf2d5234",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c25d1d46-8216-4328-a1d9-b4c1bd5fc1b1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "77dd6b39-734d-4c44-ab33-9627c3c6635e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b985d52c-951f-4661-a871-b09615720768",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "86756f0f-c61c-42a3-995a-b68f2e7da2d2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "54f096f4-244d-4328-bb4e-7a675cb69b80",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a1ecd3f8-4ceb-40e6-81b4-420d811344ea"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "01201bee-78d7-4b01-93c8-31f4d8a630c6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "996a71a4-7a2e-4e1a-81fb-6a23347a393c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "657c5885-9908-46d0-b66b-eca19b0a155d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8dc17526-d859-404b-90fa-3445671e87c8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ae45374e-25b3-4380-a7f8-c1d43d6094de",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "453ca87d-7aab-46b1-a88c-58c4a489169e"
            }
          }
        ]
      },
      {
        "id": "5434ff0d-7b7f-4591-bf32-f91b1728f254",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "afc10321-8fb0-4be9-9d2d-dd253ce9cacc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bc77e6b3-992b-4180-919f-9f9209cabe56",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e287ba87-f51c-4b58-b53b-8738499d18f9",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d735d7e1-6aa3-4953-96c1-464ab9d8dfae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a0156c4-83ed-49e0-9528-cb023752ff28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c4b687-2e67-42b2-a889-d6c517c77e94",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa43654-40e8-464f-9c6c-421260603d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aedfb03c-bdcc-43da-aba0-dd32ee7f20b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab797f74-994d-4f50-aa48-cecc4311979c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01c2dd1-a265-4029-b109-46d1493c43a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d734566-9090-488e-85db-60150f83e8c4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "55cdaaa6-114f-4c99-8017-73c6b6ac9c10",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1c6c3174-3588-424d-b657-3705f5af3f6b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc6122a-4363-4649-a375-4f1ca55dc140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5728072-79e8-4da9-953c-bcc571cf9b7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e238db-2181-44e6-9011-0a5fef9a21eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7004905a-72bf-4972-bf8b-96dbfd9b74b4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3ebd35df-ed85-4108-8122-b4bdd101c005",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f21cc676-58fe-4712-a2e7-4f429575d35e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b991fe7-3292-499f-9c46-3f0703163d03",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e966fd3a-79a1-41d4-b74b-1bced053fdfd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7f815a80-d62f-4f9a-afbe-a7b47ad97951",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "41fa6c44-7c7d-49f4-868e-7cfb81aeac72"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "616761aa-0426-4686-a0dd-c9214d2a1b1f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fc87f22a-d43e-4025-aae1-7bc7146f3e1f"
            }
          }
        ]
      },
      {
        "id": "e22d737b-a126-4772-92ea-522e0a003816",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "5c81b899-26bf-4be5-8fde-c0e9534fb415",
            "name": "Negative Testing",
            "item": [
              {
                "id": "91249ae2-7f0c-4480-99ce-d7ca72f304f0",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1e57787b-6137-4cad-9e62-adc9285a4901",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a89b6fba-fc3c-4003-b8b1-ab3b6975e920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94cd7071-7eb1-4be5-a851-a81967f7c3a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7876f00-0bce-4e7a-81cf-2fb4e8f80105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b88d7e71-876a-407b-9073-3b6e287eddd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ca3966-b372-4ca2-aff2-3f138f7be19e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ac8412-3a9f-4a58-a678-1e89086f7ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0634f538-6c70-4cf3-ad15-671026461630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172a827d-79ce-4be5-b640-292b9fd40755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2c88eb3-491d-4ec9-bf95-c7236890f66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d4dc98-3e77-450f-9b38-4a795b48ce34",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbbc7cc3-d6b2-4d9a-8a0c-d83f9d7db20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51cc49ea-f035-4865-9538-e3362d724db1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33472f52-cd9b-453c-a7c6-f863f55669cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9514fbe3-bc7d-4fa1-ba5b-ec2522d67432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad161f0f-9db4-41d7-842e-99e50b830375",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de46b79-df3b-4cea-bd63-077de1c63879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baae8f92-3d84-414f-874e-6b5907562b52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e6bd99-eb95-46a3-a886-d334c7bf1df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ad62638-c491-4a0e-ad95-960396d4d028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "770fa9db-8115-40bf-b11d-b5dda006ea88",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c69eaad-ff4b-4873-b856-ad06fa37cca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c32db11-25f5-4f9e-99ea-bbd5d9a009c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283c5b67-c5a9-43d6-82e8-d6ad945c9c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3ebb963-9d8b-491c-839d-bc58b082136f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc14ae17-0c40-4f4f-bd96-fddb333e06b8",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e186c166-c589-4788-845f-49d255c3968f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aac91ce-721b-4c56-bd98-ff0008ce6652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114494c8-3f2b-426f-bd37-92340e22b7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cee1541c-bc50-4a58-ac80-17382bd05e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f7558b2-098e-4f41-8136-e5bb52dea134",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4930016e-1938-4748-b487-4db6841c622e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4823c9a-f916-476c-9bd4-b30edd912083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00755af8-90ef-48e9-bb09-83fc8aeb307c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5eb3b88-e1e3-4eb8-98c4-369c2eabee5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4dff360-a84f-456c-823b-253279a1eafe",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec53e1d-7469-4912-afd4-85c47c95dbd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d0d5895-05c5-4a93-a286-100c0b953963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b6c1c6-9f65-4e18-a4fc-7c8a71663062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "693787b3-ce3d-485f-ae53-d141694176b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584713f1-b36e-4176-810f-31ac94f5f177",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c98fcd4-0dea-41b6-aca2-582e37a619e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96ed8040-3349-49ab-ac2a-def42ae76c9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5389717-d3c5-4731-8233-d192fc816764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c00fcb9c-9128-4f9c-9f11-d18554f5449e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee32996f-eb53-4d96-ac37-ec643c68dc57",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe38ab8-b419-4c61-97d3-a6f57f936b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0de155ba-11a4-45a8-85d6-8a2b28aefc32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a7e149-bf45-4c1e-bc58-d9d7f6b6c3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4b5605a-7cac-4010-abb4-b2c602c99396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38003cd4-39e6-450d-910c-97dbe5138d30",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b501f6c2-5ebc-4f7e-9464-ac46272ee264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48face0f-55b9-45a5-91e0-500d85ba7f8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85513d6d-f37b-4ab4-b93c-6cfc08115a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "299443df-1093-4a7a-bc43-fd9aaa478310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10387afb-0433-4a9d-a5ab-049e3a1640d8",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc92ae0a-8752-4bfa-9188-f6513572dd4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbf313c0-e4cb-480f-9cd1-64da5e48b173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "586a6304-1a53-425e-a667-3d89eb9d28c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ca52dec-52eb-4a52-8956-0aff8debb241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b70347-e26e-4823-8d3b-3dbcf2fe51d2",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea8ce616-a694-41c3-a91f-984072ebd5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab82096f-7386-491d-af08-fbcc48c308ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc602d0-857a-4767-9151-6e806728a3a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e26969a-a861-49b9-979a-d432106c212a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e382f65-7fa3-494f-9ebe-a28ff42362a8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27b862c-b958-4227-a656-e53c11c9a0de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15d98e16-2d40-4d81-b12d-9f86f36a374b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b241eabe-e822-43e5-9a95-68c56e2863eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93fff634-863f-484a-a247-5d96e0b5b9e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665d527e-fffe-4a3a-a40f-a3dfd09b47be",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4b27de-991e-4def-aabb-e32a8b82bd7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58f3269c-0a67-475d-9cd2-33791a260754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef069fff-fa8f-4ef7-8f22-eb4de4a0df90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07b3f294-5c4c-4f48-92ac-798596639ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f01a64-b9a5-4166-b565-376d995ae0cb",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aace976-5c33-494b-a818-674b61457602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0861f910-4c0e-4567-92ce-d7217cd0644f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846db186-3c5f-4f64-aa0c-529c2998e1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0a3a9c4-597f-4e68-acd0-cb1052676106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "716d6096-a3ec-4acb-9319-a6db4ea9c72d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d270a0-fb93-42a6-8c8b-a9edd849e05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "709e09ff-d27a-495a-b5a0-4c11a37751fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5308ce94-21cf-4f1e-8a26-67d90752c572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b89b6dd2-631a-48e5-92dc-f8e19bba090e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74da8e02-a57f-44c7-9c62-d960961c561a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b73ed0-37dd-4328-a211-295bf5cf0306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "017059d3-7483-4b2d-ab02-988398336ee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5bea7db-d87c-40f0-a46f-dff1a878686c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c56dfae-ecae-488c-81ed-09865e09a292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c006bc-06a3-4079-bf5e-ebb7683b013d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eaa2770-2faf-4826-b8e6-43efc3f796e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13c9e73b-6b32-4148-9ae3-421c4f8aa90d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4dc423-1054-4c2d-acb2-a1b7d124ca91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c7fb203-ad48-4550-a5d4-695c9cf9a099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e10b8144-c32c-463e-aecb-95a3e938e2f5",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1bf87b8-7cea-4e05-a51a-df3cc9c0700d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4a9bdb6-0a34-41de-934f-f470a59fc0bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83be086-632e-4413-bf10-8e5847db54b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c654461-0c44-40a6-8279-7e3e4ef1b47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5353cacd-28a2-4f25-8db4-53c534fc2173",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a197d943-1838-41ca-9d93-1857b2feaea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8544608-d7b8-4654-b9d4-1187219a0f16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39bd79d9-192c-4f3c-95b8-bae3c7a9ce14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa8baf9a-be25-4dcc-97c4-818ac46cac2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63689030-1202-4a12-9633-1ec8470df322",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e9a3315-53a4-4cf3-8e3a-4352a1993449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aae8cf56-69fe-42dd-b678-13ae261c794e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15dcbe84-91b0-4e24-8f17-cd2e7a300a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc5e1bfe-160c-46fd-b8c1-b8c98714a290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffbc30a4-43ae-41d0-be22-9821234c705a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df89502e-769b-4611-9752-6bd11097bad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5050041-10c0-4c44-9072-c1c035643122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e77ea88f-1d6f-4963-8767-11489df99add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "efe2cc03-6e44-42e3-b852-c0d714868a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732f80e8-36aa-475f-a95f-e2574b5fce56",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a883f8c2-fd00-4444-9f73-26f702d4f33e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c01ebae7-e9bd-4904-ac33-91c35bae2613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d3b468-02bb-4274-8148-4cdf68c10c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a72a3d98-4e2b-4065-a916-4f0579754360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5560336-680b-4de2-ba6c-ebdf5e1dd5bd",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84cc7e0e-c7f7-4410-92d9-1de606b5d95d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ba28fa0-e22d-4134-b4d8-b18173fd4bfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0784a5c4-e8e2-4783-ba24-95aa482a9111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5858dbb5-68a8-4b1a-a40a-a71ab5c9b65f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "804398e8-f6a3-423d-b435-1ec0ce35d040",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f157e240-dd8d-4487-adfb-cefbbf4604b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfbdfd0a-8c1c-43eb-8760-3843612423c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2636ba8-35e5-4b23-bb9e-f23db817a0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea787875-14a7-410b-8353-4f5d98b9656b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c731669-8259-4531-ba91-be611746a874",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d37cbb5-7bfb-4657-8036-a1676039720e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1daa24ac-c5cc-47cd-8ef6-8f70cc525fc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa06dd0-fab6-4d46-8c3e-07a18da94751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "52c32272-88b6-4c26-9d78-5517b9e362fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e28edc-60f0-4d9a-b6b4-da925b7891a8",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "316129b7-77a0-49b2-b8ff-04047f6db94a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a818b8c-59f0-4313-80af-3f86dda710b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c94e6c8-0cc9-4e4e-a12c-a77eead393ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "de4abf7c-e405-41e4-8273-d3fab757c58d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c15019e-6d1d-44a1-ad6a-0fca59502edc",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca73e5aa-a4d2-42c5-9083-9f94cc3ed4fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "337b4db8-0a1b-441a-8257-7be5ab327990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "855fce34-1a04-4f7d-8776-118b8456b242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e96dde5-b2ec-4d43-bd9b-d901442d9951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf29651-2b01-4ed3-8308-77ca693a58a4",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22380e9f-7de7-4a8f-8a02-ae8f4a5de113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13743b68-55ef-4119-85c5-6a599a9c8508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5421b0-0e04-4980-a5ef-10f1f9be854f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "94b69920-7aef-4658-89e1-900b5fc64d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "108101b8-dc88-4791-a25d-41a8dcf119b7",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adbf14cc-b619-4ba6-a3bf-9655e0a767d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73ecafbb-c6db-45c2-a656-9f2a26cece26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66cfa094-032e-482c-80ad-c8619c7bbf7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "147453ed-80ec-4b20-a5e2-ec29ee6c6fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a555f1-a9bd-4e69-b1b4-9a856e14f861",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb5a47a-fc1e-422c-bd14-299d0fecbacd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b756299-b7bc-4295-822c-103538890152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7429a584-3c92-4bce-81b7-632f42549070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b083e6f-4aa9-467b-b13e-1e8ff2e6a42d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abbe86a6-0978-45a2-8c94-06bf05a58ba7",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "275294dc-eb89-4f29-b097-87cdbd2dfbd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2f3512b-e9e9-47c3-a506-d876a3c194eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb180f1d-855c-4ea5-89fa-bf764cd58b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3a176fb-da99-4a91-b1da-933ff231071b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1faebe72-0504-4199-9d37-6806061cc036",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0093646e-0596-4e78-874a-09cc2d767905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c0d6553-b477-40b1-a2fc-c86c733e2781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8987f002-f7d6-4862-86ad-85624b6582e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b328ca1b-ccdc-4140-816c-1bd7ba22efee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4493174e-2d8f-4fd8-b7fa-afe525a66f66",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc67a358-6a6e-4f28-9cc6-521cdc69547a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c0ae789-f6da-4868-9c00-8b591e746376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "733d8f07-3467-447c-a8e5-cd8dd5ac6063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "65fafc73-6620-4dd0-b60e-cae770e3b32c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf63adb5-a0bc-4fb2-adef-056ff5a0e933",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b998a6f2-8907-4b01-9554-b4e9ab121a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7fe61f85-7fe8-4f24-bd5b-5746a169210a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c50887-dfea-4095-afe2-a9eac7a4dd0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "146501cf-daa0-443e-909b-cdf9b165f6b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f8cd516-378a-4988-99ce-a42efebb8c5d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aadeeb6d-933f-4a78-8960-1b1efedc4da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae654e87-9582-4aaa-b1f7-aea82df8abd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "235505ff-83f0-4eaa-83a6-d8119f671329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "877aa19d-ca63-494e-b9be-902c2c556e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d6eebb-1a74-4498-8a5b-c725c27f8def",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ab77b7-e758-4368-8dc2-b5774004ebc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d399a8c1-fa32-4996-ba54-bb1e12779636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190bf053-3fb1-475c-81d7-f0b7b916b3f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b69488f4-f11c-44a9-b227-5615dce44650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4fe37c-5031-4a8a-9562-b50f6a2c6bf8",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03936cd-903d-4b58-957d-a3675cb5f54f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67943b57-972c-449a-a828-e3af32265f2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2f92c9-6193-464d-80f1-88efbedb5c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab88f42b-7d35-4c82-bda8-f6ca20dafa60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df2dc83-f4c3-4ec3-9810-b3d234c4fd3e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b28d494-21fd-4363-8837-e98b1ff42eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf37e8c-9fef-4560-be20-f26a7a886285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f4b42c-0f18-4c86-b0ba-c36e8a876198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff920892-819a-4820-b4a7-47deabd0a820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc503b3f-3ba7-4254-8a8b-7d1b099acc18",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e359af31-f76d-4481-9227-c4ec2231d5d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "222e7f9e-0833-40e1-aaa6-03d83c6992e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd4f181-a74e-478d-9fc8-0555d1ce667c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "080d36d6-4173-40b7-bbb0-e86c6177256b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576fa42f-f930-4640-b69a-9565ee204cba",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37a4133-280c-4e18-9e9b-5cd54b123d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae4c0647-d60a-4017-ab0f-83930fdfd3ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676fac4c-c218-4587-8a0f-171bb4eb0993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0e373a6f-5e7a-4117-9eb6-c42cde2e553e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d309285a-eed7-4d4a-a713-80ea87081370",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd08dcf6-534f-442e-a210-e89804681bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01c43613-23f1-4ac8-bcc2-4e4f3390d508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32104117-fefb-40de-afe3-92b9b91edebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "838c2b3d-e713-4b2c-9268-4ba541e1ff09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f8b3fe-218c-404f-9fbb-cc71eea84ea7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a2e8b8-0b97-49ca-b9d6-01cad8d9dfcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75e3b45e-968f-4384-a1da-e16398b6916d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c09294-1f39-4010-8451-754ad9469e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4823684a-bc25-4495-a9cc-5fa64c8dea74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f80788-be4c-4ad9-8254-23f7bb10145f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08129b7-a459-4051-b87f-a42bdedf459a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5ce2600-47ce-4cfb-a266-4b9c92930985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b89b01-1348-437d-8c0c-d8ae2c00147f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "302f9780-eca8-4b1a-af96-1122beb1bda4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f1e2e01-53bd-4046-b8cc-34c6883e2477",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e13a6a3e-f489-41f2-a6c4-7990b5e2af72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5de71d6-c35e-4b78-8c0e-414ae1c8a914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aef40fa-f469-428f-8414-da0042029836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c1a91e6-6867-4454-ba4f-a817f9e67e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68105295-6b30-4259-8a04-c4a57526de14",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4534d1a-2545-48e1-87d0-aee36595cafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c3c3930-763f-4edd-9893-41b1d766b0fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1fdfe80-281b-4ef5-98d2-80f218435cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed44b1a8-cfa2-4152-9540-bb98fffca5c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf48d458-0d64-45e3-981a-afd7706b9951",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d33394d6-8e77-4b05-bede-2928f6d3897d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef5dc2ae-4feb-48b9-a158-d3f872e83af2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14abadde-eb16-4fff-9a07-31ad05360840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "727b6271-e013-4ff6-bee3-93dd18d0bc8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3452b33-de6f-4066-9637-1817ff554c58",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52dd1b97-4498-4b98-a1d8-c8c01d255b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ecaef1e-fdc0-44d1-a54a-63fc1d427d83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f17ca8c6-bc5a-4e7a-9f5e-e29b2a08ea08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "96ad317d-4950-4570-9440-f29afcd4e3f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27999c1b-3091-424f-b421-af117f1b6242",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e4bd93-6f8e-4d5e-bc81-b265d6da674f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12c576aa-521a-434a-ab94-690df294b7f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e7d9fc6-f288-4dea-abe5-51a94ada7cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b9de69c3-e3da-468a-bd6d-bfa283cbbba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf4b84fe-619b-4314-8751-36ad01a6503e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa8472de-b568-4e6e-8c1e-b12e82a0245c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c31ae7f-2310-4275-b2cf-468fd0bb4ea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a193d431-e31d-4fb1-be1a-b8a6b51122fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ee7b98a-c92d-4e0a-9b77-ca9107f9d9f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a9ab3c-b73e-455b-8091-9b7259f42818",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c737ce-c7b4-4e3f-bd79-ccecaeb2f16a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16a0e43f-aece-4a52-b486-9c19c6de2466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "babb69a6-eb49-4ef7-b2a7-fcc8523bf1bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e45c9e9c-bb3d-427b-9f4a-8dfdadbb41bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab66fdb-daf1-4c50-9b81-a3144732bbd1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8363a5-26c6-4f88-9650-50bbb0b60ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a41e48e6-7057-4824-884a-e4ed97147c86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4582ad82-f25d-4f37-b2a4-c03275c5af20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e95ae97-1c20-4009-b4ea-d063484b0427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a8d8655-c38f-4807-831d-ed339515af5b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f941612c-e459-45eb-af7a-02f179536465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64214505-503f-45a0-82f6-6938f0ff0d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b170bb6-3e3b-4ab6-98fb-6f94b69dac79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f47718b6-2516-45c5-b0f6-632a603da3b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce9fc06-9df2-44f5-b520-a5974b3a1ef5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cbe0cf6-ef67-4233-8f4d-4b46b36a995b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "317c8361-25ba-4c70-90ad-046696f2a1aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a83c56-52be-4107-9c35-2a3436b28632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c02ee75e-b6eb-4f46-94bc-6974ecd45fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51144a7d-0b48-47cd-b8f3-dba665fe2aca",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "305bb4aa-2273-42c3-ad98-a706de56de07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efd6ab90-4567-4942-8d10-5c18655858b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5702dcb-4219-4424-a0b7-7c6d78a93620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "64ba6882-a540-4e50-98d5-758b3f83357c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fef38cf-3d5c-4456-ac0c-2ff883f8ba8b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d93af4-07df-449e-9f2e-3d480e803b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0af4d4d3-9a56-4e98-8a0f-94afccc260b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ef6d23-4230-4999-92f4-f1ad815e25db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "004604a2-8822-42df-924c-2009805a7a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "095b72a6-8d84-4a3a-8505-01b7ce680aa5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1723e9-a59c-4942-bdc7-a194b6d95444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96a6041d-a164-4345-bc9c-d1cbaaa2d47a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe5b0b7-e789-4e8a-a99f-4570aa42b641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e5f2a41-b7bf-41cc-a63c-0861c74c2e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e2f427-915f-47e8-98c1-eb1d6d798052",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "342665bb-10d1-4857-bdf3-d00270fbd2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc37dabb-bedd-4ddc-bf2b-347745cd698c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96a13b4-4be1-487c-8703-016e65cf1006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3d68180-bdd6-483e-b20c-5a168c6fdb8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5255388-4022-4332-bf8b-e72a5c80983b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa88b277-99ba-4d0c-b189-75b1a1db9594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25eb5cad-d397-4ae2-b472-367d46809b00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ebb0791-319d-46a1-bb5d-b93cc97a2acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "72169f7f-889c-4900-b73a-a6bda44e0dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "946391b9-bf6c-47b3-a518-1980b21c499d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "371fa762-8b83-4fe9-b6d8-56e00b4f1325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6cf76a6-412a-4255-8522-1c9d6d7adee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4725e475-188c-4257-865f-66d2f6c22022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd591e3e-4149-4704-a131-91c7df0f2a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef72cd5-a689-4c06-8575-84af647427eb",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "737dead1-0f0c-4f59-ae83-850d8cf24254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "327b29fd-f621-41fe-a0bb-8d14a2353a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100d0423-9b47-419e-9ff5-8f45a486f2ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "62e53b60-d494-4514-94bd-b7c47b4b736e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "343219da-1196-4868-b55c-4baad097d2ce",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab058a3-f779-48de-9625-d3cea8ba2402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9f3a56e-5b26-43c7-a8d8-73970f2d1bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3b2fb6-9a8d-4db6-8666-e194a42c8c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "496de489-8845-4463-96ca-6478ae183973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48684f17-def2-4326-8ab3-ed9f80e89cfe",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "698a1d18-6299-4a52-8b88-55c4a729e908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28e89dda-cbd3-4311-a1d5-6382693bb110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ddfef90-4572-4de2-afd0-fc6a6b20ba25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a111cdb4-4638-4291-9f50-440be74b8b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d722e6b6-64d1-4328-aa25-f8d2b1b0f4eb",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52dac738-8b05-4ad4-939a-e24b617900bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd4ec959-3432-4eb1-8e94-3de49774b69a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d6b9ab-e2cf-4583-a404-f771d9fe6133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "55cc4ee1-4179-495f-be57-5b25a1298acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73fa734e-2043-4aff-a5d8-014876fa200a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a36c8ca-c6d8-46d1-8353-73359999a69c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4735b9c4-7a2c-40b5-8824-b81ff56b3427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32bece1f-26ec-43dc-848e-1e2c9a439ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf55f0b4-a3e6-4505-96ad-8c3ad3581c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9569463c-3272-40f1-a197-b998ca4bf9ea",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "415f43d4-4bc2-4572-98ee-2401b1854c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48932e74-6213-4e4b-908b-5e5a10eee771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b0b421-08f7-4d4a-b86d-6b1cae65e0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dbbbcf43-1dc7-461b-84dc-2ec103f50167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf4ddc8e-1157-4492-9f6c-286ae84c5d2d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db107ec4-cb03-4d4a-9df7-80711277b838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56a15894-c40a-4f84-a734-f059330f770c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "399c815a-5bf9-4bbe-95d8-5d31f77affa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "034d006d-9d52-45d3-84c3-d0a81b04fbe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de024fd7-0a33-4d91-a196-0817d39d5394",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ad2471-03d8-4e9c-a2f4-e69028596013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a949de08-f255-4c3c-9a35-1a015ae6feff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede75231-8606-4708-bac0-28e821e56662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee04a614-68e9-47a8-a6ce-615f08192cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f72483-649c-4a72-9d7f-63a48be5008b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05557c0f-ef37-41de-877f-6be5ab8632aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef5e9854-5354-44ac-ae0e-26b070a42a75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ac6899-50cf-4753-8062-fd860b9e3371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "efcc37fa-a45d-47de-9268-38d2c63deee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac1bec5b-6c24-4291-b127-0f690eec3b71",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7601c2c5-0250-4229-8f17-08191c3e29e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90bf1f61-5bbb-4a85-a0c9-c7de118f91f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21cf87b-34c9-4ed4-9c9f-053e029d5195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "496be206-bea0-4c16-b0fc-38569d6a640b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22206074-35ab-4464-8a16-bf8490d6f630",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68dce4a9-64df-4f90-afdd-6e2594f6371a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "157a9edc-aaf0-4b90-848e-a5eecb93c175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ef66d8-9abb-4c60-ac00-df11749da296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2dd7d61-6dd8-4474-864c-cda4e7b3fc18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eaa0aa6-1b0a-4919-862b-7260cd1964a1",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4601def-25ba-4a33-ba34-2ed817b5b87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d07605a-58b3-4478-b285-a528ce1c9160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086c8a8a-5df4-419d-a846-64fc315aaaed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "24b2f51b-0607-48a8-a97e-258e239d56d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34dd953e-c55d-4ff2-977c-923013264ab5",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c26c6a47-7035-4cc4-8d90-5184cc5c84cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0037ec09-2c49-411f-9f89-bb66454ff207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "857589da-f397-4195-a44e-5b95a4ed085f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e0973613-eac5-4dcb-9877-76f3f3993b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "451c61db-db50-48f1-a071-4433bf628ed7",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a9f363-f434-4b34-a563-a4763801911a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96df679d-e370-4d59-ba8b-3d6952902cdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d17f294-07d1-4014-9315-5aaf27e1ba77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7e964f1-12d5-4ba3-9477-17cda7549c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5237fe-9792-4cb2-84b2-7267d6208deb",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd1c320-5f74-4698-a4d4-1fe3716c0cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37339164-4633-42b6-9881-45c22a1f7d05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895f5b2a-2a26-4f48-ba11-2c80a945b426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "67db6efe-f9b3-43eb-95a6-1096fae1237c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0dbdfb-5342-4260-9e97-d4f97538c0b6",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "065e83f6-ab41-4aa4-9d2e-0ea068447585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c7cf919-91f9-455f-94a3-3092530c88cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa81bb5-3a0c-4fee-83bf-7bdb411a3728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "547778c1-7453-4831-8b21-86c0b69bfe92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38d364f-4c1c-4773-921e-d3b5113fd0ae",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "174c3d40-bfd8-4bb7-aafd-0adaabbd3111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5907467d-c861-4c9f-9d25-b3f27827ff3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f10ecf7b-5632-4a55-a40d-0e37ec380cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c306732-922a-4cd0-829f-bd4801e0a172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f699af-3448-45b0-b7d2-92eb0809d438",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8edd6940-e66e-4423-96c8-6f7f4aabe805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fc4f127-9a89-4dcf-b416-c0da97229004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "471feca3-6501-4e0c-bd58-5d818cdcd51f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e96a53ad-0efd-45a9-8e54-031f249af682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a47bbda-1282-4ef3-aaf0-d578c2d9f8a2",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a9ab3b-91b5-4499-89f6-200f865b8e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29965dff-0492-4b1b-9333-f9693a53cbbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90623875-f3af-4c9e-9485-04ad6b36895d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8e06829b-b674-4974-85bf-9ab4ee982c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe2f445-c82a-4a0a-a980-4b213a57d1fb",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef2ff59d-96a1-4b2a-b271-86cd47018f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75093049-2dfa-4fd4-8bc0-45bb8262eb5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc938bf-32d1-4908-bf29-5ec054021a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7531e266-c713-4c90-ae39-ed052ef9dcae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e260f9-08a0-446e-98dc-962c78c80053",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12ff176-a5fc-48c1-a828-cc8e98254c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6099571b-a444-44b9-8eed-78ef77ffacd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ccc007-3a33-475c-b2c7-aca5b311eb6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8a093f9-9c8c-4370-bf0f-dcf3068e2ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65eba941-e793-41b5-b010-3366fff10929",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c662770-06f9-4f6e-b00c-6820cc67c10c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24609245-7e3e-4d77-8234-e1db1bfa713a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24f8d5c-5bf2-4514-bcad-0e3395e89d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0a265bd-68c1-4f9d-949d-887d956a3cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b4f4ce-70de-4322-9948-9b5b2ce1d157",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb0068f-9f5f-4327-a28a-40350855d554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55e9cd25-539a-414d-b172-e4c72af1c310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cbb5c70-bc28-41f8-a304-e30f2c068884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc0ac10b-2c6b-4cb3-8698-0b1fa03a3ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee7427a-0ee6-44cb-bb27-fe06cf966008",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95bc008-ce0d-415e-bceb-cedfec10ba6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c6e7f90-b447-4b6e-8a75-eedc23b023d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d32d9a-ace3-4741-b281-c087c34b2309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9c622c2e-98b1-4fae-9942-e1f645b08e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c904f996-8e83-4b62-9f33-8b198a4a812d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0b8852-b476-4037-976c-c37cce15862f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc5db51f-2a2f-4983-bfa8-126ea7dbe0e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c3459ab-4e7f-482b-aadb-f1df24f03c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce6fa4b8-66bf-4275-a357-7ddf001fdd98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bfa122d-3e44-41b7-aef8-ff64681c01d5",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "150f09fe-c5ec-4d82-9cf1-5ad82eed30ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63eadd33-852f-4127-97ce-dc334fa52a6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "043a5334-2f1a-4ad4-9be2-8d97e97685ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0632ad15-1113-44a6-a6fa-f007a0f845ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1513f04b-e157-4dca-b982-3ef4f0b8e69e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd2bcc80-5d9f-40ba-bc5b-310a6c1667d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba95ea24-3b2f-4333-ac08-4a8643fe901f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e1a262-2c07-4147-94cb-b551fb6379e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd85ab18-5ba9-4e3c-8bf8-37f5126e5ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b21f54e-6167-4fe4-b2f2-c556cbaa6604",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c62de1-284c-43c5-8c5a-30bb930b1805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "226ec6fa-cdb9-4178-bf2e-9e9ac3e28f58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3e413b-f13f-4bd2-b1bd-6b7a0a3b4689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "23a4f71c-b76a-4c3c-adff-37a04a58541e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfbb997d-17e7-4a54-85a8-54238cbaf6c3",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79832725-b67c-4910-8bc5-311d97c7302a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9905e2eb-c644-469b-b87c-706074af39c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e38895-2f0e-441b-98bb-5b2252e7ef66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "70914ce6-00f7-42fb-adaa-0cfdc6986f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67de6e93-87cf-4421-8eaa-d681b2ea2316",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1ad05d-4b77-4105-9f8e-d3669f1dfd16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fc9657b-71ab-40db-823e-019cc52905c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b6f472a-1987-47ce-993b-1bf569a0f215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9352af1-f44a-48eb-8e9b-a3fa2f9e9bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7569d546-c384-4d03-a036-02b2bc53f839",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "327bcd9f-093a-40f3-8f15-a9bf1afa2595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "092b6bfd-8038-43e9-b392-7259a4e8e8b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e562a743-bec2-40d2-b885-4307da418abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2e4850a-99eb-4475-967a-c141e9ab3b32"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a0930093-e65d-4af7-b535-652c4130b1df",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "06dea9ce-45c4-41c6-bd44-e288b076cb11",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f99931c-c0b5-4128-ba68-edb8edd63f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7e049e1b-4f95-43c0-8b25-f495a759d90a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ccb67f-1868-4df9-800c-5d520b1d68e1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a058a1b4-a9a1-4dd8-b483-d3bd3f3edca1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0bc89371-a15f-44c1-b548-17832c0d92ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8385830-671b-48cb-872e-53d8ada7c8e4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a3f2350-1711-4b9d-ad14-641707371ef1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4eff87d8-d377-4dfb-91fe-1f6da4bf55ef"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e1fcf7cb-7d6a-4dbd-af48-6ff1427e7127",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3f19335c-b190-4f6d-a4d7-62b3ffeb1cca"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "708219a9-e74a-4db0-8c1a-3fa0b26a1a2c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "511e60aa-fe4f-4859-8a32-7d692dc09263"
                }
              }
            ]
          },
          {
            "id": "9bd8a758-1447-424d-9e3a-3c2834cbda57",
            "name": "Positive Testing",
            "item": [
              {
                "id": "66e7ab66-33ee-42b4-a544-058997760757",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "51487157-d059-4779-8c3d-601165ddb092",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd568a9f-149e-4461-b4c5-2572a9fa5b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b5525764-238a-4b0d-956a-7cab717eb803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3658b3c-5b8b-487e-b686-7e8e9f6a70af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dd4ea09-453e-4365-91bc-9ed7c0c46599"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "acc72c18-8099-4dca-b7a7-8b928f43dd76",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1637cba6-d5e5-42b8-8c52-ebe7b107ea63",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "76a2b40c-c3db-4f12-9f24-fb2caef3a3da"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ba1004c-8718-4568-bea0-aa5e306b12ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2e582322-1336-40f5-b103-899be9fc9797"
                    }
                  }
                ]
              },
              {
                "id": "9fb00adc-00d3-4bf8-aa8f-981362c95b29",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "66e6ef29-240f-48ed-9537-6bcb22adb430",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "35128653-45ee-4ca1-a15f-f8e3514b189d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c448efd-05ff-4987-a8d2-9ebacb21d061",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "10e18c5b-2552-4ed3-b85a-c7f600163e97"
                    }
                  }
                ]
              },
              {
                "id": "446040d8-c686-4ff0-8cdb-a3d501b54fb4",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3518e2ed-f5f7-4aa1-bee4-b889485b950f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a1232b88-79b1-418c-b677-eacc0ab8e1d5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "133762c7-1563-47fd-a061-1c5ddf0e1e2a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b42ad45d-271d-422d-91ec-b8db348e9139"
                    }
                  }
                ]
              },
              {
                "id": "894b2ca7-60a5-4a33-a8f0-5c99ce714dc8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bfd95628-dfbb-4a02-a98d-d2c658f4216d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "71b2a532-b6c2-4c4a-b1c6-b2e04b9111cd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "efbb88e8-990c-49e7-8279-2083ab903f10",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "865c2c1c-42ec-4564-b5f4-b6258acaf845"
                    }
                  }
                ]
              },
              {
                "id": "2a0b0943-3fcb-4045-99f2-17f343243430",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "90887d3f-9bfa-4231-bc6d-eff1fa64e9c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "83802f98-75fe-4510-85a6-10255ebbb527"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16aa9f61-29bb-4dfa-a951-7a562dff9ed9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d50b3d06-6ee5-43fa-8e96-578a932aaeb6"
                    }
                  }
                ]
              },
              {
                "id": "b6bcfcea-6796-43df-a2b4-6f23b442af8f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d2c2867-1302-4d67-a4a9-20a01ddc25fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f37fbc73-5f81-4961-afbe-756ac6aa253d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70d4603b-027f-4cd6-a081-094200737425",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "53126ea5-5b1d-4618-8471-5e3f1cddb307"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b4183949-8ba8-4488-963a-ba72bc7a1278",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8209e5b9-b64b-473c-8184-2050d9de1d01"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bdb3fafe-a89e-497d-b2c2-86870a9b05b7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9f693503-c60b-4efc-8cc8-f8effecf46fb"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0e605c58-6843-49ea-a9df-190cf92c0ec9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1eff2aaf-e5d4-45c7-b776-1c7a9085ffc1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ff92a81b-e8ec-43d3-b226-b1036c7fd92d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4a4ccce9-020e-4875-9549-0309464eab4c"
            }
          }
        ]
      },
      {
        "id": "f6f9baca-d65e-4c7d-858f-c419fca7ac0e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a6ac3c39-8c78-4cc5-b09a-065a96376970",
            "name": "Negative Testing",
            "item": [
              {
                "id": "30e17249-c715-4bb9-bf25-e96c3feee8ad",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "35c78693-0b6a-4841-9c0c-ac3e05dd0584",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4423b001-7638-442d-8a57-779c890b4f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f875906-72d5-4a44-b488-1ff9ac261939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a0def2-745e-4ba4-9d18-f09dfd19f12b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "45ee0658-6c45-4358-9bcc-8efcb19f9a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda78dcd-08ee-4372-acb2-b17b5ae14ee1",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d8e40ca-d619-4353-af36-c1c2ed4b360b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3281b6f3-9def-4f5e-845e-f1a88d16d03d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328ed2b6-ebd0-4418-bb1b-5e97d836c922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc7f4818-3fbe-4c61-9ccd-0cb25d7946b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d37d322b-c37c-4edb-a29b-db4fdd9dbfd8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b24b76-21b9-42d1-8975-fff6305c35b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9989c349-a8c9-41f9-b8fd-62af81c60007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5767f9de-6af8-4338-9dbe-20f1fd464e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "823a6c2a-d95f-4f63-bfcc-dbca79362435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa42d9cf-b431-423d-9712-fa9d0830abe2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61736c6-c780-4865-bd02-6db62a7f7170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d887844-6de5-485f-8465-3c7248c73ad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5240165-720d-4117-b319-53132fa3fea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2112b65-6d24-496a-bce7-5e60424b68f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729c64aa-9ef4-4d84-9f2f-ce7b2cd2228e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e35840-a6ae-455b-b300-11b6d6176322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "113f005d-5de9-4da4-9a19-c95957794705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447c03e1-299f-4b09-953a-b54c2c35ed66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed9e8f57-65ab-41ab-a3e4-e6ab23524515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a3e9104-68ef-4630-b251-01611d27fa4d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd2d95c8-243d-4bfc-bd5d-15f682093e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66d35cb2-0c9d-4d2e-a69e-7b7531d3a529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4e02a3-47e7-428d-9819-2845fb99a2f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7d355b4-4673-4254-9d28-8eb8db128dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e47503-6584-43ed-807e-eef133084b08",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e57f9ec-17f7-46e7-a4bb-649e088288be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f7f2890-19bd-4006-9eec-0eb83ce3424a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0040c0-3cee-4fe3-887a-5491d1d17706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6005d24-094f-4d26-a625-8852a2a946fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6409eee0-18e6-49d3-8a65-9e55617e4db6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08906de1-5e7a-4982-afe8-a01ad8f74091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24de4b32-86f6-48c2-a5e2-effd680d0be0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5e5cb7-0ab1-47e1-838d-e3b4988e218d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "072b35e1-36d2-453c-bd1b-344cd15548a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d12a8bf9-e8e7-4690-8c38-f271513bd544",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b98efec-c730-4501-9a0a-19df65a06014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bfbb736-89cf-430f-adbd-5628195b5edc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a223e1c6-24dd-4fcf-95d4-e7adbba552cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a973aec-5f13-493c-b33a-20093ff1a883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa52be3-70dd-4a28-94ff-5e6488b5730d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05247cea-9e16-45e1-9801-3a0f2091be51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7883343a-1600-412c-8ba6-82e03bb72cfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04dc4e64-5cf8-4617-b757-ad401b2e2dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e3daf2d-1a5e-4294-9020-bb31f6ce0a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dab9787-509a-4ca9-9c12-5ea8056bdaad",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3421656-648e-4bde-90a6-5aec6449fd12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "855e7246-602c-4e3e-a4b9-745e8cf3f139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2eb83ce-66e0-4ac2-9797-08acc4f0a727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2024506d-28ff-400a-8d82-387296dc94a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ced7f01-0f34-4442-a2c0-bee5e6b2b040",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be75fdb-4663-4e44-9648-a2b6ba2fc47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "191f968b-ccf3-44d7-b0bb-7034135d6759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0593665-fe2d-47d5-b872-f6fc4a34c33b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1e6c514b-aa86-49e0-a244-1801b1c97503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d6eb96b-c948-450c-aee6-82293c50308a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d98810-dcfd-4192-b211-749d1eefcd59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c1e8451-eee8-4ef0-af3d-09ed0770aeb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8962a41f-e6c3-45aa-9aca-db12c1a1bc1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "add80a49-e1f1-48fe-a84d-9edc84cee2f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2593a0d4-b9bc-49da-98dd-4fa081e4f328",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13ce508-b3ea-4f2f-8f0f-9bade0566863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c03defa1-5d57-4922-85f0-9126b0967fd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9c13fd-3280-4db7-8718-29f5fcf36ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "26fd7272-a007-4f64-b9e8-737c1c5a269e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12053ca4-c3d2-4c8c-b4f0-c4f15dd9386a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a997813-8fc5-4d83-9464-b516f2984434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daa26c93-af10-4fbf-aa23-7dabef7adacb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee0aa9f-7c26-46a0-8cdf-db8ef05d037f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6afd0bb1-18aa-4f6c-b498-5d5f59c0679a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69f6ca7-babe-4a0a-830e-9ec39336f995",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be2c19c-6240-42eb-8d39-494658a27196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3275d399-1b51-4578-bae3-94b6a511125e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f85005aa-8fcd-4412-a713-edbd7aed24d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "202dda04-6930-4d70-83cc-d64e1c4cf27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd42592f-17d3-470e-b854-0c61abb68811",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba96554-c954-427c-9d97-9577ea5b6693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fb3c757-573c-4b4d-b8f6-0f95f0d68e0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8063f8de-c8e3-46e3-bd35-7e7f0383c113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b20e0a6-27ac-4994-9c38-e043e8681c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd62afd9-895a-496c-99e8-ad0848208ba3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e94ccaaf-9054-48b8-98a2-1d0e4670c7a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9c104c0-9d6e-4ae5-ac75-558b5c760f77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ceb4bc-5681-405c-80ef-6d836a556409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "707cf995-97ca-4a86-b6f0-34585f7b5e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17fa4776-358f-4b03-9449-fbe0f7055b71",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27bc7d73-6787-4ad5-8c04-ac844af76923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9c35333-fa53-4147-84fb-f3f74d74ff40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb72cd3e-1dc9-4983-8080-8d0e67f17ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "521a386a-3e63-426f-974d-91a803d47695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6507293b-50a1-4c52-9d89-c83b75190e14",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b0ee703-e2c9-49e1-94dd-55729efe6865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7fa52c9-b5cb-41b6-823a-38c06c80b3e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b98ece3-ca40-4628-b3a6-1ac362dfeb4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06ea9269-d15f-4a2c-8e1f-b58a840ca676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcbcd5da-90ee-450d-a9ae-4b7b9804ed6c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67483ac-3db3-4b28-978e-b13ea326629c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7ebbb08-e6a4-41ea-954e-5c4439a5a39d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd5ef87-d9ad-4e6a-ad3a-806acf5562f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a48e518-ccd5-4f2e-9f69-0f25bbbaa947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ceb048-d328-4b32-968a-376855364666",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c8be47-1376-4eb2-b16a-45acb91aa436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36c2ee8f-fdd7-48c5-a320-c88e93d93fa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d293c31c-17e4-42eb-95b7-bfd0e8e24d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01ff9b1d-de8a-4599-a4c4-419683f0a3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51272917-6b0c-4589-9a64-1b4fbc999c89",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efbf939b-543b-48d9-b07a-af7a9dbdb825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "998bc20c-94fc-4383-b85b-d2f2a6ab42cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1134a2c-d401-4e10-803c-bd07b4d0e0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "203ba9c0-2bb7-4841-b236-9347c5429211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208ce3cc-f1d5-4ffa-acb9-27ce1e0887a7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14df9d3e-6f97-4410-965d-845284afbb01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ccb7a93-5b16-4443-b990-1d2febd0207d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f60735-b4b0-457c-a585-689c71dcf6d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7368182a-b87d-4e5f-85ab-dfaa25ab151f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db5dab8-1466-4a1e-9047-8e9afb420cf4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae86225-2754-47fb-8974-19a1515f824a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6c8a784-0954-4b53-8c4d-ad319e105f4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ede92d4-e18a-47d4-abed-12bb584124e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27687dc6-e9f7-4002-b9a4-f30341744339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05178116-2190-420c-825e-8fdf2a3b480b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91efc578-23b7-48f1-b931-fc3fa30706d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b2554b9-edc1-4b67-ab15-e6de1a279d89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "654c1893-e9b7-484b-a46a-0c41ca2f4f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90227efd-9ecf-491e-b359-4738c83ba377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a4e1b34-5564-4ed1-ba22-d5f9a59f6f6d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d9f854-60b2-4587-a634-8d1a73908dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae9761a7-0630-4de6-8714-07ae4ef14255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abcdd5f8-ed39-44e6-87e2-1a4bc909ab2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b63311b2-45be-4b45-bfa2-d877db532694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deab5fac-b2b4-4d49-91b5-b164e8f0f663",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9147fee5-f97b-4828-8a8d-4e0a6dc6b5fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f06f6f0d-65d1-4049-b3fd-cf2d9fd83109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2025da7-ae31-4bea-a90c-7ed89ebea0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa5e9b90-2970-4211-a980-27a36be7812d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28baed63-168e-4553-b0ba-2f45aa0b046f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9e23f5-3198-42e4-a589-a6d906f9ccc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50eaa55d-dafb-4c81-ae1a-c80cd5b39da5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1cab588-9f2e-4b17-9bc6-807ba1719f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cde0578-33d1-45d1-986d-aea2548a7fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4358914-8e7a-4ed4-a292-6b775fc6f283",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61dcd085-3b74-4731-9bcf-98b72295ef3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d91d831-cc9b-4c50-9cb4-a547458e221f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27153ae7-f929-4bb9-855b-349215365945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2d69033-c6f6-4980-bc34-c84e39a85d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b5ca0d2-c138-48bb-bac5-54a383530758",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7ae9e1-0f4e-4179-922a-c053c73dd5e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ed641b2-d199-4b09-b413-0d508955a378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c4ccfb-9de5-4b78-9c17-6e9d012f1282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba126a9d-f6f9-4b05-bb1c-824a25e27a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "115ebc57-b272-432c-9727-ae0213777445",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "491d52ac-5b06-415b-895a-2b5a1588057d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0955ece0-af99-46a4-ad3f-cd2305e61c25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b040888-2aaa-4ad8-aaa2-2cb6535d85ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5eff99f-49e1-4f65-b73a-976093f70498"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e33bdecf-7fd4-4a81-9722-ad34ea6ad274",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "04a7077d-8992-455f-83bb-333ec467ccb2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec254547-423d-4342-9437-b84ba5604c09",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3ef7f290-5f1f-496d-bb10-d27f83cf29b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac9a05d-a91c-4f3b-8b72-37573e4642b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "14661d3d-7cbc-4054-82b9-7adaa91ddb5d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a67b4c85-7f36-41fb-ad73-a324c6e7c975",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c011c63-4494-4e8d-865c-163a1fd1d42a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd89b80a-e573-4a94-9022-24df53bb0991",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e21efc9-d51a-415f-8352-2781ed3c6daa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5afde22d-464e-4bd4-99a8-36c7713ba248",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3bff694c-fa33-415c-bb37-2c5e4976ca88"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3598471f-16a5-4363-bcfa-c7b195e1364b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "38e4b856-4648-4b8a-b55e-eff7ecce337a"
            }
          }
        ]
      },
      {
        "id": "0aebc18a-3181-4cc4-a2f0-4c7bb798ed33",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "fded8a71-b1cb-4eaf-8691-eb6233b9731f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4a7ebb3a-a3fb-4c09-966b-387ce3cd2391",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dfbf461c-f6df-4162-8b5e-5db40f8f3b6e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b4b8135-2a89-491b-bfb3-4b1eba32ef40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6384d4c-b071-43c6-9d2e-1b40f37467fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13bf4c23-0680-4deb-932a-6b8e9a3a1c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b3ef45a-5101-4cc0-8b02-57c59d17b6a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf21585-e288-431b-b949-0c627317279a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48afd0f-275b-4d8d-b83f-0f6ebb8a9202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0685d362-1838-41d8-8a59-da25feeb21a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c23ec3-774c-4cd9-8de2-67728cdd1676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc9f2a29-8363-458c-abee-2dc584c92eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53e68a9-6117-44d1-b6de-e2a06381fd0f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eea8e56-628e-4c0d-9059-30dc7cae852e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "903b61f7-8095-4726-94cd-3f9ba8614f9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fca5867-0294-41e8-9672-54a40ce13fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcea0591-b21a-4d54-b6f4-df6d5b0bf4bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ade263-ad79-4b16-b4c7-f286d78b2f84",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb3d2c39-aa67-4b3b-9f94-8f56f6472172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2dcad7e-be1d-4b99-a74d-5dd214d7f4ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72826386-3de8-4de3-8524-762fae308b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b9b4212-b94b-4517-896b-0c20df8ba41d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a58e0e1a-e0b4-4f17-b4ba-dfc1475c40b2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1128c9-a622-4b15-91e5-9be014b4dec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e84007cc-6855-47cf-b56d-08f27fbe0539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910d92af-d662-4eb7-85ad-cbdbeeb9b6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "deeb6101-3dff-4b1c-a307-c565813a90b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d3bce8b-5bc4-44da-b7b6-7892a281f019",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b015623e-9ec1-440c-8839-bbbc3e1327a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f496d66-7177-409b-b986-1eedf600be52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "291f557e-7e8b-40d9-a7fb-85518e39faf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d28b5473-9c20-4b8c-9204-c531c67fbc68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1dc8f17-8a78-479f-9e2c-d26137d0a402",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11411a2-4141-4a0f-986d-116aee99b553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "387f3092-c0fb-463d-bb74-7661ab318113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc6f786-a153-47a3-97b4-1729bc8331dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd4aff31-5c18-49ff-a96d-a2c7383f5a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87bbe79-5290-4d64-a870-466b890d3bb1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b5c540-c6ae-487d-aab1-31b992a57d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df8d169b-1978-447d-bf4f-98f284c658b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c013398-b408-46f0-bbf3-6f5a0227fa2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "461a7602-6433-4850-a623-9ab32965114e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf92476-1a84-4972-9dda-d520eab2d7da",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea428647-b9d4-4878-84ae-0dd9c9db3e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e2b6f81-19c5-46f8-b71f-2c856d0c661e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68abc932-1fca-47a3-84d1-7a965bda3eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4eca7142-101e-4999-8c6b-b79bef22160a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf9d486-93d2-4172-afcf-243d98618801",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66afc066-b1bd-40c8-a17d-205a58be23ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91f294e0-172a-4488-9472-9e4c1eba3f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feba5c35-3baa-48a4-9625-dcf252d1e6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "63042668-4a8b-4e64-9f28-6e5f8fa86e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7aec082-3eb6-4e61-9251-c5b96d0244fc",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c0ff40-cfbd-4257-88ce-d0725b135f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4180ec8b-00f7-4ac2-906c-9def02580a70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da736cbd-85e5-4b2f-8f87-c4d5c8848d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "26c58cef-e8c2-4c27-be71-828fa44e3882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff704b4-ec2d-4188-ac56-16cac1e8f792",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2fda783-e3b7-499c-9e3a-bfd3dfebcf73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "450b7786-bb65-44e1-91cc-1df75bcea05a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4752a72b-574e-44db-8f73-22913eea8604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "34993b07-27ec-4b84-8449-284fe392ce2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440e7588-89c8-4304-8cca-f29a8cde5e1b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b74262-0f33-4755-b5f3-366591edcb7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9363c73-1aaa-4db8-b830-d94e7a050c99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04304457-c9d8-44de-ac30-708a847a9382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c9492aa-4756-4893-9e3c-f305986dfd46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7506b608-ebed-4af2-9711-1eeb5ccddf18",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "170b82e7-0d79-4265-8541-94cb1c3345ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eeeb4e8-6c1e-437a-b613-5996c9dda7ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eafce494-2fc4-4d2c-b197-9aa8620cc47e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff5aad21-d379-4ce9-bc03-f501d678c064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea59f0c-3af6-4520-a17e-2a63a95a42a2",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd3f0bb-71c5-4942-9acd-c14fbe191bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "202efc39-d3c0-4f69-b6e8-c48eca545c68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ee379e-690e-479e-8502-7606e9208547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cb14c74-43d7-40b8-ba55-60f5f85c8d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9001b02-cb74-4bad-8ad8-2a227251fec8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da762fcb-2ad3-490b-ac7d-18443be48879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44030ea1-f9cf-4a9a-8a67-5f6f2313154a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee40da20-469f-4736-95c9-db521fe8107d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a86c7b06-db3e-4bbc-af0d-74a4294bfeaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea13ad0-8b41-4d50-8e36-7d266ed44b2f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0aabc2f-5186-4d67-9280-e85dd29822fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05c6c7f7-c339-4a41-8613-9695cf7e173b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "976571cf-0327-4263-90aa-b5fef08bae1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7ec8ee6-9958-4fb8-98d9-a44bf88b336d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c5e38e-4d60-4f2f-acd5-4f33523c16bf",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b31ed63-e55d-4e05-b794-3e343f2e1ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f19cc82-b2b9-449f-ad5b-8114498eb319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a118b82e-33d1-427c-a85c-a9a524e156b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "452ae53b-d4af-4aa2-9f9d-e9d384a9783c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9819af94-870a-44fb-904d-e3f5c51e768a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02db7d90-13ec-4681-8e23-98f44c9698f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa872d64-ff3f-4142-be87-7f9740772b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee259f5-ad46-4183-ac75-ca76d033f285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dcb45bd-a15b-4ef2-81e3-0c0b2deb2fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0270bc02-f7e1-4d9b-83d7-910e5b2745d1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0635d9b-02c1-41c2-bcdc-81cd552c8bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "770c1347-f57f-4521-9582-0c97507bc78e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c2c2b8-29a8-401a-b6aa-96bfe7d7dc5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4687d27c-86a1-4589-9844-9d6251028b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28115793-3db6-43dc-9455-229a7c13ca6d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3524f28d-d4f4-472b-b9b5-3c9318bd484d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1b487af-8552-47ac-9ce6-c5446f408ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f4c8a3-b9db-40f4-818c-1f09302d86c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08911f67-446f-40f6-9b91-57be81029bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db41784b-5169-4f2c-bada-c1dc1a0af4d5",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "121ee384-0624-4af9-9b28-3af83bc6f713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e26fdff1-f0dd-4702-a4c5-9d2cae74b445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66884719-0815-46c0-a871-49af827dc2d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e91c2cbd-d93d-4569-bda0-6e18138640c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e3d6d2-2034-44ea-8456-7d57ff6a54cd",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f78d3bc-45f1-4e5c-a522-f548b5c44122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "924adf7c-97e3-4640-9de2-87c14e97e0f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d64da95-a075-4fad-8b98-6bd0cbaf6efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf9fbaf2-3725-4f23-b351-37f07f1dd454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9332139b-4516-40b8-a98d-c35d325aa175",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d69c40f2-3465-4fa1-a16c-5e2446eb9653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d21887f-8ac6-4da3-8dbb-38b4528afafc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6156d3b-33bf-47d6-adc9-a6da55203ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff3e7887-f256-49ff-9796-2ce3fe4c5614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da93d75b-fe3b-48ef-b951-8a0cbaa68e46",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b5a9cad-0461-49a9-a98c-aa4476e8fb55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c88aceb-7b30-43d2-ba35-138d2bfb3cec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0750337-6473-49fd-95e8-eacb710f47d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74c7c578-b9bd-4630-b87d-3c6452060a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a608c7e-cbc6-417a-b0e1-09f3e207a95d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76cba5b9-5509-4501-b554-d57998e9f292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7067e489-f561-4f83-bb36-a30451a0cf2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b68883-18f0-4703-a413-4db633bf40ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03d4f3c4-47a4-42cd-8acd-533b9d017110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e30288f2-b9dd-49a5-926e-0812a1bdbd18",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f2903d-1d41-41cf-b973-53167e3a3f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4901146-0a9b-45b7-b708-e9ce2a34c246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4723ed-367b-4558-92b3-7c8741dd5632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "256fd91f-b970-4429-b294-8f2036fd2281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8475298-abdf-440e-97cb-160ccd8ff18b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "464edbc2-f4dc-4d17-befd-00fc2e87c6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a038b7bd-36a7-4145-bb21-1901b7cc64e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f33e7a34-6865-4f31-8f8f-fd90d08c25cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0caa9406-ca3a-4d80-99e4-3b777f9171d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2eb9984-0917-42ed-b898-3a61c0f87a11",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d1f709-9a49-45f4-864b-673adfc6f117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "800d336a-791c-4fa4-8f81-d61d5d063dc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b8ad89-5744-4f75-9598-065cbca75cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a89d7326-cfab-4d69-bfd7-6a8f9671dede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c227af56-98cd-4fef-b1d2-9d4406aa00c4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dacb1f3-8678-41d9-83c0-8c3f6ccf50c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecc34f18-7568-48d9-b6a6-a5dcca1c4ee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a03c8d3-cb78-469a-a60a-eae454baa7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b742017-d98c-4182-a2f3-2b3056c8f307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa03b81d-d24a-4dcd-a992-62a0c959b74e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c79f1a-0542-4b3f-bdbe-f4e9db8fc9ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a208219-538b-4a7b-af2b-f373d4d3c60a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554b5672-62e4-43ee-b17e-636e2e8f2d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c29dae98-9375-486e-9f33-f33f72dd4766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c437fc0-4aaf-49c3-ba62-4e485b0f39a2",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f500a11-7792-4cea-a159-1d54011c04af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbf6ddcc-353e-4806-9016-856b15c8b3fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93702e8b-afef-410c-9281-9b8e691081e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01269f24-d7fb-406e-8ae1-cbc8143dc47c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7414047b-d2a9-42c6-9819-7a9931d1d7a8",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac31d32b-1835-40a3-9e0a-36c6ac1476c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3065cbd-8668-4bb2-a77e-9b72e81b949e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1162b4eb-ab0a-455d-961c-71442ed3178c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9aba6dc1-f4dd-4f38-af64-cbe8b58eff8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e06d2d-e024-4b5d-b4bd-ef6da7b0032a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd72c3e-b9bb-4d77-82ec-60aaca6fdc00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79bedacf-8fad-4ed1-bfda-e3daf1039d1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f30b74a9-3592-4287-92b7-9f32b8b821d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57a106d0-b727-41d2-9781-2660110e0b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4854cf47-32b7-4355-9db6-c6f92a1e6ba5",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6ef278-0371-4b9e-ba95-34e160c2f1e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81ce32cb-e80a-4b3e-aff5-68899ce750fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8b1e3b-5d02-4bf0-bee8-366cc9d840d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "841e8b3f-3164-4e23-8cf2-854b4fd6d2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03740c13-6510-4b12-b7bd-93fcbf3ba1fe",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "514f9838-b7bf-4e18-af77-9fe59c1e985a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca679a89-1b89-43e7-94da-27c4e0f70bd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26274ae6-b494-4a30-9b82-5e9f38a899f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae4dec19-9049-44a9-bb33-add7d32d0162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44398a82-8d3c-48ad-b9cd-205dc912975a",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a7d1a98-3119-46fa-ae12-9d23ca2e2bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e07d4ffa-8ec2-44ce-8404-39c865f8b51c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ff953a-afb2-4100-a495-a80fe6a6229b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89dcecae-f3c8-4e4c-9a71-61aa2f21f269"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "76a5e4cf-f475-4785-b3c8-524e072e095d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "57b4574f-4f99-4433-a9bd-ee35380c73a6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659d03e9-9225-4695-a6b9-e26ce129787e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "51420fb5-6725-4f61-9c76-7569656f2f48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0fc5936-eba6-40dc-9692-ff553e671971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4ae8659-210b-4e42-b36b-da20f4ed8ede"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93e73157-863e-4383-8e94-7c8a70aaca46",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb261c9e-d942-48ec-bb8e-bb50286dd970"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "25af065a-eb16-4e84-b768-b7fbb0a0c417",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f2bcc30-dcf1-450f-8eab-fe83e5f6c9eb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c83429d-ccd4-44e0-8568-e1db2cde01f5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dd802b92-802c-4d89-a48d-e7004c1b4b37"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8a3ed09e-9476-426b-99fd-c22f5bfad47c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b9a845f0-934a-4ac6-a6a5-a24c6f253260"
            }
          }
        ]
      },
      {
        "id": "d17cf9fd-1341-4c72-bc47-fcf0f0f0151c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "07d3b6cd-f709-49fe-b480-44e78242723d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "87fc77ed-8de2-4989-bb67-8f18a9ed374a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d5241e22-eb83-44d3-a28e-8df8312e08f6",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7608deeb-e920-454e-a301-559e72b8cdab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a6c9246-2d22-481f-951f-09c56cd1642b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9aa3bf-9cda-49f1-ac53-2897a82be680",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc0b4326-d830-43b0-9098-b4c7120258c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1afef43-02d3-4361-ab3d-011388bb84a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7005fac-0a18-45b4-9484-a5d52de87068",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec77c46-21fc-416a-8842-fde8462576f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97aba298-fb17-4c5b-aa43-b2af69339607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1c8c7f-8b71-4e0b-8ac9-10824dcae256",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9345be-56f3-40d9-af26-0a13946c5993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c47d88f8-e11c-4df6-b63b-ca36e509c730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d768d9-ec10-48a4-823c-6c6adbb7b1af",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02be2b71-d388-41fe-bf8e-345d7190ee60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71390841-3353-42cd-8b85-c094f6475843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d53088-f9e1-4f64-81b9-d3eecd742a1d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "377c620e-cfaf-4dff-92f5-23c0e16f0fe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f74260e-5493-4155-9c7e-7fba2b399104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66fef32-9dc5-430d-bbd5-5c92ddbd02b9",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f5992f-d619-48f1-a62e-7a60e47458f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b8056e9-2309-46f1-84d3-7729bc35fa97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60fcd1a2-ed9c-406d-8b24-2b0dfe433b30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7520f6e2-618b-4b77-a567-bea7b21b3efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f84e72d-7432-4cab-9a54-bbd3cf50b5c3",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b086574-6938-42a1-b68d-92163f5c7b1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5ebc52a-490b-4812-99dd-a470297ab4e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6203784-2ed1-42c8-ae68-6d5f8e4002ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "660dd5f5-ff80-4a2d-bd3c-ab6f433e55d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a7f5f3-b801-44f5-b4ee-a9d8c58f57b5",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6312b16-f128-4f7f-a413-82063cf88df8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "431443f0-8f94-41d5-9773-8b72370b48fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c97cd32-39c8-4fa3-be84-5be035e15783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "211a7dd2-e86e-492c-9562-8b4188ec6a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a50cbd0-11e2-4c77-acdf-2c1b7230425c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d494e9-a84f-4583-9de3-490192f1eb9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b83e1bd8-54c6-46f5-aab8-8d667e56e609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9124df9a-885e-43e3-8f87-f8bd4c2c15cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e72da57-1218-475b-8e3c-faec63917588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda633f5-433e-46bd-8791-d1988f68d90f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7def6c5-1a9c-461e-845d-200cf0754894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "227c9821-764e-484b-bb31-8737a0f9c4e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8048c5ec-dc7e-4b7c-8d87-bc56b26819fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "893e6945-1bb5-44c8-965c-b3a0d8e45563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bbffcd1-d035-4db6-826d-e1de60868e28",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4236ad5f-18c0-4cee-a4f2-c88a3f27c017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c5de9bc-a0d0-4814-a426-a1bde9dd101f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83fbc7c5-25ba-4d29-a81a-209dc256af69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e12db9d-c53a-452c-a581-e470ba75b4ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c8ebb1-f014-468c-aced-86de080b2035",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc146db2-6069-4f51-9820-059fb3e86452",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "670b4001-fdfc-4be4-8773-744ca412fc6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74394b08-c8d3-45e2-a8f9-4dc3c88f6636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "077501f9-9d6a-4adc-9ebf-519cb7cbbbf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2dd396-806f-4ca4-82f7-bf073fb92b41",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036e2bb9-d431-43c1-a564-91302de8d12b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38be9d6c-3d0e-41f7-a2c5-8d433d784e63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3fdaef-f3ed-4fd5-8d48-8230dbad328d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b57e2bf-390f-48ac-a81f-56b58cf45e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63411b3c-b0a8-43e9-a5db-e56a1db5c3c1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb51edc-c1ab-4489-9520-196041241130",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25c55f90-599e-4bc6-81bb-76bc3f91cba0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "057d87ec-6e69-4062-8050-4be871e62e1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a047cb7a-e3bd-47f8-990e-393d6800ae56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280e9804-5834-4e08-9a9d-a054e884d1b2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d298ca-0633-4a28-837d-4123944f99e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b9dc668-40e4-4873-867e-ec12d25136ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc60eac-9696-4ed8-9e58-e5d8c810a355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d7caaa1-7949-46c7-a30c-4f26c445a81f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992fc993-75a9-4294-aea2-81c99e501310",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd784f7e-0687-4281-8893-d9110f0aeecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d734fc63-9297-4cab-8769-b39e7f8e10f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51059cf-f1b4-4360-a64e-e80d69b3843b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa133cba-a262-4b18-bb9f-80df5c725a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a92dc0a-60d9-4042-8c1f-9800af607693",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6356d03-a9d1-48cb-80ea-fef28e406ad3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a996b700-a9e9-4101-aa22-ce9bf7d39ce6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "924c1704-8f66-446e-8e83-26db20e6c7c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2d09168-ae36-4fed-b1c9-e7e2f584a9db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88049afb-8c78-43cb-9bcd-75816589fbe1",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c22609f-899e-41e9-92b1-231b61047b7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "701a8820-713a-462b-b99b-4b126c358ac2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee568929-a8d7-4d8b-8161-b6f0144af699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29d0d9b3-e1e9-4ad9-8cf4-b568387dc2f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81c82c4-3f31-49f6-a3bf-01192e647932",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "784126e3-0457-48ff-87af-de544651560e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be77a40d-e61c-4a51-b49e-79a26910191c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01be95d-6ddd-409d-b121-77aa2d8b706d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4109c7fb-5717-4a8a-8efb-23a196885b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3bbf64-148d-4d8d-bb89-45bddab966a9",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c6d0d4-35cc-4dc2-b156-8ec81ef3efab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6b94eeb-54ae-437c-ace0-ef83d94ef5bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7782b43-f11d-4f0f-a663-9434f0fbe3b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f2a8250-8a34-47bb-893e-c148f5ceb353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a53ad4-0285-4a63-807b-eafd29c391f9",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daab0787-7bc7-475b-a0ee-2858d00f8ec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d3ae898-eb3a-4a12-8b0d-bfda21e7711a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "affea780-8619-4465-95a5-d9043ad10e5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7361e835-1660-44d1-8101-b296ae0022c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46089242-a648-4cd8-a27a-491a59e02d33",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66c4ee5-b94e-4dc4-92bc-75df027c04ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdb801cb-ccc6-4999-a184-086f4bf1a10f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2064e5d1-e110-47e1-8966-8cdc1e837162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf54d8d6-05c8-40e6-be39-cadb13770a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0ee4d8-20fa-4bd9-b174-7d2dce60ca36",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48a2a1c-8057-4a1e-86a1-d6479420bbd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34170434-9ece-4f81-8777-fc2fc93a3073"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05475df-64c2-4623-a995-ca1fd3811466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c896f03d-566c-4fa3-bf0d-907189f9f168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d958f4db-6321-4ded-88b9-a9a9abe68528",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "930df5b3-78ef-449d-89b8-f3717f45ff2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6e25b30-b977-4ea3-a218-a58cb2117c51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4217cbd-db2e-427f-9476-5e91ae4eaec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c508d51-236c-4a0a-bde7-46ac69d17d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2139020-41bd-4b4e-9d97-e516c5e97942",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0f3d14-d287-4766-b0c8-4fdc0095954f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc1445cc-572c-42ff-8470-6b40958883ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e417b2-a42e-48fb-bc7c-caeac79107a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1de104f8-f1e1-42fc-a95f-22dee0652770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b789407f-1deb-4dcf-b08e-ee2801e09739",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff00553-a119-41c5-accd-0b1362c63fa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b423492-a8c3-44cc-84e3-af6868502e87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "135ac466-66e5-4314-8abf-67265acd7ef2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f64b9eaa-6546-41a8-9826-7273fea11723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806dd0d5-21f2-464d-9d12-8f852939c0b1",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c917bad-cb28-4c71-b9cd-7d17d9c9c4b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7740114-86c7-4f19-ab44-fed090170558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c333cbb3-2e34-4d15-a538-72d717fb0c9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c65ce32f-cf48-43ba-b8dd-53bcfcccd3f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827f3138-bf7a-4b45-8534-460afa31336d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4878a89f-31c6-4d81-8f2b-01454dc618a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2454ea0f-1069-4053-9548-d3159542eaa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae95b32-a49d-46b7-a73e-fa0b3db03e1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a183cd0-f110-40f4-a96a-517b3e313df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e9288d-3fe6-4ac3-8641-6688db098edf",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5579831-4ad6-44e8-9d88-2c080bc80f08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c027b6db-bbc2-44a0-8481-de2fd854f9f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39644da5-8366-41e0-9835-bb95b3fd8a2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7b0c868-05f0-48e8-a895-f3d07ee29526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "411c2098-9b74-4753-8534-238b6012b641",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dff2433-eb33-4f77-859a-b1b91ccbc58f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "449b4a9c-72c3-4d8b-a90e-2a922cb9297a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b90bd3da-eab2-4aea-94f4-b40da195062d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "922d39a0-11bd-401c-a453-8c9fe2f5d0b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e8b5ad-c11d-4e1f-b23a-a9ae279d99fc",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e06ddcf-b3ef-4338-931e-0dbd82b78d86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81e70b39-f0da-4b8a-a975-8e529610a578"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e4eebc-11f3-4158-9037-3b42a498992a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49e58a82-0f8b-4d81-a25d-8b6bbbf63238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28484ecf-eac9-49bd-868d-eba290f6f878",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff66f9b-82a5-4d09-be7d-22591e34b31a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2223b2ce-328c-4583-9639-c11b5a519261"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbef467a-5efd-4a65-b59b-dbb6bca7b690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a100281-8831-4770-b3e7-d0419899d02c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c608bad3-8c93-4ba5-9cb4-093cb439dfad",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e97357-7d1f-4cc6-9469-3a53ad6cc826",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "317d77f4-e3ea-42f4-a0f9-89a0acb2b2c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc61cbf-2fb5-4599-ba2a-16a71bd31e85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "945199ff-e3dc-4c5c-a2d0-ca115c208495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a52afc47-1978-4153-839c-4c34802037ff",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c69690-f7ff-4705-b940-7cf45bf69104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55868ea7-a356-4b3a-bad3-3979570fa36d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb434c5c-eaa9-4b92-a078-ec54cc1991a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b9350fb-69ad-4202-9e06-0b7f4997be81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f5016e0-e49c-4965-b1d8-b8abe409a933",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75495f15-02e2-4482-b48e-05f7c26c54ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea41db31-f40c-40ae-9972-fb6dde5b90f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb20c46f-1c77-42ef-acf4-c382ed7ac7c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dae491a-e6ce-4cc1-b257-2a88d261f7ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886e9ef4-8dc3-45eb-8a74-3533394e8774",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28fc9c81-da99-41b9-84be-af545f1327bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9da9d227-9e2a-4a1a-a8fd-a294f18e48ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ead3b0d-e01c-4132-b73d-1d8db6d0f139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf57b35e-d7db-4141-99cf-182c248e2899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce60dc5-686d-4240-9bb3-40c3604df338",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e65bce3-7127-4689-a2da-613b5e6a318d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c826b266-7365-41fc-abce-e9ac833f3910"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a153afa-f958-49e2-b084-b1bfc93256da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b8d6f90-77b4-40cc-84cd-02cc99cc3b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f8738a0-603f-4233-a1e8-ee0f681af8aa",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b246a5-6d89-437e-8353-b718f4cdc569",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a5efb75-f970-4bbd-913d-692a9ea37357"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bbddf21-d7dd-4b72-997d-207bf5c6b642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a575114-88ee-4417-a9f8-998d9f038c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "138b1aab-f59b-4ea4-bbf3-74205b60a45c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa71b559-85ee-48ed-ad0c-14e9908fd8cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "070b5d97-7af0-4c54-813c-143de62941a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "221062b0-edb4-4b5c-8b86-e113f119371a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c66cca4a-7eae-462c-a4f7-b66eaba160a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1265c9-0811-4855-a2c8-09c9551466e8",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b0db584-fedf-4ffe-b540-d7a4ca60186b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c11b230-7adf-4525-84b2-d9997d0cef27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e6eb9ee-c11f-4bd5-a29c-05d64470c436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8ed0980-963e-4843-9e8c-9ca4b3c8419f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6c8d7e-7edb-41fa-9f51-4c4420869adf",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b6bf7c8-747f-4fdf-926a-2595ef33ab00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e6b76fa-e456-453c-ac09-30d56cec8478"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d343cee-405a-4657-8074-14faf68bf57c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a43a503-3ada-4376-99b1-421a82fe98ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6476a2-f8ac-4655-943a-374f74490568",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b1d4820-9f3f-4f27-9762-46e43f222984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "171e7a21-d7b7-4728-85fa-4371abfe8eea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0951707-e41a-4fc0-90c9-f4d7a831f289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca2be740-31a8-47db-9e63-d276c0c51a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3c2ed6-139e-4e5b-a179-6c3bbf8a1fc7",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaec284c-31c6-4768-99fe-7799552302e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "629615be-42c7-409b-8142-8be74eb07634"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29626652-6434-4fff-9fe9-30c230e6a73a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60587317-3dba-404b-b32e-d522efb6cc79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e732e0-2fad-4e1a-8443-2ad729538a26",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "772e8eb8-7fca-4121-8bc9-48a62c931c72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6a6d765-adb9-46c3-9bef-0d01db9a704e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8248189b-48f1-4415-909e-ce85f8e8ed8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6227c97-4de4-4cf5-8a7a-f1ad0445eaa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967a9616-c1fb-435e-b432-acfefe0d83e5",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e651045c-c1ec-4efb-aa64-d0f3bc6ef3b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "289ba2cd-75c3-4feb-9039-c8b6e6ddc557"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d232e1-4c60-4da4-bc6b-2e7b6aeeea2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e8710ea-6843-454b-8ca9-a5a4041483dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13eac17-1729-427b-bc96-c3268b91762b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c977af84-3d94-4d65-ae2b-66ae11b63bea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "961e92eb-bd28-4697-af3c-164459ec09cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e56fb7-473e-4daf-89a9-6a1951d68bf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4996360b-7cde-418e-b8fe-92a4f11d49e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f7b962-1ac7-49e0-b620-17a27e4adc8c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0edff58e-e291-48d5-9282-b16ea057a6fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42a3f486-2917-4678-be8d-e8070983e121"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b07ed40-02af-4a58-a76f-8d54a2225f40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8736ba8-6c36-41ee-b426-de8b0168e46a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98aba0a8-cb58-41e2-a060-752a25479e56",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e4e340a-abae-4bcd-b523-c57da116be70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b2a1e21-2f32-4f4a-a0a7-6218fb306014"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "557ae00f-0ae4-4e75-bc5b-e4db6db6030e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f9cb06-32d0-449c-860d-23217424c1ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78031b63-36f7-477c-8a35-1427288d6c45",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc899699-b62c-40cc-a596-ae0ae39e3de7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3d1fb79-535b-45b2-aaf8-440762be9159"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf34089a-a586-4f3c-8d1a-3a79fe44186e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48a16cb5-09d7-4695-ab48-165dcc49842c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a85b4736-a14a-4676-8e3d-743ced08c16d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed8d5bb-2cf7-4afb-a0b8-f15ed6027626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4a2ebf7-d30b-4f86-b82d-91736462d795"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c577f5df-4b84-4bcb-95a6-3ccbdaa4b5da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28593ff4-f6a8-4e62-a28c-82e215a7bc0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8956b8-ebd6-465d-be63-323921918966",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df26d94-916b-4de0-972a-5960944bbb6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "330c40b5-fd07-43dd-a640-bdac221ff37e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32484024-4ed4-4d89-908d-d174ba7dbb1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8e25ccd-f4b3-46d7-94e6-75267cb5e5f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3053fe8f-477b-4dfe-8084-9317fd26bb1e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9334752c-a3df-4f62-9960-f33ad9df7fab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7dc1657-72f7-4682-805b-7be9d7ef9674"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe810227-141a-4253-bacb-d97c3c7fcbf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb7216cc-4d9e-4fe5-96fd-4642735d1525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d941bf90-5f82-4919-83df-b7b7ab07290b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c1e127-31b3-413f-8f5f-080376e1fa3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b16e96da-831f-42d3-b9ed-e9140e0f5244"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ef39d1-5455-461f-918e-55740cfc55e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96c57f79-c6a3-4424-b40f-b59bbcdfd8a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e03f162-466e-4b5c-b3c2-293202d0dd6e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a589222f-f141-48be-9e96-9a6fe706b6b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19342d60-c251-4ecd-b2fa-fd48b125279d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9171102f-6fc2-405f-8dfb-a6c18ed8d6fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34c69278-8986-487f-9e2e-9067e34d272c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7598796-702f-4921-9ded-7815638144fa",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d4ce19-0adb-452e-984d-6cc52e3d4968",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4066f7a5-56b7-421b-b0fd-9e657ceffca7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb3dcc5-e5ad-4a46-92f9-518ef0ba4d66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2462fb59-6039-4b26-86d1-e2f05a314b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea28b38e-9a0e-45c1-b2aa-32eb6f8ac6ee",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a986c85f-7c25-4c64-9637-2343822edc4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1abb287-5f55-4b67-8b31-85fdb3a51772"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b728afd5-f438-43cf-8918-f52bfa17d53f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0505efe-815f-477a-933b-071ba92e8bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f261fd28-a829-4474-917d-19e179d52b35",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0b68f9-cccf-454c-90e4-8dc3eb51d9d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d8b883d-140f-4cd6-869e-2176f6e2f8da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a7b727-f5a4-42cd-8e3b-98a00e856c81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89686767-8118-490a-9036-f4b4c9d20710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d91625-0c5e-4c1a-88f7-e40da63c5e3b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfda95eb-3e04-459c-809f-709e9cda4337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14e05bb2-7546-426b-8e3b-9c58a9d61519"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "094a19c7-2c66-4c40-97fa-ea916e516f83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25e28fea-631e-4ed6-97b5-fd8620042fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c601eb3f-c025-4655-83ab-821aabacfa88",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "363f880f-5769-4552-98f1-5d4daa5e3387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6d14e11-c431-41f8-8aa0-2323184bffd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6caea9cd-db53-4ed5-91d0-86d9f3e18d2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "597581a7-d789-44dc-ae1e-522d1fd4d997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55cb9343-8a6b-407a-814a-cc1a2cce7ba5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04432bf-f07b-4c70-931c-50bcbf228906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2304ed8-de19-42b5-9fdc-4fb1e6506f3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "399dc193-bb40-4653-8bd9-53d1cf530e80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5603e788-1425-4efb-b722-1fe99af44fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74735a6-dfcd-4481-b470-542475e5ecac",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f09884-76c7-4527-8cc8-9668678a1b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4ffe3f8-5356-4718-8bac-8076a074a88f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd95df0-203d-448b-9cff-c47a11e11c84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a2cb883-6715-4b9a-867e-d9b2489965c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cececaeb-7924-425b-bc7a-93b6a7b40481",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce91b3a-771a-4f97-b31e-d99131f925ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a3da539-4da0-4183-be37-5624d111d7e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "230380da-9943-49b7-b52f-d93714dc3e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbff57e2-9bc8-40a3-b11d-cb251b5148f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f3de53-68c2-455b-a9cf-def8b6b1515e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d67ce1-a19c-4c66-8ca4-63d655692b68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "457a3bb3-f710-4ccf-9f9b-70d57fd26713"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db2d9d3b-a626-4677-af8f-2006d3399bc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43ecd2c1-d7d7-428f-b348-62fa03e23018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e51d3e4c-ce6e-45e0-997f-4365479805ea",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a48bc33-28a6-4eed-9fac-b1d08e06d93b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "772af016-0507-4e1b-83c7-b022f41f4d74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f150f7-c4fb-412d-88b0-9117d9877189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47273d0d-4d4c-4e7b-ab65-7874a99df232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "441b50b2-1ec0-4a04-8bf6-4e88d31c3bdf",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a12594-55c7-4d44-a1dc-7c69c0d84f11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c77f3ac-d268-47c5-8321-4e1c19be3a8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0407855b-9f53-4225-9ea2-69e1a109f920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cd131a4-e042-4beb-9430-788ede2f605d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e13b362-a548-4a87-b3c5-7c64589c677d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6da8c22-db54-4bf0-a7f7-00d6a6236104",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "595025e9-6530-4afb-bc4b-5aa1dcc1be16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72919da5-3574-4c6e-9bc9-4ff2d35fb41b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92b40227-e140-4dc8-a626-467d6c71301a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17bfb041-837d-42b8-9b73-3e0f24e86edc",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ab75d9-8498-4d7f-825a-a0614e3b37d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00e7e378-7d62-4551-85b1-413e0636bc49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed92bb7a-036b-49fe-9234-9a2b79c33c27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "304e633b-ade3-48c9-9f34-b883cd36572b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50df35b9-0350-47b0-b9bc-8d7d05e5998d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e1616e-b12c-45e0-89d5-c0f602ff0f2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f16df2e-9589-4cc0-a091-ab82e891673d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73da8987-5524-4205-8c36-2d426ac1d60a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fc1ad83-7b2a-4446-b9bc-e39e1832448c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4fe4f3e-8daf-4880-85b0-fe52112f9be9",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca92927e-7bed-4faf-bab1-d158c3fc9378",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5033689a-38a2-475d-9bef-6d541925be40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab93503-b5f8-4f83-ae50-c857cd9786a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f68ca4a2-2c62-4d41-8c8a-b17951b3e8cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c90465-2798-43dd-8209-efa36aeddfb1",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e75d5d-b130-4d93-b74f-d0d2746dd359",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3da5efb-bc1e-417e-aa51-89cc8a075800"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10fb8fc6-1a3d-4657-87f2-5c81971b6c74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "862810f5-6605-472b-9687-1e29c3374c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed7f243-ebb6-4fbf-9b98-d3f22e903eac",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0126955e-29b1-4e88-9a5e-41dfe36dbe12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "843df7d3-2772-44b6-a22e-8a82def3fe34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c133031-f51f-478b-9d01-dddd6258b83a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28f7dcf4-45d1-43f4-9603-6eb1276c739b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "343cb5d0-1d18-4260-91c2-c899364d2089",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79128023-625f-4ea8-8030-780bd2b47451",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64216eeb-cb84-4ae5-96e6-4909b7964e37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b26976-8dfa-4404-8750-3f4a6fa5aac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b30f7427-8084-49b8-9ec6-4ceed9d681c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b94e6c69-cb6c-45e1-802d-c787a81b8d96",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfad026e-9bf2-49f3-93e9-93105cb4286b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0663581c-eb8f-44f1-8ce6-529a216d1b6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43165018-3f17-48de-b077-2eed155997e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59b33c41-f71e-47ea-914f-b03fec6a7861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66d6393-dac8-4082-8df2-66c2c92bbd60",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d8e3d2-3ad6-4f40-b2a7-a0140a41d995",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3769946-67c7-494b-bc95-df1cb0446930"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e735e8-0583-44db-af76-55697f1bed4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e409b78d-24f0-46ea-9110-441c5a7650b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2fc22cd-e0ca-4d53-b7d8-a46699166a11",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d6edcf0-2685-4a79-b301-e93bd36439db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fa93996-2c3a-40c0-b634-a478f1fc2776"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a8b1da-46f5-4e2e-b2a9-601796b7dbaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eca38bdc-8af1-42cf-aa85-a400d2e093c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d409bd6-0565-4ade-9089-8dfb2d3176b4",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c11e514-30e2-4c45-ad12-d3cbbdd90e02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14e0d415-826e-4fe3-9fc6-fab3ebd46553"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6625c1b-bb56-40a5-94f6-da137e1a5006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbac57f2-f5c9-46c4-8a58-387ae5bc7607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ec11bf-6655-49d4-9f84-0667a1610c96",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1698d25-0b6a-4c14-830a-cc26791aa589",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f3ebb71-9ba4-4294-b19e-11fb4aa92f8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d30009f-a40d-4429-893d-2af054a582e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d01f5e79-f6ea-479d-a01d-b4c10a14838e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c275dba5-67b5-4704-a10a-5b94bde6bfc7",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aabb429-d4f2-4cf6-852a-19534bbd7e97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ca4a4b3-447c-4dd0-abec-a272f3ac7816"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cfa4c29-3de9-4283-acff-e05c08609498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b176f2-3739-4eaa-a822-56917192b9a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce09ae8-d8dc-4375-b461-bbe2c4f2eb33",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "954c3a35-1f17-44c2-80b9-2d795565b986",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c41fdb8-e01c-49ba-8596-6b0ca2e0515b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c8d8469-84d2-41de-8f50-1566afef3c0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21e1d74d-e03d-4df4-a923-d15bdb35afdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5096dbd1-69db-495f-96fa-a4b44d61d010",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30651a8-bbc0-4a40-bbb7-c63ad05283f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd46b12d-6d8b-47eb-92e0-b05c6c0672ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe89cb2-7b2b-471f-839a-6b2b28b3aea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70bd89c2-5a03-4fce-b158-ede448ab7955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e6a69e-0887-4e98-91a2-3e57f8f83c09",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96990f5b-ac40-4255-ae7a-9c114929ab17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf746514-34df-43d8-8280-62d9ae12ff5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d9b7948-b7a2-4ed6-8642-c853f6c59f73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5bcbd48-4c8b-4c0f-ad60-6630fa41d0c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ae0363-e6cc-41c8-b26b-317d43af5e02",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50efbe25-919e-48c6-878f-10788308c690",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afe2c2b7-7065-4cc3-a700-e96c17c83253"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab031dc0-9f27-4582-998a-12cd6c3e08d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a179188c-6932-4f9c-89d0-1247e20a84db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33dece12-5cb0-4daf-b129-d598e9ac57b0",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cdb8dcd-471c-45ba-917b-df985efa357c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "934260ca-71ff-44c8-9150-2daa11a1f549"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f75a70d6-07c6-4e42-a488-b324264ea3bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad106b0a-309d-4ce6-ac43-8b57d840d559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9840191-1896-44cb-979c-e06d17569eae",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c19e5b86-9f4b-4524-bcd9-5ecdea430db0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e8aa6ae-7c0e-454a-860f-a68dcde94ad2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "873cdcf5-1443-46d3-89de-7900558a5628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb07de0e-0568-4917-b254-d9142c045c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11bc8d66-73ab-4d2b-ae60-819dd4916229",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39e5246-dd29-4c5e-8b66-58ce5bae5011",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea74ebc1-204d-42b9-a749-43849a870972"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8158fab-2b7c-4447-b5ba-17ef2315cc07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e507280-1771-426b-a8dd-4bee710d4b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bcc9f3d-5581-43be-8aa6-afa7d63c2f31",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea8962b-43e9-4a26-b1c4-abe7d192f1d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff5ae2c4-d593-4d02-9f74-9f38c66dd524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2483c7-fc88-4cbc-a989-dab6c469eb62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "490b15fa-4f47-480f-936d-182380d24282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a2d1c9c-420d-4c99-b79f-ecabfe062bb2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d42da5-a778-497e-b624-716e0a774bd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b27f9a67-c869-4976-aeb8-a5124e1a5ad0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "932f1aaf-e47e-4780-ab12-9987a85eae9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "927565dc-d20b-47bc-a8ab-4f02e3e376f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3671fab5-e078-4e03-a4eb-48d2b4d33cc6",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffbed76a-e1e4-4d3e-85e0-094c4bbfe691",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7b3edf2-6438-484f-99df-ac55ebc4daf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c68c267-c818-4cb8-a40d-6d4abfe22ac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5b04d48-9f32-4408-aa49-a09026a21aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb3697b-2ea1-475c-826a-e027de7be983",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f254efba-0fa1-4dfe-9291-31d52a235a45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de50d635-00c3-4f82-9d19-3120112e90ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70cef991-02ad-40cc-a4ec-fb5c444e99c8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da59524b-c95c-4520-8f84-66b9884f5a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5973a24-d4ff-47d8-9479-6d25bdf36ee9",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55815721-315b-458d-93b4-ac12b0a20b33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87b2a9a7-7564-4404-b223-ce72e6278d29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae262a8-2131-402a-bc77-a77408487a1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cfc0c0a-e149-411e-bb3e-7a10621fbea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d5255a-04ba-4dbd-aa6e-8d6115a3071b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c943b6d-eb42-4d3f-8329-ec6217ab81b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50be6b67-909c-43e8-97b4-4773dfe9878a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a2aa18-d86f-476f-9134-ad2618a35fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34982e70-456d-433b-8aea-40cb82023819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bcbd2b9-a1c2-4e02-af60-c80c57fe4123",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c5c4bb-e038-4c5d-8ace-1b1d40b9ffab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff0bea29-716b-4bc6-b089-b2221327edbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98525dfc-1059-4b1d-a17a-d81eee4717b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aab7adaf-4048-4bc9-afbd-a0bcc5460e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c0bc5a-4952-4567-8a32-744cfef73a06",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ca3481-77a1-48d1-b8da-93386a7a2464",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f32a9285-6fe0-4e8a-89ce-18e05087c6ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50b78d3-3780-4970-b90b-6d3cd65a57eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae50dd67-0922-4955-84bb-d5a8f0b821a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df3fabde-3de2-4c1f-aa5c-2bb83d4c9275",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff684d2-d3b9-470d-8e7c-f01d0e516c2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16c37d90-a5c1-4171-928b-93a5fe41af3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf74995-16c3-4ee8-bcdd-1fdd73b421a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46a16691-d0e6-4323-95ba-72a5470679fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7012d678-f3b2-48a6-acbf-4c7776130624",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4ffe48-8a07-473d-9a0b-1d882f0b163f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "671529bd-f6f8-4017-95c3-af34cfb35deb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90bad5cc-a2ab-4ac3-9e7b-7308049030a3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a73d823a-57cb-4c65-8a33-80bef85f45ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e513602c-ecec-498f-aacd-1312ba0f2dbf",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e83bc2e9-6d89-4fcb-ad2a-fe71997268b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3207b133-6792-4b88-8126-77bbf7956fe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4131f30-f5bd-4d6e-ae3d-bbdb4f18d3c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54b2ec4f-a433-4077-ae0f-a2af9dd80d33"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba7eb05c-e05e-4b1a-ae7d-76cc62045d2a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ad1a8ae-206d-4b4d-9385-53e47b8ab1e5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "124df4fe-d1a0-4040-ac88-a1452309cf7d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dc0c8083-e91b-4283-a0db-da9a2662d42d"
                    }
                  }
                ]
              },
              {
                "id": "e51c30be-e469-43bd-b39d-636f14da7c18",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6682342f-e8db-498d-96db-996aef290faf",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74feefb2-5fe1-4c91-ac4f-093158212873",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ad027aeb-23b4-4182-a7fc-2081965aa87e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b597382-fea1-48e3-b8c9-704b9cbb3e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d05ad046-9f46-45dd-af95-3cadbf9bc9ce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be8f6ac1-1640-49d4-8a48-2066aa8d4281",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c2d7ef3-f639-45c6-a9ce-839f46ce7e07"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8d714c0-6008-4bb3-9378-3eb59110a19e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d0c3b756-d430-44e8-8a16-5de2b636d66d"
                    }
                  }
                ]
              },
              {
                "id": "2e2ffa4a-bfd6-47c0-8e54-fe3ab07af78f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e275a5e1-0b26-4982-b805-ba421463872a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7a54f4-1de7-4ea8-a7cc-ecec35a981a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "1d320942-74f7-4847-9c99-8252a335b23f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7082b1a2-e37c-46a9-aea1-cf07d109c22c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61fbbb8b-3c02-4371-944b-e9607165d8e6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ee2fbcb8-c5c2-4f10-94ed-cf9a85eca82d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a4e88ed8-2a57-4674-b4ca-2f467e168108",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "507a02a9-cb8d-47f1-ad3c-dc60a78a5f9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "dadaf7ba-dcb9-4c4b-a76b-b0da8c8d52e5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5dc2249-316a-4dbe-9ab0-5bab5ccb9e57",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9907124a-d734-4160-bfe4-2b4add9c53ea"
                    }
                  }
                ]
              },
              {
                "id": "b721e2d0-acdb-4edd-9b2a-45b876164c79",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "26ce22a6-e5a1-42d7-b88c-609503c28690",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ba44cc41-b805-4f40-8a81-401a840cdc76"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b68d5d91-e2d6-4f67-96cd-16cec6da42da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db147eee-fe74-4978-bf6f-b5ee1f048307"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d5ea93b0-57ab-4e10-8d8a-55406896039b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e23dcaa6-aaf7-47ec-8c82-4d88a1933e1d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1cb0a98f-5eea-46eb-89a0-65a131f3f2cf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "687ccd84-6874-4eac-a1d0-8f749b80a5ba"
            }
          }
        ]
      },
      {
        "id": "d55b1b0f-c670-4216-a6d6-37c51b95124d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "52ccbffc-e306-4d71-8d7a-4a0ccf73774e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dcdf7783-5238-4336-823f-381b20b0340c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a0a48a5d-865f-41e8-9cb7-82a3e2431037",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b76eed96-4bd6-44da-8aa5-fa674e3dc38d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a6bce903-e010-4072-a1b6-0905207e2fc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca4e928-dcf1-42a2-8bd9-82b830b48db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "049bce68-167e-4dee-88b6-74ba60f5fc38"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50833520-0a33-4f14-820f-edb3014efcf4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fbef74b4-a722-4fcf-8256-b49ac2abbf42"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6928bcb8-826b-4b2b-9448-6d71a73f47ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "438f7664-174a-4384-973b-884b07f7eed6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a6732415-cc21-409d-94d6-1b98bd021ceb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "63b67045-0992-4567-b2db-6672df59000b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef33e8ed-edc5-4398-ab50-8ee33f2dfd10",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "95f3292e-d2ed-4757-949c-9dcd643eebec"
            }
          }
        ]
      },
      {
        "id": "032898f4-53b2-43c4-82ef-13ef1ac52adc",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "bafbff88-29ee-4594-91ed-7e63409fe668",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d1100363-d1fa-434d-820e-63ae04f985fe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "714b836c-542b-469a-bede-0e6ae247c2d7",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd175335-6b62-4bcb-99a9-9cc90d503097",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3bd029c-b719-4400-b09e-bde6f4b9cd54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67246b7-01d6-4bd0-afed-5d2f2590a6df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9046f517-4bca-467a-a7fe-654d8a61fc3f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "665673ca-7c56-405f-9556-6e6203f899ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6bf1a9b8-15e0-48f5-8002-c2ed9ba789a7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "248d9f66-e4ba-47f0-ae91-f594e8964747",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e3fc43e-d895-4ad6-abfb-281268001433"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "91e15408-389a-4ce9-b3a1-d5e00804f59e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c3c9cdb8-1894-4def-b11f-29cf077d3855"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "daf71601-931d-44fa-811f-18c0646b60d7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e3f19bf9-4233-49f7-bcc3-2063da1f10d1"
            }
          }
        ]
      },
      {
        "id": "87dadbac-b2b0-4780-9c63-3d9163dba907",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "33a43c69-0c71-4439-9d36-71ba22d41572",
            "name": "Negative Testing",
            "item": [
              {
                "id": "71ddb1ed-a40a-4bda-8f23-acc64591e3d4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "75347b65-7cd0-4a3a-a1fa-83778c80a8f3",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da5ed02b-300b-4fe1-8d79-41eba1efdd48",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a27b84f-4ab4-4b4e-932a-f6df3c9c83e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "155c06c3-1e84-4432-a4d5-6e6f99e0fa03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "306f79f8-dffe-42fc-a407-8d0eaa9acacf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e3969ce-5dbc-4ca4-ac21-a6f29bb041ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e49ba9b-e20f-4f41-858b-181214959e5f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b1864a5-9261-46b5-8fdd-44edae1ff840",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2844de2-fa37-415d-a7f0-6d3bbc8f05ba"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "93498dfe-6f0c-4605-9ad3-ecbcc1e14be4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "395e0647-243f-4164-bad6-4429472924bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7214979b-98de-4630-89e7-acbc8cff9f31",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b07decb6-45a5-454a-b326-eb77a16cb94a"
            }
          }
        ]
      },
      {
        "id": "7f7849bf-4490-49bf-a926-597c23e32e94",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f0991035-8485-4393-98e1-9e9ced8ebb06",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "652b03af-a201-4425-84f0-f868b6d6424d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1b51a485-3ac1-4f61-802d-d5bbe76a62d8",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "50bf72e3-a4f9-4a07-9cf7-ab9e87b4a2fe",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7ec38dcd-509a-4c4e-b6e5-be7980b9f2ec",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 14.070175438596486,
      "responseMin": 5,
      "responseMax": 270,
      "responseSd": 28.77648872739682,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1701822981829,
      "completed": 1701822994787
    },
    "executions": [
      {
        "id": "d45b3e46-cbd2-484b-9c5d-9d688add6fde",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f36741cf-f31e-47bd-a5b8-85ef4a4d38d5",
          "httpRequestId": "d6ecf064-3eb8-4fb4-a782-0bab4cd0e0db"
        },
        "item": {
          "id": "d45b3e46-cbd2-484b-9c5d-9d688add6fde",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "52e18ecb-0aea-4754-abce-ff1669bf32be",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 0
        }
      },
      {
        "id": "78f9190c-84e5-42ee-9946-ec9b06b54262",
        "cursor": {
          "ref": "78f7cfcc-8fbf-478d-9357-6d8c21dc5043",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7ecf045b-4b38-45da-8099-9b9e7ba0009d"
        },
        "item": {
          "id": "78f9190c-84e5-42ee-9946-ec9b06b54262",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "751e75fa-b8a9-4791-8b08-49459d53d364",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "77dd6b39-734d-4c44-ab33-9627c3c6635e",
        "cursor": {
          "ref": "97d5d228-0379-46f9-b49d-526530458101",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2518af15-36ac-4c5c-ba71-1b52d5a754ee"
        },
        "item": {
          "id": "77dd6b39-734d-4c44-ab33-9627c3c6635e",
          "name": "did_json"
        },
        "response": {
          "id": "3874d22d-bd7c-46fb-80b1-ff42518b7967",
          "status": "OK",
          "code": 200,
          "responseTime": 197,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e287ba87-f51c-4b58-b53b-8738499d18f9",
        "cursor": {
          "ref": "a2979c8f-6119-45eb-8102-3485057d9441",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0f4bc440-ccc8-4d3c-9da4-1f26a0b8361e"
        },
        "item": {
          "id": "e287ba87-f51c-4b58-b53b-8738499d18f9",
          "name": "did:invalid"
        },
        "response": {
          "id": "f97b7d37-1a3a-4bdd-b93f-848cdb61e67a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e287ba87-f51c-4b58-b53b-8738499d18f9",
        "cursor": {
          "ref": "a2979c8f-6119-45eb-8102-3485057d9441",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0f4bc440-ccc8-4d3c-9da4-1f26a0b8361e"
        },
        "item": {
          "id": "e287ba87-f51c-4b58-b53b-8738499d18f9",
          "name": "did:invalid"
        },
        "response": {
          "id": "f97b7d37-1a3a-4bdd-b93f-848cdb61e67a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c4b687-2e67-42b2-a889-d6c517c77e94",
        "cursor": {
          "ref": "acccbc59-f575-4106-afdc-c321c1ea5a6b",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7e6e7247-b215-4add-9812-f4e7268ed0c0"
        },
        "item": {
          "id": "58c4b687-2e67-42b2-a889-d6c517c77e94",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "abc94fbf-afc2-4d49-9e0e-ac8d8f1cbc7d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 119,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab797f74-994d-4f50-aa48-cecc4311979c",
        "cursor": {
          "ref": "4eef0e64-5310-4c50-bbab-f48887973265",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "42a01cdd-3413-406e-883d-57015b814adc"
        },
        "item": {
          "id": "ab797f74-994d-4f50-aa48-cecc4311979c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "daa8fbe8-a6c3-409d-8e39-6a570a68add8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6c3174-3588-424d-b657-3705f5af3f6b",
        "cursor": {
          "ref": "170ff0c8-8a41-4501-b19b-0bd174c0f8b6",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "dcb95edf-cc64-49ed-8bad-83aca59c98b3"
        },
        "item": {
          "id": "1c6c3174-3588-424d-b657-3705f5af3f6b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "43a5a9ab-6f2c-412a-a4ad-f15b42d9e5d3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21cc676-58fe-4712-a2e7-4f429575d35e",
        "cursor": {
          "ref": "fc02ee47-8c1e-4c7e-a6cc-d98d4ce023d8",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c1d930cc-6661-4e1f-b50e-1a19401c0697"
        },
        "item": {
          "id": "f21cc676-58fe-4712-a2e7-4f429575d35e",
          "name": "identifiers"
        },
        "response": {
          "id": "278e987d-80ad-4a72-95ad-a41fd4baca8c",
          "status": "OK",
          "code": 200,
          "responseTime": 202,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e57787b-6137-4cad-9e62-adc9285a4901",
        "cursor": {
          "ref": "993bd460-3b79-4296-b960-6392708f2d79",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9c961a89-f675-441e-8ac5-abb578c0ca3b"
        },
        "item": {
          "id": "1e57787b-6137-4cad-9e62-adc9285a4901",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ee4b0dc6-f390-4e82-9d77-6355b1d557f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ca3966-b372-4ca2-aff2-3f138f7be19e",
        "cursor": {
          "ref": "967631da-bb57-48c0-9323-0cdd6e91e064",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "378b4ea6-5864-46b0-b507-035cee6cc2a1"
        },
        "item": {
          "id": "70ca3966-b372-4ca2-aff2-3f138f7be19e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "de6a1f19-1b47-4562-a68a-08e9054a0d1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d4dc98-3e77-450f-9b38-4a795b48ce34",
        "cursor": {
          "ref": "c1273148-5c38-4850-838e-149af284d45e",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a1dbcef9-9e3a-42a7-981c-f1aa0b7c3c25"
        },
        "item": {
          "id": "54d4dc98-3e77-450f-9b38-4a795b48ce34",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4fdf6966-f556-409a-bef6-2c22b8c4d7c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad161f0f-9db4-41d7-842e-99e50b830375",
        "cursor": {
          "ref": "72bf84f7-734e-4219-92a4-e901c3b0e69f",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5df70f06-fe75-41d6-8781-6323e9591906"
        },
        "item": {
          "id": "ad161f0f-9db4-41d7-842e-99e50b830375",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b5f20da6-0dd0-4028-be1f-b2499ee4c723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "770fa9db-8115-40bf-b11d-b5dda006ea88",
        "cursor": {
          "ref": "d01e7079-ef7d-4ca2-8fc7-fc0a19019d1e",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "880cada0-ca9d-42e8-beaa-8b1db09df203"
        },
        "item": {
          "id": "770fa9db-8115-40bf-b11d-b5dda006ea88",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "72e03302-f122-4b3c-8eb6-dcdbfd490ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc14ae17-0c40-4f4f-bd96-fddb333e06b8",
        "cursor": {
          "ref": "d9deff5d-6bd2-4b87-83f6-1cf76d5c94f4",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "93cfabbe-36bb-4a13-a7f7-d92ba23bae81"
        },
        "item": {
          "id": "dc14ae17-0c40-4f4f-bd96-fddb333e06b8",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "1007fc17-fdc5-4097-b632-0a6111936a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7558b2-098e-4f41-8136-e5bb52dea134",
        "cursor": {
          "ref": "7453ba79-ee85-441c-91e5-d64bdb43f1e7",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "10766fe7-20b2-4c29-878f-c55a587d0106"
        },
        "item": {
          "id": "2f7558b2-098e-4f41-8136-e5bb52dea134",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e8047a2f-92ab-41de-9fdc-7efa1cbcea36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4dff360-a84f-456c-823b-253279a1eafe",
        "cursor": {
          "ref": "737d589d-1fd7-4c80-9c8f-e9c6615b7f77",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f68c31a9-19ea-4199-b014-5599cf897f21"
        },
        "item": {
          "id": "a4dff360-a84f-456c-823b-253279a1eafe",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e2c60a2a-53ef-47fb-bb76-7a7e833a527e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584713f1-b36e-4176-810f-31ac94f5f177",
        "cursor": {
          "ref": "6454ba72-e130-4e31-a62d-420594952989",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6eef9b73-bcfb-4959-8141-698864f803a0"
        },
        "item": {
          "id": "584713f1-b36e-4176-810f-31ac94f5f177",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "37b21e3f-2a5d-46c2-beb6-20f199500ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee32996f-eb53-4d96-ac37-ec643c68dc57",
        "cursor": {
          "ref": "f45a0286-1dc3-4b8f-8379-25ec2e18b967",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6dc88733-d2c3-4463-8240-92637844ad55"
        },
        "item": {
          "id": "ee32996f-eb53-4d96-ac37-ec643c68dc57",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8f595513-ab76-4b52-af58-b49217f235aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38003cd4-39e6-450d-910c-97dbe5138d30",
        "cursor": {
          "ref": "cfc82e5e-b3e3-4347-8ba9-0a789635fbc3",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "6ce93b8f-d771-42aa-9f09-3cac0a42cde3"
        },
        "item": {
          "id": "38003cd4-39e6-450d-910c-97dbe5138d30",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c108c8dc-cc00-42ee-a952-510e40f156ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10387afb-0433-4a9d-a5ab-049e3a1640d8",
        "cursor": {
          "ref": "52cc5af2-30c7-4b03-8362-dd52f5cffb18",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c4b80984-3511-4c01-bc9f-e24e31d73a33"
        },
        "item": {
          "id": "10387afb-0433-4a9d-a5ab-049e3a1640d8",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "28047a17-d9e5-430a-ab8c-b5d2b16ec34c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b70347-e26e-4823-8d3b-3dbcf2fe51d2",
        "cursor": {
          "ref": "f1246394-56c5-4901-8785-b1fa4114b0b9",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0fe65b43-f308-4a62-b6e0-5d138f1b88ab"
        },
        "item": {
          "id": "60b70347-e26e-4823-8d3b-3dbcf2fe51d2",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "55d3de42-49f7-4db9-b5a7-888d0dfde52f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e382f65-7fa3-494f-9ebe-a28ff42362a8",
        "cursor": {
          "ref": "2f2cf77d-a943-418e-a63f-53dbf4b734e7",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "87ba5840-388c-4550-afd9-99f0a5958821"
        },
        "item": {
          "id": "5e382f65-7fa3-494f-9ebe-a28ff42362a8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "a392bb53-055f-4742-9870-df3d0ea93666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665d527e-fffe-4a3a-a40f-a3dfd09b47be",
        "cursor": {
          "ref": "8475b3a0-da7c-4b8d-919b-db2df071ea06",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d8e7320a-e3b1-4550-b8ab-6aa696f672f1"
        },
        "item": {
          "id": "665d527e-fffe-4a3a-a40f-a3dfd09b47be",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9667b912-063c-4d7c-916a-0549f37ea32e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f01a64-b9a5-4166-b565-376d995ae0cb",
        "cursor": {
          "ref": "9f9a3b3e-25b7-4d2d-b186-ea2cdcf6aedb",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1c0d087c-bbc8-4b26-96a9-cc4b9ba4642f"
        },
        "item": {
          "id": "67f01a64-b9a5-4166-b565-376d995ae0cb",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "48c56eb5-bcbc-432a-b536-2762de8b7b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716d6096-a3ec-4acb-9319-a6db4ea9c72d",
        "cursor": {
          "ref": "9f54ab33-0121-4a37-b315-6025a31fac2a",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9c901456-5522-486c-ac22-e123537f34f8"
        },
        "item": {
          "id": "716d6096-a3ec-4acb-9319-a6db4ea9c72d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7ac73085-3bdd-45c4-bea0-dc1c94663102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74da8e02-a57f-44c7-9c62-d960961c561a",
        "cursor": {
          "ref": "0fd46023-2c59-40ea-8922-f57589e77f7d",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7a11d1df-1c8d-44b3-bc81-14ffdf4c07cf"
        },
        "item": {
          "id": "74da8e02-a57f-44c7-9c62-d960961c561a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8f1828f9-010a-4f18-8f22-a892fc229143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c006bc-06a3-4079-bf5e-ebb7683b013d",
        "cursor": {
          "ref": "a55240bc-f502-4a54-8d6a-683a6109756d",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f26d0648-ba88-4b1a-88e3-6fa39f402907"
        },
        "item": {
          "id": "01c006bc-06a3-4079-bf5e-ebb7683b013d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "11551ce7-36e2-42cb-8813-e32ecc92b642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10b8144-c32c-463e-aecb-95a3e938e2f5",
        "cursor": {
          "ref": "030bf98f-e806-4956-979e-aaeab70e1276",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "fcceb24b-9c3c-4d71-8b3e-5ed1f3c93c53"
        },
        "item": {
          "id": "e10b8144-c32c-463e-aecb-95a3e938e2f5",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8860bb9f-cb3a-43a8-bd0f-ae445c0f5e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5353cacd-28a2-4f25-8db4-53c534fc2173",
        "cursor": {
          "ref": "7c57c8ea-d56e-44e0-a44e-f7d816296082",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "86bb9fc9-cb1f-4d69-99cc-0eed68c63c56"
        },
        "item": {
          "id": "5353cacd-28a2-4f25-8db4-53c534fc2173",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "665112e2-677f-4ff8-a15f-7e2736ccff23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63689030-1202-4a12-9633-1ec8470df322",
        "cursor": {
          "ref": "e4355e77-2cd3-46a5-9094-5f97a17e3b35",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "0e4c72be-bc98-4376-bb5b-14ca6f2d3266"
        },
        "item": {
          "id": "63689030-1202-4a12-9633-1ec8470df322",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e65a67f1-923d-4654-9050-31a00e2158b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffbc30a4-43ae-41d0-be22-9821234c705a",
        "cursor": {
          "ref": "251256f0-e753-41b4-8e6a-5aa4cbaeed91",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f88439b5-23c9-40fc-8320-a7345ab183d3"
        },
        "item": {
          "id": "ffbc30a4-43ae-41d0-be22-9821234c705a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b347f7be-246b-4eeb-96a0-f30fb9c01257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732f80e8-36aa-475f-a95f-e2574b5fce56",
        "cursor": {
          "ref": "8ee8e9fb-4bce-481d-bc74-89ef818dd0bd",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3c4fea46-809d-4ae9-8ad6-7f4e1ad94a12"
        },
        "item": {
          "id": "732f80e8-36aa-475f-a95f-e2574b5fce56",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "8247fbac-399c-4fa6-8c54-566148a010cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5560336-680b-4de2-ba6c-ebdf5e1dd5bd",
        "cursor": {
          "ref": "0f736f55-788a-4f33-b0ab-23e194de56cc",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9b406848-bb3b-4fce-abae-2bd17bb2db95"
        },
        "item": {
          "id": "d5560336-680b-4de2-ba6c-ebdf5e1dd5bd",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "27373bc9-fb8e-428b-b4eb-25229a376783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "804398e8-f6a3-423d-b435-1ec0ce35d040",
        "cursor": {
          "ref": "9335d07a-8b3f-4782-8d3a-803c83509b01",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "259c9b83-d1ac-4fe5-b3f0-abe8fa5aa93c"
        },
        "item": {
          "id": "804398e8-f6a3-423d-b435-1ec0ce35d040",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5e397ffc-5295-4cbd-8aed-0a7ecd98c4c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c731669-8259-4531-ba91-be611746a874",
        "cursor": {
          "ref": "e761a591-9339-47f8-9ba1-15749552db81",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5b642d6b-4ef3-44f7-9d22-139f31fcf868"
        },
        "item": {
          "id": "3c731669-8259-4531-ba91-be611746a874",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "1de259a7-8419-4f64-bea8-19e343ac3f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e28edc-60f0-4d9a-b6b4-da925b7891a8",
        "cursor": {
          "ref": "72da44b4-4bfa-4b24-8d6c-bd2b89430947",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "bebe6e84-f776-4bb8-bffc-0b0c9aba8282"
        },
        "item": {
          "id": "81e28edc-60f0-4d9a-b6b4-da925b7891a8",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a438c98c-84f5-4cb2-838e-1c5dd73229d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c15019e-6d1d-44a1-ad6a-0fca59502edc",
        "cursor": {
          "ref": "6555e828-25c7-44ab-b934-421747e6b10c",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ab190fae-e0c1-49c6-b29e-6c37518b5d9d"
        },
        "item": {
          "id": "6c15019e-6d1d-44a1-ad6a-0fca59502edc",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b2504a80-3812-4af3-90d4-274e5aadfc77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf29651-2b01-4ed3-8308-77ca693a58a4",
        "cursor": {
          "ref": "2886b1ba-2689-42f9-b450-81000e2986e0",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "16ea6527-7889-4ebc-b394-ec781e4d07f0"
        },
        "item": {
          "id": "cdf29651-2b01-4ed3-8308-77ca693a58a4",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "47900fd4-6f6f-4ad4-8cee-a1310b87f152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "108101b8-dc88-4791-a25d-41a8dcf119b7",
        "cursor": {
          "ref": "9761b009-fa0d-4c71-9524-d4c04daaa1b4",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "76161529-1904-4316-ad58-20859072cf94"
        },
        "item": {
          "id": "108101b8-dc88-4791-a25d-41a8dcf119b7",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "52d75dbd-fb6e-4ad5-9bed-37ddd9ddf8d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a555f1-a9bd-4e69-b1b4-9a856e14f861",
        "cursor": {
          "ref": "e1e09c91-a4d3-4b75-b252-2e03d2314ac9",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a588622d-7ce9-4db5-8d94-30c0e1aff088"
        },
        "item": {
          "id": "39a555f1-a9bd-4e69-b1b4-9a856e14f861",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4d7e9849-4ff4-42bb-aaa1-3a521ce3fade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abbe86a6-0978-45a2-8c94-06bf05a58ba7",
        "cursor": {
          "ref": "c0c62bc7-2eb6-4cd9-baa0-d8c245f5d22d",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "fcab0d6c-84ba-4a5d-ae95-99cb0050d598"
        },
        "item": {
          "id": "abbe86a6-0978-45a2-8c94-06bf05a58ba7",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5938ccc3-3526-4b62-b860-698831aa778c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1faebe72-0504-4199-9d37-6806061cc036",
        "cursor": {
          "ref": "e573e189-9bbe-47ac-bc30-07de338c7525",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "56f9730f-fa55-45f8-9dcd-855835cd3895"
        },
        "item": {
          "id": "1faebe72-0504-4199-9d37-6806061cc036",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c43bdee2-bab1-4177-8a33-777f7cee38cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4493174e-2d8f-4fd8-b7fa-afe525a66f66",
        "cursor": {
          "ref": "b2e9b10c-0d50-40f7-b17f-cc37826439b6",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "497aba5f-ead4-4e11-84f4-b7b80fb1d6fb"
        },
        "item": {
          "id": "4493174e-2d8f-4fd8-b7fa-afe525a66f66",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "90b0d956-9a22-4973-8d59-005aa625b256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf63adb5-a0bc-4fb2-adef-056ff5a0e933",
        "cursor": {
          "ref": "a502608b-962c-4093-8737-eb6fdbd6725f",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "59980d10-59fb-4d9b-80e3-ed5f0bb1b918"
        },
        "item": {
          "id": "cf63adb5-a0bc-4fb2-adef-056ff5a0e933",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "dd050620-bcb8-46d4-9dcc-b9d32a0b5d98",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 34,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f8cd516-378a-4988-99ce-a42efebb8c5d",
        "cursor": {
          "ref": "238e3ef5-f2ee-48e0-99c6-d4958a4b06c2",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e867f764-8efe-4b21-bb5e-fdd35dc90bfa"
        },
        "item": {
          "id": "2f8cd516-378a-4988-99ce-a42efebb8c5d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ac2dfd74-c264-4fba-a022-224206549177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d6eebb-1a74-4498-8a5b-c725c27f8def",
        "cursor": {
          "ref": "865a8c77-2846-4d55-b0cf-4011aa2fd7e2",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "07a79ec7-b422-4343-97b6-35ce6df4a3e0"
        },
        "item": {
          "id": "77d6eebb-1a74-4498-8a5b-c725c27f8def",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ab84d8a4-6d20-467d-81d8-fcf3e7899133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4fe37c-5031-4a8a-9562-b50f6a2c6bf8",
        "cursor": {
          "ref": "275e8b55-2582-4974-b8ff-4d8cf50f1286",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "52bda705-7903-443a-85fa-5f23e380f4a3"
        },
        "item": {
          "id": "ec4fe37c-5031-4a8a-9562-b50f6a2c6bf8",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "535ee8b8-efac-40cb-91b4-bdd6046ad089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df2dc83-f4c3-4ec3-9810-b3d234c4fd3e",
        "cursor": {
          "ref": "be0310a4-7289-4f1c-951e-8c8b0c48dad7",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4c35a39c-812d-4472-b76b-8a2fa95a7852"
        },
        "item": {
          "id": "7df2dc83-f4c3-4ec3-9810-b3d234c4fd3e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "955fa28c-7bfd-42e6-b226-8db09bb9b35f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc503b3f-3ba7-4254-8a8b-7d1b099acc18",
        "cursor": {
          "ref": "88cb63ec-af20-48e5-b5de-a8ad02d88b85",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a282f6f9-3cd8-48ed-84cc-0f52fa394f9f"
        },
        "item": {
          "id": "dc503b3f-3ba7-4254-8a8b-7d1b099acc18",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c4468e66-932d-4773-8df7-6a2bc343b497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576fa42f-f930-4640-b69a-9565ee204cba",
        "cursor": {
          "ref": "d8e3ecdb-70f2-40a8-84e1-4b0aada6a4c1",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b7df9bd3-529d-4820-ae4b-d712e0d94a3a"
        },
        "item": {
          "id": "576fa42f-f930-4640-b69a-9565ee204cba",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a8c35440-ea72-4115-9311-1a2b440d8327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d309285a-eed7-4d4a-a713-80ea87081370",
        "cursor": {
          "ref": "fce9829a-9242-442a-8e0e-f04dd8bd163f",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "79559ce0-018a-4ea8-a8b7-8d77f00d44a9"
        },
        "item": {
          "id": "d309285a-eed7-4d4a-a713-80ea87081370",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "de63b415-1e4f-4fd0-8bdd-7e72cddfd490",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 23,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f8b3fe-218c-404f-9fbb-cc71eea84ea7",
        "cursor": {
          "ref": "6a9ff9b2-2623-4597-8ab0-1bb942245021",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4706cece-2104-4609-a457-10d7fc49e1bc"
        },
        "item": {
          "id": "75f8b3fe-218c-404f-9fbb-cc71eea84ea7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "25c12d0f-caee-41dc-bc0a-94094ab0943e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f80788-be4c-4ad9-8254-23f7bb10145f",
        "cursor": {
          "ref": "9acae961-da21-495e-b8ff-68df3a1f485e",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ef216ded-1844-4aab-927e-6dd402d8a932"
        },
        "item": {
          "id": "01f80788-be4c-4ad9-8254-23f7bb10145f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6dac6985-2049-4f3a-a70b-8d2bb9766c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f1e2e01-53bd-4046-b8cc-34c6883e2477",
        "cursor": {
          "ref": "7f92658a-18e3-468d-b081-ce7a5cdf4f7b",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c5b1e5c5-38bc-4556-9ffc-9d2759fff56f"
        },
        "item": {
          "id": "2f1e2e01-53bd-4046-b8cc-34c6883e2477",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9f2d859b-f224-4cac-b2c2-e7c9a13fc42d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68105295-6b30-4259-8a04-c4a57526de14",
        "cursor": {
          "ref": "e9839c2f-8413-458a-8181-c0836f3ac333",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4e389550-c08c-473a-b241-4eae9a44b75b"
        },
        "item": {
          "id": "68105295-6b30-4259-8a04-c4a57526de14",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "084ed18c-65b8-4845-926b-c2aa7fe70ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf48d458-0d64-45e3-981a-afd7706b9951",
        "cursor": {
          "ref": "20322c74-7a4b-4977-9ced-975c534022a8",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "95769e19-1df0-4e75-a497-2addf16f28aa"
        },
        "item": {
          "id": "cf48d458-0d64-45e3-981a-afd7706b9951",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "298514dc-26b6-4502-8d88-a88fb5ddf4b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3452b33-de6f-4066-9637-1817ff554c58",
        "cursor": {
          "ref": "6f2cf371-e54d-482f-842d-ffc75041562a",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "232000dc-0353-42c0-95f5-ed7565265df5"
        },
        "item": {
          "id": "c3452b33-de6f-4066-9637-1817ff554c58",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "29e15cfa-eb3e-4768-978f-1df6f538d425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27999c1b-3091-424f-b421-af117f1b6242",
        "cursor": {
          "ref": "e0b9cd2b-017b-4ccc-bc90-d6a8977be061",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c1a77afa-fe50-4ba9-8c88-3136a395b062"
        },
        "item": {
          "id": "27999c1b-3091-424f-b421-af117f1b6242",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a193e5d7-3de2-4168-ad9b-880b385beac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf4b84fe-619b-4314-8751-36ad01a6503e",
        "cursor": {
          "ref": "9136d895-47f1-44a6-a315-5793be95a936",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ac7e425a-3176-430d-8bc5-e5e85098d09e"
        },
        "item": {
          "id": "cf4b84fe-619b-4314-8751-36ad01a6503e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6cf4036e-77e9-4211-9a72-423c45de86e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a9ab3c-b73e-455b-8091-9b7259f42818",
        "cursor": {
          "ref": "991dcae0-cf66-4697-8b97-7451ebb32265",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "54f794e7-1516-4bf4-b527-0f9a92894492"
        },
        "item": {
          "id": "32a9ab3c-b73e-455b-8091-9b7259f42818",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4915b646-333a-476b-8350-d946253bb7f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab66fdb-daf1-4c50-9b81-a3144732bbd1",
        "cursor": {
          "ref": "969e9fc3-da4a-4a63-b4a9-e5042a4e6e53",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a0f28ea9-2ee9-4deb-8177-e4c1fae8e548"
        },
        "item": {
          "id": "fab66fdb-daf1-4c50-9b81-a3144732bbd1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "8f93694c-cd19-4464-a37b-9720b1b82a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a8d8655-c38f-4807-831d-ed339515af5b",
        "cursor": {
          "ref": "cbd28814-7a76-423b-9178-a0f16a74a4cc",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9f422eda-4c9d-4cc9-9d47-8490a5f048e7"
        },
        "item": {
          "id": "3a8d8655-c38f-4807-831d-ed339515af5b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "c0d9099e-c875-48f1-b3a9-d8e73e15c40a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce9fc06-9df2-44f5-b520-a5974b3a1ef5",
        "cursor": {
          "ref": "d1effb38-0d2b-46a1-9925-ef8b0a94822d",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6369c450-2caf-4664-b6ad-cbccf06945dc"
        },
        "item": {
          "id": "1ce9fc06-9df2-44f5-b520-a5974b3a1ef5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0a86798f-f619-4b0a-8772-2c61cab934cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51144a7d-0b48-47cd-b8f3-dba665fe2aca",
        "cursor": {
          "ref": "d2dad76e-934d-45ca-b8b9-f2f8515b0162",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c05279f2-1e7a-4e05-bb0d-ac4917434538"
        },
        "item": {
          "id": "51144a7d-0b48-47cd-b8f3-dba665fe2aca",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "54cd0e7e-fee6-4b45-b42c-320d0f6034bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fef38cf-3d5c-4456-ac0c-2ff883f8ba8b",
        "cursor": {
          "ref": "7fd88a14-3cd3-4e39-b036-63fbd4a291c0",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "6ecf8514-1e70-4cdb-bc9e-5ba058401868"
        },
        "item": {
          "id": "1fef38cf-3d5c-4456-ac0c-2ff883f8ba8b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e6051059-87b2-42b4-a6ac-f522d6281543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "095b72a6-8d84-4a3a-8505-01b7ce680aa5",
        "cursor": {
          "ref": "9feba818-b36b-4bdc-ad7f-7c03488ba358",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "91516fe4-26c9-4465-9e05-0c92e2c03082"
        },
        "item": {
          "id": "095b72a6-8d84-4a3a-8505-01b7ce680aa5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "4cfde51c-cfd2-4411-a50e-4c51a7891986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e2f427-915f-47e8-98c1-eb1d6d798052",
        "cursor": {
          "ref": "04c276f1-5419-4912-a907-fedd4a18500b",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "654ec96d-5101-4b6c-b675-b47a0002097b"
        },
        "item": {
          "id": "a4e2f427-915f-47e8-98c1-eb1d6d798052",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f888c55f-c159-41f2-9c62-85f169e8b08e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5255388-4022-4332-bf8b-e72a5c80983b",
        "cursor": {
          "ref": "4705640e-ae80-43fe-915f-03b6dcc1f64b",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "15481797-d4bf-4593-af6b-e2714be9c7b2"
        },
        "item": {
          "id": "a5255388-4022-4332-bf8b-e72a5c80983b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "21ebcb03-b8c1-4bd3-b6e7-5369d55088ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "946391b9-bf6c-47b3-a518-1980b21c499d",
        "cursor": {
          "ref": "d3a510b4-57b1-4e14-867b-526a29019b99",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "da1b10c2-b445-4347-a654-1c91bd281232"
        },
        "item": {
          "id": "946391b9-bf6c-47b3-a518-1980b21c499d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6331a27e-c196-4c2a-b49f-bcb51a0a38a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef72cd5-a689-4c06-8575-84af647427eb",
        "cursor": {
          "ref": "68dbae59-df89-4d65-87a4-14f3feb9a905",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a51e31ad-7f64-4e2f-adb1-761d86efea75"
        },
        "item": {
          "id": "eef72cd5-a689-4c06-8575-84af647427eb",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9d40078b-5c6c-42f8-afab-41eafda4b872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343219da-1196-4868-b55c-4baad097d2ce",
        "cursor": {
          "ref": "64980cf7-1c00-4a39-804f-809b7cda7df3",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e136fc3d-2168-479e-83d8-b1e3a1028846"
        },
        "item": {
          "id": "343219da-1196-4868-b55c-4baad097d2ce",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e499aaca-4b17-4254-9eba-e319639d06a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48684f17-def2-4326-8ab3-ed9f80e89cfe",
        "cursor": {
          "ref": "4f334faa-f63f-418b-8f00-2e8844c8c6cf",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "fd74ecc1-9c71-4ce2-950a-33fe4f6a7cd3"
        },
        "item": {
          "id": "48684f17-def2-4326-8ab3-ed9f80e89cfe",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2b1beb19-66a3-4a06-abbf-19162197d3c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d722e6b6-64d1-4328-aa25-f8d2b1b0f4eb",
        "cursor": {
          "ref": "4c6686f1-d3e1-4b28-a51e-1aa17a373b42",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d5d4a729-3872-43ad-bd1e-822753e02687"
        },
        "item": {
          "id": "d722e6b6-64d1-4328-aa25-f8d2b1b0f4eb",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6d4fb4bd-e608-4be4-affd-4f9d7debef86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73fa734e-2043-4aff-a5d8-014876fa200a",
        "cursor": {
          "ref": "0eb9b78c-10e9-4ef8-859f-874e89fec898",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "488b52a4-ddb5-4609-9c13-0798ee448a4e"
        },
        "item": {
          "id": "73fa734e-2043-4aff-a5d8-014876fa200a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6e967a44-f53d-415a-b296-7c4b54d31058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9569463c-3272-40f1-a197-b998ca4bf9ea",
        "cursor": {
          "ref": "8b5fed76-7a9f-4e64-80ee-6b52c54efbf6",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ee16d922-8c34-48a6-913f-01794b471ea6"
        },
        "item": {
          "id": "9569463c-3272-40f1-a197-b998ca4bf9ea",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2fab65a4-d3c6-442d-87c4-46cb45f07484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf4ddc8e-1157-4492-9f6c-286ae84c5d2d",
        "cursor": {
          "ref": "c1ea4dae-3b9f-43d8-8830-4f78ff7f4470",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7ca7a036-445e-4ed8-934c-fefbf1c874c2"
        },
        "item": {
          "id": "cf4ddc8e-1157-4492-9f6c-286ae84c5d2d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "41856a74-f17c-4355-b923-b3d58bfe783c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de024fd7-0a33-4d91-a196-0817d39d5394",
        "cursor": {
          "ref": "50fe9ffb-20d8-4145-a3fb-e105e26ecbb0",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "03df1c1a-8e0f-4f02-af38-0ce8c1090b42"
        },
        "item": {
          "id": "de024fd7-0a33-4d91-a196-0817d39d5394",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b629dff7-460d-44f4-8e66-85687801661d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f72483-649c-4a72-9d7f-63a48be5008b",
        "cursor": {
          "ref": "1f93cda1-77e9-4cb5-b41f-1f1457f494d2",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3f644a09-955a-4dbc-a276-495d1b3059fc"
        },
        "item": {
          "id": "b0f72483-649c-4a72-9d7f-63a48be5008b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "1e822656-94bb-49a0-a6f4-479253731e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac1bec5b-6c24-4291-b127-0f690eec3b71",
        "cursor": {
          "ref": "0f39eb9b-2c4e-4878-8bdc-6688f6b3223d",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "40c6bee3-4701-471f-a258-27be6d717840"
        },
        "item": {
          "id": "ac1bec5b-6c24-4291-b127-0f690eec3b71",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "29d89dfa-885d-45ae-a93c-c3cd6214ff1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22206074-35ab-4464-8a16-bf8490d6f630",
        "cursor": {
          "ref": "ce1a60b8-e66d-4de7-87bf-77f3bf9f0df9",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "98bdad5f-248f-4610-a681-dcf8225cbe80"
        },
        "item": {
          "id": "22206074-35ab-4464-8a16-bf8490d6f630",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f02ed987-c492-45fd-85ef-9bdbe2dcebcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eaa0aa6-1b0a-4919-862b-7260cd1964a1",
        "cursor": {
          "ref": "9bd9dfc6-369e-4455-ae9b-60f650bafaa0",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "776dbf77-aea8-40d3-8ec6-bb322686aa37"
        },
        "item": {
          "id": "3eaa0aa6-1b0a-4919-862b-7260cd1964a1",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "43cb9362-61af-4c74-8e87-7b5fb11622d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34dd953e-c55d-4ff2-977c-923013264ab5",
        "cursor": {
          "ref": "38e01175-fb65-4aec-bdaf-d66ae71c9d49",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3bafc06e-f984-461a-84df-8c96426eb0df"
        },
        "item": {
          "id": "34dd953e-c55d-4ff2-977c-923013264ab5",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "7822b662-a91b-463e-8eee-4320c5f9e1df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451c61db-db50-48f1-a071-4433bf628ed7",
        "cursor": {
          "ref": "db020d4e-8622-43ae-a181-b0350ed914be",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0cc24101-ace6-4d98-97ce-a4f6a0d8ed8c"
        },
        "item": {
          "id": "451c61db-db50-48f1-a071-4433bf628ed7",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ec6b5826-26bf-482a-9ce8-f2437596abb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5237fe-9792-4cb2-84b2-7267d6208deb",
        "cursor": {
          "ref": "89cc4b54-069f-4b7c-a08e-3acb1451639d",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "90b0b646-fdc7-4f58-b433-44e5114fa2b7"
        },
        "item": {
          "id": "2e5237fe-9792-4cb2-84b2-7267d6208deb",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "db415f94-5497-44c8-a09a-c762619df22f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0dbdfb-5342-4260-9e97-d4f97538c0b6",
        "cursor": {
          "ref": "ae56b3a0-c5c2-46d8-bb6e-b36338671ae0",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "29905ebe-c094-4123-8032-851651951a0c"
        },
        "item": {
          "id": "1a0dbdfb-5342-4260-9e97-d4f97538c0b6",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "22cc0da8-f7c6-4d3b-b20f-61488004b47a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38d364f-4c1c-4773-921e-d3b5113fd0ae",
        "cursor": {
          "ref": "5b4c3994-0158-4d3c-bf8f-5c63c13b49f7",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "53866900-6aa0-4f39-91e5-3399d3f4faf1"
        },
        "item": {
          "id": "a38d364f-4c1c-4773-921e-d3b5113fd0ae",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "cd2146cb-9118-46fe-bd82-0eb5ef5321a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f699af-3448-45b0-b7d2-92eb0809d438",
        "cursor": {
          "ref": "59ed8c97-96d2-4111-bba0-0e63acc31368",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "dd584e40-ec0e-467d-a280-4366b264d92b"
        },
        "item": {
          "id": "95f699af-3448-45b0-b7d2-92eb0809d438",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f251daab-16f1-44db-b849-604dabf5bb08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a47bbda-1282-4ef3-aaf0-d578c2d9f8a2",
        "cursor": {
          "ref": "12a01373-4ede-4744-b0ff-291262335239",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "20a09ee6-9e26-4634-ad00-465efe817c30"
        },
        "item": {
          "id": "5a47bbda-1282-4ef3-aaf0-d578c2d9f8a2",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f4666abe-cdcb-48e0-ab3f-26615202e3b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe2f445-c82a-4a0a-a980-4b213a57d1fb",
        "cursor": {
          "ref": "f2f4ccc6-4a79-456e-97d9-bf6005b67035",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0cc2871f-4564-47f6-a5d0-aa3dc6c4f195"
        },
        "item": {
          "id": "9fe2f445-c82a-4a0a-a980-4b213a57d1fb",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "47ece506-e3d2-4370-9428-25aa8a1a3bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e260f9-08a0-446e-98dc-962c78c80053",
        "cursor": {
          "ref": "812d1555-bf50-41d4-b80b-ae56395c11db",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "cc5651b2-b945-4b63-8fcc-f363a2964d6d"
        },
        "item": {
          "id": "d5e260f9-08a0-446e-98dc-962c78c80053",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f2cb33cf-6afd-4ec1-bb43-faa6aac90f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65eba941-e793-41b5-b010-3366fff10929",
        "cursor": {
          "ref": "1e714c94-aba1-4ed6-92b5-081c1d6286fc",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "23130024-177a-4957-8c1f-b38e72b49d10"
        },
        "item": {
          "id": "65eba941-e793-41b5-b010-3366fff10929",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3949f66a-566c-41bf-9cf2-577b654a97fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b4f4ce-70de-4322-9948-9b5b2ce1d157",
        "cursor": {
          "ref": "84e1829d-2c81-4a61-9f14-44eb42f8edaa",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "eb725a97-9d9f-4a6e-a11a-b515047e7d5f"
        },
        "item": {
          "id": "66b4f4ce-70de-4322-9948-9b5b2ce1d157",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "130c4b62-6df5-4c27-a8af-12dc8fdc807b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee7427a-0ee6-44cb-bb27-fe06cf966008",
        "cursor": {
          "ref": "c09a2890-8b51-48c7-b808-56c197108c01",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a6adedba-83f8-400b-bf11-5da12973601a"
        },
        "item": {
          "id": "1ee7427a-0ee6-44cb-bb27-fe06cf966008",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c0a0508e-92a6-4e98-bf46-48ba70f4e1ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c904f996-8e83-4b62-9f33-8b198a4a812d",
        "cursor": {
          "ref": "7b5efa21-61c0-4b14-8289-a69b12610b13",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "daad62f3-ddad-4a1d-af34-ede1f5c42e3d"
        },
        "item": {
          "id": "c904f996-8e83-4b62-9f33-8b198a4a812d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "536bd178-d76f-4b5c-96be-67fdf00e7cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bfa122d-3e44-41b7-aef8-ff64681c01d5",
        "cursor": {
          "ref": "3ec76125-fc0b-495a-8f3c-2f99e8766e69",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "99e5c346-e5b4-41e6-810c-d6db31bf324a"
        },
        "item": {
          "id": "6bfa122d-3e44-41b7-aef8-ff64681c01d5",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "629e3234-3008-4c8d-8865-7b4453f79fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1513f04b-e157-4dca-b982-3ef4f0b8e69e",
        "cursor": {
          "ref": "ccb7142a-7cbc-4d95-b497-6b6a82bafdfc",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3f93fb1b-b382-43b6-a3d2-38625c562cec"
        },
        "item": {
          "id": "1513f04b-e157-4dca-b982-3ef4f0b8e69e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "506867af-1bb3-47be-be04-be968bf2d7ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b21f54e-6167-4fe4-b2f2-c556cbaa6604",
        "cursor": {
          "ref": "295868f6-0fe6-47c6-b525-58f0c9b3faee",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3e8ba3e9-faeb-4f8e-874d-97d3091fbf7b"
        },
        "item": {
          "id": "8b21f54e-6167-4fe4-b2f2-c556cbaa6604",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6dafb3bb-45a0-46e6-951c-fcc904557be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfbb997d-17e7-4a54-85a8-54238cbaf6c3",
        "cursor": {
          "ref": "236b7a41-5f67-4445-82c1-3ad47bd0cc6e",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b0d79717-3a6d-4fb8-8a03-eb99ef04cd33"
        },
        "item": {
          "id": "cfbb997d-17e7-4a54-85a8-54238cbaf6c3",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9f3af4fa-5b19-42b9-bc92-e47859275a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67de6e93-87cf-4421-8eaa-d681b2ea2316",
        "cursor": {
          "ref": "eca9ba5b-a578-4256-a7d7-ee93fef85a26",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "dca3ffff-fb56-409e-86f7-fd0715ac8358"
        },
        "item": {
          "id": "67de6e93-87cf-4421-8eaa-d681b2ea2316",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c28788f9-23b9-4536-b7ab-92f650fed144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7569d546-c384-4d03-a036-02b2bc53f839",
        "cursor": {
          "ref": "3920ff2b-1720-49f4-ad91-d82d4d058dc9",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1139ec3b-bedb-412b-8304-f323e7c2387f"
        },
        "item": {
          "id": "7569d546-c384-4d03-a036-02b2bc53f839",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c73076b6-82ef-466b-9e03-5a6c319d8b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06dea9ce-45c4-41c6-bd44-e288b076cb11",
        "cursor": {
          "ref": "4852f537-b6d3-4e05-b282-8e4d767ac4d9",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "aa4dc7aa-2509-4201-8884-20dfce73d192"
        },
        "item": {
          "id": "06dea9ce-45c4-41c6-bd44-e288b076cb11",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a14632ab-b249-416c-930c-485ee8daf125",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51487157-d059-4779-8c3d-601165ddb092",
        "cursor": {
          "ref": "d3cba756-6b78-404e-8dfd-d877462082ad",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "fae7f9c9-3ccb-4244-a75b-4c7bb89073bf"
        },
        "item": {
          "id": "51487157-d059-4779-8c3d-601165ddb092",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "46ccc6f3-af7a-4a0b-9306-9f8c0136bc09",
          "status": "Created",
          "code": 201,
          "responseTime": 48,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc72c18-8099-4dca-b7a7-8b928f43dd76",
        "cursor": {
          "ref": "b87009e2-aa69-4336-a4c5-93ac727fb56a",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "302d77f8-69fb-402c-b89d-a5dd82f9c9a2"
        },
        "item": {
          "id": "acc72c18-8099-4dca-b7a7-8b928f43dd76",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1a362405-552c-492e-b69f-220b64c4eca5",
          "status": "Created",
          "code": 201,
          "responseTime": 193,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb00adc-00d3-4bf8-aa8f-981362c95b29",
        "cursor": {
          "ref": "89823053-8f8b-42d5-b716-691f6bf620a2",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a982e8f2-e303-4cc2-b846-54a4102661da"
        },
        "item": {
          "id": "9fb00adc-00d3-4bf8-aa8f-981362c95b29",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "046f3da1-09bf-4475-ab5c-e145f7643b3d",
          "status": "Created",
          "code": 201,
          "responseTime": 226,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "446040d8-c686-4ff0-8cdb-a3d501b54fb4",
        "cursor": {
          "ref": "d921642b-1809-46d9-a822-2cc5b6f5df9f",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6ba552af-346d-4792-9220-b84512ee9bc5"
        },
        "item": {
          "id": "446040d8-c686-4ff0-8cdb-a3d501b54fb4",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9ff9c06f-700a-4b6a-bcc4-24ed6021909e",
          "status": "Created",
          "code": 201,
          "responseTime": 40,
          "responseSize": 918
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "894b2ca7-60a5-4a33-a8f0-5c99ce714dc8",
        "cursor": {
          "ref": "5dd6b9c8-96d6-4ffe-8b83-c75fb0fd95a6",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8726eb89-aaff-4dc3-adaf-030de6be8dc9"
        },
        "item": {
          "id": "894b2ca7-60a5-4a33-a8f0-5c99ce714dc8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "70bb3f85-2be4-4659-b4dd-9d3a87dec8ae",
          "status": "Created",
          "code": 201,
          "responseTime": 32,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0b0943-3fcb-4045-99f2-17f343243430",
        "cursor": {
          "ref": "fa49620f-bbfb-4260-9164-79657eac4236",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "afae5c8f-13fe-46a9-8aba-9cfa75e67570"
        },
        "item": {
          "id": "2a0b0943-3fcb-4045-99f2-17f343243430",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d0eb5f44-b4a1-412f-b0e5-daf0c9c09896",
          "status": "Created",
          "code": 201,
          "responseTime": 33,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6bcfcea-6796-43df-a2b4-6f23b442af8f",
        "cursor": {
          "ref": "a196c939-caa9-4e6d-94a5-cdf4d2e0aeb3",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "66178b1f-54a2-45f7-be7f-088dd3573837"
        },
        "item": {
          "id": "b6bcfcea-6796-43df-a2b4-6f23b442af8f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d46aeeac-4c51-4009-97eb-237e6c6a9a5c",
          "status": "Created",
          "code": 201,
          "responseTime": 32,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c78693-0b6a-4841-9c0c-ac3e05dd0584",
        "cursor": {
          "ref": "7ac717ae-476e-4ca7-9462-fe028f16da29",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "aac56bca-a27d-4c3b-afdd-9ea1b906d1ce"
        },
        "item": {
          "id": "35c78693-0b6a-4841-9c0c-ac3e05dd0584",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "33b621ea-cd8f-4731-9606-a01533f47df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda78dcd-08ee-4372-acb2-b17b5ae14ee1",
        "cursor": {
          "ref": "8d117939-66a7-438f-96d1-1226e985b5d0",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "89ee98ad-bb3d-46b0-b8ca-177ba5deee90"
        },
        "item": {
          "id": "bda78dcd-08ee-4372-acb2-b17b5ae14ee1",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f742da98-115b-4f5b-b2db-0fcb72f8e7b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37d322b-c37c-4edb-a29b-db4fdd9dbfd8",
        "cursor": {
          "ref": "8ac40632-4367-441d-ae04-ec9659ca7cff",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "94c47840-f9f4-409b-88a5-571161b3f6da"
        },
        "item": {
          "id": "d37d322b-c37c-4edb-a29b-db4fdd9dbfd8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4f4e7103-6b2c-4f0f-8c56-b7da870136f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa42d9cf-b431-423d-9712-fa9d0830abe2",
        "cursor": {
          "ref": "f27232a8-fbd1-443a-bc7b-b298bddd8e8b",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f5dc21b7-7d1b-42b2-b13b-127d6a8a6851"
        },
        "item": {
          "id": "aa42d9cf-b431-423d-9712-fa9d0830abe2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "76668184-d491-4df5-8958-8bc79636c6ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729c64aa-9ef4-4d84-9f2f-ce7b2cd2228e",
        "cursor": {
          "ref": "d15ec72b-d0b8-4ce3-8f66-1aa63e5dee23",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c7e37432-97e0-4dbc-90ce-073843935f4f"
        },
        "item": {
          "id": "729c64aa-9ef4-4d84-9f2f-ce7b2cd2228e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fc32d81c-72ed-41ed-a9dc-ae595b88ab3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3e9104-68ef-4630-b251-01611d27fa4d",
        "cursor": {
          "ref": "9630e53e-42f9-4229-a289-957a00cb5ce1",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d522cd95-0e32-4dff-8dec-b0e4f2734465"
        },
        "item": {
          "id": "1a3e9104-68ef-4630-b251-01611d27fa4d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4102a116-4cae-4fe2-a669-3e765df13857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e47503-6584-43ed-807e-eef133084b08",
        "cursor": {
          "ref": "f7bd6e4b-420f-45ce-9639-8a28bcd17b75",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c64c2b40-7f32-4c26-a799-324658be60ad"
        },
        "item": {
          "id": "16e47503-6584-43ed-807e-eef133084b08",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "36780a12-799b-4efc-b599-242c5a43285f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6409eee0-18e6-49d3-8a65-9e55617e4db6",
        "cursor": {
          "ref": "39fdf80d-6a07-4aad-bc6c-5f86e840a944",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d66196c9-92f3-4d9f-a370-9e9515b29e62"
        },
        "item": {
          "id": "6409eee0-18e6-49d3-8a65-9e55617e4db6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d992d0aa-27a0-43e5-b5dc-58d2833df779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d12a8bf9-e8e7-4690-8c38-f271513bd544",
        "cursor": {
          "ref": "e966a68a-87d8-481e-a5c9-fde7c01d89b8",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d47451b2-8b44-4993-ada5-733f9b7db067"
        },
        "item": {
          "id": "d12a8bf9-e8e7-4690-8c38-f271513bd544",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "01d4adf7-f006-4d98-be71-702d22d4487a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa52be3-70dd-4a28-94ff-5e6488b5730d",
        "cursor": {
          "ref": "9a1be1d7-9862-45b6-b6fc-fc06f65df387",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "07935cfa-3671-4eac-848a-a1354ee3ffd1"
        },
        "item": {
          "id": "7fa52be3-70dd-4a28-94ff-5e6488b5730d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b3e8f058-952b-4f8a-9b2f-4b307d60d57f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dab9787-509a-4ca9-9c12-5ea8056bdaad",
        "cursor": {
          "ref": "2b0d8e4b-846e-4114-ae34-76e43c580276",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8fc759a2-cc2b-4b47-8b32-c72eddac59a4"
        },
        "item": {
          "id": "6dab9787-509a-4ca9-9c12-5ea8056bdaad",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "95b236d4-d6dd-4e91-a756-8b601e6d8459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ced7f01-0f34-4442-a2c0-bee5e6b2b040",
        "cursor": {
          "ref": "60665b67-027f-4fc8-93d4-34be1841ddb7",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a766a850-be55-40df-be87-8cb73164a9ea"
        },
        "item": {
          "id": "2ced7f01-0f34-4442-a2c0-bee5e6b2b040",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "71eeebc7-cc1a-4be9-9b12-0b8d16128f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d6eb96b-c948-450c-aee6-82293c50308a",
        "cursor": {
          "ref": "3c1e0547-01d5-4819-bd7a-69daf45de213",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "27e5ef89-12b0-4a25-b27e-77b474b3c6b0"
        },
        "item": {
          "id": "9d6eb96b-c948-450c-aee6-82293c50308a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9dd30b70-0815-4ba0-8fe9-92afbf3a692c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2593a0d4-b9bc-49da-98dd-4fa081e4f328",
        "cursor": {
          "ref": "6f800e66-9b40-4f19-8f9b-24477f90a78a",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e5d95322-c25a-45c3-9ae8-b8929188b09d"
        },
        "item": {
          "id": "2593a0d4-b9bc-49da-98dd-4fa081e4f328",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8a34e40c-5ae6-4fa7-afc5-0abc51859075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12053ca4-c3d2-4c8c-b4f0-c4f15dd9386a",
        "cursor": {
          "ref": "61f2adf0-1bfa-4d19-aeb0-8a5ffcebb83a",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "bbcedd6c-7f54-4a48-a120-78210b903ef8"
        },
        "item": {
          "id": "12053ca4-c3d2-4c8c-b4f0-c4f15dd9386a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "51da2cab-061d-472a-9677-e2fd16c618b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69f6ca7-babe-4a0a-830e-9ec39336f995",
        "cursor": {
          "ref": "968dac93-1fdc-4bf1-853c-36f15de55eee",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9903aaa7-3f34-4031-8701-462a5bc09631"
        },
        "item": {
          "id": "b69f6ca7-babe-4a0a-830e-9ec39336f995",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1f06993d-5d2c-49a4-a843-89f4e33867d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd42592f-17d3-470e-b854-0c61abb68811",
        "cursor": {
          "ref": "8af1e9ec-99ff-4ece-b4a0-2396a15317dd",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "6f1cf0ee-7783-4d0f-9ca8-2f93cc02e631"
        },
        "item": {
          "id": "dd42592f-17d3-470e-b854-0c61abb68811",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "35605da3-5126-4c63-b637-98443c0264d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd62afd9-895a-496c-99e8-ad0848208ba3",
        "cursor": {
          "ref": "3fdb1407-2a5e-4525-abdd-65909507236d",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "795b2559-6718-49d4-b759-d5dfe25fad0a"
        },
        "item": {
          "id": "bd62afd9-895a-496c-99e8-ad0848208ba3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "bf62e146-3e1f-4f63-8650-c7bc96e26ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17fa4776-358f-4b03-9449-fbe0f7055b71",
        "cursor": {
          "ref": "7e3a6466-4079-4153-baf5-e7dd97d97d86",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "87bf15ef-e6a9-431f-be5a-79cb15eed7fe"
        },
        "item": {
          "id": "17fa4776-358f-4b03-9449-fbe0f7055b71",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "40d804e0-6b90-4c95-be33-712175446738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6507293b-50a1-4c52-9d89-c83b75190e14",
        "cursor": {
          "ref": "a5d85db5-076d-47e5-a9fc-bc887cf744c2",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "965592c0-045c-434c-85a7-1637246e61ea"
        },
        "item": {
          "id": "6507293b-50a1-4c52-9d89-c83b75190e14",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5403e66a-3cc6-49ea-aaf2-8434565e8efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcbcd5da-90ee-450d-a9ae-4b7b9804ed6c",
        "cursor": {
          "ref": "f54820a4-2297-4641-8400-506c5ad4809d",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "9eeac811-6257-4a77-928e-9478d49ee58f"
        },
        "item": {
          "id": "bcbcd5da-90ee-450d-a9ae-4b7b9804ed6c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6951c51f-2254-4963-ac64-63ba21c8c300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ceb048-d328-4b32-968a-376855364666",
        "cursor": {
          "ref": "1df0bfe3-8546-4d60-8a1c-4f9e1bc773b8",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c7f1fa26-e067-490c-967c-bfaca9a730d7"
        },
        "item": {
          "id": "c0ceb048-d328-4b32-968a-376855364666",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "24519962-2d1d-40de-ae23-383ec681cf0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51272917-6b0c-4589-9a64-1b4fbc999c89",
        "cursor": {
          "ref": "d4902500-b2dd-4b6f-8b2e-16d3429d82a7",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "259ca600-2372-4c3b-a249-22b455182135"
        },
        "item": {
          "id": "51272917-6b0c-4589-9a64-1b4fbc999c89",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "65b13bdc-5b61-45b6-9652-2a3562f14073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208ce3cc-f1d5-4ffa-acb9-27ce1e0887a7",
        "cursor": {
          "ref": "876add9f-4cb0-48f9-9ac6-86721066fab7",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "46adeef5-0148-46d9-a8ac-8b68b343fcf9"
        },
        "item": {
          "id": "208ce3cc-f1d5-4ffa-acb9-27ce1e0887a7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "98c81431-63c3-4713-a80f-a66ac2f8deb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db5dab8-1466-4a1e-9047-8e9afb420cf4",
        "cursor": {
          "ref": "b4ea2b0f-5b18-44d7-bca7-4b64a7ada9f4",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "78c9adf6-edaf-49b2-bbab-71a083bd00f1"
        },
        "item": {
          "id": "8db5dab8-1466-4a1e-9047-8e9afb420cf4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5286dd7b-7588-450f-85a5-9b974645875c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05178116-2190-420c-825e-8fdf2a3b480b",
        "cursor": {
          "ref": "e66887cf-a5c8-470c-ac7f-0624ec0802f5",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a5731c44-ddd6-49cb-9225-bdadf8e0e7d0"
        },
        "item": {
          "id": "05178116-2190-420c-825e-8fdf2a3b480b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ddf0b56b-3413-4029-b194-65720e5e8ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a4e1b34-5564-4ed1-ba22-d5f9a59f6f6d",
        "cursor": {
          "ref": "38ffdd50-a02f-4827-b9d4-386e7dd7ff43",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "92b1db17-a2fe-436b-a953-e089ee9d3030"
        },
        "item": {
          "id": "9a4e1b34-5564-4ed1-ba22-d5f9a59f6f6d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "34ff8fde-c7e1-4c8b-99d5-68fdef5e49a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deab5fac-b2b4-4d49-91b5-b164e8f0f663",
        "cursor": {
          "ref": "3fd2a3d8-5124-41f6-9807-40cab2fa4b96",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "33810175-6829-435a-b253-50e1d7ae66e6"
        },
        "item": {
          "id": "deab5fac-b2b4-4d49-91b5-b164e8f0f663",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d7b0fa26-7a6e-4a38-8bf2-a4a9cfa07623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28baed63-168e-4553-b0ba-2f45aa0b046f",
        "cursor": {
          "ref": "526f59b6-0a39-48c8-91b3-9f117376480b",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "62b96230-5176-4082-b3b3-f50e6e46134b"
        },
        "item": {
          "id": "28baed63-168e-4553-b0ba-2f45aa0b046f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "16297822-a05f-4362-9996-3de1f03046c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4358914-8e7a-4ed4-a292-6b775fc6f283",
        "cursor": {
          "ref": "f4697f7f-932b-4698-b5cd-afd7db76b3fe",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "781e60df-8a43-4882-9a36-680e474e1a0e"
        },
        "item": {
          "id": "c4358914-8e7a-4ed4-a292-6b775fc6f283",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "cf636896-7ada-48f6-8dfe-3e44b635f380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b5ca0d2-c138-48bb-bac5-54a383530758",
        "cursor": {
          "ref": "fc08dd95-89de-4966-a588-c5bdebaca453",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9f8c9829-b4c8-4b6c-97f0-ec3543052d82"
        },
        "item": {
          "id": "0b5ca0d2-c138-48bb-bac5-54a383530758",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cde2c8db-3529-41be-a9d8-a10d13ca0515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "115ebc57-b272-432c-9727-ae0213777445",
        "cursor": {
          "ref": "aa96632c-fb87-4f77-8769-2bb0b187719a",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "270f3e33-e97b-4bbb-9100-7ee4bfa81603"
        },
        "item": {
          "id": "115ebc57-b272-432c-9727-ae0213777445",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "5eef5c23-cbdf-4743-8926-a797485e0eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a7077d-8992-455f-83bb-333ec467ccb2",
        "cursor": {
          "ref": "7a36f951-a452-446d-9112-5a23777be9f6",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3a07bc16-36d0-4c06-af0a-3a3767cabb61"
        },
        "item": {
          "id": "04a7077d-8992-455f-83bb-333ec467ccb2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "093d160e-1661-40d2-925b-820cf4acaded",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfbf461c-f6df-4162-8b5e-5db40f8f3b6e",
        "cursor": {
          "ref": "0b2402b2-9880-4f6a-b455-4799d89bd7ba",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1514ac2b-d736-44d8-a10b-efb649565844"
        },
        "item": {
          "id": "dfbf461c-f6df-4162-8b5e-5db40f8f3b6e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7f9d4175-ce6f-4434-8581-eb05b0459ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf21585-e288-431b-b949-0c627317279a",
        "cursor": {
          "ref": "ea0f48f2-72da-490e-8fd1-72e16eb9053a",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e92c49a7-dd21-474c-bbce-99234c7d48b4"
        },
        "item": {
          "id": "5cf21585-e288-431b-b949-0c627317279a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4b5c659e-b747-427a-bd7f-70c6254fa473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53e68a9-6117-44d1-b6de-e2a06381fd0f",
        "cursor": {
          "ref": "679e3d40-b24a-4768-ac27-1f0c1e7aeb82",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "eade65d9-3edb-4b74-83e9-083022b4737c"
        },
        "item": {
          "id": "e53e68a9-6117-44d1-b6de-e2a06381fd0f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2ad83d29-8583-4a06-b137-259f7aa587ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ade263-ad79-4b16-b4c7-f286d78b2f84",
        "cursor": {
          "ref": "084b9fd0-f1c0-4875-8a63-cf48ef5b3a59",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "20525727-29f4-42db-99f2-1012f05141ad"
        },
        "item": {
          "id": "c9ade263-ad79-4b16-b4c7-f286d78b2f84",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "583c83f2-e54b-4ac2-9a4d-eef3dca0bf8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a58e0e1a-e0b4-4f17-b4ba-dfc1475c40b2",
        "cursor": {
          "ref": "5489a1d7-f561-43c6-84e2-2698e1c29d1e",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "19f65112-7f1e-4b89-89e4-b0fb3657ae07"
        },
        "item": {
          "id": "a58e0e1a-e0b4-4f17-b4ba-dfc1475c40b2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b21f6db6-d28b-4a98-a272-b6fe58500d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3bce8b-5bc4-44da-b7b6-7892a281f019",
        "cursor": {
          "ref": "a1636d6c-c7b6-4488-9b8b-1150e5b7e3ee",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "76244500-cac4-4474-bb8a-2b7c3fff2d32"
        },
        "item": {
          "id": "0d3bce8b-5bc4-44da-b7b6-7892a281f019",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a51766c3-464b-4cda-9afe-ca6b46a403ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1dc8f17-8a78-479f-9e2c-d26137d0a402",
        "cursor": {
          "ref": "e8e05f1e-0cd6-4548-be78-55b6caeec2df",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "dd6a4ecb-6060-49e3-8cb3-4b9f805fb3c8"
        },
        "item": {
          "id": "c1dc8f17-8a78-479f-9e2c-d26137d0a402",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "14176827-6d44-448c-9055-4a05aadf4c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87bbe79-5290-4d64-a870-466b890d3bb1",
        "cursor": {
          "ref": "25320b61-fb05-40a3-b0d8-767e8c3ab0ff",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5525a0a2-f5a6-49bb-ac9f-7833083c1746"
        },
        "item": {
          "id": "b87bbe79-5290-4d64-a870-466b890d3bb1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9d328487-5469-4ce8-930d-d81e6802ec4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf92476-1a84-4972-9dda-d520eab2d7da",
        "cursor": {
          "ref": "495b9630-a023-4ce6-9d8b-c7f4af6f0c19",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6db364a8-6752-4210-8f5a-3330f7e18685"
        },
        "item": {
          "id": "eaf92476-1a84-4972-9dda-d520eab2d7da",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "650bbde0-ffe4-48e4-ade7-0a038ab2633c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf9d486-93d2-4172-afcf-243d98618801",
        "cursor": {
          "ref": "6467c1f4-2c66-4476-be2c-e88cc86e02af",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c6daeeba-d66b-459c-8e1c-53b8ca5f322f"
        },
        "item": {
          "id": "1bf9d486-93d2-4172-afcf-243d98618801",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "21250e41-490c-487d-9ffb-5baff7d20323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7aec082-3eb6-4e61-9251-c5b96d0244fc",
        "cursor": {
          "ref": "92df3445-907b-4b0a-9e86-27bb65347135",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "690209d1-1e2a-46ec-8315-377fb6d09cfd"
        },
        "item": {
          "id": "f7aec082-3eb6-4e61-9251-c5b96d0244fc",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "67ff5c96-821b-4cd3-aa74-cb9129271a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff704b4-ec2d-4188-ac56-16cac1e8f792",
        "cursor": {
          "ref": "dfdba6bb-55f1-4074-9ccc-5edf5435af73",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d8fea6cd-b4dc-4337-9d54-f77d22f3ba65"
        },
        "item": {
          "id": "9ff704b4-ec2d-4188-ac56-16cac1e8f792",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "026f06d9-9379-4d68-9c2d-26a7e3cfc586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440e7588-89c8-4304-8cca-f29a8cde5e1b",
        "cursor": {
          "ref": "dea368df-0129-4553-8ec6-3c66477f238f",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d33fff54-d7e6-4403-999c-5e4fe7928b42"
        },
        "item": {
          "id": "440e7588-89c8-4304-8cca-f29a8cde5e1b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9877ae62-778f-497f-a378-8ffb023cf457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7506b608-ebed-4af2-9711-1eeb5ccddf18",
        "cursor": {
          "ref": "47e43855-760f-4114-b588-8d1a2a6b8ad2",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e546c527-43fd-42cb-990b-589ab0796485"
        },
        "item": {
          "id": "7506b608-ebed-4af2-9711-1eeb5ccddf18",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "313241ac-c44f-427a-9bb8-c046e8f6fafc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea59f0c-3af6-4520-a17e-2a63a95a42a2",
        "cursor": {
          "ref": "7e72af87-e148-4c4e-956d-399dd8e9dc2d",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f0c26606-41bb-4bb0-afab-2392e4b2200d"
        },
        "item": {
          "id": "7ea59f0c-3af6-4520-a17e-2a63a95a42a2",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c1af9fb4-6a24-4882-99b5-0258c4d53625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9001b02-cb74-4bad-8ad8-2a227251fec8",
        "cursor": {
          "ref": "f4fc41de-29fd-4953-9ebb-e76a297cf704",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f6858c26-33e4-478e-b0dc-f64f0a20ee69"
        },
        "item": {
          "id": "c9001b02-cb74-4bad-8ad8-2a227251fec8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8586e134-6dd8-4f96-ae9c-5ec4a9691eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea13ad0-8b41-4d50-8e36-7d266ed44b2f",
        "cursor": {
          "ref": "5a3560d0-d050-49a5-9aa7-4ea135f09e73",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d1e4cf14-be43-406d-a998-503a72838349"
        },
        "item": {
          "id": "8ea13ad0-8b41-4d50-8e36-7d266ed44b2f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "bc061d9e-de3f-42ad-a0ae-1f711b9d0f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c5e38e-4d60-4f2f-acd5-4f33523c16bf",
        "cursor": {
          "ref": "212b5033-4370-41e4-95e2-e27da34fa1ea",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8918a1b9-8f7c-4bbd-9d38-37eaba6f1412"
        },
        "item": {
          "id": "c1c5e38e-4d60-4f2f-acd5-4f33523c16bf",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7629408b-3824-4fe2-b5ef-bf9be52e1c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9819af94-870a-44fb-904d-e3f5c51e768a",
        "cursor": {
          "ref": "124aaee0-297d-4800-ba7a-0219cafd55ed",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6962c7f9-59c4-4977-866c-064fe9d5ec15"
        },
        "item": {
          "id": "9819af94-870a-44fb-904d-e3f5c51e768a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ed4526e4-57f5-456b-8b37-3b348782845b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0270bc02-f7e1-4d9b-83d7-910e5b2745d1",
        "cursor": {
          "ref": "6c3297ec-1773-4b9d-a960-3779c0d37ae2",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a12f0b26-0b04-4f69-a703-48f6ca41787b"
        },
        "item": {
          "id": "0270bc02-f7e1-4d9b-83d7-910e5b2745d1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3030b373-2529-4c14-a8ca-f8e154016cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28115793-3db6-43dc-9455-229a7c13ca6d",
        "cursor": {
          "ref": "109813f4-df52-45bc-b515-ab98f9df36c4",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2df2a18c-794a-4066-bc94-4fe2e182748a"
        },
        "item": {
          "id": "28115793-3db6-43dc-9455-229a7c13ca6d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "dac5dd74-db08-4283-8e81-7f8de5acc387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db41784b-5169-4f2c-bada-c1dc1a0af4d5",
        "cursor": {
          "ref": "2d1c2c66-afc7-4854-9ba2-8533703f877b",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "caa8c2d6-d4f4-4d79-80b6-788176bfa8e0"
        },
        "item": {
          "id": "db41784b-5169-4f2c-bada-c1dc1a0af4d5",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8978ab15-6644-48d3-93ed-37ae4b1f4992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e3d6d2-2034-44ea-8456-7d57ff6a54cd",
        "cursor": {
          "ref": "c8294b7e-18ab-4fb3-b65b-b2480eafcee4",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2d29b6d9-c2f1-4ef4-9e10-a2980a973c07"
        },
        "item": {
          "id": "e6e3d6d2-2034-44ea-8456-7d57ff6a54cd",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "df1837e7-ba49-411a-a8c9-bfe36f952996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9332139b-4516-40b8-a98d-c35d325aa175",
        "cursor": {
          "ref": "9b4fa695-c21c-4be7-9cbb-c9053a7e5095",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "61a3b8f6-3b6e-40a6-9ca7-1383fed5d673"
        },
        "item": {
          "id": "9332139b-4516-40b8-a98d-c35d325aa175",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ccc050b1-5979-45ae-b57d-908d0cea8cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da93d75b-fe3b-48ef-b951-8a0cbaa68e46",
        "cursor": {
          "ref": "c5e47022-0937-4b89-ac1a-910b19af667f",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a814ef47-33bd-476e-bf79-1cbc91ec5ad9"
        },
        "item": {
          "id": "da93d75b-fe3b-48ef-b951-8a0cbaa68e46",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bebe7479-dec6-4b06-8484-8948e51ad73f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a608c7e-cbc6-417a-b0e1-09f3e207a95d",
        "cursor": {
          "ref": "cd1d0adc-9d21-464e-917b-cc090bce106a",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4c641d19-a9e7-4f57-a159-1e67ac48bd33"
        },
        "item": {
          "id": "8a608c7e-cbc6-417a-b0e1-09f3e207a95d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e1e07d63-334c-4a1f-959b-b2af4242b1a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e30288f2-b9dd-49a5-926e-0812a1bdbd18",
        "cursor": {
          "ref": "07c8bcfe-1f68-427b-a8fd-0dbf67b88aef",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "feb98eef-8ede-4064-b426-e16d1d832bdf"
        },
        "item": {
          "id": "e30288f2-b9dd-49a5-926e-0812a1bdbd18",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6c8a62d3-16a2-447d-b031-9c898f77904a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8475298-abdf-440e-97cb-160ccd8ff18b",
        "cursor": {
          "ref": "213dd06f-4861-44d7-86f0-ed2963d7dd5d",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "44002b67-7748-4c86-98de-b56249db52a7"
        },
        "item": {
          "id": "a8475298-abdf-440e-97cb-160ccd8ff18b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0cb71c77-6cc7-44c6-8bf8-0ba58ae410eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2eb9984-0917-42ed-b898-3a61c0f87a11",
        "cursor": {
          "ref": "9e57535f-e1a6-4e1b-8a77-3ee4dd0bfe45",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f3ec09da-b0a2-4133-a8d2-56d9125f9a1d"
        },
        "item": {
          "id": "f2eb9984-0917-42ed-b898-3a61c0f87a11",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7a944503-8491-4d1a-940f-028ec4c138af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c227af56-98cd-4fef-b1d2-9d4406aa00c4",
        "cursor": {
          "ref": "acd8f265-6401-475b-9334-02d0bb05bb6d",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d173974b-6521-46a6-a0f3-807d82f26a43"
        },
        "item": {
          "id": "c227af56-98cd-4fef-b1d2-9d4406aa00c4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6cbc2758-6f90-4616-8779-40f182cfaf4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa03b81d-d24a-4dcd-a992-62a0c959b74e",
        "cursor": {
          "ref": "4da02ab8-bb2d-4199-860c-336b67575e68",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "39bd10c7-0ee8-4462-914f-1df8e86dd27e"
        },
        "item": {
          "id": "fa03b81d-d24a-4dcd-a992-62a0c959b74e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ed114c57-6e9a-44ae-8d78-b5f421c0ecc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c437fc0-4aaf-49c3-ba62-4e485b0f39a2",
        "cursor": {
          "ref": "2a13003f-bcc6-4142-8177-3dcbc143fae4",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d20085cf-2777-4515-8550-f69c34a5fe65"
        },
        "item": {
          "id": "5c437fc0-4aaf-49c3-ba62-4e485b0f39a2",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "2ddd8264-7ccf-4220-a9db-d41526d3073d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7414047b-d2a9-42c6-9819-7a9931d1d7a8",
        "cursor": {
          "ref": "6b8cb291-8a6d-4b68-91e7-8d4dc491fb68",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "85b20694-ac6c-4c36-9f03-ffa83d4dc5f9"
        },
        "item": {
          "id": "7414047b-d2a9-42c6-9819-7a9931d1d7a8",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "42833019-12a0-4ab2-99f5-faa19198f7b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e06d2d-e024-4b5d-b4bd-ef6da7b0032a",
        "cursor": {
          "ref": "5fdace13-23a5-4412-a017-82f6024d86e3",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7214def8-564f-444d-93bb-12f0b080bace"
        },
        "item": {
          "id": "47e06d2d-e024-4b5d-b4bd-ef6da7b0032a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "fdc8376e-10a1-4220-a634-47d4f172c264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4854cf47-32b7-4355-9db6-c6f92a1e6ba5",
        "cursor": {
          "ref": "c01d07fb-dc02-4bd6-9973-1f335d1a5271",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a8231f4e-eb8e-42fe-8a4a-355a08252ec0"
        },
        "item": {
          "id": "4854cf47-32b7-4355-9db6-c6f92a1e6ba5",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "cf8b9940-8714-42dd-9e42-2581e4067341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03740c13-6510-4b12-b7bd-93fcbf3ba1fe",
        "cursor": {
          "ref": "3ded6814-1b43-4311-91be-b0f3dfd23223",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "fc075a25-bbbc-43dc-a630-45dea748d63e"
        },
        "item": {
          "id": "03740c13-6510-4b12-b7bd-93fcbf3ba1fe",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "6b978c04-7c72-438a-919e-e941a894da20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44398a82-8d3c-48ad-b9cd-205dc912975a",
        "cursor": {
          "ref": "ff2143dc-fe4b-45d7-a1ca-05ad2e25b9f7",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "833e4437-cfd7-4c49-ba5e-0ab3125e91d1"
        },
        "item": {
          "id": "44398a82-8d3c-48ad-b9cd-205dc912975a",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e5724ebb-828e-452a-9e9e-4bab550388e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b4574f-4f99-4433-a9bd-ee35380c73a6",
        "cursor": {
          "ref": "d5e7b2f1-c71e-41cb-a47f-e0ab4adbce78",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9c141a21-7ad1-4908-aa0a-7b049c4ae75c"
        },
        "item": {
          "id": "57b4574f-4f99-4433-a9bd-ee35380c73a6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b1711197-00d9-4eb7-baaa-5a93f0b1949d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5241e22-eb83-44d3-a28e-8df8312e08f6",
        "cursor": {
          "ref": "cc058cf8-c41f-44df-9ccb-906bc6792056",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4cf59a3a-8b92-4ceb-890b-45c907f2c3d8"
        },
        "item": {
          "id": "d5241e22-eb83-44d3-a28e-8df8312e08f6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2e0572ec-1429-4641-848d-d7973fc81664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9aa3bf-9cda-49f1-ac53-2897a82be680",
        "cursor": {
          "ref": "4a1efff9-b351-42e3-8ea5-9678fdf81cd8",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1dd4fabe-a12d-4d2b-b923-5e62b53b161a"
        },
        "item": {
          "id": "ed9aa3bf-9cda-49f1-ac53-2897a82be680",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "030a1972-9b8b-4997-a5d9-94c727523d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7005fac-0a18-45b4-9484-a5d52de87068",
        "cursor": {
          "ref": "813fc6f8-f69d-493f-9091-9f3dd635e501",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "893fbdb0-d7c6-4d89-b616-d123cc15e232"
        },
        "item": {
          "id": "c7005fac-0a18-45b4-9484-a5d52de87068",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "591786ac-c450-47c2-ade0-0fa01032e8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1c8c7f-8b71-4e0b-8ac9-10824dcae256",
        "cursor": {
          "ref": "974d39d5-b112-459d-9fe7-2ae570cea2fb",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a516eb5f-08f0-4c1e-80eb-02e2c666331b"
        },
        "item": {
          "id": "0c1c8c7f-8b71-4e0b-8ac9-10824dcae256",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5f17e2e2-b975-431c-938d-0ca5b0565d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d768d9-ec10-48a4-823c-6c6adbb7b1af",
        "cursor": {
          "ref": "592d0f87-2db4-4254-8627-fa8ef44d4279",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7ec363ed-00ec-408b-b2bd-c9f708659a02"
        },
        "item": {
          "id": "e6d768d9-ec10-48a4-823c-6c6adbb7b1af",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "36d7c39a-dedf-41f9-b7d7-fc8944fe5dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d53088-f9e1-4f64-81b9-d3eecd742a1d",
        "cursor": {
          "ref": "46c458cb-b7a7-451e-b62e-aa3ee1eede34",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "fd03cac9-715b-4376-bcd5-d195a062ea99"
        },
        "item": {
          "id": "f9d53088-f9e1-4f64-81b9-d3eecd742a1d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "db2e166c-b857-48b1-9c8f-af1d732fb54e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66fef32-9dc5-430d-bbd5-5c92ddbd02b9",
        "cursor": {
          "ref": "3b27a7fb-7dd9-4d4a-9dc5-812c78422266",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "51c1d365-2c1f-4484-9187-5f952a5ebe1d"
        },
        "item": {
          "id": "d66fef32-9dc5-430d-bbd5-5c92ddbd02b9",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f58e9c52-2f19-45ee-a5e5-405995993825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f84e72d-7432-4cab-9a54-bbd3cf50b5c3",
        "cursor": {
          "ref": "dc5233e0-738f-4cb4-8ac0-24d0c308ca55",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "526bd43b-ffca-4818-874a-dba9ba60b518"
        },
        "item": {
          "id": "8f84e72d-7432-4cab-9a54-bbd3cf50b5c3",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c9d04dcd-411b-484b-860d-7ba487888406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a7f5f3-b801-44f5-b4ee-a9d8c58f57b5",
        "cursor": {
          "ref": "bb201bc0-0d26-462c-807f-9f63a82fddcb",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e4a096f1-bf8a-46a7-a36b-f47801659676"
        },
        "item": {
          "id": "43a7f5f3-b801-44f5-b4ee-a9d8c58f57b5",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "7712dac3-ed37-4351-98b6-7a7bf4f72257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a50cbd0-11e2-4c77-acdf-2c1b7230425c",
        "cursor": {
          "ref": "3b68e13b-a52d-4c8f-b25d-65d6c5df091b",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e2ace96c-59ab-483d-805c-69b8b85d6441"
        },
        "item": {
          "id": "4a50cbd0-11e2-4c77-acdf-2c1b7230425c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "0f326110-8d25-4a8e-bfd5-439b46a44c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda633f5-433e-46bd-8791-d1988f68d90f",
        "cursor": {
          "ref": "82da546e-9416-4392-9488-0ad05040448e",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3be0c0a8-afe9-4265-a9d1-42b3c054c41d"
        },
        "item": {
          "id": "eda633f5-433e-46bd-8791-d1988f68d90f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8047581a-12db-4005-b811-a575264ae836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bbffcd1-d035-4db6-826d-e1de60868e28",
        "cursor": {
          "ref": "7d3f3d83-9dfc-4318-afa0-40f18140f0a2",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d4306dc0-db0f-4dbe-88ad-66334bd076a4"
        },
        "item": {
          "id": "3bbffcd1-d035-4db6-826d-e1de60868e28",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "649cd187-f17c-4a97-a6fc-61c90cc709ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c8ebb1-f014-468c-aced-86de080b2035",
        "cursor": {
          "ref": "961283a4-ea0c-4b96-ae7e-a19fd90da466",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9bf65a7b-4974-4f89-bb77-3963b24175d2"
        },
        "item": {
          "id": "92c8ebb1-f014-468c-aced-86de080b2035",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "5dfa4fea-7c7a-4c75-a537-e9e4e7a519eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2dd396-806f-4ca4-82f7-bf073fb92b41",
        "cursor": {
          "ref": "9893da10-4f2b-49f6-b7d5-864b7a8b3dd3",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1e6ab85d-d02b-424e-82e4-8ff2bf81d284"
        },
        "item": {
          "id": "2c2dd396-806f-4ca4-82f7-bf073fb92b41",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b3212f42-1491-4075-8abf-fb1691149758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63411b3c-b0a8-43e9-a5db-e56a1db5c3c1",
        "cursor": {
          "ref": "6354970a-8e75-4b37-a688-cbd83ce47895",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3f13b0e1-c04d-4607-bb16-3e361776a9d6"
        },
        "item": {
          "id": "63411b3c-b0a8-43e9-a5db-e56a1db5c3c1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b939f38b-72ec-4672-83b3-7082b1e1d9c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280e9804-5834-4e08-9a9d-a054e884d1b2",
        "cursor": {
          "ref": "0f249b9c-262a-4d90-bdc2-4eb7fc9342ad",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "18bf9163-9059-4c8f-bf5e-52e67542030e"
        },
        "item": {
          "id": "280e9804-5834-4e08-9a9d-a054e884d1b2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "6bdcf29a-53ca-4956-9a0d-64d258cb0853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992fc993-75a9-4294-aea2-81c99e501310",
        "cursor": {
          "ref": "c2f3b040-e1d5-4371-b1c6-56333cff3626",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "36d8c1c6-be16-49c5-a810-5932e6126f7f"
        },
        "item": {
          "id": "992fc993-75a9-4294-aea2-81c99e501310",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f90e4cba-e412-4ae3-995f-a15d113f0812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a92dc0a-60d9-4042-8c1f-9800af607693",
        "cursor": {
          "ref": "34b3cd2e-6646-418f-8f35-c757ba97b803",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "658044f0-4b08-4a77-8317-4aef586430a8"
        },
        "item": {
          "id": "4a92dc0a-60d9-4042-8c1f-9800af607693",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ae2e9ee9-4280-48ae-8867-d02b3b17a28b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88049afb-8c78-43cb-9bcd-75816589fbe1",
        "cursor": {
          "ref": "896c2fba-7796-4ae0-ac80-c0878b73c2ef",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "bcfe6d74-266a-4a29-8e5c-692fef5c4d7c"
        },
        "item": {
          "id": "88049afb-8c78-43cb-9bcd-75816589fbe1",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "57323689-e7f3-468b-a092-bc268b496860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81c82c4-3f31-49f6-a3bf-01192e647932",
        "cursor": {
          "ref": "609a409a-9d79-4738-a142-cf140d4ae1a2",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "33c9ab7f-bde6-4b50-bc05-d694e6b15469"
        },
        "item": {
          "id": "d81c82c4-3f31-49f6-a3bf-01192e647932",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "bf64b107-7449-46b7-ba4b-f0af41b56008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3bbf64-148d-4d8d-bb89-45bddab966a9",
        "cursor": {
          "ref": "96c28bdc-f530-451b-9fd5-1f5432b5711a",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9321c2d7-eded-4597-8dab-42cefe3a19d1"
        },
        "item": {
          "id": "dc3bbf64-148d-4d8d-bb89-45bddab966a9",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3e539276-2810-4ea6-92f4-7ca7887e478c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a53ad4-0285-4a63-807b-eafd29c391f9",
        "cursor": {
          "ref": "70250f45-7220-4062-a3a2-c159fc02ca20",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0514d02a-7bce-4e6f-b7aa-87d9067f7f22"
        },
        "item": {
          "id": "42a53ad4-0285-4a63-807b-eafd29c391f9",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7042c057-dea8-4adc-9203-9d590a571ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46089242-a648-4cd8-a27a-491a59e02d33",
        "cursor": {
          "ref": "3d211cd2-18b1-4e3f-bd6a-d37674a67f15",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6ea56fae-e374-4b2c-a991-e9cf99d599ae"
        },
        "item": {
          "id": "46089242-a648-4cd8-a27a-491a59e02d33",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3fa70ea5-9a20-4197-9e9f-7d3203b07372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0ee4d8-20fa-4bd9-b174-7d2dce60ca36",
        "cursor": {
          "ref": "82fb281f-10da-46bb-8884-ebd72e633229",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0a17d28c-ca8e-4cda-9239-4e1f04a62dcb"
        },
        "item": {
          "id": "ca0ee4d8-20fa-4bd9-b174-7d2dce60ca36",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e12f06f7-74eb-402a-9348-8bc8a8caef89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d958f4db-6321-4ded-88b9-a9a9abe68528",
        "cursor": {
          "ref": "bfd2370c-05a1-4dcb-becb-76f062cbbb36",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "112e2dbd-92d7-4e7c-ad04-ef6cac344556"
        },
        "item": {
          "id": "d958f4db-6321-4ded-88b9-a9a9abe68528",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "febe4489-5430-48d6-8ca3-5d292622b5b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2139020-41bd-4b4e-9d97-e516c5e97942",
        "cursor": {
          "ref": "538d1d9e-0ff1-4a5c-8311-a2228e465fa3",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7410a0ca-3ad5-4d16-a120-32c5b19dae33"
        },
        "item": {
          "id": "f2139020-41bd-4b4e-9d97-e516c5e97942",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ccf37c24-1ebb-4a17-bdfa-27f93c375b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b789407f-1deb-4dcf-b08e-ee2801e09739",
        "cursor": {
          "ref": "a9c1e659-2e03-4fc7-9a04-7d14855f392e",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "06cd7b46-f788-42d8-bdbc-8abc11374b07"
        },
        "item": {
          "id": "b789407f-1deb-4dcf-b08e-ee2801e09739",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c9bd7785-2654-4512-84c1-e35b3502bf1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806dd0d5-21f2-464d-9d12-8f852939c0b1",
        "cursor": {
          "ref": "b551f3b4-a40f-4597-9e90-ca586f4cc93a",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1084f9d3-30bc-4b94-9e43-ea57b67ccb66"
        },
        "item": {
          "id": "806dd0d5-21f2-464d-9d12-8f852939c0b1",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0d5d304f-6663-4b41-85fe-2b19c05df98f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827f3138-bf7a-4b45-8534-460afa31336d",
        "cursor": {
          "ref": "281c38e9-0bc8-49d0-a7ab-b25482a5894e",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d1306d95-94e2-4cac-b236-00e660ced43c"
        },
        "item": {
          "id": "827f3138-bf7a-4b45-8534-460afa31336d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "917e5919-55f5-4850-8eae-4165b736a67d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e9288d-3fe6-4ac3-8641-6688db098edf",
        "cursor": {
          "ref": "a28f2668-4e6c-4e30-bdc8-f5c99edb3ac9",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "136d4502-b618-49ef-b408-460f129c4919"
        },
        "item": {
          "id": "33e9288d-3fe6-4ac3-8641-6688db098edf",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "50a59596-4c8a-4232-a894-35b563e550ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "411c2098-9b74-4753-8534-238b6012b641",
        "cursor": {
          "ref": "a5ce5fb8-37d6-45c7-9740-e96f13ff9bc5",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "8ee354a5-61a9-47b9-8afb-14b2dad59ea1"
        },
        "item": {
          "id": "411c2098-9b74-4753-8534-238b6012b641",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "502d7f27-b450-4d8e-a10c-7adfe0b8a704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e8b5ad-c11d-4e1f-b23a-a9ae279d99fc",
        "cursor": {
          "ref": "e23a3cf2-91a6-4762-8a03-1492a0b21034",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "75a113a4-831c-48ba-bcef-89ae1f9ad7fa"
        },
        "item": {
          "id": "31e8b5ad-c11d-4e1f-b23a-a9ae279d99fc",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "769ac5e0-07d7-4b04-9ae0-defb5123d841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28484ecf-eac9-49bd-868d-eba290f6f878",
        "cursor": {
          "ref": "278b8f59-790f-419a-b5e5-604d6add9ca8",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d1d5a717-3552-41fd-86d6-bea3391421b8"
        },
        "item": {
          "id": "28484ecf-eac9-49bd-868d-eba290f6f878",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "165c12c6-0b26-44d0-8ce2-be657efd5e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c608bad3-8c93-4ba5-9cb4-093cb439dfad",
        "cursor": {
          "ref": "26c24052-58e8-4c93-bc24-4b74df1b60f8",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "96a01b74-5905-421a-b114-1afb31bddd03"
        },
        "item": {
          "id": "c608bad3-8c93-4ba5-9cb4-093cb439dfad",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3add47d8-b17c-4c92-ba33-6b9d348d1df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52afc47-1978-4153-839c-4c34802037ff",
        "cursor": {
          "ref": "381a01df-b335-4b99-9704-d514e434e054",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "fcfadc12-4da8-4bf6-af5b-02a6960a1066"
        },
        "item": {
          "id": "a52afc47-1978-4153-839c-4c34802037ff",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "202c6b74-c2b8-429d-8b49-95c7fed89680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5016e0-e49c-4965-b1d8-b8abe409a933",
        "cursor": {
          "ref": "984c6190-7125-4075-b416-7a370ad175f6",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "8b3d064f-42e0-4fc0-9157-ae0d4d9db5ac"
        },
        "item": {
          "id": "1f5016e0-e49c-4965-b1d8-b8abe409a933",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7e68bb61-cc4b-45c8-ac23-cd0f82567cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886e9ef4-8dc3-45eb-8a74-3533394e8774",
        "cursor": {
          "ref": "969d8c15-1af0-44cf-9c1a-5475824e436d",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "58ce4ad8-b143-46eb-b7fb-c1280bb3a152"
        },
        "item": {
          "id": "886e9ef4-8dc3-45eb-8a74-3533394e8774",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e73cd521-6639-4ca4-9403-2b571d0e756b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce60dc5-686d-4240-9bb3-40c3604df338",
        "cursor": {
          "ref": "9c674acf-e521-46ce-89d4-ebed83bea0da",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0d15c697-6fb0-4b6c-8e33-f5b5bb862ec6"
        },
        "item": {
          "id": "0ce60dc5-686d-4240-9bb3-40c3604df338",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "065d7b2d-7130-4fd2-baec-a60e3f167c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f8738a0-603f-4233-a1e8-ee0f681af8aa",
        "cursor": {
          "ref": "a1d3cde9-01d8-41a7-abb0-e1c258d4319a",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "8215450b-efb5-4c58-9927-2bd5e4292fed"
        },
        "item": {
          "id": "4f8738a0-603f-4233-a1e8-ee0f681af8aa",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "af5b6a58-361a-41a1-8823-dc48e153ab34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "138b1aab-f59b-4ea4-bbf3-74205b60a45c",
        "cursor": {
          "ref": "de7609e1-981d-460e-a166-ee5b07bbc024",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ca7c9189-4fc3-4df5-a819-f61adfae974d"
        },
        "item": {
          "id": "138b1aab-f59b-4ea4-bbf3-74205b60a45c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b7421564-178c-4f04-bba5-38c88b99ca4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1265c9-0811-4855-a2c8-09c9551466e8",
        "cursor": {
          "ref": "3789d6e8-c4a3-4fa7-8d0e-2fa8bdca1594",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "530dbe6b-707f-4306-b666-6df35c99f386"
        },
        "item": {
          "id": "fe1265c9-0811-4855-a2c8-09c9551466e8",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7a22bda5-d0e8-4e1b-add2-0951dc122d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6c8d7e-7edb-41fa-9f51-4c4420869adf",
        "cursor": {
          "ref": "608d92cf-0384-418a-8b19-d1fc0b59b0e7",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8d4e569d-190b-4f09-a43f-4d15a75aac8a"
        },
        "item": {
          "id": "fe6c8d7e-7edb-41fa-9f51-4c4420869adf",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8e6d0d3e-5faa-4144-882a-79b0ce328c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6476a2-f8ac-4655-943a-374f74490568",
        "cursor": {
          "ref": "90ce88fb-72ab-4c50-93db-8d805b6a2a84",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "1ac6acaa-2b30-4277-a637-3e05edbe6a84"
        },
        "item": {
          "id": "5e6476a2-f8ac-4655-943a-374f74490568",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "47460344-cbbe-48a7-a853-25371b97f0b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3c2ed6-139e-4e5b-a179-6c3bbf8a1fc7",
        "cursor": {
          "ref": "595b77c6-3220-4f70-a221-ea9a6d7d3161",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "fd1da30c-5dcb-43b3-8a6e-972fc180922b"
        },
        "item": {
          "id": "ca3c2ed6-139e-4e5b-a179-6c3bbf8a1fc7",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "75324297-2b9c-47d5-a366-805da571fd47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e732e0-2fad-4e1a-8443-2ad729538a26",
        "cursor": {
          "ref": "f2eba33f-48e8-479f-800a-0c06a3c3bd00",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ee0689a5-47e7-4abd-822e-d46c64c258d1"
        },
        "item": {
          "id": "77e732e0-2fad-4e1a-8443-2ad729538a26",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "15f65c01-17d0-4772-92e8-5deabdc8fb80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967a9616-c1fb-435e-b432-acfefe0d83e5",
        "cursor": {
          "ref": "31eaf11e-fdc5-44f0-9677-586abfaf726a",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "75bb36de-3f33-49f7-8d32-52b0772eddba"
        },
        "item": {
          "id": "967a9616-c1fb-435e-b432-acfefe0d83e5",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "f0bde04e-5c07-443d-8eee-83e070b3bc26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13eac17-1729-427b-bc96-c3268b91762b",
        "cursor": {
          "ref": "057806dd-57c3-4459-a323-948c9a21bca1",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "cddf26bf-bbec-4086-b94f-c13cd4097a2a"
        },
        "item": {
          "id": "f13eac17-1729-427b-bc96-c3268b91762b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5b4409b0-5a2d-4ae9-981e-9608d0963b7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f7b962-1ac7-49e0-b620-17a27e4adc8c",
        "cursor": {
          "ref": "c07b970b-7bef-4d0e-8709-bf376035f84d",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "417d07ac-a5bc-4baa-bf38-6771fe385f6a"
        },
        "item": {
          "id": "f8f7b962-1ac7-49e0-b620-17a27e4adc8c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c70cac2f-067c-44ce-aa87-3903ec17daa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98aba0a8-cb58-41e2-a060-752a25479e56",
        "cursor": {
          "ref": "87216e1d-c976-4177-97b3-0107fd6ed2fe",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f2e8a5bb-de9d-4bb7-9dd4-b008602fee4f"
        },
        "item": {
          "id": "98aba0a8-cb58-41e2-a060-752a25479e56",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "241b339b-34f6-4cda-bb33-6a8260c1b185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78031b63-36f7-477c-8a35-1427288d6c45",
        "cursor": {
          "ref": "0932cfee-4125-4c63-b01e-4d98a73a96fe",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8e103e95-22c0-4cb1-bd8a-f9b646291509"
        },
        "item": {
          "id": "78031b63-36f7-477c-8a35-1427288d6c45",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "38a6f892-5a98-4e0e-9dd9-2d7a8b3cadda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85b4736-a14a-4676-8e3d-743ced08c16d",
        "cursor": {
          "ref": "111ba553-ed82-43f7-b591-c76f4f3acc6f",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8b162f97-2fbb-490f-ba42-5510f81b5714"
        },
        "item": {
          "id": "a85b4736-a14a-4676-8e3d-743ced08c16d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d6c877c7-4522-4175-bbfc-2b631620a826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8956b8-ebd6-465d-be63-323921918966",
        "cursor": {
          "ref": "61b12b51-6e71-4a16-81ee-25b4c71dfff6",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "65bed266-b798-4796-8b1a-83ae9e56971f"
        },
        "item": {
          "id": "de8956b8-ebd6-465d-be63-323921918966",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "19f769d9-0fb0-4044-bdd2-44b8f53d4538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3053fe8f-477b-4dfe-8084-9317fd26bb1e",
        "cursor": {
          "ref": "6e5e4e33-5312-43f5-897c-05684fff276e",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6742eb5d-20c4-4d92-9664-3ca7bda4beaf"
        },
        "item": {
          "id": "3053fe8f-477b-4dfe-8084-9317fd26bb1e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "8d2f4816-6186-4d9b-8c26-dd1c29fb05d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d941bf90-5f82-4919-83df-b7b7ab07290b",
        "cursor": {
          "ref": "f064b8c7-5ed8-4675-854d-b3cb97746a90",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3c7d620d-610b-405e-a03f-cd38a376d17c"
        },
        "item": {
          "id": "d941bf90-5f82-4919-83df-b7b7ab07290b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1ea5f87c-42ad-4d4f-9bfc-9fa1d5e6a5da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e03f162-466e-4b5c-b3c2-293202d0dd6e",
        "cursor": {
          "ref": "48313738-9b01-4e78-9708-b55eb8eb95fe",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "0bb26cd0-3bd6-49ea-b293-032ae9f466ef"
        },
        "item": {
          "id": "9e03f162-466e-4b5c-b3c2-293202d0dd6e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6fcef928-854f-45d7-a131-0b83e6f39d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7598796-702f-4921-9ded-7815638144fa",
        "cursor": {
          "ref": "31441b23-3682-421e-a762-d0750cbeebe5",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "128a71a3-b5a7-4fc8-88dd-673486efb963"
        },
        "item": {
          "id": "c7598796-702f-4921-9ded-7815638144fa",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "621a0c7a-5df0-48ef-b8d6-ad1559d577a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea28b38e-9a0e-45c1-b2aa-32eb6f8ac6ee",
        "cursor": {
          "ref": "52124913-ea2a-46a8-a7ba-3d698b417e83",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8c871752-3f3c-476f-bca1-7c846881ee43"
        },
        "item": {
          "id": "ea28b38e-9a0e-45c1-b2aa-32eb6f8ac6ee",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f0b2ae9d-e5d6-4db5-a095-44bb222a2ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f261fd28-a829-4474-917d-19e179d52b35",
        "cursor": {
          "ref": "f7f92836-a186-4483-9b1f-42918e9a68f0",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "cae91328-dd65-4f7c-a639-b9f5bf6f6951"
        },
        "item": {
          "id": "f261fd28-a829-4474-917d-19e179d52b35",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "8a58f098-2539-4f31-b949-91fc12da6385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d91625-0c5e-4c1a-88f7-e40da63c5e3b",
        "cursor": {
          "ref": "39f1e5d1-a20e-4d61-9458-ff9f8e923cf8",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "425f12f6-d6ec-42b7-88be-f7152244e650"
        },
        "item": {
          "id": "91d91625-0c5e-4c1a-88f7-e40da63c5e3b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a38481a5-ac33-416c-accc-8c27c4e2eddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c601eb3f-c025-4655-83ab-821aabacfa88",
        "cursor": {
          "ref": "d2f628a2-5d32-414a-87a8-06d6077069be",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "75d3f6d4-cbe6-4887-a034-59de580c3732"
        },
        "item": {
          "id": "c601eb3f-c025-4655-83ab-821aabacfa88",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2832a1bf-0016-4368-b338-61fa3b576cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55cb9343-8a6b-407a-814a-cc1a2cce7ba5",
        "cursor": {
          "ref": "6378e665-fbc0-4cb6-92b4-d12f37a7331b",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "84cc935e-60c6-4b3b-b769-84d8f1742548"
        },
        "item": {
          "id": "55cb9343-8a6b-407a-814a-cc1a2cce7ba5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "83271b49-d570-4864-9421-8d1c62253c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74735a6-dfcd-4481-b470-542475e5ecac",
        "cursor": {
          "ref": "afb9d7f2-daf2-493f-8d0f-084c701eb9f9",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6a792e74-6f7a-4162-8171-55cd28312b7d"
        },
        "item": {
          "id": "f74735a6-dfcd-4481-b470-542475e5ecac",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b9a925fb-150a-444b-9a03-f9145dfb98aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cececaeb-7924-425b-bc7a-93b6a7b40481",
        "cursor": {
          "ref": "c511c365-81f3-4e56-b34c-7915ae0fdca6",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "145e65eb-9b67-417f-8e72-fd521903ad8a"
        },
        "item": {
          "id": "cececaeb-7924-425b-bc7a-93b6a7b40481",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9779e196-34c9-448e-a07a-96ca50a9e527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f3de53-68c2-455b-a9cf-def8b6b1515e",
        "cursor": {
          "ref": "71d28fc8-eb33-4d14-93bb-37bb45b41001",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c33e0691-86bd-4b35-be16-1aee3099dc82"
        },
        "item": {
          "id": "64f3de53-68c2-455b-a9cf-def8b6b1515e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "76da518c-6f45-4dd2-b6f3-90a1f8b4e7a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51d3e4c-ce6e-45e0-997f-4365479805ea",
        "cursor": {
          "ref": "2356debd-2a05-4f28-80da-fd2657df4feb",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6704a320-d848-4fc6-89d4-66e2b778e2c3"
        },
        "item": {
          "id": "e51d3e4c-ce6e-45e0-997f-4365479805ea",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "be84d4bb-c07c-4191-b498-32d6cbabe60d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "441b50b2-1ec0-4a04-8bf6-4e88d31c3bdf",
        "cursor": {
          "ref": "7806b176-c25f-424e-83c4-cb4de59402e6",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f898a610-3a9b-4676-a2ef-d26108cecb2d"
        },
        "item": {
          "id": "441b50b2-1ec0-4a04-8bf6-4e88d31c3bdf",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8c720b0e-e378-494b-8fb2-2f5d82e0391e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e13b362-a548-4a87-b3c5-7c64589c677d",
        "cursor": {
          "ref": "5f82578e-a1d7-4d47-ab1e-d471cde0baf5",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0dfd65c6-5467-4620-9477-0423ca22365d"
        },
        "item": {
          "id": "8e13b362-a548-4a87-b3c5-7c64589c677d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "cc7164bb-e8c1-4367-a83a-f261a887abdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17bfb041-837d-42b8-9b73-3e0f24e86edc",
        "cursor": {
          "ref": "2f1e8565-1d09-4c9c-8282-4ae5ed5b332d",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "fde834e1-1dc9-43f6-ac4e-1dace3be5c25"
        },
        "item": {
          "id": "17bfb041-837d-42b8-9b73-3e0f24e86edc",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "04e49e7c-664a-4b9e-8787-714bd8bb20c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50df35b9-0350-47b0-b9bc-8d7d05e5998d",
        "cursor": {
          "ref": "3e144236-722a-4034-910e-540ddf16408a",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5b571627-c435-4afa-9176-115177e58b65"
        },
        "item": {
          "id": "50df35b9-0350-47b0-b9bc-8d7d05e5998d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f3c0db24-c562-4855-a9f6-20381067a455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4fe4f3e-8daf-4880-85b0-fe52112f9be9",
        "cursor": {
          "ref": "63e08462-a21a-41a3-ad83-d8b090b59b73",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9240a892-e8e8-4c9d-8936-ea229029fb33"
        },
        "item": {
          "id": "e4fe4f3e-8daf-4880-85b0-fe52112f9be9",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b74485a5-45b3-459b-bab0-0c867d11c6ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c90465-2798-43dd-8209-efa36aeddfb1",
        "cursor": {
          "ref": "c10e7d83-5425-4f83-aa05-85e0021b3177",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d211f668-e970-43bb-8176-b3ef2da1fffb"
        },
        "item": {
          "id": "66c90465-2798-43dd-8209-efa36aeddfb1",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "68c9d7e9-e53e-4c5f-871f-da01723fe355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed7f243-ebb6-4fbf-9b98-d3f22e903eac",
        "cursor": {
          "ref": "a7fb21e7-2388-41b9-87a2-d22d1abb8636",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "512ee6c3-5c54-4a7a-a635-07b0c2322f47"
        },
        "item": {
          "id": "5ed7f243-ebb6-4fbf-9b98-d3f22e903eac",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c4a7f71e-ce3b-42c3-b3c9-8c402822cf08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343cb5d0-1d18-4260-91c2-c899364d2089",
        "cursor": {
          "ref": "512f70d0-48f0-4d9b-9b7b-15220075c7ec",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "10d35af2-a6d7-4d7d-a937-35289d478aca"
        },
        "item": {
          "id": "343cb5d0-1d18-4260-91c2-c899364d2089",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c34c2a4a-a6fa-470a-9259-6dab62e133d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94e6c69-cb6c-45e1-802d-c787a81b8d96",
        "cursor": {
          "ref": "bb277eb6-ba02-48da-bb3c-5937fcfa3c83",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "3eac505c-de6c-443b-b5a4-4b7f28aaa9eb"
        },
        "item": {
          "id": "b94e6c69-cb6c-45e1-802d-c787a81b8d96",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c4bfeaf5-0e8c-46e4-be59-f3de3adceed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66d6393-dac8-4082-8df2-66c2c92bbd60",
        "cursor": {
          "ref": "29006559-1835-4442-9622-dd804ae146ee",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "1d1eb079-6543-4708-a393-86faac235997"
        },
        "item": {
          "id": "b66d6393-dac8-4082-8df2-66c2c92bbd60",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6469370e-6944-4b74-bc2b-88edeab8682b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2fc22cd-e0ca-4d53-b7d8-a46699166a11",
        "cursor": {
          "ref": "42a8014a-310f-455a-972b-84aad8944b19",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "c8b13e0d-1df5-4d79-8297-3c3957b794b1"
        },
        "item": {
          "id": "d2fc22cd-e0ca-4d53-b7d8-a46699166a11",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "490bf638-8581-490a-8d84-aec02e10e945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d409bd6-0565-4ade-9089-8dfb2d3176b4",
        "cursor": {
          "ref": "3c046e6a-bc2c-4c4b-a04a-c7bd030cfac3",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "a8d9e0e7-f117-4390-942e-a5d07d4e350f"
        },
        "item": {
          "id": "3d409bd6-0565-4ade-9089-8dfb2d3176b4",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "44bb17d0-b4a8-4b20-8b5a-b172a5af6c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ec11bf-6655-49d4-9f84-0667a1610c96",
        "cursor": {
          "ref": "80b8b031-6dff-4eb1-9eb3-b1459c739d08",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "16db1035-6baf-40ab-a911-7cccdf86b1f2"
        },
        "item": {
          "id": "62ec11bf-6655-49d4-9f84-0667a1610c96",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "17034d00-b007-45cd-8530-1c46b8c86bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c275dba5-67b5-4704-a10a-5b94bde6bfc7",
        "cursor": {
          "ref": "8b11e58f-1e50-4f07-a118-ef7aeeb485c5",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "0816d228-c1cb-4555-b222-9398c06bb7da"
        },
        "item": {
          "id": "c275dba5-67b5-4704-a10a-5b94bde6bfc7",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7fca4cc4-550a-4f31-b9ff-b167e49c571b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce09ae8-d8dc-4375-b461-bbe2c4f2eb33",
        "cursor": {
          "ref": "828a36ed-d608-4111-9d9f-fc66e160e14a",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "e5903657-2d9f-446e-90f8-77bf7027ebc4"
        },
        "item": {
          "id": "bce09ae8-d8dc-4375-b461-bbe2c4f2eb33",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "756c8f41-3728-4168-8753-f0a7b3d01729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5096dbd1-69db-495f-96fa-a4b44d61d010",
        "cursor": {
          "ref": "a69ce040-a2ac-4af4-9cdc-312e7f2dd89a",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "8e4e1c02-d3cd-4f5e-ac21-af808f82ee73"
        },
        "item": {
          "id": "5096dbd1-69db-495f-96fa-a4b44d61d010",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6ec5c239-6094-4dd8-8be5-fa18ee5645b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e6a69e-0887-4e98-91a2-3e57f8f83c09",
        "cursor": {
          "ref": "e5fd9053-415c-41ee-b830-e2a393c771a3",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "2a56ec4b-b554-4d52-82f2-302fa6c3abe2"
        },
        "item": {
          "id": "d6e6a69e-0887-4e98-91a2-3e57f8f83c09",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "42f22d5f-df06-406e-9341-a5a4c488ed8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ae0363-e6cc-41c8-b26b-317d43af5e02",
        "cursor": {
          "ref": "4f97ad53-dc4a-4cb0-b26c-8773d533ab2d",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "15594996-237b-4b50-8b01-b13ac09a6d24"
        },
        "item": {
          "id": "36ae0363-e6cc-41c8-b26b-317d43af5e02",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "1bfc97b8-5465-417f-9b2f-9edca67f661e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33dece12-5cb0-4daf-b129-d598e9ac57b0",
        "cursor": {
          "ref": "7363709f-ef22-4184-b904-c80d6f2e97ae",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "70fed465-eb15-478e-a719-500649190724"
        },
        "item": {
          "id": "33dece12-5cb0-4daf-b129-d598e9ac57b0",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9ccc0ff0-5c72-4ece-9010-6a6dee150b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9840191-1896-44cb-979c-e06d17569eae",
        "cursor": {
          "ref": "e90a7bf5-7fa8-4f77-89db-aae59606a47b",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "bcf63b65-5250-48bf-8274-c3aaf513c926"
        },
        "item": {
          "id": "d9840191-1896-44cb-979c-e06d17569eae",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8e3d55ee-1439-4a56-b37a-aeff86f0a254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11bc8d66-73ab-4d2b-ae60-819dd4916229",
        "cursor": {
          "ref": "6e3067af-c29e-4343-8114-1d83fe67edb0",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "41e9ffcd-b354-4abd-ad62-6eaf7afd9abf"
        },
        "item": {
          "id": "11bc8d66-73ab-4d2b-ae60-819dd4916229",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0a139d57-67bd-4359-8e88-633831fae5bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bcc9f3d-5581-43be-8aa6-afa7d63c2f31",
        "cursor": {
          "ref": "c37389c2-c294-4e2d-9b7a-9a19280fc30b",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "ebd9dc80-98a5-4739-9793-7d21b4df3f3f"
        },
        "item": {
          "id": "7bcc9f3d-5581-43be-8aa6-afa7d63c2f31",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3cd5488d-c899-4d33-ac44-cc566c13ca17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2d1c9c-420d-4c99-b79f-ecabfe062bb2",
        "cursor": {
          "ref": "67867727-6d0d-4e31-ba3b-c48f9d4aeba2",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "87ce8b31-cb5a-4585-8062-50619d17cb0c"
        },
        "item": {
          "id": "7a2d1c9c-420d-4c99-b79f-ecabfe062bb2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5dae896d-67d1-4ea7-92f2-dbdbf965f88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3671fab5-e078-4e03-a4eb-48d2b4d33cc6",
        "cursor": {
          "ref": "53917995-54ef-4aa9-95e0-eee2a4046d88",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "e79dd672-f2a1-4f1d-96ec-63ee6decf111"
        },
        "item": {
          "id": "3671fab5-e078-4e03-a4eb-48d2b4d33cc6",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ceaf08c2-b746-4cf9-8f0d-1004442d14c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb3697b-2ea1-475c-826a-e027de7be983",
        "cursor": {
          "ref": "549269fc-6676-4e50-9d7b-b415e47be101",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "595a4639-ef00-43d8-9182-9a36d1cdfd76"
        },
        "item": {
          "id": "1bb3697b-2ea1-475c-826a-e027de7be983",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b4fcda56-9b56-4f8e-af59-e7f678c8fa37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5973a24-d4ff-47d8-9479-6d25bdf36ee9",
        "cursor": {
          "ref": "ae303bb9-4cc7-42a9-8eba-042965a7b4a6",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "7905edde-65d1-45c8-954f-a84c20429e1c"
        },
        "item": {
          "id": "a5973a24-d4ff-47d8-9479-6d25bdf36ee9",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b88a85c2-f680-46a3-851e-5bc844382aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d5255a-04ba-4dbd-aa6e-8d6115a3071b",
        "cursor": {
          "ref": "d72ebf0f-f163-4a53-95d1-5f7d04b29867",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "b4d73d0b-1b12-4889-8c80-9903d9261084"
        },
        "item": {
          "id": "e6d5255a-04ba-4dbd-aa6e-8d6115a3071b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b7576342-a54d-441e-890b-00ca07e813a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bcbd2b9-a1c2-4e02-af60-c80c57fe4123",
        "cursor": {
          "ref": "5fab71f9-47b8-4da1-bbf1-88c5eb2c850d",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "836ace51-8127-430a-a0b7-69feaeb90af6"
        },
        "item": {
          "id": "8bcbd2b9-a1c2-4e02-af60-c80c57fe4123",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "69d2c66e-b9a1-450b-8278-931ce5ea4825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c0bc5a-4952-4567-8a32-744cfef73a06",
        "cursor": {
          "ref": "aab20df7-8907-4155-88a2-8586ffa90272",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "12fff10a-5489-4856-ad0a-5ce53bbcc84c"
        },
        "item": {
          "id": "d0c0bc5a-4952-4567-8a32-744cfef73a06",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3b68b8e4-66c3-45ed-aaca-79cce95befcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3fabde-3de2-4c1f-aa5c-2bb83d4c9275",
        "cursor": {
          "ref": "94de7ba9-7716-4ece-bf68-7148f35a315a",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "1b8e0b1d-5bc0-456b-af62-9a7b6e11e243"
        },
        "item": {
          "id": "df3fabde-3de2-4c1f-aa5c-2bb83d4c9275",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "83ba2eca-2b19-4cda-88ec-16794ee72230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7012d678-f3b2-48a6-acbf-4c7776130624",
        "cursor": {
          "ref": "7dc889d6-d74b-4943-9a17-a6579906e3f1",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "b17759be-b3a4-46a5-a96b-b695b459ef51"
        },
        "item": {
          "id": "7012d678-f3b2-48a6-acbf-4c7776130624",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8ff33fd6-2497-46c2-b0a8-22209327b877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e513602c-ecec-498f-aacd-1312ba0f2dbf",
        "cursor": {
          "ref": "3e4a8b10-8259-4987-a0c9-ad518a1202be",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "d3292cbc-0f51-4d6c-9768-f2f0fe4c5c43"
        },
        "item": {
          "id": "e513602c-ecec-498f-aacd-1312ba0f2dbf",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "275e50c9-f8d9-4e8d-90c2-1456d04cc749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6682342f-e8db-498d-96db-996aef290faf",
        "cursor": {
          "ref": "d707f961-de25-4fff-9b80-618c3df0a7dd",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "593fb917-cc5b-4776-a341-5469c9d58b63"
        },
        "item": {
          "id": "6682342f-e8db-498d-96db-996aef290faf",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7ba090e7-aadc-4aa2-9bb5-214e6440bca8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e275a5e1-0b26-4982-b805-ba421463872a",
        "cursor": {
          "ref": "674abfa8-558b-4e16-9dda-bed5fb536587",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "895e78d4-2be2-4f12-af09-2d4092244751"
        },
        "item": {
          "id": "e275a5e1-0b26-4982-b805-ba421463872a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "33568568-5333-43b7-8cc1-944f16c23495",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e88ed8-2a57-4674-b4ca-2f467e168108",
        "cursor": {
          "ref": "1204ca4e-8b83-4a97-8da8-04dc364d170b",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "bdf6927b-ec52-410b-9db6-fdde638968fa"
        },
        "item": {
          "id": "a4e88ed8-2a57-4674-b4ca-2f467e168108",
          "name": "credentials_verify"
        },
        "response": {
          "id": "fc523a32-892b-4e74-9530-9348127291bf",
          "status": "OK",
          "code": 200,
          "responseTime": 23,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b721e2d0-acdb-4edd-9b2a-45b876164c79",
        "cursor": {
          "ref": "4a24f8b1-d564-4859-83b5-78fc12746337",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "446c69ed-1297-4655-bb82-4f219567bae6"
        },
        "item": {
          "id": "b721e2d0-acdb-4edd-9b2a-45b876164c79",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b303cf5f-a0d8-4fd2-a0d2-dd990844cf92",
          "status": "OK",
          "code": 200,
          "responseTime": 23,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a48a5d-865f-41e8-9cb7-82a3e2431037",
        "cursor": {
          "ref": "7860d284-e166-493e-840f-626e752741e9",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6a2472eb-b3ea-49b2-906c-079f730f7e09"
        },
        "item": {
          "id": "a0a48a5d-865f-41e8-9cb7-82a3e2431037",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "da29a5ab-76c8-4b8a-92a7-ba6469e3470c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a48a5d-865f-41e8-9cb7-82a3e2431037",
        "cursor": {
          "ref": "7860d284-e166-493e-840f-626e752741e9",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6a2472eb-b3ea-49b2-906c-079f730f7e09"
        },
        "item": {
          "id": "a0a48a5d-865f-41e8-9cb7-82a3e2431037",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "da29a5ab-76c8-4b8a-92a7-ba6469e3470c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "714b836c-542b-469a-bede-0e6ae247c2d7",
        "cursor": {
          "ref": "94de9eea-5cce-4228-896b-8849604f9543",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "e334bd75-2b5f-4c54-b0ea-304ab743bd6a"
        },
        "item": {
          "id": "714b836c-542b-469a-bede-0e6ae247c2d7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e29d7508-9e9d-4960-ac46-bbf3308ae877",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75347b65-7cd0-4a3a-a1fa-83778c80a8f3",
        "cursor": {
          "ref": "7ea81b09-3219-465a-91b6-f2268080ef7e",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "dbd0b0ca-2ea2-4740-b26c-9c39f0f1a8dd"
        },
        "item": {
          "id": "75347b65-7cd0-4a3a-a1fa-83778c80a8f3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "034bf773-6349-439a-a93c-83f15f834e53",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}