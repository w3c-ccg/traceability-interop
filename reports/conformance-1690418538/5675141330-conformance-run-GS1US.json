{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f7c0b9f9-886f-4cec-be89-3f899eb02ed3",
        "name": "Clear Cache",
        "item": [
          {
            "id": "5aa0fd6d-a5b6-4caa-a714-074891915c81",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f9e444e9-6d58-41bd-9410-a10020c0268c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6805a6a3-0964-48f4-ad36-c3ff98c77f1f"
                }
              }
            ]
          },
          {
            "id": "97a7a92b-915c-4ede-af71-7d840cf7d29d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "58627481-3e7a-4bd4-897d-5027ac88a3cb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e60d6fdc-0ba4-4d6b-9dd5-b0b6334679d4"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "78f9cb1e-d4a8-4a87-ad00-ca2f6377ea04",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "71108414-1c7d-44a4-bb67-25661f05c796",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ce64501c-3099-451e-a1af-f179406a25b1",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "86d8cdd0-02cf-4d31-9bb5-9ea33bd84115",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d2e7a387-5494-40a7-a3dd-7553851e8564"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "60e1f99a-80fc-4dbf-95c5-781f8ae75691",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f1132c81-fd60-4ffb-b4dc-8f54954dfda5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "aebfabf5-022f-4c4c-8f8f-171dc04e8540",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7e3736c9-3de5-40fb-b5c8-98930ab1d2c0"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c66dc506-b815-4490-8776-b2593814cc9a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3e820b84-e61b-4447-a7ec-c67d9805cf04"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c633ecd9-ab04-4af4-8e6d-531a4577dfc6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "baecf51e-f28e-4342-90b0-2443598ccca7"
            }
          }
        ]
      },
      {
        "id": "ea272119-9550-4103-8a12-b3e0b3384375",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1a03084a-d480-4641-9388-dbdd0fb8de8a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "73274cb6-408b-4bd6-9ae0-e9bfc55741d6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7359663c-dbb8-4f40-aacd-87427f048352",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57afead3-4e05-4200-8f14-df60ea677ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "244ffdb5-0fb1-4877-ad9c-ecf3f3a08282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de7807d-047d-44a3-90ef-d9cda03796c8",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd152c43-24f0-4ec5-9cb6-2033e2a34567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c91822a-381c-4463-b556-53d658539f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c6fb60f-5d64-4876-b8aa-5a2957e2779f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4a9c14-f2bb-468b-9572-757bb5bf7a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4aa8a494-4c04-4017-8dac-580654123239"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4d9ece10-6ec2-4e59-b935-24491937ea71",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "63d19d0f-ec99-475c-9774-b419b192882c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21130ece-2a61-4abf-80f1-64b5a5db3e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1fca82da-9435-4057-8829-8f46987930eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d2daea-bea9-49fe-a33d-9d09fa3a0bb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a1e0b17-54a3-4cf8-b8c3-f2f39f43955c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4a78319a-bfb0-4cff-80ee-15312e3aca6e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "18d7c957-f970-4b0a-8c63-7376256311a3",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "55622e67-f39d-472c-8135-fba2a6c5639f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "50eba6cb-3b55-42f4-b190-201787c3e451"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b5c137a9-959e-4718-9bd2-07e241abaf4e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "0083b74b-f94b-4627-a6fb-e3ffb22c3ece"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6a1dc5ea-faef-45da-bf16-5bec0f073623",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "70c4b0a8-9e34-441b-a81e-91ab7fb00efc"
            }
          }
        ]
      },
      {
        "id": "e544d845-70ce-41bf-9b42-257446f07d08",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6f8e6b1b-04b6-4808-b771-53b4baa608e3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2b796889-caf9-40f6-be55-452a0682f166",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "215dfcab-a13e-4d0a-b60d-ef9a71ea61a8",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad3ac993-e159-4162-89c9-d449494c4bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b1b601-74d0-437e-a33f-1e84575a6d1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda7f480-1c72-41a1-9ef9-9afa0107a0ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4362fc46-452a-47d7-a6c9-b41c6c668151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3007623-9298-41bb-9991-47e7135a7c99",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ce8eb9-e7ae-4bb8-931b-79a46d9e109b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09538f51-0ed5-4061-a1c5-f6a9d30f7fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b64b867-72ba-4666-92b3-fb56a6e6ec41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85486c6b-00e1-4109-b8a7-f72ec80c3c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df865015-03d2-4df0-9e72-bc1da7b675df",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d445ead5-53bd-44d7-82a4-d6faf6ec4738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28045630-0456-47db-b331-b3850fdb9614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da4d85f-e60a-42a9-bf40-b45f3bc9bb93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e7bb5a7-58cb-45d5-969e-e8d255f84e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "137afd98-22a6-4b7e-950f-f6075b71cb4c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd391fa-d09c-4487-85e9-c4dbe291c541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afeacc7d-b597-48c3-b509-8bcee245df3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b785a5-6cd8-4ee3-9f61-8a2ffc903f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "910916bf-7965-4a22-a96d-fa686e72dab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e075f2-b9b0-4b05-854e-b35f9cced0e3",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31db62f8-ed37-4c76-8dc9-5ec0c78439d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9c50896-17ab-4153-ac35-4ade22a1fc81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc09d6e4-e8fb-4daf-8dd0-ed3f898a28e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f983e1bf-d2e7-4d9b-b390-961a210493c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f251217-419e-4d80-ab64-7fc8bde9a855",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d4b6ad5-c5a2-4cab-b09e-c6c762126b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa65df48-5736-46ad-a32d-f1ec3c1d9c11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18996e3f-eb78-419a-ba20-07ab97cc6519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60e95bca-b5b1-499f-ac56-e6ae72953b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "058558d3-ee23-42c1-85ef-ff648aae9064",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d42d7e-f8c0-4312-b3a4-aa1afd74d5da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "152bd61a-56f9-4324-b88a-179b298e768c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0b1073-e0c3-4f72-abaa-cace98ca8cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22f01583-29d8-43a6-8cbe-0d83920e5396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc33aa71-bac5-4915-93ca-2ec2407f2cd1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "751a943a-d180-4199-bc88-931c23c79243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc9ca272-8ca2-404a-b38e-33d7511d3a53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a836cc8-bfb5-4226-81a0-052b4b0f70b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b11b430a-daa0-4778-ab46-418ed7b71ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64675ffc-43bc-4263-831a-e703f75b2b21",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7564dbd-fd3a-4096-9f3f-e314290a460d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49b1ff87-b0fc-4f2a-b69f-388b4903f192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "715ec33d-dd57-40fd-8681-f09217865911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "279a728e-0506-4578-bd12-b2325b2c6e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0721d16d-b622-4da0-b274-7ed0fcdda866",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eea7e94-2557-448c-9c9b-b083737ef4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e66f875-aa02-4d64-aa61-d645c63ff669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06f6f35-9d8e-4473-aa92-a8a3dd01eba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88e97a88-6eba-409a-a05a-7d1074449e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9148eb0b-1082-40c1-89e0-9a1d83374b7f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f01ba3-1940-49c6-b3f0-24836101f045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6faa18b-42b0-4572-89ef-7a0e725710f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "637f18ee-4bf4-42a5-92e9-34ac14797aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f841d15-694a-45d2-98fd-7c4cd40bc49a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d63fee-24a0-487e-82c3-39d5e6c6e8be",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee01c40-49ef-43c7-a681-08d1c360ee79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "418005cc-3261-4859-83f1-ef54d6a78b2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52084b02-5608-4c51-97ec-86d83540fc25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b88fc9e7-6e5e-49ba-b024-7096ddafeeed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311b4039-a39d-4279-a5c6-2b4cbd5300e1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f81bb9b-5d19-4824-a65c-829c436fcf82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "849b3611-8ad6-42cc-9b66-dca72f2f888a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a562e02b-085b-4b52-b235-fcb408f4278f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "870dac7c-f705-4168-967d-a63a87224abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3b3bbe-f933-471c-a67b-79aa6ad2b873",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f337e2-4ab7-4bff-a3fb-285a2d17482b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab5c2725-ba6e-4ac4-9c00-f5dc88f56511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e77064b-3ced-444b-85fb-8e8e91005786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33f56552-f10e-46ef-a250-2bf099631c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f7f2439-5c88-4ed7-a40d-ebac9b3fef36",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af410ac-9446-4d7d-9c3c-10ec102c3a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "149c6d77-4033-459e-898e-bf67c93c782d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c314bda8-20c6-4223-82d4-2d8def4a7ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4bb12187-582e-4a7f-af73-14c8341036cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f0c8bc-306c-4922-98cd-c189a946c6cd",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3717be-c981-48fc-b3b3-40709b66ac86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5af0335-d1af-49ac-aca4-cc0484d83d16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66f5eaa-b428-41ad-afa7-b9598c97e1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "deeb9045-4ddb-4f8f-ad57-47350c591735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec68cb9-db98-4049-a339-8eaed526c107",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad217889-ed78-46e1-8591-00878b2e6175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "623108a1-95b7-443d-93ac-ef23a87f531a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15e4bc9-b612-4f5e-a246-a3213374a9ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc78845c-6f40-4bee-b091-925da00c4053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07ff576-a055-46bf-8485-4e3ba9032cd0",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abda718f-9920-4a8f-917a-0a3619b9236b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4991d88b-c927-4a77-a57b-c1cbdba10b33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f2bd72-f223-4bf8-a024-f45e98b36827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "894c55eb-a718-4e39-a578-3dab1a3dc4c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3140d650-087e-4839-b179-2150517ddbab",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff7d604-5706-412b-828b-479b8d08f617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ca78c42-f6cc-4957-b801-53947c463231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32fa8846-b4d8-4dfa-b812-eb392188aaca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "96baaea1-3c98-4bb1-ac99-bddf836d9d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39274a47-99d2-4ccd-8e9b-13b7f01fcd3a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1ab236-f361-419d-a2e1-aa352fe2431a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70c398e5-f8ad-4ccb-b16b-025c78eb45a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f0b01a-db8a-4f45-9d6a-92bc2fa6f402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "46f4b6fa-38aa-47b0-b713-3a3fd0973c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d5edd7-51b2-4577-9e50-fd819cf59a16",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d0cc63-7d28-4a2a-9dbc-74765ab75233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4e1fd56-ab5f-4da1-a794-6b4167714c46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d95420a-2ea2-4f97-a8f1-96a3a9527825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f994929a-673a-469f-9541-b2696a73fbe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e839aa3-110b-41da-af80-2f1b4db3d2b5",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d52fc3a-24f9-448b-93c6-93f76b1afe88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e08ddd37-3518-466d-8c70-fe82f2d9112b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c69cae7-4c40-4171-bd10-07b7ac4a55bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5672d63-8c56-42b5-a19e-e85756b81a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46924ce3-8247-4cee-af63-fa4edd1d7154",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e3ecd7d-7a0c-4a7f-a771-cf276951cc9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed7ca4fe-92df-4614-b4f0-3a3c13c2702a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3ca46f-480d-4901-922c-f967f6eb5f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "35a84c1e-1ca6-4350-8cc2-efdb9584a7dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e06e8f7-e508-4675-ba54-b3b7e6665408",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf03b390-d43c-4eef-877e-9a3fd539e442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cdfdcc6-f8f1-47fb-bf5d-c569a06687ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9066e017-5f40-4b37-9c4f-9a2ce7a727fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7d81833-aacb-4ef9-bd1c-f6ca4a086a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3df19046-ef5d-4ad0-ab4d-d97f4be6fd01",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d10c915b-f789-4f56-8f67-d71de147ec4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f4d3255-ce6b-4a70-adb3-13cea952d579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601bebeb-dba2-482a-a818-9dd616220b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c62119b4-2c00-4ad9-b918-00a06c07f578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203b6c83-68bf-4999-bbc8-97949732bdf8",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "831f5f57-04c2-46ee-a3c3-cce31e1c8143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc5d99d4-3842-4cb0-bed9-e6a72411bfc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d598db0e-9bed-433f-9b72-fee6bff76fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1bfe599-cb9e-412f-ab40-dc9d6a758c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798dcb4f-3359-4cac-867c-70b598f81d65",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad7c2ca-7b2e-48fe-b687-de093ee56ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd67aec1-3789-4d60-b21b-ff13dbe7783e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5527ca7-77b6-477a-a62d-0179fdd6a9e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcacc8b0-31e4-47ce-86b0-98a05cb58444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaeac19b-85bf-43b9-8306-6a174b6a666c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a16a7e-0a2c-46df-a4d3-fe5b4ba582d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b604143-9ac6-4784-b4b3-c4d8d0f696c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cacd5f6-34f0-48a9-acc0-c7fb3686428a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e87ea07-bd5e-4a4b-954d-f1e8b598734b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18698a85-1e1f-4881-8617-edbb26479685",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db85bafc-5093-4b8a-890d-b60121412beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdcceb96-dd43-4b64-81d8-7826ceb54047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dce73a7-c3ae-4aff-aefa-5ca65388ead2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a07c6fd-6415-4985-8653-c979ea6b18b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6c9ce7-74d8-42e1-9ac4-31121dd63f4e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f196bba5-65b6-478c-9734-0e16dcbb511a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83f5a2fa-5fe6-47fa-a987-89046ed01296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "debfe841-8f7b-429e-b614-971fe3b39d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "89fcbcd6-5ae7-4620-9721-42d1dddd79ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ef7b0f-a480-4fe6-a496-303a233188f2",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b87ecb4-f23c-4785-8869-ab1d8dfe9b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2b9c649-0652-4d3a-81ff-d503cdea91af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b3b89ab-d710-418e-9630-23d5411ef56f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6aac3a8b-ed52-44a8-aca5-0251f787a572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8753f83e-56f4-41bf-8f95-5fa2b6c0be0d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c1f706-7dab-45cf-9fe3-95b92f00408f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4314a25-a804-4fa9-ac0b-01ec50f17f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b8aa11-a22d-47f3-80c0-1f8b3f7b6a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf7e70d4-82fe-4924-bf46-0640949f74de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd87a789-6948-4db4-a087-b9023504cc9a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a34d5a3-d99a-41e3-8052-bf1db559a51c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee2bd415-08dc-4110-b425-e1ae06715109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d48d4eed-bd83-45bd-a7d7-0d712c12dd44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "42642bf7-ea24-49de-9a41-ac65728dda04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf6b156-c810-4cb4-8d40-e4ed0183f11d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9fccfa-0184-4cc2-94da-94341eba27f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8aa462b-322b-4b7a-ba56-fd03c96417dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "667982e3-c2cc-4fb9-a654-0d1af232b87c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f30f789b-57f3-4cde-96bb-632399678eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9adbfbe2-6f0c-41f0-b560-d9fca06042c1",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c0c4ac-0148-4b44-8872-516e9b4a5a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0210fd3a-1568-4555-963c-0e6ab036af93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d456083f-442e-4e61-8c63-424feb63e919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c75eb2b4-8e7c-4aa7-8083-c1ac4505435e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97aec0bd-3513-4b87-93a5-f8bdb66cfc6a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f0dce0-303c-4813-969f-17a98abbb6fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f2e2ad5-fe14-43c1-9b43-f86995664497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb251a2-2608-4f01-9ca4-cfaa800c5602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6c526744-182f-484c-bfa7-18dd788660f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293434c2-fae8-48ab-b6bc-0d7813fdd9f0",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11df07c7-0b2b-48a6-910f-a0bc9f98481d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98966a1f-74a0-4c68-a8ea-dfd0ee605585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faaebc7a-5924-47e5-b0f0-2679aefc71d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "080a7fd2-975b-484c-8a34-1a74654f0313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ae3718-bd79-420b-951f-8286aca09b68",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5adf550a-4dfa-4b97-89f3-9df9bba165a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "004bd4db-4336-4663-823c-55b22a09cfc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a6e182-baa6-400b-9223-00c042592b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f2a3188-195b-47b4-8e6b-dc9c87814406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21391d40-f205-498a-a353-8a186774062f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77fd3ac4-f69a-41f9-b6d7-532773bdbc6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a42eacac-2e11-4302-85b6-c985de41df4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266777fd-71db-44ff-a7d6-5e6baf66a66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ea86ebb-9330-43f0-b3b9-ac506e79e6f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "314c2dfc-bd2d-4147-8e1d-9bd2e53b9a6d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f84a01d-0a38-4eb7-b72b-ccc9c7945cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cfdbe8d-9d19-4732-8a51-7c3270203808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc101e8-9779-4f16-af9a-3d23f6f147c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1edf1108-07d4-4b65-9457-d85ab606665c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2abdb228-db3e-49f1-bb8f-239f363810a5",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82a8e9c-1296-43f0-9cd0-e362b8cce2d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d0fabf7-22a1-4061-b39e-c32c13b84d15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93872729-dab0-4fff-b017-92179ba2864f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ca19dee-ba29-4cad-9362-7c76cd910343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82667c36-efd3-479c-997b-a667370eb6e5",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03a6f2c-3ddd-48cd-bf12-56ed518f486c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b04a66c-ebac-4538-bb3d-ee2791b33214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b76f0386-2f1e-4d13-93c0-7e6524f19019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d6fe4019-9333-4628-a46f-53bb63d093c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b580d506-27ec-4990-ac1f-cd0035eaf8b0",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06b1aa6-b66f-4787-a837-b87dcbbc702b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b23e7a61-f650-4118-ab3d-8ad5f64c1e33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe86a20-a7af-4434-b670-fa9f10a9b84d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f402b915-ea42-4f23-8bef-f86f551fe94f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ee7a8d-3386-4126-833c-5242420d0471",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a99cf6-d140-4717-b376-dc6d8dfd157b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dbb9f50-0dc1-4180-a8c7-6c31f77a22bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd11898-c40e-4d5a-b2d7-a06a6d05bec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "06570e70-2450-437f-8e42-fd4bef400e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bcb32e6-3353-4b2d-8d9a-78f6c2fe3172",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c593af4f-3434-4d17-9ded-1863ac94a441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4451b04c-8877-4896-936e-fed979b1902e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a243d51-651e-48e9-adc0-409d85fc53fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "38a42362-efb2-429f-8cd3-e89d3f47ad65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c78869-78d4-42a3-ba76-d8176390c27f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd8806be-1aea-47f1-a99e-679691bec844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc603235-3233-470f-a1df-a61a7a9d5b37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22cf8188-d9e9-4354-a407-e71b6e71e5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "771366d0-8e2c-4e21-ab46-52cfa23d0196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559eb446-7f22-4e46-b925-4c261b8351ce",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "038df8fb-bb1e-4910-a1c3-70a89199b308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1263bd43-3dfb-4a33-bc9c-d337c03ed35b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66fcaf8-9373-4028-a478-387ea3858506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c275c88-29b6-4e74-8916-e7ace251c471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55696b90-0b55-4065-8e85-58e73b4d6f50",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40ba4c1-3e5a-40ac-95ba-71b16527494e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7643f30a-64bd-462a-9f63-935e2c49ecdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a27b088-b97a-4097-9246-19e1ff8da6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddb57876-0917-412c-a6f8-b2ea214b9381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65511b59-9efa-4ba0-9098-657ceb77aa2c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d958141b-7d4c-467c-830b-7e72b7459a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3b1c5b4-f758-462e-9571-c05c39150d16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8550de5-2093-4070-9dce-01348c7cacd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ac02675-38f3-4072-bdfe-db97764fbc7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8049cd31-2421-495f-a61d-7cc3d4945708",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da162e8-871a-4bbe-b9a9-e2cf92200fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef9a3f5c-2939-438c-ba17-b181b4fb62f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "159afd58-15ba-4cbe-a2ab-4e8438a6a281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f75e2f0b-7072-4072-8d6e-e5b02380a5c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b2d8e7-a9bf-4e1e-bad8-515ea641e4b7",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4342c004-dd09-4b91-9221-a39c393535c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fa34a0e-6bb1-4501-86e3-88f9ba45ef7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c070a4-2c58-4912-a725-57df3c890f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3823b678-4215-4e11-9e00-030c85f6f722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b525b024-af48-40f6-8d75-beb3ce9df517",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f952c4a-6e48-429a-a9ab-9fd2c6cefecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0ce3dc2-d2b7-424d-b0c7-48dabab62877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ccc1f8b-1876-4023-976d-121c26abf057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba436301-4b9d-4aac-8945-560d9535a277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef203272-20b0-4c2d-917b-b9aec7237fd1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49eebd6d-2ae4-4255-89a2-a9f0f72a0bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4931ca0-3803-49fc-8fc8-6f8051fafbc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8431311f-a1c6-4cd6-b2a7-699432460a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "57cf52f6-4fd7-45d0-853c-eeeb7f9c326f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f37e89cf-3940-412d-88cd-0e14b602f5c6",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e582e8d6-39ab-4add-9aa3-1de34e1821e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e1a4fb4-d1b4-4be7-9181-7e553dd861db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d22992f3-dad4-44b1-b594-c0abfff34330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fed957d-cb48-4d6a-937f-fa77d274a0dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ad7f64-5ccf-4e31-a022-cfd7f3ea99fa",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8610029-ddb1-4350-8b4b-e244f8845cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d39327b3-8018-46cc-b600-7a8b499de17a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc7b3a2-25bf-4d87-a16e-b78d1c32bb34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "86dd1a29-87be-40ca-a54c-bda332407cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "499902f9-1cdb-41a2-b223-48ab29cc50ab",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "057e7a6b-5c5d-4175-9fb5-dbb010fe3c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c87b403f-911a-45a8-9b86-b4687889ae4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f8062e7-ec8e-48af-8c61-46496a882e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b2f6f3e4-4fc6-4370-ad6a-dea1aa03f4d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f999a031-5777-4f5b-943b-c275ff81bc6f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b86c50-9909-4241-8746-44f200aa2909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01742314-e17c-4373-90f7-7247bb97a4f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9e48ac-ac78-41a0-96e1-0d846f0fcab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5084ad4f-9288-40cb-8fa3-75fb6315e7f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51da635-0971-4760-be9e-a034000b5c44",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c233ab72-198f-4614-925d-b220e2e7bdf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd60f1f0-55c4-451a-826c-90ac3e8bfed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6051e0f8-0dda-4e55-aa81-b6917118eefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "436289f3-d977-40e2-bdc2-b66aea3be906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a0c2af-3ccd-41e7-9738-78353dc7a439",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "520eeb1c-df42-4f43-bbf4-7194adac6723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "880807ea-6644-44b8-ba48-946e28d3fc63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e22ff58-d483-4d37-9b4d-bddd912babfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b0ede8f-916f-4432-be91-82e25ca2bbab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f83ca13-b6e8-4890-8938-be3a3241d6c6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe1d153-9b2b-4030-8abb-6169fab32625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9898b841-bd6b-4f0c-ad90-9af1e31a461b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "123e4672-9cfb-4edc-8b6a-8f8900098dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8dff3226-43f7-435a-a0fb-88d6640bc59e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfbd4e22-0e63-4537-9073-102b00e3c9f5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac00832-9c5e-42c6-921c-078648579c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6031de02-687c-48a1-b302-3e2ff2d80564"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8cb269-4d5c-4ee0-a28a-2e0e84ed5f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e5a5ee0-029a-4e5e-ae53-5bedfdf4d903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cabe04d-13ad-40e0-bc92-1bde48817ff6",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4656971f-1ade-4f33-99bc-95af454bc50e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "340bf62f-5dbf-465c-ab20-e982ab0e9073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83843bba-5963-43f9-a23f-6d640eb5c49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "adf78582-db11-4a1b-b228-d03627f7f188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab3168a-c2a8-4d27-9f92-3765cbc3ca35",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d91254a-31d5-4722-aca3-737e384fc23a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c155d5ef-3e60-4f84-8dc2-94d3971b71fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cfe85ce-5efc-43fa-a813-36287cb1ae4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "26cc8aaf-ae6c-4eb4-9c78-c07f8fdf5b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4413c0e-4966-4a78-ba80-26e36ceecea3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "831ecbe7-0fbb-497b-8b68-d5462f1c642d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71a779c1-2ec7-45d9-8dab-9529ee3c66ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b8a833-62c2-4853-9160-f857ce6c0347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e78a6173-e992-4fad-a575-8be7322c20a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b02e1e8-12f9-49aa-896c-c0c357b75eb1",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07688f0b-38da-4595-8f6a-95a5cced8a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d5a138c-954c-4ac7-8c40-e2a5e0cba0ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "885e7464-598e-4989-9505-68825bcdf278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "62bde092-3e9a-479b-8d67-ff6a747140cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b13663eb-3058-4474-9991-70856358c9cc",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ef3e31-6c02-4281-8674-9e8c930af993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e23e211e-4336-4b93-9486-11f46dafc13c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa6b816-acd6-42b7-b6f0-b24d2e020533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "50fa6fa4-a7f8-4847-9839-e50a29e54112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "790d8bac-5299-4ab1-abd5-b6568b2b5978",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c52f307-77e1-4414-a4f4-94712cabb8c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "784a99b0-f6b6-4043-a685-9f9d3caff498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba225aa1-4997-455c-962e-45347d82ebda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eb54acbb-a9eb-4e3d-9f97-9d9588d03e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45382ac2-74f8-4bfc-9133-48bdd702ee89",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6717ddb5-8d81-4d95-b8cb-6df499e183fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e51c2141-c900-440e-8c86-7955591bfc3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda6549f-0e1c-40a9-bd46-ac3c74d5ef0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4011547-54cc-405d-a408-188bc724fccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea822322-997a-4320-b987-880a700e2511",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed0ad7a-d0e5-4ef1-9096-3d51f581df3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1125dc2b-d870-4022-99a2-b4f564d18706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cddc43a5-8f84-499c-8c58-376803b5af90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "17201a54-5162-4311-ae81-e4f8c33b0340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19382845-300d-4f18-9478-bb42719267f7",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a2ae76-a46a-4e1f-88f4-7019c2b9c3b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "644b565f-c04a-4d96-ad1b-c6e9be93b8b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72674aab-d502-4a26-b767-525e369e3600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7fdad36-4e67-458e-80be-69003c1266b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3abc8aa7-64a7-492d-8132-9b513f667855",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88fa6d16-3470-41d0-80e5-4c56c2c26f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af99ab88-eabf-4c6b-b7ba-bfb8691dc223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a700a753-f09b-49ef-abbd-e24aeb7f32e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c333d551-4b50-4e6f-a644-1c85bed57547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baced2b5-6aeb-4553-a616-3b2a670b836e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ad54d4-56f0-47c9-a4fe-32e91e4c49bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d382e377-6d61-4a7a-a960-b33daf457904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e86777f8-fe4a-49c2-8771-6944b2781cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ad74c65-a434-4c15-a3f7-9c8b52e3d951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8959b1b-5f3d-4c3a-8649-1626726507fb",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea5b717-cb55-4949-9621-cb7846064f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07eb73db-535e-4a81-a095-f246cf756823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb4a7e3-fd6c-47df-9a0c-7b1bb81f2ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a372b1e-cb34-4e69-b96a-49c779a1d1f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e29a6812-abb3-434b-a0d5-3c65c755cadf",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1344607-53ce-49d7-a50d-508bf5806f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bccf4eb-9417-4661-b9bc-3dd7a46e6029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eddb0d67-c40b-4079-af1c-02cfe9fb060a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8014606d-79e2-4dbd-8426-f8945585aaa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a8742ba-82f7-47d3-94ee-0df905f443c9",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be85dbd7-ad5d-4c32-816b-b826e32aad50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41af0f4d-0a8d-4f29-841a-267929f25d85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97037d33-0dc4-4f43-8ef0-74100492fee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f5d3a92-a1f7-496b-b4cb-10578a57ecae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772dec7f-c84d-4afc-bf69-a71a80d22aa1",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dbbb393-850a-4f92-99af-5ff958854687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed9e7bb5-69c7-443d-86b8-e9983222c9cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88117b5d-f360-4063-b921-68e930ea3169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b93923ce-78ec-46e9-8f7e-ea337f6e0592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bfd4196-a752-443c-a00f-4f7c52e4c9d7",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf3ce027-fd5a-4dd7-b674-0a2c65b49ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdeac657-ea2a-46bf-8c88-6ac848899b1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a75ac5e-0cc0-4cde-83ed-161e9a8d0533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "35010a3d-727b-469d-b649-510c97adbe36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e0b192-2d49-4491-891f-e5a70ba24402",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "067ce875-6ea6-41a6-a6df-43e1a7580954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dab56642-fc64-4175-a3a0-25182b45c0d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bbddbe5-5970-462a-80ba-1f5089af34cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f34b76c0-7291-4f6b-82d8-a1acf8f7748f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b878f3f7-c10a-4564-9844-8661811f86c9",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f954f530-d7f7-4739-bc59-39cb86ca02a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "687de111-8ffa-44cf-96ea-9961622171af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8aa159e-d7da-4137-8be1-cbd3f5d1286f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbbad896-41fd-40ab-8430-11d3b238d219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baea075d-dd6e-4a73-a5b9-8604a98a4c0a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "547a8ede-6a36-41e8-a6c9-7bfde292b5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d44d231-14e8-4bfc-a4b9-cc9689fa07f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4487e3a-49ba-466d-bb12-96db9ee8ef60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e08a091c-e5a7-4098-87ce-47aae1f5f5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54d68e2-5277-4769-bc86-3c832295ebc8",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eebee9c8-b271-4ff4-94de-576e6185bbcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac263a13-5331-476e-a303-e344f67e89b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7852dae-a00b-487e-ac3e-1ebf77d399cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b940a9f-d6d9-4563-a427-8f98d8ac0764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75803501-16af-477c-8d4a-999153d55058",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "133afb05-276e-4ae4-8e9a-d4c029bdb414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19d28f7d-588f-4002-a836-2f754aaf444a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc7c610-bf6c-4954-ae3a-91c3cd764417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "26332fa5-8409-4e54-9514-d5857bb91ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "528b8a18-d0d5-4851-ab3a-b21e449d1631",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c033112-bb52-40cf-844f-72b06db1c171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92863b3e-575d-4ea5-a6be-7ab04955a852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28cffe39-96fe-49ef-b37b-a205a0b88faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0658db1b-eb89-450d-abcf-ab48b8784fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e900a331-0ae5-4b85-9c57-373165a95627",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d96c7ac-11d9-4aa5-a5eb-4ebfd140e59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb1d18ee-c527-4450-834e-420c0a0fe9a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "857b101c-8b7d-4895-95f2-0aa371f17591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61c24e2c-6ca4-4f15-8c8b-3cf07ef749fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "811b84dd-0925-45d6-9992-7c3767afdf29",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "639e6195-05db-4973-9611-dddabfd199fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ae1f773-f0b9-4a6b-96df-a0b791e61bd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1620c79-f8f4-4e20-a82e-f2eca26212fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f0fbb691-96e7-4a0b-9f3d-6d9901db126c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e87b024-d572-40e2-885e-f7829d6d9748",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba74688-d515-4e4b-943a-9890955e1bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eee2b1c1-ecd5-43b2-bfea-524a88fa4182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffddac82-7039-4de0-aeb2-d223f9c090c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "76df450f-ba7c-442d-a101-2b6a2fc98fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d998de38-c016-44a9-b7e7-84ab7e225aac",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d38993-e135-4849-bfd7-1f435d904594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e54f8475-fb25-42fe-b201-8b1a60558a42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce1307b-ec41-4053-9ce5-a1fff5fe87cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9a46df9-1f1a-4657-9eef-34dca38e4687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c6d652-9cc8-4870-a05d-60385f2e0be4",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b5ddc4-6169-4385-908b-75649002e368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6da85d1e-12ac-4934-9f2f-577055c7ebb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc1a86f7-f3b2-4c76-8ea5-c9edd47631dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "99e66681-837c-405f-bb71-5892bffc14b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2907e483-2fea-4d41-809f-ee65af93f776",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f2ae7f-2d4d-4b57-8f51-06741066a271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e3ea330-6b81-43ac-85e0-185888fdc92f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8225a785-c594-49ef-9ca0-8a7783abff27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "42cf7002-4514-4cdf-9ced-08e2754e172d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ca7d9c-7e97-4424-ab86-761ebe8a53c1",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8626d5e7-e0e6-40ad-840d-3d8499d35156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e98ce4e-d2f4-458c-ac14-e85aa6a97dae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef77addf-44dd-4a73-9b60-5cc15c223053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "069a2202-8c67-47e2-a9e0-595730ce19ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b157cd-a7f9-4640-9190-faccf9a95340",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0f890e-d00a-4041-96d8-b6075c20b508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87d7b670-41a8-461c-8902-0fe8a61d7371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "093aeca4-047e-47f3-a309-250132918e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2c16877-c1ed-48a5-8575-96b51c6468a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7317c57-1ba3-45a8-a7ae-9c9c639087a7",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c37636-0e62-48f2-95ee-6efea74f228f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "aab29d6a-1364-4baf-ac04-4123402a37ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da4d7367-efdb-4de5-977b-1c8e6e8c1f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca6cf63f-33c3-49f0-804f-b2d755e5398d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "50988a50-3c70-4cde-bf5f-9836bf648cfa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "55c33bbd-027f-485f-a4b5-5fea340aadc4",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44207be1-cd78-42e4-b634-085d6d262093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "afe69440-ec70-4149-90aa-f632c8ae5528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56712fcc-f76e-4dda-85e2-02d68e4affa6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1fcce3a0-b982-4b9f-b41f-578b318b53b8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54ccdd21-8862-4402-af39-73c2bd43c37d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61c2cf92-9e0d-4e38-9c55-7988d83fd6df"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "79ee3220-be8a-4851-9f9f-893b9259dfd8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ad72d59-6622-4509-b7e4-68a288b31727"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b2d03ca5-4f87-4042-8dec-02fc72fc39af",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "acd3496b-c8e0-431c-bb8a-16c2139c6875"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "28b4ee2c-3df3-4db3-9068-681e113e2def",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1a5a4c72-51ea-4aee-b5dc-b875c8328e19"
                }
              }
            ]
          },
          {
            "id": "152ced67-548e-4fc7-add2-b3037654981a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "83a11835-632c-4cc1-8bb5-7af3784ab9ff",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d80d979-a34c-4edb-a318-6c8b64c9305f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4b74b8fd-1f64-49a6-917e-1a8ef03bc977"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c3414d2-f892-4d8d-90c9-0e19d5a93b1f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ddd0a111-c2b0-497d-a6da-f840ec7a117c"
                    }
                  }
                ]
              },
              {
                "id": "e373d85d-6bee-4e06-89f4-a18a7b3d7858",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a999da3-1a3e-4310-96b2-5afb55caf0ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dbefe820-e5a3-47b3-be8e-0a4ac7c6e8f9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c3a907d-1c30-4bf0-951b-d412c475df49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e825569a-4e0d-496e-bc61-fe9ed5e97ec8"
                    }
                  }
                ]
              },
              {
                "id": "d554b834-2925-48dd-9875-ce7a6b7bc333",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8423622c-fcc1-4e09-918d-ee88e6e864a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "183c0b78-ec07-47c8-abbf-c3c62631da9b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c1a0381-a541-423a-9b9a-49f14a21f940",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5d123045-bbd6-45de-af75-137155be47d8"
                    }
                  }
                ]
              },
              {
                "id": "12d2ac5f-ef81-4faf-a1d3-d63ea3ac9e33",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc978c2f-50dd-4bc5-b4bd-eb208f46676c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "35ef7954-f68b-49e6-a32b-447dafb94c9a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8f5eaab-011a-4911-b99e-2b3e6e300b56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f7943db3-3d32-451d-9a28-5711de89b6d2"
                    }
                  }
                ]
              },
              {
                "id": "d3963964-4b1c-4592-9e75-622caa4d9953",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4fd2eef-42ae-409d-be01-49d22623975f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "60e45d53-ba6d-4c02-ad6d-abacf0b8036c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba71915e-c0c7-4809-8953-0cb016d9814f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e567a31f-13e9-4733-a7da-39f001cf98bb"
                    }
                  }
                ]
              },
              {
                "id": "1d58f520-9179-4d39-b4fa-a9521b20dd8d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf3bb713-36c4-474c-b5a5-de3c8623aa38",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dd9341c2-0a25-41a2-b64d-0e39a4d71b2e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc9c001e-b1c7-4a5b-9b30-937d5016aacc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "efc972d6-c090-47a4-8c6e-4f80f86bc672"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "39c5b786-f650-4409-a827-817ac018c42f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a263f334-0a57-46f2-9fff-44e997f2944b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f5b9e28d-8d37-43ba-9984-66c4ae1e4014",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "449fbc39-5202-4511-869b-0eb3c12a9f37"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "43c7bf93-3b44-40ec-afad-cc6c879151be",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "43b91b9e-3e10-4e4f-aca1-c80122f6a86d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de7c553b-2529-4818-8f71-b61777b66eb7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eecd8b68-3802-42b4-8c77-87c8aa3598a3"
            }
          }
        ]
      },
      {
        "id": "0a9bf4fd-69bc-4d91-92c3-4a62bd288608",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "232bde46-7f04-495d-91f1-1b7585184185",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cf118b48-b27b-4180-b3e7-6804536357b5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "86ceb1a0-2992-4e77-9e1f-dec297152b0a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbaf20c2-5bdf-4b85-b517-947fedd19b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d666707-63dc-414e-9e84-854a7d48aaad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f606c5-2f80-43b5-9244-c36f4cc2c7c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "17288b39-fd62-485c-a616-3f7063157abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0737f1-be59-4fbb-acb2-5d4697863891",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb688df5-f0d2-4136-857b-ecbcd4c99441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eab20b6-322f-4cb3-bce5-f53136aa3847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc30803-dc09-43f4-b812-435fe737afc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "72ff1ac9-1f67-47f1-8f3f-4a23bc1d50e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83dea09b-9d2a-431d-9de4-a8e2d126c3f9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8795626f-455b-4547-a55e-438390385ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6ddd17f-6338-49e3-9153-8d71b83bf3cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ad651d-1abc-4fca-adfc-159f629277d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "71fc764c-c004-46fa-aa22-a368a1e7800d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fde0337-ce3e-4e2c-a6d4-1866603d4c25",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6c88d0-f11f-44b7-a75f-84b37d26458f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2caa838-4daa-4b1f-acfc-8c7eff6e191e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3fb927-9b71-4217-926d-d4f3e8754b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e8b5653-c1fd-430b-9639-77624d41095f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c47b68a-a343-4d9e-8223-99c98c1c6676",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b288b02b-b72e-473a-9599-f43d58499eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef8c6d2c-4eaf-4b98-b3d9-643f4dac37a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "590114b2-1e58-48c3-bcbb-616df3465b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf89f2b0-7b6b-4ee6-9de4-57f352bc03f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f144b8b-4570-4425-b0e9-c1ae7a272077",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d80baf-a29f-43bc-8885-5a216be60271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "358397c1-8e8a-4253-b07c-0d7d52693fa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e550a1-2dd6-4d55-a87a-8c8a2271eaea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cbcac75-9e24-415d-8129-a25c2fc76a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d73927-98d7-4ede-86ab-3f18171f3465",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2307890-f6d9-4be8-8166-961c22f8574a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d1a39c-f53b-422a-9622-482b194f1143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be478441-a688-4f46-878b-abe75a1d103d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac9ba82b-4a60-4899-95bb-d1583546680a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc6da4e-4420-42ac-8366-25f41a4a7a25",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b6fb83-2fda-4527-ab15-489abe2cdf80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f71ac6a4-8c8f-4c82-9250-3be8578a806e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df7a006a-3d81-4c75-88e6-9dab6e4da001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f59a24c-26d9-4f79-8af9-021229ca8287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e3320de-1f25-46b1-8f86-45af4a5b654b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8105c82-7f8a-477b-a5e6-b33d93530d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2d3eced-8753-4296-a136-8fb019ea550f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bccdb22f-117e-4c0c-8c5b-8302abe375a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "453bba3c-9470-4ed8-82ba-c6e721a46467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "160ae39b-1994-4d0b-97d1-61539e309d02",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7d908c-38ad-4fb3-bf43-86e0e026cc7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "650072ef-f821-4c67-a175-70112c846030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbdce8e7-e37a-4e15-bbc0-386b948a8e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f292760f-bbdb-49df-b620-d2e161be8c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f025ae09-8503-4db1-b408-b1a976da886a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "839d3ba6-0e8b-40ea-8b45-d75becdb3954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c9739af-6c73-451a-9bb5-c46b65993566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6827a542-0f1c-46e5-8449-55a19c55be6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1eb52cab-6b86-4e7c-a7b6-210e9fe866f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49249f24-93dd-4eae-b4a3-59531a4c4548",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c99b69-4d1c-4ba0-905a-17e39adc150f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3f38932-0efe-46de-b43e-ffe7b63e5a40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc00b92-8543-4ce1-a4fb-e96350ee7293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4582302c-0bc4-49a1-8ee1-6610a73aed05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e3f0536-0351-4118-bb97-975a95eb9bd5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26355f00-4636-49e0-a15f-c9e072e94a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1477e3ac-970e-4bbc-b66f-fe64b69330c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a05b5c-b23b-46dd-86c6-0763d31c6063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbbf8990-cc06-4844-95d1-bf7ca0a9572b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492dd05d-715c-4ff3-a9f5-d2e5c927917f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49da7a5f-ccb2-49d8-b242-888c2d1fe93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daee54cb-c2d2-4572-8c58-e05b139885f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ffc520-4fab-4f26-9269-9f6a9a6d64fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "68ba05b5-d794-45e0-b095-47b684f64711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19919dfd-ad8e-495f-bbb0-e70811333da6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f6788ca-6e3d-4fdd-b3fa-3456b43502f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a05ff606-1df8-4186-9ad3-72ed19b56e9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62add70d-6c4b-4c8d-8c63-681641c1754c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "70fc10a8-a01f-402e-bf5f-e6de98cdb488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4d9011d-c9ba-418e-99cb-32dd3b6e7de2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ff7118-6cd0-43af-993f-49ab4478d606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e1efdcd-79b7-4d3c-972f-d21c2f21cca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137a6ced-369f-4ba8-b68d-1d0fa8582d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "faf90337-521b-4b68-b010-b298ad77b7a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f46984-94f9-4e26-9044-50c549a7e4a2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d1e0f6-157d-47a9-9771-963e9de52739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dd9cbf0-5053-4676-82e7-6bbd8df6a4ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2fb6ea0-31a2-40b2-b4dc-f9ae5cf9fd8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b9d4b70-7f61-47cd-bfa7-ad66bfb8f1f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe60cd8b-e013-43aa-970a-c9cd8af06790",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced14064-cd96-4d66-98fc-6aaf6e02120c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cc19460-eb44-4706-add1-784cc709b460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1b994d-83a1-44df-a96c-f787a4175db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec3b7a73-3f16-40f8-8be8-11d9a3df3629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c28c53-da06-4816-b10c-af7212ed947a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c55fb2-1267-437f-b010-4bcb90a1fb70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03d58aa1-260d-46eb-a5d3-2f76a998f8c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac09648-aadb-4f2e-9e89-514d7c6fac83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45437524-f2a4-40ac-928f-7ad817ee05c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2659e3b6-edc5-4ac2-a53f-6adcc0b7e6b0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aebca56c-0258-4301-997d-5f5c154d194b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f94bcaca-07b5-4576-ae0e-22e98344be70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4606ccf-0f03-4e13-b160-b10c527c78c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1b73139-ef03-427d-8620-daa06dc4e36d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a3eff70-aec1-496d-8686-8dc5b54dc663",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "942c526a-2384-44fc-a863-90300b7be3d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adee0e6a-7dca-4954-a4f4-ed70e226819d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e1b85ce-dabc-4c76-9f23-adc61eeb5451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fabb9fbd-c038-4bc6-9d4d-0721aa918b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60cc3a42-a24d-4f24-967d-f25e1080d6d5",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc5f192f-a72d-4c02-9d47-ad4fb0f55419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46778b8b-463e-4501-a535-ee93ba9f90a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634622a8-c82f-4d97-8d45-1944de2a7027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1454b4c3-ba72-44a9-964f-3452e9312546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97073715-04b6-473c-8783-55a3b952f336",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "668f06df-37a8-4cd6-ba74-46f13c02889b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5706a74-3d6a-4e0f-ba9c-4b8e46a15f77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06cbc18-f517-4ac2-af63-68c013e99109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d568c245-9759-4d28-bcc2-145108753dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0926537-fe54-4d4f-9783-e555dd9d3813",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef7b901-1bb3-4760-a421-fb060453bcb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e4bd89e-0cf3-4c16-9dea-ae78f2e3cb35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4778107-dd12-45c2-bb00-fb12e6d6d8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1f6122e-79a6-428d-b8ee-8f1d0542cfc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f14362-e1d5-477d-bb92-f0fdb50be4bc",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e394f3-b873-4226-8e62-22023af17a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9379b80-2f9e-4fa9-a45f-26159d800601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37839d50-7c19-4e98-b8ff-1331edce6c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00ae27b6-3376-4f03-b545-fe71f54cdde5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88eec1e3-7b4b-4f95-a574-43382ff9ea94",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d0a99d-7765-431d-af24-d9bba56954c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e06d4d2-6900-408d-9b91-1cbd3134ca98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7750c8f0-d06f-4271-a48e-7224839cce28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9aab19b4-04f2-4910-bb77-56edec78b83a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c2ce83-8139-4d1f-a552-033454051b2f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "747f7809-a30d-4ebd-b14c-28bc5575a111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63de7bcb-e33a-456e-acbc-4618041fe80e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35eb8ae7-c6fb-4ddf-89df-ebb003521349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4848049-011f-4094-abfe-70587201815e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf70ea9-b61d-4a54-a58c-fb76d4b1b630",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9accdc99-ce62-415c-8a78-c5c235b48f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbd99f5b-db14-47af-ad60-d67843cc02f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf30818-1bea-4eb8-85ae-8ebe07dbfc96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc7236c1-01f1-43a9-a435-108786e437ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11b3e4a-de84-4623-b0d7-b5d566bf5df2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a0f25a1-4c64-49bd-9ea6-a81616db88bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "163c74da-454b-4d1c-a151-6cb490be1071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af28c71-3831-46a0-ba81-aa6abc148813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81818fd2-3325-42fe-9727-9e3ee59e90a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08411c0-4b18-4815-8853-05f2a11656e5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc4d588-f1d3-4c6b-999f-cbaa0f0c0134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4fb2002-e284-4b1b-9006-957593697d92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f4f852-be70-4008-9b13-57c27a5b0b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd889533-da56-4cfe-8a6a-01cd5d518b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ed6864-d6f5-46f4-ac2c-841ebab814b0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b9b02d7-c260-41d6-908e-7125199d8e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "253e5d4c-bf69-4a10-9207-15a7c9588726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e1aa6f-1222-4bde-ab1e-bb76ea2b5c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc7ee98d-9dd1-43f2-b189-da4b3a05fc04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24fd5056-e2a2-4d85-a692-13e04f4b942b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "044cac42-c5ec-463a-a8c3-9c7013100f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "223a6d89-c5a0-4a34-9959-7620a8668030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eee0274-2e52-4e5f-a933-196c5798bfaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eaa9cb35-5305-4fbb-970a-9749dbe620d1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ae8713c7-e7e8-48b8-a41c-0cb05165577f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "de49e496-ca3f-4c75-9daf-7f1bada7694e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b14576b-6cc9-4e4c-809b-5d796b80d274",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "726271dd-6d48-4649-9eb4-1352ded94d7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "847f2ac4-0f60-4203-bba6-71cf2c9fd030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "03ae47dc-4693-48a1-bcd6-b66c28de8c29"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c10ed79e-6d9c-48b9-942c-3b251c0dd273",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "307bcb80-7004-4d7f-a4cd-b9bdf0eccbfc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f60406c-2ef0-4543-a023-76e0098ecc87",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed4ed63c-e9a5-46eb-9ecc-a0412e7d7990"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d586b445-2d01-4adc-87cc-fe4300e2bc23",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "15ed83ba-d0b2-4b29-9e52-d0262c17fcef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "56303488-5c19-45db-9f7d-c0da46a4eea3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "79ae2a71-6723-4ea7-8193-bd9ea2f2d7df"
            }
          }
        ]
      },
      {
        "id": "932df3bc-08ed-4d5c-8f44-59276a91617d",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "c72068f0-c4f8-4202-8adf-23d2f7b86d22",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1cbf3c20-7cd7-440a-aad5-d1b164d67a72",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8c5dca88-e612-49fe-a55b-726a76ec3bad",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "920eb99d-c858-4039-a92b-87cc0b0f651c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fcfa5d3-8527-44f4-90cd-bc7695d8e40b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3120888b-3791-4b2e-bf6c-203f37636da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "984c1419-f7b0-4699-9b91-2f784c44f252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7a09c2-7ba4-448b-b28f-d64ddd134464",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02fac43-62b7-41d4-a1e8-5510e8e6079c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4239e216-8b8a-4623-a802-e2ae9f926daf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "573f1c4e-b00d-49d5-aad3-b62974b3f9bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "44db52f2-c41d-4303-973b-e36242cb7821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3fa567-321a-40b2-9aa3-fb02fe3be5e4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00b6bc6-7ce6-454d-913c-337cdf3857a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9738eff-6120-4ebd-9309-b5155474096f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "951744dc-f95c-454b-b311-aa86a80aa1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc2eb008-a773-45b7-a46f-99cc8a92e87c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e9ad653-7b75-4edd-a353-d983002caf2d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e085a94-5381-41ca-ab99-0b9a3782721d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e55b60d6-2b02-4048-952e-257d0dc28c2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80cf021d-1517-407b-9890-96c5f2577bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "67777527-ef5c-44d0-bb65-409843c80a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0af34d-21ab-4f74-83c2-f8d2d95c29aa",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a49c4f-c622-4948-a49b-d1f2a294f9e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13ba2a52-1fc4-4584-a35b-636ea6c446f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b55b6f-1c14-40c2-8859-f63775adfc3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f40c800b-3592-4927-805c-69cb3a8ba4b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "219499b5-5986-40ec-8a74-fce1f08ad2e7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bffbdfe-ec28-4a00-910a-8ad6752f26f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db3b0137-0d72-47b6-87d0-3c012ec1b41f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5177cc90-bf72-40a7-960b-9e7f98ede181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a993eb9b-a15c-4469-a84a-20689630646e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad40838a-eddc-4392-98f0-00636995ac7f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8362e59-7090-4bcb-af4e-c6ea67899bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76b180eb-e1da-4266-b13d-06615768d927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a89ff6-cc20-42dc-b203-56cd305580fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b32a6ce6-66e0-4646-b289-778261402fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1da23d-eac9-472b-9f53-174ddcaff6e0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b65f7789-0d51-444c-a3c0-f8fe7cbb8d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1770f4fc-6135-47c1-a412-ce129c528e2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eefea18-d0b6-48d5-83d9-07f75e31eb0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcbbc248-fc7f-4dd4-a4f7-7c4232271742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9acee278-4169-4d72-8d14-3659716fcc7a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b60c4632-fcf5-4779-aff8-16918f42b16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4071c141-5d4f-4bc0-861a-dc8cdf97be16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4846bf2-92c1-4aa5-8412-42267617c3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a336f2a-3c67-4609-8df9-ffc849fce9e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c88df0-7736-458a-9f51-64dd22a517d9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d900091-d21f-4582-92cc-34f3db8cdd60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9da66e16-0002-4312-94b6-c76a7c460c22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce2a0fe9-aa6a-44fd-9334-5adb2df845dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "77c61265-6106-43cc-86b7-3e01e7f94a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5bbc4ac-d8c2-4c11-b256-1fa8aa407765",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84c81a8-6423-4e7e-b680-16a64abce772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cf413f0-f22e-4f4d-8297-78f5db0d4e72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a7b98b-e47e-4b88-8e9e-dba5f59c816e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "37dcecb3-7616-4cdc-99d8-753f5fc28b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b876c1a-6c5d-4361-b19b-6d0d83d62d06",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "141fb67e-a546-4dd6-a10d-f7cd8d7939e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb85fd73-ddc2-41ef-90b8-86432666a7bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b60e2e-2fc2-40da-b99e-23b7571c050b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "26f73477-8d29-4a0b-9cea-c8bfb24c31be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccff3328-fdfb-463b-bbf1-57b620415f84",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "574f008f-6669-491f-ae57-31281aea147f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2976b00-b15a-4e65-ae8c-87a1b3760608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b7c0a8-2526-4c38-ab5d-161990005082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f50dcd24-db31-4609-97c2-2632321244b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1efde406-fdba-4805-a724-870f58891c8f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef5cd57-9cc0-4958-bfdd-e576b8a34cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb2da468-352a-4766-9935-f893777eb42a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7f4ff2-3ac1-45cd-96d9-fce465206119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ac5025b-c119-4815-bac1-1af69c2cc088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "496b229a-4b9e-4498-a9f5-36e7bb425a58",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d53d34-2349-45e4-8dc2-c02906d2a24e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60671fc1-1217-44fc-a692-5d5fb792ef97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a7c2abb-5d86-4c18-9ed6-af1fb1116b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ed75c6d-a2a8-4b4c-8729-ed6776ccf4c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f09e5f-c039-4fd6-ae2e-47f52fcc3e62",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c08d1e-d294-47fb-9ac7-55137c58f33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab1b831f-70bb-4be0-b583-19b3d3758683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9badfe9f-775f-4476-9c8b-de1c92f79ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "319d5e9b-5565-4072-88cf-18cfff8fee6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7900e708-f4ee-4562-bdc8-1eefba214186",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e011bcc6-b862-4245-97c7-ab514538c35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde627b1-9b71-4d77-afc0-fa88f442bf8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a7427ec-1cb4-4dca-98d3-fc07703753d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0a70cd9-e9e7-4332-b9a2-47564408c58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc3bf10-997a-474f-943c-efbd62846109",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8039faa-5a14-4ac8-b328-354788907355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb0c1dd5-2bc6-4e87-afab-cddd959b029b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9045e35a-eb3a-4592-9837-23a170ec7431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "badf867a-6902-4921-823b-77115db0966e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03ee9c1-6d74-4402-9bc8-688759ecf9d6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "757e1ec4-b161-4e7f-a43c-3081e910db8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "584cc564-1ec8-43e1-a175-838b41d6b6e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d64d7a0-fedf-487f-9c68-35da3bb01de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df9c37ee-eeec-49d8-9c60-73d57650ada6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf1e528-a848-4aa6-b52d-bc8e96c06035",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd777f08-b47a-4b09-bf9c-887a3f8afafe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11689a3e-e141-4259-85ed-5b3839b19f0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6021e4fa-0e1b-40cd-a505-ebdaef9f14fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d52c9a4e-8fd6-4c0b-9e0a-481b3b63578a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b57df6a-5907-4922-a6b1-4a9bfff515bf",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78847cc7-20d9-445f-bb76-d64a5c0ab354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d91a9f4-98df-4397-b162-a8b490e7c179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "defd3f20-d67d-418a-8388-208742fe57f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f1175e0-b263-4e2e-8068-b04a4bcc0181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6605e984-3617-4224-9ef0-d7842cc5c870",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac82ca2-3e80-408b-8d17-5eef530aae74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3312184a-79cd-4aca-b4dd-f202d6a7dbf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f9a186-df29-4a1c-bca6-162d4549384c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddae6200-5dfb-4d2b-871c-ba3c1ad77f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75904d02-50d6-4f44-a81c-1f04a1707233",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02e031c-5807-425f-bd47-0e69da30c403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5be93dcc-0a86-4f91-8ffb-684acb71426c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4a53a3-40fc-4db0-b4fc-10821536e4b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61e98757-56c0-4ad8-a784-22e407ec72db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97ff0f4-2b5c-45c5-ae57-028e9acd1e2a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16831011-ad18-4100-b3b2-f19d75d75187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fde383a4-00c1-4460-bef1-6e2217217796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318ba7d2-bc44-4d92-96ad-fabbfcb273f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf040af5-736e-4667-ad17-1c3abb1deff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475c087a-a607-4067-9a14-93fab76d5320",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d280fb-c196-4165-864b-cb9ff34554bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8e203e8-1dc1-4561-ae8f-c342e2707b21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f04cef7-640b-4f36-ad47-6e318fb2de6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f92c900b-0cc6-4485-a069-f538fa134649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0812fc6-0187-49df-926a-e020cd157429",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d181b38-5529-4a54-b6d4-46d4b5c41307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc8650cf-6268-42ee-9d3e-e4505105e44a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26835103-5c9a-4aa5-b0e0-d2d783a79c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42d05d14-66c8-4f8f-bbfd-097e4ab43899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a73d5da-3832-4819-bf0e-f3650c6cdc15",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53fed4c7-b311-4a16-b814-2122c1d8c975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb8d55d5-c50e-46a4-a12a-91f326cf7c78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e3c87a-b6bf-4bbd-b581-6f380dd17697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51f3bb86-956d-42d0-b916-a3158defee8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d136703-fe18-4e32-bb75-b22571f60489",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c696df-c4c0-4cc6-a4ee-fd6ceb168c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd6a9f35-9526-4c28-9b9e-90355e65d139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ad09a5-9580-40c3-b545-ab982a73c574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec1e6dda-7fca-4e32-a834-256a29f0707f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a75335fb-67b2-4611-90cf-8ffdcf9ac952",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5433539c-17a1-4faa-ba55-4c594a424e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f0fe13f-5903-4f74-94ef-27f8ece2187b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d144c97-4b47-40a5-aa6f-a3060da83ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81dd813b-de79-4ecd-ad65-4ba9131f4cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90bd9849-fb63-4b52-81c2-7729d6488397",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "350401fb-2204-4542-80a8-7be5564ebe4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78ec940b-70a4-4be3-956c-5bd250c5824a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c3f347-762b-4081-a3c8-ef8b8a297251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a835a147-b9dc-43bd-9522-231b1c2fcc12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa1dd44-4e6e-493d-a552-4db94b8d3605",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6318d0a-10d5-46ed-93b6-89847e54774a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8fbf525-2167-4366-b66b-5138be930e21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b76543-8590-4880-8640-2b7ee4d7e6ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7403d32d-2047-4b55-a5d8-075a294696db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed04922-04f8-4af4-b2b1-77985fe8e9d9",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad4b483-1ff8-4e34-a64b-277062cc3ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9d42475-41f7-4e7d-8dd7-7b5ec5b51acd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1df718-90b2-4161-917a-5b9a68fe62bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "507b3a76-656d-45dd-b8ad-8d7c358228b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539a6c80-c555-42a6-86be-215f2c9fccc8",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74325d80-0d1c-437a-b677-ebe1cb27cebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cc0b2c3-9511-4f78-b730-64fe177e6f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f415cf-dbef-4957-856e-31a631847ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2189885-ea61-48d7-b576-5b6f6dc2eacd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac8d1ffa-bd03-4f18-bf78-d36fa87f64ce",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2b74b3-6d9d-4bf6-ac20-eed3a97d5be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2afef18c-f7e7-47a6-a55b-f39215e53bb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040a4cf0-4e30-4de6-997f-ec1c1e5cac1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8641548e-8cdb-42e2-b868-daa6f596d7bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9115f129-2b62-476d-8812-563ba4caeee7",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb9a583-a906-42ec-a0a9-e43d6006b47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c63110cf-a6ce-4b92-96d6-693beab73bd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c2c7c9-9625-40bb-8c3f-86ad0abd3957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8775887-b323-4278-b912-67b13e1dda00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b1adf52-c232-44d5-96c5-cf25625b2840",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5088fa4-f0ac-4b7d-9a7e-c565467119c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3514e8a5-48ae-41d8-9afe-24d66624f2d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec459df-7762-41d5-bf3a-6024c5dca0fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "542c961a-8584-4c37-99bb-4e2469530287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d28186ab-5a75-4dfc-843f-325a72c4c23a",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db7186a5-833b-465b-a244-d4793277f94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52515e30-45c5-450c-92d3-bade2b73db27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4feeeb9b-318e-4c5f-8e8c-bcf693dfef33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "290c2e8c-7d91-40db-89ee-834827acb2bb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5f6cc8e9-6e8f-422c-aefe-b5d1aa0a273c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "27c5830e-65c9-4535-b969-a47337f9a6b1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3b47b0-be37-4b02-a6ef-11eb95ecc067",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "05e20d74-26f1-4b90-9607-5d0bde54aebe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b79fe21-3033-40af-a817-bb14fc159b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c92ab98-a942-4956-839d-878ebb85e1d6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6fd826f-5ed9-4272-87b6-ae319156d809",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db3b2e6f-e761-4387-a435-21944f2603fa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5cd0789-6faf-41a8-96b8-78544685bbaa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2770b95d-e36d-4fdc-87dc-8cbd63994a91"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9d2865bd-b25b-4fd7-9ba8-b61f27e41fd1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a700374e-ecb2-4dba-b383-d4f62637c59c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "863a9a88-298b-404f-98d1-d521a48e2163",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e676e91e-2c45-4cbc-ade9-9fa89301f353"
            }
          }
        ]
      },
      {
        "id": "54369f02-401d-4e3c-a1d9-61bde5b46f14",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "fd5fddfb-d27e-4b0a-8135-254b832226c3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "be259ed5-070f-4a10-bfe9-4cb9220aeb02",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "630b56ee-61ef-4db2-8efe-b8f09fe58a96",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f09db2c9-cc35-4fec-b5e9-74ce579e130a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "705dec72-d72d-41e7-8c8d-26ee7ee24e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa9c291-ba52-46a0-b4d3-3316c0fd5c6a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da56571a-6e0b-4330-8ee2-7085d9ea2519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f21fcfaa-b6d9-4781-81dc-4223c763852b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "defeb409-9d56-48c9-972a-118fcc0a9706",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f1cf52-72fe-4049-a9ec-b29e2bb0e360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fa2c6a3-08df-4ae8-99be-3f64dc845b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8eefa8-2ec6-4df9-b2c2-2550e61644ff",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9eda5a-84b5-4daf-830b-15915668e3eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b3a04d4-c88f-458c-a784-36e8b613b7a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067b0635-2d55-4157-948b-22e106abfbe5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7f47ed-1ce3-42e2-9176-89f8dc05661b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e533a2b-fc56-4af9-bef4-0675a39f9728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842b3c37-8adc-4288-8d39-3065684b1021",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "234b6784-521c-40a8-b8c7-e37623a1e61f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6718119-6222-45c0-a636-b99f796b14c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f4e7a22-8737-48e5-9532-92d233d34870",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2229bb3-d5c4-4c16-b4ef-3758ba335ea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0036b3e8-30ea-4150-9973-301463019e86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "746e2a2b-bead-4ebc-a4ef-420c02a61470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65f627c0-6d84-4099-b205-4295ad941928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a37ee3-91df-4bca-a4d7-30ba7506a1a2",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5400e1e4-80e9-44bf-add0-b1cf65029c9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "496f71b3-c087-4944-90c2-f15d50a7ee03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c0f9c7-7f49-4b33-984e-7bbb19a6340b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "925a333a-02d3-4407-a327-a6755a303b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b2353d5-af5f-4151-bc98-f7ffa7c9bd31",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc3ff8a-274c-4c85-91fb-0873f43d8b91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d538bc5-1fff-411d-9aaa-21a4dd0985a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2eaee3e-f987-4d7d-ab3a-19b5dac0b9c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fcd629e-7166-4a7d-8383-e1603f3a3548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7611749-93a4-4a5e-a135-096c4d9ed619",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4efdcba-02d9-42ef-8087-a746e8329ddb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6f99e6f-15ca-4898-a902-7a8c454d001f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1932364-6c0e-4a02-8d57-7bacf1f620fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65d5f91e-75a6-4e49-a40c-c1a01bdf2613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754b8dae-9edd-46ee-8a60-a79f45d11159",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792aa21d-bf08-429a-9d1b-31ba394629ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c639398d-42b5-47fe-9f18-a70972d997b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7543e268-88a8-4057-83f0-2be1f9fa3112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67c4679c-6b92-4e71-80fd-7b0556bedb13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088d0a18-3d0e-4ee4-b157-80ab9329723b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f760189a-77e6-43ad-968c-8b81da2e3ba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82450ae0-c5c0-49b0-aad9-bbd73c4ed277"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39255a35-d97e-408c-9c9c-4e6e9cd392d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23788cbd-a331-4991-ba7a-1318d4a04c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3ecbc7-6489-4bfd-9632-46d9a31bb44a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ceafc2-67a3-4546-afa5-56bd8535b52e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cbccc9d-fe93-4bf7-b025-c059db487067"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a858ea65-07ac-425e-b9d8-9231e120446d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f62e01d-0ebc-4b4c-9388-756c11943156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942b11fe-10d5-4d8e-ae20-ba50eb9eb5e5",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b3af30c-4331-4a63-8ca7-75bdd0c4f603",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caf1a02c-55b6-4b01-9c1d-2fcb35b7a8c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d86665-e896-40c0-a441-bbcb5d51ff23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01451dc9-3b54-40d7-a4eb-ee7d1296209f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64671ee4-955d-4ed3-a67d-919a808c89aa",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0696d8ad-fcc8-4650-af94-b2514b2dd74a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54dc422a-48f1-4a4e-a74d-852b91d164ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7338bf60-6244-4915-9925-80a93d3163f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8621950-efb1-41bd-ac53-68a63dd145e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d5e0f1-46c0-408a-904e-0bdd29c13eab",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6631465-5c83-46e2-8f4c-20dbb74a2ee8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b342322-039d-4611-9633-1d8a8f4386c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea862c92-91d7-4637-a35d-8683ed63a52a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e79f8147-f02d-408b-9785-1e40fe124d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c496e95-605b-43d9-b9f9-f4d1af5cb7a1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5995601-3055-4b43-9ea3-393747c2ba42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "675a315d-81d9-4caa-80a9-c504929765e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0efdcf3f-275d-4c74-86cd-faaf8c0fcb26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3f5fa81-7648-4f71-a65e-957ac0d14557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e13792-8b34-4186-84a9-d8b8115e8d28",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0219e9-0c08-4642-aa55-343f459d2fd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2367c439-1f9b-410a-8d3c-4232f9ce779e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94cb6d15-50d0-4348-a0fb-e6c15d3b3b7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f72a5b-1929-4a7c-bd13-90ea5c506565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0feff5d-faa5-4cbf-bcb0-074a8b87a9c7",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e930fa8d-4b1c-4256-b2e4-21190f6ac53e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b769e8e-8518-4c68-9502-5c1cfc3e6332"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c72b3881-2f5f-4a3a-b6af-82e5748eced7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50a98674-696e-44f8-992c-d82d7ff8db47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a3a1a2-770e-4b0b-924a-aca3bc2eba13",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29f2bd6-0b7f-4404-84df-d74f0671e765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a65c2446-22f8-4e27-884f-1adc5abfc08c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b432d93-fe73-4b37-86a5-bf893fea3648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fe8b77e-d766-4bc4-81ea-9068e9c0809f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61940f1d-ab9f-4881-a7e3-3eddc4336ae7",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0363890c-71e6-47d1-ab1c-40fa4a27cdc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cdea5a9-1cab-482c-a6d8-df33e9e6ab8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9205dce-877a-4c7e-9516-85d1c0f1094d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "147cdfd5-d5c1-43b3-b643-d45314182454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd6152ae-ae00-4505-9394-6305e2899c04",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d1b3d60-27b3-4c40-811b-6f62a2506fe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e13fbfe-8004-4a7f-aba2-060072a6088e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce94526-60af-4629-8fe5-f120b315da65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88aa4aa1-3e98-4ec2-8a87-15a4032c128c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a79e39-e72a-4174-908f-3efd39f0d770",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf63b340-1df6-4e82-8e94-dd9452e65a77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad0d012d-24c6-4a59-a9ea-2fa43f587d0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d875a7-9a9d-43e7-b9aa-42c5ecb38c65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c84df149-cd2e-42f0-b246-8e0268e465e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b169a8d6-8730-47cc-8dad-5b4ec7e3b6f3",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df709531-53e8-4bf2-9517-200e158df97f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0987bc21-63c5-406a-88b9-6c1fdca94ecd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac50f8f-3ae0-40f7-9f12-47539d775be5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e1a0585-f9e1-42ae-b611-b2e790b2541c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa42b936-329f-4b1a-9c27-cb51811a3749",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f949ef59-c8a3-4934-a9fe-983f446fc2ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e10a0e37-fd30-4ea8-9c5f-2da18ad20008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d9ce0e-4fdf-4b93-929a-341608b80060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a398667-ea8b-4940-a3fa-65cc1467ac35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc1f4964-0b2d-4d9e-a0db-7f1eaa6a8857",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1e9913-a07c-4274-8948-d4f9594227a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "424f1a27-1a73-4020-a07d-34e868d6c07e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b7c568-4b05-4328-a6bd-13cd7bd33836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c377979-4207-48b7-b881-17c57cdd2bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "144dc517-4511-42ab-a3c1-f9f94d5ccbf7",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f436ab8a-e7db-4dfe-970a-f1beb570d0a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df5b3c4f-8f19-43ce-b4ed-9829edc73f93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae4e12ba-9670-43e3-a186-400f0529b9f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43b3a039-846e-45de-ad61-315560f41e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be6e34c-3dae-4c3f-b696-300aa74f1209",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e378b40-3e7b-4f35-aedc-0b8be1a90a07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b9334e4-3558-4541-8b9b-161f3d8e8d82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6ca0ed-96b0-4e56-a7c5-23ddf7a00242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ad4f7d5-2f29-44bd-a45c-e4b5cdb36c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9325e30e-b806-48c9-9c21-811a9cbd5251",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97bba2c0-81f9-4316-b8fc-b9971ee098a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be6eb488-f0f4-4f1f-a2ce-d1611bac8506"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c1c831-eb9f-4391-a0c3-613a6f9c26f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "263728b4-1aba-40a4-b122-d6667b3f7d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe82f49-4263-475f-9e44-d4c6402271de",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3933fe60-598c-4dcd-8662-dc2debb58c3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fe86d7f-dbd1-42f6-ba03-90b083fe0925"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4166e26-50cb-4c4d-91f3-fa261646d895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59299a72-2f7e-4109-9c8d-d837e0094567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690f876b-8b6c-4788-bd5d-ee90012e9031",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11909170-7369-46c1-8c3e-76b3ea93556e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58bedf02-ba91-45ee-844b-391f7a6cec60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "829dd456-2920-4128-acca-3c2a44370b54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd0e98d6-bf3d-4fc6-8d38-c33698ed0753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2468b052-9ead-4589-986f-780cfdb6535e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e80c9c7-8cd4-4a64-a0f0-f95bf774fe03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c8ee839-42a1-4b59-a1f8-bf0e19f22a85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b501d3-59e3-44bf-99cf-22ee9cc4be16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b65cf683-95b5-46dd-92df-80b39f264446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e50dae-4fd1-44e0-8a3e-0017565aac96",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0bcb66a-867c-4d0f-a795-c539a62724c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "526fcf2f-6dcd-4a5e-a441-a3ccf7c9b296"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ecc8e3c-e969-4e81-b21f-b8ea4ad913cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff5ab3f3-bca1-4f53-9efc-3e3818a0bed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50000341-90f0-4177-bd33-bdd0a64eedd2",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e5b5a2-ce33-458f-a2d7-fb8356c27d00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f9323a4-9da1-4a41-81c2-1b76d78a1238"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e0a5b0e-897c-49f4-b3a6-6a6cad003ffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea144f10-40e5-4b4e-a48b-a0d8344d291a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0dfbb5e-b45a-44b0-920d-b31f6abbb58b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f3993b1-989e-4819-987e-49978b31c3e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9ea9c65-b71e-4ebe-ab8c-81acfbeeeff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17df95a-1585-483c-9c4e-5af9d079d557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "719fa789-b720-4d07-8a19-cd2feb81edb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "607d2902-0cbb-4c9c-bbb3-abd97efd2092",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba419322-6ad0-403e-96ac-66c1321571b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bf733f7-120c-4962-baf8-e7330e138cd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5758cbba-6b66-43b0-8201-c148e3d026ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6da1ee8e-e5c7-4b44-9c0d-d24838cfa4c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77641fe5-06ef-4e22-ab66-d79a535e5744",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86563c4c-4302-4e36-abbe-9bbf0363500a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbc437db-9067-4700-88ac-1183f989d9a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "625e74a2-b333-4cbc-8052-284b2da7e03f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9861d98c-6d2e-40cc-89b7-ec3f65ad07fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1342f2b5-dbe5-479e-8e9b-5c6ae9743e50",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246671b1-6142-42b8-b915-14df650598eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45022a2e-f649-4461-81b4-edbc4e7cddad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9b0e84-43af-49b9-92b0-4be51fcfeeb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8bf493c-81f3-4efc-89f6-cd0eead78f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a02e3f-4cbb-4859-bc73-2bf5e9a3a283",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56269aae-ac31-4244-9b8a-e163ca13d683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6aff508-aa18-4808-9c86-cfba8d835cf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1adf3fb7-d189-4616-80da-23202158c11c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce0aa99a-aa84-4a82-9edd-b91f1e9080e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9e60d6-06e8-467f-99db-624f0ea8bd5e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef50bd6-0e0a-4b81-abf2-5e1736cedff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebcc3536-1c30-4a30-9386-3bbac23464e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e665c558-aa32-41ab-9665-3c6a74ef91c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb478597-96e7-444d-80dd-b21b3fc688c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "290414aa-c871-4fc4-8234-802254bba67a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab945c4-bc0f-4465-8df1-2f86830b0047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06dc2f4f-be36-4b74-8368-2bf91330d919"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d3748a-1be0-4f0c-bc4b-f39a19fc03dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ef1a001-ce57-41a4-a588-b757457b6752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd19b757-1f6b-498b-8d33-3b63ac7b8e08",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d081efd-1850-4df0-ad72-857d34cdb22d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8ce8493-e2e5-42e8-823c-d930fac8e302"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c633ea4-4d9f-4119-a0ca-4e81f75a584b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca573c1f-1b87-42eb-a0e3-2c0f4240b21c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3494d679-0733-4765-ae3c-22c512ec61ca",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736aaf5d-5ff5-4faa-aead-ec88bc8cbfc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "120cb768-9002-43c2-8602-6be19c074953"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff3c99f-52b9-4ddd-9606-724e9bc0c781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f49c25d-3f4f-4ad5-baae-0f78e9927cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17687a68-830a-4f0b-b988-cdefe8b7ac38",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0cf3b0-f689-429e-bef2-fe0a6c5db7da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e7fc107-b0f8-459b-b1b2-783ade3ba187"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "992fb875-4b4d-404d-bb43-a8138c2e84db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f4287fa-f0ce-48ef-9ae0-34d30f7e14a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "951dd1d3-6eb5-480d-937b-b759605318d4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21bb94e1-2d02-4fc4-818d-c78c7240e03d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93e17f02-14c7-4cc1-8f50-f24485522073"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f4e1b1-0710-4ad1-826f-6b7cd69763f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "763b3f90-0794-44ad-892f-5b2ecdad8175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eaa67b1-e8c9-4b46-904c-355fc85b671e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21aefa27-77ac-48da-9093-da3c1b559062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f717c5d2-c09a-45d2-9e7a-86dafce5bf1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df868611-418b-48cb-91e5-541546073885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f76aa1a6-c857-4b58-9461-ccc672fbd5ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e512e83-ffb0-4acf-9659-8fe19910d503",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42264135-b5c3-4546-bccb-52e4bc447716",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "074c1c8d-5997-4e40-bdbe-c44e9b859ecd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd12331-740f-4bf2-9582-1df25a5ff03c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdc7a890-54cb-493f-a2f3-f0e9cd994cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23daea7-44bf-4062-abda-ae15accb30e0",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c7f282-3284-437f-9c71-77be1cd35162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be5c0afb-c6c1-4f96-827f-f06ce4b376bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a6f7fe9-e477-4cf8-a6ca-4acbef666318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32719b77-3c8e-47c4-b838-bd99b815bfe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d36dc74-0909-40f3-a664-d3ca2a25a139",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e75f6b-539e-4054-adc5-d16600a5731b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0e3d18b-06b1-44e1-9e00-0b2a3f439396"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff90916-81aa-464d-8ee3-ffeccd29200b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0faf0891-f3f0-44d1-aace-296e773b13ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bedb97a-0d10-4bd0-8ce1-ae8728d5ea0c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9333103-c6cf-4ee3-a7a9-0f0fb1891a3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4efa7d2-053e-4e83-bf67-7431f611d9ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0605029a-4dde-4cb8-a98c-3d5f9fcd4a7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acd48578-59e3-4680-99c9-d6a2946ce52f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46d8ee1-90d9-4b4f-9359-db76acc37003",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87f615bf-1f9c-44da-ba48-494630759e72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11afa69d-f3cd-4c1e-acc3-821578b9494b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c48cbbb-60bd-4744-98a2-e4393c254fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "641cadae-3622-458c-88fd-18269f8f42ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be5fc6a-34f9-457e-9160-d6147e288f5c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f04ac6-45f0-4c17-8d62-d19ca34d46ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "550e24f4-a4ba-439a-add3-101df15fd809"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4333dae4-c84a-4c3a-ba0d-cc49cd6ecaef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03bc1daa-a78a-4961-ae67-c81e18652199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f82d9bac-af08-4871-8576-39c3ea289625",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c1a21d-9da2-4ce2-9bde-0a0290bbea7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0daa7f82-0b7a-4a77-8555-5ecadfbc5c11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac4c1c90-7bbe-48df-ae6f-39a2afd77dae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96ce3c84-d58c-49c3-a3ae-41680479025c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c124f3-7f7a-4145-8306-99657e3abe6f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c527e3-0947-4e3f-b2eb-6389e607a725",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4619f767-f035-47a2-bcfa-f9c0b32b0cd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1427a545-5cc6-4be2-ae90-8398908a8df9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f208d45-32b5-4a1e-8fc0-5027bae14356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c669ed-fb3f-4552-a96c-bf3312b74aca",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "383a0e72-b769-4e4e-8823-79ba7261446b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8786c421-adb7-4767-8828-6c9650698928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21422a0e-3ed5-4b93-8958-d91217f87d90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ad4e0fe-8c7b-43e7-b729-0f51ee5d87ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96a26e3-b5a8-45ad-a9db-864f6ea957b1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd820a3f-21a1-472b-8a06-8b8cd4b952b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d7535c6-ebad-4acd-801b-300eda9f3d7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47447d62-2a4c-47df-934c-0d61c02c6d0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5491560-5d99-41f7-93aa-eb3dc92d15dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c1d15e-5b63-4ba5-a3fd-377d192b3962",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b618913-4a33-401e-b89e-0bc3afeec489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62770aca-5630-467b-917b-7dd3db396d5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7761595-3da3-477c-8a4e-0dbf7f633c16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07110e7d-9d6c-4cba-9971-3e7d0a3ec3c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee1b5c9-e509-4a4b-8c96-7483fe7a75cd",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f2c783-730e-44b1-a233-5ea4e69fe692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "085addec-cbbc-4fd7-92b2-9403fff71dae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2b433e-36ee-4bce-8570-98b30a702cb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d856a134-d2fe-4f61-bfa5-5e82760aa21a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a75762b7-2d0b-42d5-96cc-8a61cdffdf12",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f8e3b1-64f1-4caa-a3d0-d1498bbaae18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "986f6cc8-5692-4731-ac00-757a0ee180aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3453df-0d17-4842-89b9-24017ec498fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a613fb2-beac-4ba3-9903-51c504f070b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61bd8b96-8425-47f6-bd38-3a35d8cec833",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc48bda7-7f82-40fc-b257-74a7005b6c07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "697c4238-463d-436c-a508-90d13f61128d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acce683d-b5f6-443b-a274-dfee846f1c89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2319d167-f49f-4a3e-be0c-48c66710bf09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a9e107b-f6c7-46d2-a69c-186a0234710a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "342f2177-c944-4e60-b160-e318dd36ae35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60231c88-8c37-4736-900d-86011796e2e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01217225-b71e-4dc0-a78e-a563417b5ae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "983b1d53-1b76-4c6c-af07-34e63d46237f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b78c55-57aa-4245-8f14-629cf0623be6",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92339029-3e76-44e1-8c31-75baac2658d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68ec70ee-62b1-4dcd-b8b6-b38730ec056e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49798d8-00ad-4b8c-ae6c-b311e5ecfb4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9cfdf97-1713-497a-991a-f419be1a6a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7177c1d5-0393-4903-bc06-15740087fb4f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f09bfe9-dfeb-4343-9492-7c0702baad76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfea6a4e-99dd-4b94-9c8e-b3c6e4e0be6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14bed49-8e45-49b2-975d-793a5c0f9dab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26889273-2afc-44c0-8411-5bdfa6e75cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78538658-6991-47ae-a78d-2e7da75de799",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1b38c9-5c01-4cd0-845a-0fca6333c870",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "307d6c75-4d39-475d-9bc7-a6b5852309de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4ce6c6-34b9-4194-b095-7d843e9cb861",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e154c84a-c17b-414f-8ce0-b0612196d1bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db857a9-a61c-4b0e-95ae-f6ab50ef2d2f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08860a53-6b95-4772-99a2-9cfa6f69ffd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd88bf0a-608a-4e5d-bee6-8a05df55fb6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b572dd06-945a-4352-9ed1-81dadc6f1961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31905746-26b8-49df-a9cc-d02f37824ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc3799b-566a-49a0-a276-2b67b2eebd60",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f65692-803a-4bea-8980-c0c9a32d5108",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f03f085-2475-48fc-8f65-40dd7015010c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b097810-8e64-4419-9cce-c252e7957fa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2be8732f-90d4-49b4-bc8e-e22c46d99c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad51c660-2242-4031-8bdc-09f12d98d9b2",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6aff11f-c9c5-47ec-bcbc-150a8311d844",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6198557d-95fd-4188-957c-b71340eeefa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8bed8df-e418-41c3-b943-bbeac9cbc679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02f592b1-c67d-43db-b75e-406e4baea6a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f3887ff-802c-4bef-85f5-a02aec29c84c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c00bdcc-b64e-47bc-8218-1bf4ec958f23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25cd0550-ba37-44cb-b6aa-72703cb7f457"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4f3ee3-c076-4d83-b52d-fc58c0d1f8ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fc33ac9-6f41-4d77-8e3c-2b63005ee93f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "258121f1-5782-4dd2-98cb-42b7664b6dbf",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ad4ba6-a33e-4139-9ecf-38485b222982",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dd94d74-8e2d-49c2-86f2-f0d5314741af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "170f781e-4efd-4550-90ba-2b5e7d2bf151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df1c213c-a782-492d-89e8-8382d3050ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0d50d1-3da4-4267-84c6-89194eaa7a72",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca512e0-7c87-4d05-a985-adb02bbeb274",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d6767cb-0aeb-4d30-a538-4b0028681fc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd42d61-c95f-4571-84b3-b39d5c6d44a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19b58b42-8aa0-40e7-9d10-cf1402099afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db871bd3-1d60-407d-bddd-e5d4cf2b9649",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a2fcf7b-7ade-4bd7-be59-b68e93645acc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b2a254d-9270-4902-8d3c-822d15284db5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb901a7-dc50-406a-bc15-a2869dcfc74b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "527561fe-1dda-411c-9063-6afe2b5da345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786e3e3a-1cac-47f0-a40b-777d484711e5",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c95b9f-a5ee-4868-a06e-a9ca304ca10b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e919091-cde1-4429-9982-fb7b3aca6571"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a66451-016a-44b1-bae5-1c131c64268a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30e8135c-d688-4508-a11c-c775b65fbffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a793b5-fb75-474a-b25d-ae024f2bf9fc",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31e6c95-664d-407b-bc76-f1d9f7aa9638",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4608c3a3-21a4-4c08-b6d7-404e2595f717"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be5cfe2-e33d-49c0-babf-96a0bb329c58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72f6d020-013b-4c28-b3fe-894b89280b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0020707a-7a81-4342-919d-67c0ebb136d3",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db4f5d71-0fec-4a22-8ab1-3f15369bfef3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b4acf74-8622-4d4e-ac5e-64d93f5f9cbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4ffdf2-6b6a-48c1-8e58-e57070606bb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b50bcf8c-34b0-4bc4-a7da-f1b5fa83b810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8278ddba-8fab-4ace-9511-7b6d26a8eeb7",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9696ebb6-9bf5-44c9-9856-3a0642a5782e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b120016d-1047-4bbf-af21-6385af04cc99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f4dde7-015c-48c2-a52e-c847dfa1f237",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e66fa1af-1af2-46bd-8c59-1afacf18118a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373c9413-3269-4fe0-9ed6-81b8cfa25923",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb213e03-8d28-4a65-9e8c-102efdd25153",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c04084ea-4fe3-4917-8108-6eeaa769b71b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ef600a-9388-478f-b0de-12ff8b1d45ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c14b436-4ce5-4466-9d5e-6d6f753d4207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c374966-3a20-4922-a169-c6c7984e9640",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c5025f-afbf-496c-b146-b6cb4f6cbff4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2edb22a6-4116-4f5b-b89b-e2e1c738dd67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb66716e-1886-4202-9ba1-9bd0f9e57f99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbe385e8-40f9-4258-87a0-142b37de9594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47616bb-6623-4ae7-a454-012c7128b9c9",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b679956-23d8-4c71-9255-1333c64446ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77b82c1e-099f-4c1b-8fda-c7938d0482c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93455605-b1a9-42b1-9a62-d6b5547ac7c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "501acaec-056a-4483-955f-62653ffa59a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d86ac9-dbe7-4e2b-a5bb-e7faf5ca8641",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68353b9f-e421-475b-8281-f5a497a23ccd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c32f3fc3-26f8-434f-b40b-49c8c3d0615d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6654ac-c80c-42ff-ae83-f668a90d3786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69be029d-d71d-484d-83f5-c47ef47ed34a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5eab90-b322-405d-bd6e-ebe409883512",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddafcc28-da98-4fe5-9f88-a37253a6c58a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f111f02-39d3-4c72-9b8f-1710861e962e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae64915-2b13-41bc-8524-f926fa38c8ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb67c522-8cd1-44af-9fdc-66e54d2f75c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef41d130-c8e2-4279-aba5-2e375c74cfc4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c873cb0-a3c5-48a1-95ee-f1c69a03ca6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "139b3e88-a839-4053-9804-95e90e4676fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "773e9d7d-e98e-45e7-9bfc-cd9737a44c1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcb5c622-7f4d-4925-83ef-c4dbb128b511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2eb269-bbaf-487d-94cd-77a6125adf9b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba9a08a-f716-4da9-8d6a-df7988fe831b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80bfb411-d471-4999-a56b-3f1d99783d4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed374e30-8ed4-441a-b79c-8b977fcfda91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d892605-392c-4de1-9d4b-bbd528b29cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5688aba-4827-40c7-8d5c-1e83cb0c3e81",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0608d505-e3f1-4850-8ad7-d3b1f2452426",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f86133b-91b2-48a8-ba3f-7db1ddfd2ce7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e208be28-0798-41ab-8e05-f6d2d415b3ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a97a7943-13e5-434f-90dd-bd140a39abac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c6ead7-c6ec-4c46-ba65-0e2ff2f5fd6c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d224aff-a4a0-44f5-82d6-3ecb3559b69e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "daeee39a-26ab-437d-9cb4-4f165409b9d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6177abcb-2438-4421-be6a-6b123307e021",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "090bc68a-f742-4452-8baf-875769d4beee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "459b1d5a-366b-4b9c-9e86-b86e21846086",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9dd523-fb61-4704-9f55-636b223a639c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9efae46d-7922-4965-bd07-f6dc67bd0b07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f58756-faf0-457a-b453-c4e144151711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "904ce66e-526e-4dea-8d14-bf6ea0344a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f6174f7-d202-43e5-982c-f171c757e313",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a74ab895-9177-429a-a544-03fa1ad15581",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef97385e-e4c1-4d6d-86e5-d88345924814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61dd6316-4cf5-48fd-8ffc-5dc9c63a719e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83824547-f01d-4258-81b2-f4bc5187a615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a502d4-5176-4934-81b6-06c8b01e87c5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334faadc-bdad-4d05-987d-656a2183d4f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b7b688c-4236-4370-af54-f6aba8033848"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b04bee1-2208-4b1b-a006-b750e9fb8317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7569873a-df70-410a-a80e-5d9029599116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddeae1c6-bdbe-420a-b97e-d839f97da02f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a60f6c2-7b3e-436c-8f9a-3c2b36104207",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd7ec611-954b-4134-b623-9e573389c5b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b83221-9a31-4104-9fda-38d65483b6b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8c9f340-edc0-4397-a366-fa78b961e32b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c9995f1-3376-4da2-a8e2-49d72affc00e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b64891b-2c43-4b64-9d24-5276b73951c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f31aab30-b4ce-48d8-9f7e-9884a818f350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74248aff-a715-44d7-b73b-ede2bfb315c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e1da221-cbde-441f-9d6f-20ff698f6e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e74ea45-20df-4c19-b80b-0a0686763684",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b576e8-a1ff-4152-8fa9-919801fe4428",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d992ea2-1c8a-4f7b-b98c-c7435fb1deff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb04c3a-9049-4013-aa91-9028447d38ed",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f3af341-8874-4f07-ac8f-cbcad8f24222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6a0838-73ed-4f00-a970-c91a80eb8199",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e62ec8d-6f15-4741-bd52-6d4a4afb94aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12254a52-93bd-451e-b484-636924d7cc88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21503ec-7db8-460a-9e12-a9cb0073de3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b679d71a-619e-4b3d-aebc-d6d120713118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f8336c-d9ca-47cc-8dd6-8db908186b47",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d246c543-b20b-49bc-ae8c-567b7623fcfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76fcd056-ddea-4f7c-a7a7-dd22b12d4bf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac820c1-cac7-4847-ba97-e0077e808bab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7684628e-fe0c-4ed0-ac3f-2e5b3f7c946c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89617d8c-975c-44d7-a6d6-a076228a3ab6",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886dbd31-a372-4826-8b3e-6daa43b064dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80ab42ba-e34c-43c7-bef9-94a6cdf0029c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b204d4-4322-4bea-bdd0-a07ffac36f3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0935b75-6c56-4cd9-855a-43362f666c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a120f590-f8ce-41d5-b84f-83ae628a93e3",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51846ebf-88f5-46fd-bbc5-a20a52939d5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "616b0bfb-01a7-42be-8009-25a106cdfca8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7cf1a7-b7c2-465c-85b6-56165722767d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d815092-a237-4503-ad99-838a1e3927cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c0cd6ef-d6f9-43a6-ba6e-d84e85efd671",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec99c4d8-7b59-4c2b-a80c-b9c14896d27a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94aae5f4-12a4-4a05-9854-60b3c79afd09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0072f166-ec90-446c-b73a-db164c4253a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30c252b5-2a02-4339-9c63-c51084066ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d7fc69-b2da-405a-a7ab-2b351e8c5ffa",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3782e48d-fb67-4f80-be69-6100ea95faae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a095bbb-195c-4ab3-927c-02ea043765de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b73086f-b720-423c-bf32-637e92a28311",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e55130ff-def1-408d-ac57-113038bd066c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83392ce-41b2-42ad-8603-996c4cbb2609",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad97e5d0-f0b9-4767-8afc-f7849e9a1dc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbe473c2-b290-43cb-a5c3-acd4d6f20471"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a27c8b7-c2ff-4194-9b18-ab4dc305ea1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5f063d1-5a71-4807-8b85-0799c7b08d11"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b0d95d2-9b6f-49df-be33-3b9672b6f95a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a693b82c-f797-4156-bb42-7e093fc88f20"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ecd7bf18-c0e2-4ec0-8663-caf4d2c1f42d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "41fc8463-cd37-4a25-8a0f-95039c85291a"
                    }
                  }
                ]
              },
              {
                "id": "ebe914bd-f1e5-4502-824d-eef0909ade41",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "de4efce2-c538-40f9-8f59-753e82f0f32a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f5ef29-0bc6-4ebc-a131-29dcfc4a96dc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e10fdb34-3053-440a-935e-7a648eb128dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff301212-258a-40c2-a4d0-276b6b5b4a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c95b58d1-514b-4ffe-b3cd-036a018ee597"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0fd6a597-bdf1-450f-983d-20acf4a24fdf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72b7e4d3-d1aa-4d37-bc1c-7e862226e1b4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "acbffcba-ea5e-42ab-9072-efd9513f6377",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60b9fd2c-bca0-4e07-98aa-d3b6db7d5492"
                    }
                  }
                ]
              },
              {
                "id": "2d41832f-76ba-49ec-94f6-1bee655db9d7",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c731117d-90c7-4218-a63d-be6e1de08969",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab38f0a-de71-4564-9f29-73f8e24b1949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "fdb6b713-2d0f-4143-aa93-fa065a989507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03cee97f-7f27-4bf4-ae03-97dea8c05864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d870a53-b03d-4a74-aab8-214da5e64db4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0ce7d2bd-de00-4791-91b7-6b39711ec2ad",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0e5e1d95-b8df-4c25-9bda-10be21931493",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "611e9729-eba0-407b-b45c-cd507d411d26",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b8932a82-61de-49a6-b4dd-4ae827afec3c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ebf128e-0e9b-455b-a4bf-a11391b3cf62",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5584fccc-bf79-446f-aaf1-a982387ce37c"
                    }
                  }
                ]
              },
              {
                "id": "2c166093-f382-43a7-919d-3092ca6ffa48",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c834b0ea-50e6-4962-83c8-770dc8a50b54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "26809b5d-e2a9-451f-896e-616adffdbdbb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c660e29-2bc8-410e-a436-32803b9105a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "100522db-7b9f-49f9-b641-a7751b6d8963"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c49c5e7-2047-4c55-bdd7-43e3d6a4ddf7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5c28d351-9019-49d8-bf91-8d592ac0ea1b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e596c60-3bdd-4993-82bc-92a0d1359abe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f5b5b3a5-27f9-4bd0-8791-122db21eb0b7"
            }
          }
        ]
      },
      {
        "id": "3e8fdf78-4b9c-4ad0-b8de-b41b7cf76a1e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6b6d75ce-4382-4ca6-b6b9-b78e2892e1b6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5315957c-2208-47c0-9627-8d8081573a3f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b065737b-43cc-4f5b-aba4-7d6b9b962e70",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7671e688-ad88-421c-a960-bef5e1547203",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1a317d66-d300-43a9-95f1-58d683ba0967"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03eda0b2-d86c-4d37-9a0c-bddfe27cd0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f7a2abe-7b8f-4958-88b1-fb1e2dd203ab"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d1bb654-4f98-40c7-994e-35df6a9884cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b02f719a-fe7a-4fcd-bb2c-985968c75f16"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "09f1266c-b9de-41fd-965f-af68913624e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a49a307f-04fb-42f4-9cbd-293218744583"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "78efb329-a3e0-4992-87ec-cdbae5cf775a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "142420ea-de11-4882-bd5b-092058ffb654"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b4e24a86-1bae-43e0-b744-55f0cc8f5e52",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "957500f7-f49a-4e2f-9e76-37eb7e9722f5"
            }
          }
        ]
      },
      {
        "id": "6fea4f84-23b8-4d1b-bb3e-df3600bcde3c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0e98812e-8acd-420f-9fb2-ffad20239272",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8b794d92-f1b3-48de-8f0e-69ca2ca6f5a3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "127de1ed-2e95-4deb-841d-7e7e817d2f27",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5127795-1366-4d18-8aca-f416c33f4966",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f4d9c22-6c00-4694-8739-118a8f6fa748"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef6a360-0cfe-48e5-aaee-f6dd00755e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad92dbf6-5576-417a-955b-c2149080c716"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c25f78a0-f842-466f-99a0-410bcabeba31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb564329-b432-44c1-b375-728ea29a36f5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3920332b-145f-426f-871c-c5cf2abef55e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "febda2c2-aebe-4989-89d8-0df5e58e3d55"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "42838d9a-4e71-4a59-b7bc-78c0be449541",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9c970eec-2481-46e5-9355-156326dd4b76"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "55661453-c662-4ad5-aaa2-e2bc1fea30ad",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bc359f10-3b12-4487-af89-e90ceb095139"
            }
          }
        ]
      },
      {
        "id": "dc6738e4-19b2-48d4-bf6a-b1eaf321218a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "967a2acd-a025-4e7f-892e-5f7de1787449",
            "name": "Negative Testing",
            "item": [
              {
                "id": "73102edf-a32d-4698-acd9-6f9d5e430df0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7ade0a04-63f5-421e-ae09-8967106e236f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba107be-1c63-4406-958d-f212c030c172",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9db1b6e5-01df-4ecd-a0cf-fbd643971370"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "198107dc-ba38-4e69-a84e-ccb9628e4f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8fc8230a-cf62-4dbc-beba-6c02e8504c93"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bded0e62-068c-4c5f-af2c-f139450cfc4b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca0e940c-4465-4e18-84b6-7a8459e1d00f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b20e070-cd34-4e53-b209-18aa8819eb7f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d3bf82b-b90d-4478-bac3-3acc704fbd6d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ca7314c2-4c5a-4ed2-b31a-7f5c85163efd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b96cb868-2db3-4b19-95db-1ea56c3de78a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "69a4c6f4-0bca-45a2-84d4-12d4c62de31f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8e5a7ccb-5dc8-4170-a286-d4528a9b0f9d"
            }
          }
        ]
      },
      {
        "id": "16eb3d37-9e7d-459a-bc1d-8e8c87a359f1",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0ac70b80-4ccc-4361-9eeb-a4da6df8ee16",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9631fca4-c15b-4fee-9e71-57477a326eef",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "13bbc410-4e40-4467-9add-bd897f371b08",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e11615b4-301b-4dd1-83df-22f56fe94049",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "780047b0-069b-4ce7-b192-61a7ab141995",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 235.54225352112655,
      "responseMin": 15,
      "responseMax": 8620,
      "responseSd": 796.8917975152183,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1690418290570,
      "completed": 1690418371179
    },
    "executions": [
      {
        "id": "5aa0fd6d-a5b6-4caa-a714-074891915c81",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "236af81e-bb7b-4378-ac6d-4c3b2859f673",
          "httpRequestId": "432c5b60-7147-4c72-b54b-9fa3a6798ab0"
        },
        "item": {
          "id": "5aa0fd6d-a5b6-4caa-a714-074891915c81",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "08ec2f04-32fa-4bff-881d-7522cf312d5f",
          "status": "OK",
          "code": 200,
          "responseTime": 105,
          "responseSize": 0
        }
      },
      {
        "id": "97a7a92b-915c-4ede-af71-7d840cf7d29d",
        "cursor": {
          "ref": "e0f2c64c-731d-4ee2-8845-f73f99de07cd",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "444fca66-3783-4f53-b5c8-7c550513e077"
        },
        "item": {
          "id": "97a7a92b-915c-4ede-af71-7d840cf7d29d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "dafd44e1-fead-4e1b-8fe2-efed4e4fa3fa",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "ce64501c-3099-451e-a1af-f179406a25b1",
        "cursor": {
          "ref": "543d0fb2-cbe2-4cdc-9776-81b80e8c9532",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "3ae979cb-5c5b-4e3a-bfe7-71134da0cbd4"
        },
        "item": {
          "id": "ce64501c-3099-451e-a1af-f179406a25b1",
          "name": "did_json"
        },
        "response": {
          "id": "87cef8a6-1eeb-4358-a685-557aaadd93ee",
          "status": "OK",
          "code": 200,
          "responseTime": 562,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7359663c-dbb8-4f40-aacd-87427f048352",
        "cursor": {
          "ref": "821f538d-e74c-4f7c-954e-140944ed2eb8",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5d432001-0551-453a-b87c-8f0ae60a0f72"
        },
        "item": {
          "id": "7359663c-dbb8-4f40-aacd-87427f048352",
          "name": "did:invalid"
        },
        "response": {
          "id": "8852c1a0-8a14-49ef-8770-a8661fa23558",
          "status": "Not Found",
          "code": 404,
          "responseTime": 994,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7359663c-dbb8-4f40-aacd-87427f048352",
        "cursor": {
          "ref": "821f538d-e74c-4f7c-954e-140944ed2eb8",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5d432001-0551-453a-b87c-8f0ae60a0f72"
        },
        "item": {
          "id": "7359663c-dbb8-4f40-aacd-87427f048352",
          "name": "did:invalid"
        },
        "response": {
          "id": "8852c1a0-8a14-49ef-8770-a8661fa23558",
          "status": "Not Found",
          "code": 404,
          "responseTime": 994,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de7807d-047d-44a3-90ef-d9cda03796c8",
        "cursor": {
          "ref": "eb00c549-5008-4401-a2f6-f9f58cba657f",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "cfeb5522-a53f-46b4-be2e-2e5ffa349c0f"
        },
        "item": {
          "id": "3de7807d-047d-44a3-90ef-d9cda03796c8",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8390fef8-391e-4501-8b25-aad5775da7e5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 54,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6fb60f-5d64-4876-b8aa-5a2957e2779f",
        "cursor": {
          "ref": "c2e2deb0-ce8d-46c6-878e-083027bc9fc3",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d21bc4e9-d7c2-498c-8832-3c15b7427deb"
        },
        "item": {
          "id": "3c6fb60f-5d64-4876-b8aa-5a2957e2779f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9fb74c80-fd0a-4d2d-a5ba-9f613bf50efe",
          "status": "Not Found",
          "code": 404,
          "responseTime": 50,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d19d0f-ec99-475c-9774-b419b192882c",
        "cursor": {
          "ref": "b12b0dcd-4ae5-4e55-8ea8-db9c3bfb1f2e",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "def96691-054b-4a05-a84a-eb7caef45671"
        },
        "item": {
          "id": "63d19d0f-ec99-475c-9774-b419b192882c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "affc4b7d-84a5-4099-a702-425e3dfcbf0d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d7c957-f970-4b0a-8c63-7376256311a3",
        "cursor": {
          "ref": "07be9eea-fc80-470a-a7e1-a972a38006aa",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1f94cdd2-559c-4dd2-819e-fdce61b9ae7f"
        },
        "item": {
          "id": "18d7c957-f970-4b0a-8c63-7376256311a3",
          "name": "identifiers"
        },
        "response": {
          "id": "cb2cba51-81a1-49d4-bcfe-99de3dee39cf",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "215dfcab-a13e-4d0a-b60d-ef9a71ea61a8",
        "cursor": {
          "ref": "17faed63-4e4b-469d-86ff-dd6f24fd1476",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "88bf717b-237e-4ca7-b465-21a678076b90"
        },
        "item": {
          "id": "215dfcab-a13e-4d0a-b60d-ef9a71ea61a8",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "66ff7161-4f6d-4a5e-8c06-750ce473cef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3007623-9298-41bb-9991-47e7135a7c99",
        "cursor": {
          "ref": "5410d724-6557-445f-8a57-8d592810fd96",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6d9bad24-cd95-47ed-9299-6d5bacf3d9f3"
        },
        "item": {
          "id": "a3007623-9298-41bb-9991-47e7135a7c99",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "287e01c3-6342-461b-91e7-a62e48505556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df865015-03d2-4df0-9e72-bc1da7b675df",
        "cursor": {
          "ref": "c4d432cb-6a31-48c5-83d4-c93ec77d448f",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "42b68029-4135-4ff5-b84a-a3ed2b9f8dbd"
        },
        "item": {
          "id": "df865015-03d2-4df0-9e72-bc1da7b675df",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "9898200b-6a76-4d06-b111-795f660cb0ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "137afd98-22a6-4b7e-950f-f6075b71cb4c",
        "cursor": {
          "ref": "1a4ea12f-3f4f-46f4-a66c-a22620b8680b",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9afc018a-68ae-47ea-84f7-4ab23b00aa56"
        },
        "item": {
          "id": "137afd98-22a6-4b7e-950f-f6075b71cb4c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "46cd994e-8d19-4f1c-ad27-2f5b55d2bd67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e075f2-b9b0-4b05-854e-b35f9cced0e3",
        "cursor": {
          "ref": "ffa366ef-6f9c-4a5e-bad1-e0b6415e947b",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8b053ce5-3fd7-409d-9023-b8be6d451110"
        },
        "item": {
          "id": "02e075f2-b9b0-4b05-854e-b35f9cced0e3",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8867cd3c-4c08-4753-84fe-a32bce87739a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f251217-419e-4d80-ab64-7fc8bde9a855",
        "cursor": {
          "ref": "e96f37bf-ac52-497c-9318-4d9863aa0222",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6cb65885-9be1-4c3b-ae8a-06f023274bc1"
        },
        "item": {
          "id": "9f251217-419e-4d80-ab64-7fc8bde9a855",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b53760dc-b948-4984-b6db-628b217eab71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "058558d3-ee23-42c1-85ef-ff648aae9064",
        "cursor": {
          "ref": "ce5d4492-ba92-48c0-a734-bbb642cd73e2",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "bf036c8a-3442-4c3b-acd5-e2967f99ac5d"
        },
        "item": {
          "id": "058558d3-ee23-42c1-85ef-ff648aae9064",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b5fc7ea5-ffca-453c-8365-cb5def1ac22c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc33aa71-bac5-4915-93ca-2ec2407f2cd1",
        "cursor": {
          "ref": "7a51a175-8d38-4d13-99ce-10edd7f7a538",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e0ee7cf6-d45d-44da-870d-03f20d09082f"
        },
        "item": {
          "id": "cc33aa71-bac5-4915-93ca-2ec2407f2cd1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d7d90ea3-f073-41d0-a6e5-f2d81fe5d35b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64675ffc-43bc-4263-831a-e703f75b2b21",
        "cursor": {
          "ref": "5e9b8d09-fe62-4cca-8a86-be5df5e67422",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "0427ce48-7e1a-4a0e-9c4f-945deb1952d3"
        },
        "item": {
          "id": "64675ffc-43bc-4263-831a-e703f75b2b21",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0b30fd01-7d93-4cd7-911e-ce4d2d3f7501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0721d16d-b622-4da0-b274-7ed0fcdda866",
        "cursor": {
          "ref": "6afecf37-8c9d-4e06-b502-0682d7819f69",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d48dab15-514a-4607-9998-ebd1ee25d21a"
        },
        "item": {
          "id": "0721d16d-b622-4da0-b274-7ed0fcdda866",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6102d168-e466-46a1-ad0c-c6335b5c486f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9148eb0b-1082-40c1-89e0-9a1d83374b7f",
        "cursor": {
          "ref": "ddcd567c-9915-430d-914c-29796223ad17",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a9a07eaa-6e79-464c-88fb-fa0647642491"
        },
        "item": {
          "id": "9148eb0b-1082-40c1-89e0-9a1d83374b7f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9dc41be0-7487-410f-b662-76d0df6fca67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d63fee-24a0-487e-82c3-39d5e6c6e8be",
        "cursor": {
          "ref": "3d80fb60-a283-4b68-bfd0-57234b35a374",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5e80d8ef-d820-4a19-b1bd-da30eac91313"
        },
        "item": {
          "id": "d9d63fee-24a0-487e-82c3-39d5e6c6e8be",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1bc7001b-7061-4480-9c09-c110a3e58aeb",
          "status": "Created",
          "code": 201,
          "responseTime": 891,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:20)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:20)"
            }
          }
        ]
      },
      {
        "id": "311b4039-a39d-4279-a5c6-2b4cbd5300e1",
        "cursor": {
          "ref": "8d86b6c7-e1a7-43c5-aa7d-dead60d86955",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8f7f4ab2-ccb1-47cb-95e5-ebe9b86eedb8"
        },
        "item": {
          "id": "311b4039-a39d-4279-a5c6-2b4cbd5300e1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3fe994be-11bf-4281-a9e0-42c7fbd6161c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3b3bbe-f933-471c-a67b-79aa6ad2b873",
        "cursor": {
          "ref": "841ff785-9640-41f7-b001-13165a51ab69",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "23267975-cfe6-4deb-bec7-0f40e137209d"
        },
        "item": {
          "id": "ec3b3bbe-f933-471c-a67b-79aa6ad2b873",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1afad148-4158-4b29-8a90-4d09ee9d7374",
          "status": "Created",
          "code": 201,
          "responseTime": 8620,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "9f7f2439-5c88-4ed7-a40d-ebac9b3fef36",
        "cursor": {
          "ref": "1618ed44-9afd-44ef-b268-bef189def935",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "8befbf7f-7987-42b2-905b-e43d24bd4e88"
        },
        "item": {
          "id": "9f7f2439-5c88-4ed7-a40d-ebac9b3fef36",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "97f1f25b-9b0b-4feb-a39c-64d74af92acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f0c8bc-306c-4922-98cd-c189a946c6cd",
        "cursor": {
          "ref": "bec34e30-64e8-42e3-b0d6-5ee345d8e95e",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d338a700-e0fc-4f91-8e27-41b928e0af14"
        },
        "item": {
          "id": "72f0c8bc-306c-4922-98cd-c189a946c6cd",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b3aa83be-82ac-4998-a5d5-339adacca536",
          "status": "Created",
          "code": 201,
          "responseTime": 2994,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:24)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:24)"
            }
          }
        ]
      },
      {
        "id": "dec68cb9-db98-4049-a339-8eaed526c107",
        "cursor": {
          "ref": "4f5e66af-5fc0-4f7c-a6d1-68bf438b6042",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "096a1578-4748-494a-8b8b-f4cf31609549"
        },
        "item": {
          "id": "dec68cb9-db98-4049-a339-8eaed526c107",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c4042b7b-f3dd-4ddf-a186-1d2809291e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07ff576-a055-46bf-8485-4e3ba9032cd0",
        "cursor": {
          "ref": "f6a51f45-b40a-4769-b4cb-69980c1cbcdd",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "fe0ad8ce-7192-4827-b48a-96dafdc2ba4d"
        },
        "item": {
          "id": "b07ff576-a055-46bf-8485-4e3ba9032cd0",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c6c54b83-4a24-4fda-bfd5-cd4a099c5bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3140d650-087e-4839-b179-2150517ddbab",
        "cursor": {
          "ref": "af25f289-b1a2-4e46-af35-355856846be1",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "fe73b400-b207-4e3d-ae8f-eccc1a1e7974"
        },
        "item": {
          "id": "3140d650-087e-4839-b179-2150517ddbab",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1079bb7b-6000-400a-b385-0f94bd038fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39274a47-99d2-4ccd-8e9b-13b7f01fcd3a",
        "cursor": {
          "ref": "498c4217-663d-462e-b257-88b4fb33f2f7",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9cbd22a6-e420-493c-85ee-b0ede0ee3e01"
        },
        "item": {
          "id": "39274a47-99d2-4ccd-8e9b-13b7f01fcd3a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d1a1764e-7945-41ed-9536-ff65213ac2c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d5edd7-51b2-4577-9e50-fd819cf59a16",
        "cursor": {
          "ref": "9ca5a987-6d80-4d1f-90e3-d7dd7d2e8db2",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6a734edf-0cdc-471f-b75c-f58d80cb5576"
        },
        "item": {
          "id": "34d5edd7-51b2-4577-9e50-fd819cf59a16",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c09308aa-58f5-4d6d-9ec4-aaaa49bc8363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e839aa3-110b-41da-af80-2f1b4db3d2b5",
        "cursor": {
          "ref": "29f7879a-b29f-4a92-b7f5-32b8aa784817",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f615d717-1364-4788-b5ea-544f3debc9b4"
        },
        "item": {
          "id": "8e839aa3-110b-41da-af80-2f1b4db3d2b5",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6647e63e-dbe6-4a97-8b36-294fd6c033f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46924ce3-8247-4cee-af63-fa4edd1d7154",
        "cursor": {
          "ref": "bbc43d0c-f481-49a5-92e8-f52b76124cdc",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "513b0692-ec00-41e7-8b7d-966f15a646fa"
        },
        "item": {
          "id": "46924ce3-8247-4cee-af63-fa4edd1d7154",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "de4c8d8c-1bfa-4feb-b5eb-2f5e483d8908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 215,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e06e8f7-e508-4675-ba54-b3b7e6665408",
        "cursor": {
          "ref": "ca93f511-5067-412f-a26f-6f27a12ee55d",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "51c87e32-5152-49ab-886f-29232009de33"
        },
        "item": {
          "id": "4e06e8f7-e508-4675-ba54-b3b7e6665408",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "cc7e1a07-3c55-4d7c-ae9f-673e62c38d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3df19046-ef5d-4ad0-ab4d-d97f4be6fd01",
        "cursor": {
          "ref": "f9d31d86-3a7f-4f4b-adb9-5bf03048a5ee",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c79aaa92-9bf5-4314-a857-597100137453"
        },
        "item": {
          "id": "3df19046-ef5d-4ad0-ab4d-d97f4be6fd01",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "59b37bd7-d9f9-4e95-b84d-4be112cd81eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203b6c83-68bf-4999-bbc8-97949732bdf8",
        "cursor": {
          "ref": "ee26c848-c411-48bb-a24d-26674c090bd8",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "402daedd-87fa-41cd-b328-a3b30f6cc8d4"
        },
        "item": {
          "id": "203b6c83-68bf-4999-bbc8-97949732bdf8",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "7890ed30-7b03-43fe-a04e-98ce58acd4d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798dcb4f-3359-4cac-867c-70b598f81d65",
        "cursor": {
          "ref": "75aa7bae-9b6e-428b-a51e-d89f73fa398c",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "91757440-55da-4d55-9da5-98f1c750bc10"
        },
        "item": {
          "id": "798dcb4f-3359-4cac-867c-70b598f81d65",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a833f2f7-1190-40ac-ad01-118d7b22e0a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaeac19b-85bf-43b9-8306-6a174b6a666c",
        "cursor": {
          "ref": "80428b62-c2b3-4b41-80d1-aa0a37ade908",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a7420e3b-89b4-4acf-8102-899b65ac7aa4"
        },
        "item": {
          "id": "eaeac19b-85bf-43b9-8306-6a174b6a666c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "68570629-deb0-48ff-920f-8633d7d7b2bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18698a85-1e1f-4881-8617-edbb26479685",
        "cursor": {
          "ref": "4d68514c-507f-4066-8783-787ba6807ecf",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7e1ac9d4-cdc5-44fa-9c99-4b3fc6819ec1"
        },
        "item": {
          "id": "18698a85-1e1f-4881-8617-edbb26479685",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "db433ec3-733e-4406-9e67-13f96776a116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6c9ce7-74d8-42e1-9ac4-31121dd63f4e",
        "cursor": {
          "ref": "ae3fe12b-3b69-472e-8841-582d541bb588",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f67acaf4-913a-43d3-bff6-b11dc7826495"
        },
        "item": {
          "id": "cb6c9ce7-74d8-42e1-9ac4-31121dd63f4e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "73107541-88ae-4211-823f-ba2d1812a1ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ef7b0f-a480-4fe6-a496-303a233188f2",
        "cursor": {
          "ref": "d6aaadfe-13e1-4bf7-bc38-d783ba8e573b",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "555a033f-fffc-4743-b3e8-c09801d92400"
        },
        "item": {
          "id": "f2ef7b0f-a480-4fe6-a496-303a233188f2",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6d02b603-da01-4b48-8213-cbcf1d128810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8753f83e-56f4-41bf-8f95-5fa2b6c0be0d",
        "cursor": {
          "ref": "a1ba1a4c-4bb9-47b5-bea5-b54375da34e3",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "bb36a802-d2ed-48a2-a9ea-fbe7fbf02094"
        },
        "item": {
          "id": "8753f83e-56f4-41bf-8f95-5fa2b6c0be0d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5db7d032-3f9c-4f04-b08c-8ad2c65b822a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd87a789-6948-4db4-a087-b9023504cc9a",
        "cursor": {
          "ref": "07721998-c9f2-447b-8359-898c68e9aec7",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d25f7685-bb14-485b-96e0-e5e6762333d6"
        },
        "item": {
          "id": "cd87a789-6948-4db4-a087-b9023504cc9a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "12589dbf-215b-4a02-9fc5-c684a3902cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf6b156-c810-4cb4-8d40-e4ed0183f11d",
        "cursor": {
          "ref": "d1dcea3f-ad44-4222-a0cc-2cf28dd89cfc",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4fe65207-84ea-4f69-8037-bc131f469e83"
        },
        "item": {
          "id": "8bf6b156-c810-4cb4-8d40-e4ed0183f11d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "986bed3a-d54f-420e-ba19-87ebe4866503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9adbfbe2-6f0c-41f0-b560-d9fca06042c1",
        "cursor": {
          "ref": "546dcdd4-f185-4b9b-be32-fc3b304bd7e8",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c76a2238-eb51-45b1-b7c4-efcd2c9e920e"
        },
        "item": {
          "id": "9adbfbe2-6f0c-41f0-b560-d9fca06042c1",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a0e088d1-2dc9-40f1-88f0-8a644ea9bd03",
          "status": "Created",
          "code": 201,
          "responseTime": 2660,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:43)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:43)"
            }
          }
        ]
      },
      {
        "id": "97aec0bd-3513-4b87-93a5-f8bdb66cfc6a",
        "cursor": {
          "ref": "9486fed3-5c9b-4529-8a5b-8caaed1592de",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "771040cc-2374-44e0-abb8-2398721e3e5c"
        },
        "item": {
          "id": "97aec0bd-3513-4b87-93a5-f8bdb66cfc6a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "411b3d14-bbcb-4813-b204-1f349755f423",
          "status": "Created",
          "code": 201,
          "responseTime": 2472,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:44)"
            }
          }
        ]
      },
      {
        "id": "293434c2-fae8-48ab-b6bc-0d7813fdd9f0",
        "cursor": {
          "ref": "8823c17c-af02-4adf-8251-6e04cd7b5963",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "93c8a394-0980-4d59-938d-5d928deb69ac"
        },
        "item": {
          "id": "293434c2-fae8-48ab-b6bc-0d7813fdd9f0",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "8cc06521-0bca-4df6-abd7-b5a0513e163b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ae3718-bd79-420b-951f-8286aca09b68",
        "cursor": {
          "ref": "271137d4-f3eb-403b-bc53-3df60b628411",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "884b7f16-2e9e-4801-985b-57bf6f34b301"
        },
        "item": {
          "id": "25ae3718-bd79-420b-951f-8286aca09b68",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "905ae3c3-24d4-46a5-8d4b-dd30211a0431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21391d40-f205-498a-a353-8a186774062f",
        "cursor": {
          "ref": "1c90055b-93eb-4a6c-af41-cc9f62e60b30",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6c4abc7f-1c73-42b8-a5ee-9af7c2a143fb"
        },
        "item": {
          "id": "21391d40-f205-498a-a353-8a186774062f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8bfd8fb6-2b71-41b1-8e0a-fb0dd015fd7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "314c2dfc-bd2d-4147-8e1d-9bd2e53b9a6d",
        "cursor": {
          "ref": "f4aafa02-68f5-4547-b926-bfeaaf8bbf64",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "51a81575-aecc-4418-8ecd-6d1d67f97670"
        },
        "item": {
          "id": "314c2dfc-bd2d-4147-8e1d-9bd2e53b9a6d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "4507fe42-14d4-4704-b057-50495859e096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2abdb228-db3e-49f1-bb8f-239f363810a5",
        "cursor": {
          "ref": "87ddb5f5-e67e-4f76-8079-50d305a878a2",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9e02abca-56d2-4101-adfd-a685a2b5dbab"
        },
        "item": {
          "id": "2abdb228-db3e-49f1-bb8f-239f363810a5",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0cd26567-eca0-4074-8764-4c56f5bafb37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82667c36-efd3-479c-997b-a667370eb6e5",
        "cursor": {
          "ref": "dee8c1fe-62f1-4519-a7bd-549f6caf7620",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c0a63fbc-6045-4d3e-bfe0-bd2e4ed588fc"
        },
        "item": {
          "id": "82667c36-efd3-479c-997b-a667370eb6e5",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d41ab902-a51c-4da4-b210-07073182db42",
          "status": "Created",
          "code": 201,
          "responseTime": 2608,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:50)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:50)"
            }
          }
        ]
      },
      {
        "id": "b580d506-27ec-4990-ac1f-cd0035eaf8b0",
        "cursor": {
          "ref": "61afd9b4-f7a9-4e4a-8ffc-44c96ac9d135",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "afe9699f-61c2-4f3d-b054-325ca5959159"
        },
        "item": {
          "id": "b580d506-27ec-4990-ac1f-cd0035eaf8b0",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "fec393e8-819b-44e9-b8b6-8b22fb94fb4b",
          "status": "Created",
          "code": 201,
          "responseTime": 3108,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:51)"
            }
          }
        ]
      },
      {
        "id": "b5ee7a8d-3386-4126-833c-5242420d0471",
        "cursor": {
          "ref": "10221049-429c-4f81-b039-1507ddf49400",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "77b379fc-b89e-41bc-a0a7-27e149385ea5"
        },
        "item": {
          "id": "b5ee7a8d-3386-4126-833c-5242420d0471",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3892e0c6-83a9-4c21-8778-856644f1e337",
          "status": "Created",
          "code": 201,
          "responseTime": 2442,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:52)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:52)"
            }
          }
        ]
      },
      {
        "id": "5bcb32e6-3353-4b2d-8d9a-78f6c2fe3172",
        "cursor": {
          "ref": "74fd487e-a915-4211-918d-543e8e079eaf",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7531bdb5-215f-4268-bf8c-da5c4f2ec025"
        },
        "item": {
          "id": "5bcb32e6-3353-4b2d-8d9a-78f6c2fe3172",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "66e8f457-c3cb-4265-88be-7e36a68c1c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 149,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c78869-78d4-42a3-ba76-d8176390c27f",
        "cursor": {
          "ref": "f354c701-d7e3-4edf-b776-79817e9c6501",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8dcf6cea-2dc4-4cfa-b4a1-e08999e31acc"
        },
        "item": {
          "id": "f7c78869-78d4-42a3-ba76-d8176390c27f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1f0ff930-db53-45f9-b411-8e23539804f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559eb446-7f22-4e46-b925-4c261b8351ce",
        "cursor": {
          "ref": "76e6336b-441f-4041-9209-e6fe135a8f45",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d5b9c017-4a96-4ae4-aa32-9f9402ccdfa1"
        },
        "item": {
          "id": "559eb446-7f22-4e46-b925-4c261b8351ce",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8142aa5a-452b-4387-a5bf-602b8d2e678d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 181,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55696b90-0b55-4065-8e85-58e73b4d6f50",
        "cursor": {
          "ref": "2b2f9861-7230-42b3-abae-ab49f6888dac",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "5d2ccebb-b55f-4e56-8d01-830bb2e9170e"
        },
        "item": {
          "id": "55696b90-0b55-4065-8e85-58e73b4d6f50",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "af0decff-0a26-427f-860e-3cedf987c3ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65511b59-9efa-4ba0-9098-657ceb77aa2c",
        "cursor": {
          "ref": "9df9ae83-ee0b-4920-ae5f-725c4d81337e",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9035ddae-ee60-46d1-86eb-e01de9fd1cf6"
        },
        "item": {
          "id": "65511b59-9efa-4ba0-9098-657ceb77aa2c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "37d10737-8f4a-4818-976f-7c970657377b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8049cd31-2421-495f-a61d-7cc3d4945708",
        "cursor": {
          "ref": "8fcd5d2f-1324-4ad2-8bb4-7132962ea09c",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a060c5fa-be3d-4b36-a0de-46e66f7cc10b"
        },
        "item": {
          "id": "8049cd31-2421-495f-a61d-7cc3d4945708",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "08c6e2e8-24a9-42af-91ae-67517d5d63ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b2d8e7-a9bf-4e1e-bad8-515ea641e4b7",
        "cursor": {
          "ref": "c630c4a4-fdf5-4054-8c3d-c1da862c461e",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "fbaf0e9d-4f63-4409-bb2e-97aabe5c1d76"
        },
        "item": {
          "id": "61b2d8e7-a9bf-4e1e-bad8-515ea641e4b7",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "124bf455-72a0-4ff1-a67f-34b492e1467e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b525b024-af48-40f6-8d75-beb3ce9df517",
        "cursor": {
          "ref": "4adaa03f-ad4e-48ed-828a-d1e42d1c9eea",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "df2ac00c-95b5-4bcd-a4de-8a50452ff78a"
        },
        "item": {
          "id": "b525b024-af48-40f6-8d75-beb3ce9df517",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b5c95199-db7c-46ac-b962-e26ae30705fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef203272-20b0-4c2d-917b-b9aec7237fd1",
        "cursor": {
          "ref": "5bc29ef6-c5cb-4459-a29c-33f1980bfe44",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c4b60306-c251-49e7-a0c4-c038cf4fa2d9"
        },
        "item": {
          "id": "ef203272-20b0-4c2d-917b-b9aec7237fd1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "cb4d65d7-47bb-45c9-a47c-0e3b966fd0f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f37e89cf-3940-412d-88cd-0e14b602f5c6",
        "cursor": {
          "ref": "4ed8a613-a168-446d-91ff-4f3d649d4fe6",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f8c8bf44-3152-493a-b841-46aae4553d2b"
        },
        "item": {
          "id": "f37e89cf-3940-412d-88cd-0e14b602f5c6",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "c3e750f8-479f-4ace-a4f8-b72c0ce7e705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ad7f64-5ccf-4e31-a022-cfd7f3ea99fa",
        "cursor": {
          "ref": "a9a18e03-616b-486f-bfd7-226b1b89274e",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "110ecffd-3d02-4bab-985f-a3be050aa79c"
        },
        "item": {
          "id": "b8ad7f64-5ccf-4e31-a022-cfd7f3ea99fa",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ed2f4453-5f20-49b9-8518-bd297b37a90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "499902f9-1cdb-41a2-b223-48ab29cc50ab",
        "cursor": {
          "ref": "a8795764-7a9c-4789-8f6a-5ef24effa0f0",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "4cc0c822-0b91-4fd2-a7b0-82d5cdaaf743"
        },
        "item": {
          "id": "499902f9-1cdb-41a2-b223-48ab29cc50ab",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "14627136-e565-4795-8987-f93dc0f67fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f999a031-5777-4f5b-943b-c275ff81bc6f",
        "cursor": {
          "ref": "5d14de0b-5f91-43dc-b20c-0af5fe7bed9b",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7ad48ec8-4e4e-4421-88aa-f86c9f6abc97"
        },
        "item": {
          "id": "f999a031-5777-4f5b-943b-c275ff81bc6f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1517111d-ed56-437a-989e-f49f8029fe16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51da635-0971-4760-be9e-a034000b5c44",
        "cursor": {
          "ref": "5397d46c-9f73-4206-9425-d70171a76599",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d9888df5-7fa0-47d0-a997-4037f6376471"
        },
        "item": {
          "id": "d51da635-0971-4760-be9e-a034000b5c44",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0fbf2373-36fe-45c4-b46e-f1d5d081ecfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a0c2af-3ccd-41e7-9738-78353dc7a439",
        "cursor": {
          "ref": "c1d92542-702d-4484-9614-ec2d6aab6d20",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7ab6902d-2ae8-4b9e-abef-70596a841675"
        },
        "item": {
          "id": "06a0c2af-3ccd-41e7-9738-78353dc7a439",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e84cb1d2-1cf5-43ad-b3d1-f807ffdbe20c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f83ca13-b6e8-4890-8938-be3a3241d6c6",
        "cursor": {
          "ref": "d8dd5b96-b978-4fc9-aa45-9f02927bbdef",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "da364749-19cd-4664-8134-cadf132ba927"
        },
        "item": {
          "id": "2f83ca13-b6e8-4890-8938-be3a3241d6c6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ee52df0a-0603-4fd9-a2cc-1d2a699aa15f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfbd4e22-0e63-4537-9073-102b00e3c9f5",
        "cursor": {
          "ref": "d833d8a9-6261-480d-a475-6ad6cfba9ff7",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4260ca58-0925-4171-a52d-c62209b167ae"
        },
        "item": {
          "id": "bfbd4e22-0e63-4537-9073-102b00e3c9f5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "af252551-c3ad-4577-9996-3f720a10f2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cabe04d-13ad-40e0-bc92-1bde48817ff6",
        "cursor": {
          "ref": "be9b167b-cba0-48a5-92a6-c5d7bdd43a91",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "441d217f-c45d-4402-ba9d-5754be4bdd0f"
        },
        "item": {
          "id": "9cabe04d-13ad-40e0-bc92-1bde48817ff6",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5e3ae761-c33f-4b2e-b427-10e74d9c3f46",
          "status": "Created",
          "code": 201,
          "responseTime": 2235,
          "responseSize": 978
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:70)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:70)"
            }
          }
        ]
      },
      {
        "id": "7ab3168a-c2a8-4d27-9f92-3765cbc3ca35",
        "cursor": {
          "ref": "f445b3fa-ead4-481a-84c4-9c2a24385988",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "14bf5f4a-9a31-4691-bfde-ada5bcf884e0"
        },
        "item": {
          "id": "7ab3168a-c2a8-4d27-9f92-3765cbc3ca35",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "74095950-70da-44c4-a133-9d1bc3a05850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 153,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4413c0e-4966-4a78-ba80-26e36ceecea3",
        "cursor": {
          "ref": "e613e81b-fc60-48f1-bd2f-31597be04e58",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "112a4f7e-93af-4bf2-8e11-2e5edfb23cf1"
        },
        "item": {
          "id": "e4413c0e-4966-4a78-ba80-26e36ceecea3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ecb7acd7-4a5c-4957-8be7-9dbda0b795bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b02e1e8-12f9-49aa-896c-c0c357b75eb1",
        "cursor": {
          "ref": "2085cf88-068c-47cb-acfa-0b862a740480",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "52775694-18de-4bff-b9f1-7aaa28047ba0"
        },
        "item": {
          "id": "2b02e1e8-12f9-49aa-896c-c0c357b75eb1",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "de0dad6b-7917-4e70-9307-a6a70e994741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b13663eb-3058-4474-9991-70856358c9cc",
        "cursor": {
          "ref": "73589e70-0981-4e2c-807f-634c06a1ac58",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a9bc74de-614c-4c05-8896-92f1e7a57aa0"
        },
        "item": {
          "id": "b13663eb-3058-4474-9991-70856358c9cc",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3ce7e6ca-d654-4be8-99b8-567cedacc727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "790d8bac-5299-4ab1-abd5-b6568b2b5978",
        "cursor": {
          "ref": "5f69c7cd-afad-4904-ac5f-bb0a204b648e",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2cfc7ddd-e241-4449-939c-c440099ea1bd"
        },
        "item": {
          "id": "790d8bac-5299-4ab1-abd5-b6568b2b5978",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0d80f197-62db-4a00-8fd8-adc85aa00036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45382ac2-74f8-4bfc-9133-48bdd702ee89",
        "cursor": {
          "ref": "5a642edc-dee7-49ed-a729-9a3d540c8313",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9959defe-c017-4cf5-8760-512d43b91dfc"
        },
        "item": {
          "id": "45382ac2-74f8-4bfc-9133-48bdd702ee89",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3d5e1954-4fd0-45d4-9836-e370d5d2abb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea822322-997a-4320-b987-880a700e2511",
        "cursor": {
          "ref": "ee1722bd-e2d4-4730-8e4f-14560c7bb746",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "fa0553f1-979c-4730-ad3b-604e4b598995"
        },
        "item": {
          "id": "ea822322-997a-4320-b987-880a700e2511",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "496bfb1e-485f-4c09-8f2a-f3b7016fd18f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19382845-300d-4f18-9478-bb42719267f7",
        "cursor": {
          "ref": "2c45acaf-8914-45d1-b63c-a307dc65f496",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a75b695b-b550-4efa-8e32-2c8528d5ebc9"
        },
        "item": {
          "id": "19382845-300d-4f18-9478-bb42719267f7",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "581b5101-9740-4b65-97d6-8519809161a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3abc8aa7-64a7-492d-8132-9b513f667855",
        "cursor": {
          "ref": "36864c5d-74d8-4df9-bb9a-8364cc7ab74f",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "23071105-865c-416b-99db-514526247d91"
        },
        "item": {
          "id": "3abc8aa7-64a7-492d-8132-9b513f667855",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e4c30709-3553-4ece-a38f-00e14222e107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baced2b5-6aeb-4553-a616-3b2a670b836e",
        "cursor": {
          "ref": "eb181513-e38a-49e1-b580-54e1b548b220",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c38a5c9e-85fc-404b-8173-9151efc1ab4e"
        },
        "item": {
          "id": "baced2b5-6aeb-4553-a616-3b2a670b836e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "201f66f1-d896-471f-84d9-fab4fc01295b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8959b1b-5f3d-4c3a-8649-1626726507fb",
        "cursor": {
          "ref": "200c4623-1a1e-4bfe-b84b-957b57e4bdd6",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "494c530d-2b2d-4537-9b26-41174e62fb59"
        },
        "item": {
          "id": "e8959b1b-5f3d-4c3a-8649-1626726507fb",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "888f96e7-ec32-432d-a700-a9569faf9613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e29a6812-abb3-434b-a0d5-3c65c755cadf",
        "cursor": {
          "ref": "e1f14e2f-202d-4c0c-9d95-7154a555d524",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "92a02a75-98c8-4219-99e2-8527f33cf052"
        },
        "item": {
          "id": "e29a6812-abb3-434b-a0d5-3c65c755cadf",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8c386fc9-a6d4-44b5-b4c5-408044337ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a8742ba-82f7-47d3-94ee-0df905f443c9",
        "cursor": {
          "ref": "2eac32d2-d33e-415e-9a25-2c3073dcacf3",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b866213e-a155-4746-8eb5-42d4a5b871fa"
        },
        "item": {
          "id": "6a8742ba-82f7-47d3-94ee-0df905f443c9",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d4cc9126-af7e-4ff4-8306-bc78514a6e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772dec7f-c84d-4afc-bf69-a71a80d22aa1",
        "cursor": {
          "ref": "d0e3c73f-c28a-424d-9a25-e27fe081b2e9",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6ca3630a-2170-4841-b9d4-ef354fd7dee4"
        },
        "item": {
          "id": "772dec7f-c84d-4afc-bf69-a71a80d22aa1",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "87b38218-7843-49f1-a739-b4647cd903d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bfd4196-a752-443c-a00f-4f7c52e4c9d7",
        "cursor": {
          "ref": "e412a7e6-13a8-46e5-b126-84140ce3994b",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8c3046c3-1784-4ce2-b709-6a9fb9ac31ad"
        },
        "item": {
          "id": "0bfd4196-a752-443c-a00f-4f7c52e4c9d7",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ebd555fa-0115-4ff9-89ca-c456bf70bf3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e0b192-2d49-4491-891f-e5a70ba24402",
        "cursor": {
          "ref": "a6343cfa-a50d-4149-9f4b-82237d5baa8b",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "148f3d16-ab80-448d-aa63-967dc25dd7f8"
        },
        "item": {
          "id": "14e0b192-2d49-4491-891f-e5a70ba24402",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "62af599a-4550-47f9-91d0-6be55502c79e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b878f3f7-c10a-4564-9844-8661811f86c9",
        "cursor": {
          "ref": "d76cfb1d-58be-4bbf-9119-c1491c48ee22",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c26b9299-0d08-4242-a8d5-79932258b2db"
        },
        "item": {
          "id": "b878f3f7-c10a-4564-9844-8661811f86c9",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "443f2073-49e5-4e92-acea-38e4e0ad07aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baea075d-dd6e-4a73-a5b9-8604a98a4c0a",
        "cursor": {
          "ref": "03f0a588-062e-4646-a76d-e69159d8ebbd",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "4294117c-fac0-4b08-b6fe-66b6c511f384"
        },
        "item": {
          "id": "baea075d-dd6e-4a73-a5b9-8604a98a4c0a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d09b994b-c910-4524-8236-005ce6c342a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54d68e2-5277-4769-bc86-3c832295ebc8",
        "cursor": {
          "ref": "12c2e404-67cb-4f07-817d-d5205ccf2529",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e25c44ff-5111-4b1e-95c2-555105509923"
        },
        "item": {
          "id": "d54d68e2-5277-4769-bc86-3c832295ebc8",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "84036c64-2d78-41da-9cf3-f942fa2a2b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75803501-16af-477c-8d4a-999153d55058",
        "cursor": {
          "ref": "4fc7a97a-0c71-49ca-9d92-58e63c0aaa8b",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "796b3c80-c5a0-46d8-bfc8-ece54e10db76"
        },
        "item": {
          "id": "75803501-16af-477c-8d4a-999153d55058",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "9a85a6cd-3626-4ddc-810a-3c9aaf50eb4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "528b8a18-d0d5-4851-ab3a-b21e449d1631",
        "cursor": {
          "ref": "9ff3d058-1ae4-4ebc-821b-30a4cb877d4c",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5f9c59c1-7378-4e2c-b064-7146a847397d"
        },
        "item": {
          "id": "528b8a18-d0d5-4851-ab3a-b21e449d1631",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "69d18b12-d19a-41fa-a7ee-483a92a67d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e900a331-0ae5-4b85-9c57-373165a95627",
        "cursor": {
          "ref": "3f45312b-4bea-4740-824d-fcbaabb8ebd9",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4ad0df75-f28e-4e99-b0e5-474189406086"
        },
        "item": {
          "id": "e900a331-0ae5-4b85-9c57-373165a95627",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "96115e4f-1353-45b6-8c04-8648a7c9168c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "811b84dd-0925-45d6-9992-7c3767afdf29",
        "cursor": {
          "ref": "aeb4d2fe-bed9-4cad-a0b2-ab7f980b304d",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e12a1611-a913-42ee-a013-06485a2c0832"
        },
        "item": {
          "id": "811b84dd-0925-45d6-9992-7c3767afdf29",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "95d9a7c8-8a6f-4cd1-b1b4-2f936b8755a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e87b024-d572-40e2-885e-f7829d6d9748",
        "cursor": {
          "ref": "91f8cdeb-b4ee-4d08-9aa7-3e860ae6d2e1",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c77c2c16-4e3c-4944-88cf-a7246eff83d0"
        },
        "item": {
          "id": "4e87b024-d572-40e2-885e-f7829d6d9748",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "68371546-6e4d-4175-83b1-e9340beff4d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d998de38-c016-44a9-b7e7-84ab7e225aac",
        "cursor": {
          "ref": "54672a26-5198-4143-9846-5322852f8434",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1a28cfad-235f-4169-929f-8a2f455abae7"
        },
        "item": {
          "id": "d998de38-c016-44a9-b7e7-84ab7e225aac",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1b38d6ff-7e7c-4d76-bc17-9d89aca7a9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c6d652-9cc8-4870-a05d-60385f2e0be4",
        "cursor": {
          "ref": "2023cf4a-5ddf-43c0-a821-1d8649a3ee06",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7f772fa8-33e4-4768-8f7b-f73fc68abf00"
        },
        "item": {
          "id": "02c6d652-9cc8-4870-a05d-60385f2e0be4",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d8a4a286-a695-4024-81a7-c7d91620e544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2907e483-2fea-4d41-809f-ee65af93f776",
        "cursor": {
          "ref": "656d7f6b-819d-459c-991a-38115ba141a7",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9c8b11b5-e669-4677-b53d-d70c7c1a7d47"
        },
        "item": {
          "id": "2907e483-2fea-4d41-809f-ee65af93f776",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "246b14d3-8bdc-4db4-a0b0-b29b5cad0e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ca7d9c-7e97-4424-ab86-761ebe8a53c1",
        "cursor": {
          "ref": "46eee1d1-107f-46a7-80cd-e9428d3023f5",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b1b88b4d-258e-47c1-8aa8-9ab906492928"
        },
        "item": {
          "id": "97ca7d9c-7e97-4424-ab86-761ebe8a53c1",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4cb0727f-fb2d-4d4d-aae2-f23398697291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b157cd-a7f9-4640-9190-faccf9a95340",
        "cursor": {
          "ref": "13d9cea8-e010-4a69-9780-befe713e6ace",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "cea7531b-fbf6-42d5-80ed-7044e3558621"
        },
        "item": {
          "id": "80b157cd-a7f9-4640-9190-faccf9a95340",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c1eff2fe-3503-4990-9200-b80496b2adb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7317c57-1ba3-45a8-a7ae-9c9c639087a7",
        "cursor": {
          "ref": "fee1b937-89da-4184-83b4-724d99763941",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "367c9a95-98b0-4f83-8ab1-7ff8ddc29705"
        },
        "item": {
          "id": "d7317c57-1ba3-45a8-a7ae-9c9c639087a7",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b778abb6-0340-402c-8c8a-3e0eb6dcd3a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c33bbd-027f-485f-a4b5-5fea340aadc4",
        "cursor": {
          "ref": "3996c553-12a3-46df-8673-6f1ac16e46a0",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "56978374-b543-4c3a-87f5-12a1923e7975"
        },
        "item": {
          "id": "55c33bbd-027f-485f-a4b5-5fea340aadc4",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ff645289-9961-4c3d-b3ab-6875ac42723c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a11835-632c-4cc1-8bb5-7af3784ab9ff",
        "cursor": {
          "ref": "037de516-9364-494a-ba38-03196619e624",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "02a4382b-14db-4bf7-8592-6d6fadd9437a"
        },
        "item": {
          "id": "83a11835-632c-4cc1-8bb5-7af3784ab9ff",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b257e1d0-bc2d-4fa0-b4de-a707d4ad24c0",
          "status": "Created",
          "code": 201,
          "responseTime": 2304,
          "responseSize": 969
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "e373d85d-6bee-4e06-89f4-a18a7b3d7858",
        "cursor": {
          "ref": "5221ee52-59fd-4d39-a68a-635d1ba194dd",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b12e65a2-33b3-4da5-84d2-1dd4a1bdf7e5"
        },
        "item": {
          "id": "e373d85d-6bee-4e06-89f4-a18a7b3d7858",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5fbda1a5-d7bb-4ff5-a372-98c4a678b4cd",
          "status": "Created",
          "code": 201,
          "responseTime": 4904,
          "responseSize": 985
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d554b834-2925-48dd-9875-ce7a6b7bc333",
        "cursor": {
          "ref": "4f591071-fcd4-4177-ae33-f801702e7b6f",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3581dc10-f9bf-4c2c-a614-f88d3e5cba9d"
        },
        "item": {
          "id": "d554b834-2925-48dd-9875-ce7a6b7bc333",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "70e437d3-9dbf-4ee3-87f1-5c7431d7bb49",
          "status": "Created",
          "code": 201,
          "responseTime": 3481,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d2ac5f-ef81-4faf-a1d3-d63ea3ac9e33",
        "cursor": {
          "ref": "06776369-ab6a-4183-bc00-23668a6bedc7",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "565871e2-c50a-4ff5-a3e3-2f020f19176d"
        },
        "item": {
          "id": "12d2ac5f-ef81-4faf-a1d3-d63ea3ac9e33",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c0967e5f-09a7-447f-8a10-7db0eb1103d3",
          "status": "Created",
          "code": 201,
          "responseTime": 2494,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3963964-4b1c-4592-9e75-622caa4d9953",
        "cursor": {
          "ref": "0014ffce-e3f1-450d-8fae-2d900c2b7dbb",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9fe71ffd-8642-4d61-ad06-599394e87c12"
        },
        "item": {
          "id": "d3963964-4b1c-4592-9e75-622caa4d9953",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e3db0f6f-f963-4b5c-b449-ad2409c4c991",
          "status": "Created",
          "code": 201,
          "responseTime": 3272,
          "responseSize": 969
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2023-07-27T00:39:06Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2023-07-27T00:39:06Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "1d58f520-9179-4d39-b4fa-a9521b20dd8d",
        "cursor": {
          "ref": "390c6183-f93f-4a6a-b443-989186ea9b98",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "5c1318e4-9417-4f4c-ba98-c634719213bb"
        },
        "item": {
          "id": "1d58f520-9179-4d39-b4fa-a9521b20dd8d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6a2978cd-5489-42c5-b672-7e32599377db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "86ceb1a0-2992-4e77-9e1f-dec297152b0a",
        "cursor": {
          "ref": "60e84938-2b08-4652-a29b-fa787fc176ce",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "88aadd7e-dc0d-41d8-9669-21c514bb16d6"
        },
        "item": {
          "id": "86ceb1a0-2992-4e77-9e1f-dec297152b0a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6b5ef6da-2288-4d31-a275-aa920edc16f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0737f1-be59-4fbb-acb2-5d4697863891",
        "cursor": {
          "ref": "6443b969-5a1f-460a-94eb-9836c5f7b744",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "faa414db-233a-4dee-938f-06340fa2af69"
        },
        "item": {
          "id": "1f0737f1-be59-4fbb-acb2-5d4697863891",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "fc949955-be0a-437a-a4cb-116f6818fc40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83dea09b-9d2a-431d-9de4-a8e2d126c3f9",
        "cursor": {
          "ref": "28eb880e-a17b-4e7f-adab-38e3c0aa7381",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "18994663-a0be-4966-b65a-7b63e2903919"
        },
        "item": {
          "id": "83dea09b-9d2a-431d-9de4-a8e2d126c3f9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c718e6ea-8c74-4ff4-873b-10ec8c30797a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fde0337-ce3e-4e2c-a6d4-1866603d4c25",
        "cursor": {
          "ref": "7fb36f4f-680e-4062-905f-787c1857cc1e",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5e1759d6-003e-4a1e-bfb4-0a5f21a359c9"
        },
        "item": {
          "id": "9fde0337-ce3e-4e2c-a6d4-1866603d4c25",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9088efcc-7ac6-4176-8a4a-a7bf2fabc87e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c47b68a-a343-4d9e-8223-99c98c1c6676",
        "cursor": {
          "ref": "eae61d5f-b4af-4feb-92eb-88660e89b3c4",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b2657618-7d04-4f76-982c-954b7b15e5bd"
        },
        "item": {
          "id": "4c47b68a-a343-4d9e-8223-99c98c1c6676",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "51a93612-6234-4461-af29-9409f5a30c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f144b8b-4570-4425-b0e9-c1ae7a272077",
        "cursor": {
          "ref": "31e23944-e4e7-4005-8dc2-7a3927dbea79",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d6e643f9-289a-4206-bcb6-33aa44466351"
        },
        "item": {
          "id": "0f144b8b-4570-4425-b0e9-c1ae7a272077",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8485d519-959b-4303-8925-78875028ad7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d73927-98d7-4ede-86ab-3f18171f3465",
        "cursor": {
          "ref": "fa0b0ce7-468d-4d25-a811-7ed8a2d36f42",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0229ed3c-7dbb-4872-93e6-02eaa92e93c0"
        },
        "item": {
          "id": "f8d73927-98d7-4ede-86ab-3f18171f3465",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "480ed1e2-772e-416e-8050-4ae1763b5421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc6da4e-4420-42ac-8366-25f41a4a7a25",
        "cursor": {
          "ref": "02cd2678-c623-48a1-a92d-7f7e654999d9",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5404475b-f273-41af-90b7-508e74964bb7"
        },
        "item": {
          "id": "fdc6da4e-4420-42ac-8366-25f41a4a7a25",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "511e77f2-9444-4e49-860a-6aab0de3e174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e3320de-1f25-46b1-8f86-45af4a5b654b",
        "cursor": {
          "ref": "6f3fd726-3fec-4786-a448-2592852c36ef",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7292afdd-1e22-4527-bf98-2e7054aee042"
        },
        "item": {
          "id": "8e3320de-1f25-46b1-8f86-45af4a5b654b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "448564e1-d29d-4a2c-b478-86e32a47f011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160ae39b-1994-4d0b-97d1-61539e309d02",
        "cursor": {
          "ref": "ceb10873-6a4e-4df9-b2d3-e2e5f9cab8c9",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "48aef491-109c-4652-9c6b-5a622ff4d217"
        },
        "item": {
          "id": "160ae39b-1994-4d0b-97d1-61539e309d02",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b5bcbefe-198e-49b5-9317-cd2372deb5b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f025ae09-8503-4db1-b408-b1a976da886a",
        "cursor": {
          "ref": "ee0615b9-720a-4476-9839-20b7eb5a0c29",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b92aafd7-be75-4525-b1f3-071644e7b7f5"
        },
        "item": {
          "id": "f025ae09-8503-4db1-b408-b1a976da886a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e2b16ad9-7b7c-4e08-be29-c5b8ee968003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49249f24-93dd-4eae-b4a3-59531a4c4548",
        "cursor": {
          "ref": "dff8e5b7-a4c3-4bdf-b236-a188895f95a8",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "43206511-7dce-48e8-971e-e1175dd0086a"
        },
        "item": {
          "id": "49249f24-93dd-4eae-b4a3-59531a4c4548",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c58a9331-2951-4f03-ad4e-eded4d35ed21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3f0536-0351-4118-bb97-975a95eb9bd5",
        "cursor": {
          "ref": "cf40a057-fe3f-4fd9-b46c-90b15b80fa5d",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d00a06c8-eb74-4d34-8230-aede4aa232f8"
        },
        "item": {
          "id": "5e3f0536-0351-4118-bb97-975a95eb9bd5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bb3b4e67-dfd9-4e08-ac15-1b1a4dba73fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492dd05d-715c-4ff3-a9f5-d2e5c927917f",
        "cursor": {
          "ref": "34c399c4-7248-4c5e-8ccf-800080b74365",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d641a927-defd-441c-a27a-1f10ebe2d56d"
        },
        "item": {
          "id": "492dd05d-715c-4ff3-a9f5-d2e5c927917f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "11f83544-b69f-4d0b-b362-4e343bd26758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19919dfd-ad8e-495f-bbb0-e70811333da6",
        "cursor": {
          "ref": "d432b0b9-3582-4003-9b80-e8bac42c7e9e",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0ecad9e5-f7d8-42af-b49c-b8c5568d4051"
        },
        "item": {
          "id": "19919dfd-ad8e-495f-bbb0-e70811333da6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6f719c13-1ebe-40e1-a95d-8a66605bc11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4d9011d-c9ba-418e-99cb-32dd3b6e7de2",
        "cursor": {
          "ref": "e2569a3d-3375-482b-9e2c-16e6d66cf227",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "96f78648-fb17-43e5-b6e5-4bbbf5e9f4e1"
        },
        "item": {
          "id": "b4d9011d-c9ba-418e-99cb-32dd3b6e7de2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d95d006f-830f-4187-bea5-5cb9557c780f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f46984-94f9-4e26-9044-50c549a7e4a2",
        "cursor": {
          "ref": "078f0da3-5925-47b0-b076-0664f059bc2c",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "91d0f494-b6ff-479a-be33-9b050cd276ea"
        },
        "item": {
          "id": "95f46984-94f9-4e26-9044-50c549a7e4a2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a683225e-f8fa-4572-9688-616055a6dd63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe60cd8b-e013-43aa-970a-c9cd8af06790",
        "cursor": {
          "ref": "1aa74b57-c332-4452-bd59-cf1dfa60b4da",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a2da2a33-24c0-49bc-8b03-113372f83587"
        },
        "item": {
          "id": "fe60cd8b-e013-43aa-970a-c9cd8af06790",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8b9d25b9-a1bd-41b8-9fbd-6f7e7f4288eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c28c53-da06-4816-b10c-af7212ed947a",
        "cursor": {
          "ref": "f6f926b6-d06e-4ffd-beb0-faf48fa08fb0",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "78936eee-5da2-43d2-9f41-c404297a784b"
        },
        "item": {
          "id": "76c28c53-da06-4816-b10c-af7212ed947a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "43115c9c-1658-4bcc-802e-4ad03877d14f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2659e3b6-edc5-4ac2-a53f-6adcc0b7e6b0",
        "cursor": {
          "ref": "21f51cde-df13-4b09-b2a0-a53f7e94f1cc",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f2e13e10-9b2c-49b3-80af-8269ec271d1c"
        },
        "item": {
          "id": "2659e3b6-edc5-4ac2-a53f-6adcc0b7e6b0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c8849ae4-729c-4ff5-9794-0a9c3b6496a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3eff70-aec1-496d-8686-8dc5b54dc663",
        "cursor": {
          "ref": "5b9acc9b-fb8d-44f8-ade4-bdbdde8778e8",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8933e853-427a-4a81-905a-4ba94dd7844e"
        },
        "item": {
          "id": "8a3eff70-aec1-496d-8686-8dc5b54dc663",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "bccef070-0357-4dd1-86e2-502f3cf7519c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60cc3a42-a24d-4f24-967d-f25e1080d6d5",
        "cursor": {
          "ref": "17640395-3b4e-41c6-a6cc-1510b57faa1f",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "eceec3b7-f0be-48c2-8e35-d281328ca4f3"
        },
        "item": {
          "id": "60cc3a42-a24d-4f24-967d-f25e1080d6d5",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "edbcd17d-ef1a-4d71-92f2-8ff252094af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97073715-04b6-473c-8783-55a3b952f336",
        "cursor": {
          "ref": "c8085e0b-333d-4440-9f74-961b34693ba3",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "5071d838-15cc-429e-a7d1-d67c08dcddf5"
        },
        "item": {
          "id": "97073715-04b6-473c-8783-55a3b952f336",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "74541023-cbd7-4a12-9417-2c952fcfd27e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0926537-fe54-4d4f-9783-e555dd9d3813",
        "cursor": {
          "ref": "d3fd3928-1ab4-4e68-a3e9-cc176df1ecf5",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a182a3a8-85e2-400e-a0ca-516bf0de1f3c"
        },
        "item": {
          "id": "d0926537-fe54-4d4f-9783-e555dd9d3813",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f3064726-cea7-4d31-bfbc-e88a11ff6d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f14362-e1d5-477d-bb92-f0fdb50be4bc",
        "cursor": {
          "ref": "8bcbae91-5405-4d83-bb97-d4906a42a52e",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "68c6eabf-1f91-41c6-9451-ce891db945e8"
        },
        "item": {
          "id": "01f14362-e1d5-477d-bb92-f0fdb50be4bc",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5536afc8-8ac4-4d60-a7ee-c2d488912bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88eec1e3-7b4b-4f95-a574-43382ff9ea94",
        "cursor": {
          "ref": "477c35d3-0a54-4539-b402-b9dc759d7949",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1ae24d79-8998-49e2-b9e5-ea522ba92681"
        },
        "item": {
          "id": "88eec1e3-7b4b-4f95-a574-43382ff9ea94",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "910442db-7876-45d7-9fbb-0561136fa900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c2ce83-8139-4d1f-a552-033454051b2f",
        "cursor": {
          "ref": "340dbd10-0592-4d52-ab14-4a90e8018e13",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c9ed3d1a-9467-4fb5-99db-d7825a304d9e"
        },
        "item": {
          "id": "f3c2ce83-8139-4d1f-a552-033454051b2f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e17e74f0-e082-4d42-b434-d559b5f443b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf70ea9-b61d-4a54-a58c-fb76d4b1b630",
        "cursor": {
          "ref": "0f63c6aa-399d-4333-8ed9-107858d425e4",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5d6a9549-91f6-456c-8b00-c250de087d90"
        },
        "item": {
          "id": "fdf70ea9-b61d-4a54-a58c-fb76d4b1b630",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "717089e7-6869-473e-8286-3b7fd045f36c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11b3e4a-de84-4623-b0d7-b5d566bf5df2",
        "cursor": {
          "ref": "05b9327e-15b0-4483-9599-d41115b3fd27",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4e3d334c-fccf-4179-81b4-7189a780639d"
        },
        "item": {
          "id": "b11b3e4a-de84-4623-b0d7-b5d566bf5df2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4ab1c243-0cfd-4287-ac82-916b86572a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08411c0-4b18-4815-8853-05f2a11656e5",
        "cursor": {
          "ref": "0e5fce53-346e-4692-be5a-c2b918efb3b8",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "3da8429f-544d-4a10-965c-acf9bcaf3991"
        },
        "item": {
          "id": "e08411c0-4b18-4815-8853-05f2a11656e5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "07282278-0304-42af-b2e8-7ea2fefe4e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ed6864-d6f5-46f4-ac2c-841ebab814b0",
        "cursor": {
          "ref": "9b326359-1831-4d9d-a2da-aa2c19af4989",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e854ddf8-ee88-44a1-be02-6e4020a38273"
        },
        "item": {
          "id": "18ed6864-d6f5-46f4-ac2c-841ebab814b0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8b4f71d1-292e-43c4-8c93-8e67473959e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24fd5056-e2a2-4d85-a692-13e04f4b942b",
        "cursor": {
          "ref": "72ae4276-c9b4-4dfd-bc93-e131c3ee6ce5",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "702c6262-7d4e-4e58-8303-82b5a4e379f0"
        },
        "item": {
          "id": "24fd5056-e2a2-4d85-a692-13e04f4b942b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "94e59487-113c-44a6-8993-f4cf03c3e430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de49e496-ca3f-4c75-9daf-7f1bada7694e",
        "cursor": {
          "ref": "00db1a58-e46b-4e08-8bea-f9259192817a",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "aedc1889-0970-40d8-84e9-6865b68b2281"
        },
        "item": {
          "id": "de49e496-ca3f-4c75-9daf-7f1bada7694e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0413ba80-c24a-4b8c-a85c-94d54139db9f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5dca88-e612-49fe-a55b-726a76ec3bad",
        "cursor": {
          "ref": "a341cd3b-63e3-4ad4-b029-eb278d7edcd4",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "17b1f118-4e18-4982-acf6-2a5ede6407b4"
        },
        "item": {
          "id": "8c5dca88-e612-49fe-a55b-726a76ec3bad",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f0d24067-d641-47ec-9b70-f78e4e0e054a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7a09c2-7ba4-448b-b28f-d64ddd134464",
        "cursor": {
          "ref": "fb8b0e07-5c4e-45da-9f3f-58b1daced587",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f3c1bee5-72c0-4480-a93f-90146ee03599"
        },
        "item": {
          "id": "ea7a09c2-7ba4-448b-b28f-d64ddd134464",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "97d21176-76f3-4aff-aaf0-d36c8aa00789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3fa567-321a-40b2-9aa3-fb02fe3be5e4",
        "cursor": {
          "ref": "5f5a4bb1-f385-4c0f-9b0a-913e76ab4bef",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "be27541b-0e95-4326-b851-8ce7b0294606"
        },
        "item": {
          "id": "6b3fa567-321a-40b2-9aa3-fb02fe3be5e4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "eae7e579-5d1c-4dfc-8cc9-bec8589ffe1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e9ad653-7b75-4edd-a353-d983002caf2d",
        "cursor": {
          "ref": "b65c3e85-a2fb-4d14-8201-d5c3528c4191",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "92dfb3fe-30cb-47ff-9116-6ff9c716d7e2"
        },
        "item": {
          "id": "8e9ad653-7b75-4edd-a353-d983002caf2d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b39344db-4b15-4f03-baa8-62833c36f391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0af34d-21ab-4f74-83c2-f8d2d95c29aa",
        "cursor": {
          "ref": "36007c40-9cc0-4773-874e-a5fd0063b209",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "09a6d269-43b0-443a-ad15-30ce90642c6b"
        },
        "item": {
          "id": "9b0af34d-21ab-4f74-83c2-f8d2d95c29aa",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "71b872cd-f5a6-4c78-8b6c-ea32432baed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219499b5-5986-40ec-8a74-fce1f08ad2e7",
        "cursor": {
          "ref": "dd7887b7-d636-47fc-8d4b-8ba9ee87913c",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "23b3f739-49fa-4afb-88d2-8113d4ce82b5"
        },
        "item": {
          "id": "219499b5-5986-40ec-8a74-fce1f08ad2e7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "560cbdfe-aee8-4b5c-8d74-8fcbddadad98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad40838a-eddc-4392-98f0-00636995ac7f",
        "cursor": {
          "ref": "a3e6a13d-0172-4783-92d6-1f8945f93dfc",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "59af1eef-e380-4dff-8f40-ec725288a3bb"
        },
        "item": {
          "id": "ad40838a-eddc-4392-98f0-00636995ac7f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "dcd8f2b2-5147-4ece-b384-492acd3e5971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1da23d-eac9-472b-9f53-174ddcaff6e0",
        "cursor": {
          "ref": "2be6005d-1396-46b5-bc1c-009138c6e2cc",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0720fb76-10c5-46ab-ba9b-22881bfe25ff"
        },
        "item": {
          "id": "2a1da23d-eac9-472b-9f53-174ddcaff6e0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e0e2d481-35fa-476c-95be-013dcfbc7c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9acee278-4169-4d72-8d14-3659716fcc7a",
        "cursor": {
          "ref": "c69a7392-5b04-4c8a-98db-0bd29a2003a3",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e2ced054-7afa-49e7-bf8e-bb66de82d5e1"
        },
        "item": {
          "id": "9acee278-4169-4d72-8d14-3659716fcc7a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1cc69965-0455-4cd1-8d93-c0184db73b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c88df0-7736-458a-9f51-64dd22a517d9",
        "cursor": {
          "ref": "a348f4ab-3c1d-4205-b959-4eef842054a2",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b83f65c1-2976-495a-b45c-2a44289c2f6a"
        },
        "item": {
          "id": "e3c88df0-7736-458a-9f51-64dd22a517d9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "23bf9ea9-a2df-4d83-a1a3-a8a1052a3bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5bbc4ac-d8c2-4c11-b256-1fa8aa407765",
        "cursor": {
          "ref": "fa45bdea-6c7d-484e-9102-2f6e1503f291",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1c0a2c5e-abd6-4d9f-9cb1-33d84a0e6f7c"
        },
        "item": {
          "id": "c5bbc4ac-d8c2-4c11-b256-1fa8aa407765",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "02bbbd8d-3198-40a5-82e3-7093023c172a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b876c1a-6c5d-4361-b19b-6d0d83d62d06",
        "cursor": {
          "ref": "7a062ec3-ca4d-4943-ab3a-fdad5f42732f",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "781d04c5-b767-4f30-aa9c-a00838232b3f"
        },
        "item": {
          "id": "6b876c1a-6c5d-4361-b19b-6d0d83d62d06",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6a8269a0-fa55-4e1c-af6c-4c19f4fa563a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccff3328-fdfb-463b-bbf1-57b620415f84",
        "cursor": {
          "ref": "3470ca87-284e-4088-b30b-9f2f144acb01",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b54e0390-bd2a-4796-bb1e-ea825eb04e8c"
        },
        "item": {
          "id": "ccff3328-fdfb-463b-bbf1-57b620415f84",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bc4c9d6f-34a3-48ea-ba5b-a6141093a390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1efde406-fdba-4805-a724-870f58891c8f",
        "cursor": {
          "ref": "1a4c891b-659f-4ef4-9308-84ede43e68e1",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5cc3c0ae-ac27-45b0-b22f-241b6dfe4e20"
        },
        "item": {
          "id": "1efde406-fdba-4805-a724-870f58891c8f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ad4eabb2-1088-480e-91f8-2f9c4eaaa87f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "496b229a-4b9e-4498-a9f5-36e7bb425a58",
        "cursor": {
          "ref": "b77febf9-b557-4c46-a5d3-50d5f9d3f1f1",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e75ac66d-3455-4fcb-8e8d-899b674840fe"
        },
        "item": {
          "id": "496b229a-4b9e-4498-a9f5-36e7bb425a58",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c48b0995-7c15-41fd-8a29-b7755c2b69dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f09e5f-c039-4fd6-ae2e-47f52fcc3e62",
        "cursor": {
          "ref": "c7e9db1e-5b61-4572-ac19-d6fcabfdfc39",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "583392ac-61cd-4e38-bf3c-fe89548cf054"
        },
        "item": {
          "id": "22f09e5f-c039-4fd6-ae2e-47f52fcc3e62",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3842b2fb-2d03-488a-b19f-50b87149fb03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7900e708-f4ee-4562-bdc8-1eefba214186",
        "cursor": {
          "ref": "bbb6b125-4c9b-4201-8961-bf50ec45b369",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "0519b2e2-d06a-402d-bbf9-776cd31f704a"
        },
        "item": {
          "id": "7900e708-f4ee-4562-bdc8-1eefba214186",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a8a4309f-3951-4fa3-be44-85c692bedc15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc3bf10-997a-474f-943c-efbd62846109",
        "cursor": {
          "ref": "dada6f21-483c-4913-ab34-2e87c1613ea3",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8b81cead-efcd-4883-b1e6-e082374ee61f"
        },
        "item": {
          "id": "5bc3bf10-997a-474f-943c-efbd62846109",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "af8f1d7a-c31e-4b68-93e8-ecc6c1c6df80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03ee9c1-6d74-4402-9bc8-688759ecf9d6",
        "cursor": {
          "ref": "7ed5761b-8999-4407-b08e-edc80d9d5382",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "712289bf-90da-417d-b287-4ebf1847c919"
        },
        "item": {
          "id": "f03ee9c1-6d74-4402-9bc8-688759ecf9d6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8b2fba30-3893-4d94-bc71-8561e1df5439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf1e528-a848-4aa6-b52d-bc8e96c06035",
        "cursor": {
          "ref": "2355dd35-34c5-4e5b-88fd-d5dba036c415",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d346f57e-d41c-4a7b-a7bc-c54defb94fb3"
        },
        "item": {
          "id": "caf1e528-a848-4aa6-b52d-bc8e96c06035",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8a4dc208-f83f-41b7-a356-41a795b87e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b57df6a-5907-4922-a6b1-4a9bfff515bf",
        "cursor": {
          "ref": "653cea00-abcc-4e6c-b9aa-d5c9ed0ac00e",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c7cbaff2-d12c-4dbf-a0cb-cf64376defea"
        },
        "item": {
          "id": "7b57df6a-5907-4922-a6b1-4a9bfff515bf",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5488f859-071a-4e9f-924f-f6981213236f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6605e984-3617-4224-9ef0-d7842cc5c870",
        "cursor": {
          "ref": "7ae83413-f354-4c3d-84b8-e73212ea92ce",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1274ac53-f00f-470f-bfde-3120a72a387e"
        },
        "item": {
          "id": "6605e984-3617-4224-9ef0-d7842cc5c870",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6499f5d8-3cc0-4919-bfb8-3e6dbf9acf3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75904d02-50d6-4f44-a81c-1f04a1707233",
        "cursor": {
          "ref": "cb4cebd1-675a-4cb2-a75d-a84698778f79",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "922c453b-36f6-4d8c-8e1e-9df535de163f"
        },
        "item": {
          "id": "75904d02-50d6-4f44-a81c-1f04a1707233",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9d7acf54-ffd8-4150-a36c-7a9f54cffb11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97ff0f4-2b5c-45c5-ae57-028e9acd1e2a",
        "cursor": {
          "ref": "50eb9e3d-9da2-414e-96b5-1e87daa040eb",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "99a40c27-c6f5-4d4e-b110-01f10037aaff"
        },
        "item": {
          "id": "e97ff0f4-2b5c-45c5-ae57-028e9acd1e2a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1c209133-1abf-47ed-aab0-4d91d1b2d401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475c087a-a607-4067-9a14-93fab76d5320",
        "cursor": {
          "ref": "7d1af261-e8f7-41e7-a790-2d5cf18aa6b3",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "42332839-80b1-4d9e-a542-d70329bfbde2"
        },
        "item": {
          "id": "475c087a-a607-4067-9a14-93fab76d5320",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "65125b56-1a99-4f54-9354-5b321363c420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0812fc6-0187-49df-926a-e020cd157429",
        "cursor": {
          "ref": "6f3e350e-a18e-4370-b10d-47d4fa45204e",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d21d0e47-dc0c-4bbe-b86c-67fded51762d"
        },
        "item": {
          "id": "c0812fc6-0187-49df-926a-e020cd157429",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6519ad87-ce67-4d8f-b664-193b09e9be57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a73d5da-3832-4819-bf0e-f3650c6cdc15",
        "cursor": {
          "ref": "35bbb50b-1609-476f-a78c-8407845174c1",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "aaf95d26-275a-46a8-9dc6-9ac2e8f3cc33"
        },
        "item": {
          "id": "4a73d5da-3832-4819-bf0e-f3650c6cdc15",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "03e613e7-fd68-4402-94ea-42873ecd0622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d136703-fe18-4e32-bb75-b22571f60489",
        "cursor": {
          "ref": "2710d3fa-8134-41f6-a263-8fd93e7ecdcd",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "0a2d9993-9bc7-4d79-9285-97a27d432237"
        },
        "item": {
          "id": "9d136703-fe18-4e32-bb75-b22571f60489",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "648fcb79-7530-4830-a97d-85b8170d8f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a75335fb-67b2-4611-90cf-8ffdcf9ac952",
        "cursor": {
          "ref": "02338cde-8215-4544-b111-11d4c13635fe",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e024f60d-de06-4dd4-b173-b9b805860515"
        },
        "item": {
          "id": "a75335fb-67b2-4611-90cf-8ffdcf9ac952",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ba09e0e4-ee31-40e8-80d1-5f6ac5002060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90bd9849-fb63-4b52-81c2-7729d6488397",
        "cursor": {
          "ref": "583c98b1-dfc7-4cb6-8ca4-d573e0c39ee7",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d71ae929-3b9e-4610-be26-4bf4d676566b"
        },
        "item": {
          "id": "90bd9849-fb63-4b52-81c2-7729d6488397",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "cf744d86-2c80-488f-80df-81cda936441c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa1dd44-4e6e-493d-a552-4db94b8d3605",
        "cursor": {
          "ref": "06f4dd63-6d6e-4c9d-8dc6-cd4a9b106591",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "deca835a-aaa8-429e-b637-94ba6ea6d09b"
        },
        "item": {
          "id": "ffa1dd44-4e6e-493d-a552-4db94b8d3605",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cb8b9792-8d1b-4cb2-b1d4-16f3a3a616c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed04922-04f8-4af4-b2b1-77985fe8e9d9",
        "cursor": {
          "ref": "37cca23b-8c07-498e-b59b-2b0b98749fe3",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "938a90c6-1cd3-4a61-8d09-cafd4d047112"
        },
        "item": {
          "id": "aed04922-04f8-4af4-b2b1-77985fe8e9d9",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "af65d63b-c7b2-4344-b479-ad716f07f6c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539a6c80-c555-42a6-86be-215f2c9fccc8",
        "cursor": {
          "ref": "0ec3422a-3ff0-4c07-8910-2ec713e000ab",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e7885bb9-fb5d-42ce-8466-a8dc7f02d50a"
        },
        "item": {
          "id": "539a6c80-c555-42a6-86be-215f2c9fccc8",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "9062caf1-bc88-43a0-bea9-3a88a19aab90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8d1ffa-bd03-4f18-bf78-d36fa87f64ce",
        "cursor": {
          "ref": "506aebff-b145-43de-a2e9-ac84568c642c",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "343904b1-c17d-4c81-9b03-850761951496"
        },
        "item": {
          "id": "ac8d1ffa-bd03-4f18-bf78-d36fa87f64ce",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "f380f7b4-fe8e-4e1f-89e5-78f753469f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9115f129-2b62-476d-8812-563ba4caeee7",
        "cursor": {
          "ref": "3caa4505-1c7d-42b3-b8ee-5cbe55e8a5b5",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "75eb9627-5ff4-4e21-9d2c-56e9edf11a68"
        },
        "item": {
          "id": "9115f129-2b62-476d-8812-563ba4caeee7",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "8ea254b6-dc5c-45b4-be27-673c098584c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b1adf52-c232-44d5-96c5-cf25625b2840",
        "cursor": {
          "ref": "be7ad9cc-8ff9-45d4-ad2d-93dc71acfd4e",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e43cfb45-6c29-4031-90d2-be43c42c3585"
        },
        "item": {
          "id": "6b1adf52-c232-44d5-96c5-cf25625b2840",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "3e93fafb-41b9-4c5c-bab7-b55ec9d4af96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d28186ab-5a75-4dfc-843f-325a72c4c23a",
        "cursor": {
          "ref": "01b88097-f924-4862-a8d6-cc5e9f73075d",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4e8bdcd4-e9c6-437b-8de0-9952bdf7d019"
        },
        "item": {
          "id": "d28186ab-5a75-4dfc-843f-325a72c4c23a",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8d98327a-3d76-4519-8d01-388395b0013c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c5830e-65c9-4535-b969-a47337f9a6b1",
        "cursor": {
          "ref": "c8cc40a7-d5f1-4e6d-bea5-e8c3b05f3590",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a96f463d-06c2-4f13-a8f2-f7c4b471dc62"
        },
        "item": {
          "id": "27c5830e-65c9-4535-b969-a47337f9a6b1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9769536b-cdf1-437c-8b4d-13c8f23345a6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630b56ee-61ef-4db2-8efe-b8f09fe58a96",
        "cursor": {
          "ref": "b4e5fef6-925c-4004-9fe4-dd3b44d4c28b",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "47ddad6c-7b0b-463f-8850-0d9d9be15d89"
        },
        "item": {
          "id": "630b56ee-61ef-4db2-8efe-b8f09fe58a96",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f554951a-a831-489f-a20d-f8230449c191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa9c291-ba52-46a0-b4d3-3316c0fd5c6a",
        "cursor": {
          "ref": "8d2c1325-0da4-4000-ab52-2266193071dd",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b68b82af-d48d-482d-847c-e9b29adb6966"
        },
        "item": {
          "id": "8aa9c291-ba52-46a0-b4d3-3316c0fd5c6a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "bea42a50-a36a-4526-9558-7a84b072fcf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "defeb409-9d56-48c9-972a-118fcc0a9706",
        "cursor": {
          "ref": "7994c2c5-8d82-4142-b8f7-86fa18d1a0a8",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "00e9364b-2855-437e-baf7-97d5010a66ba"
        },
        "item": {
          "id": "defeb409-9d56-48c9-972a-118fcc0a9706",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f4b90712-051b-4497-ac59-14ff5885a5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8eefa8-2ec6-4df9-b2c2-2550e61644ff",
        "cursor": {
          "ref": "9c43fd0e-a459-4c34-ac94-cc34c54bf825",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "13954178-3528-4381-bed5-66a32818c249"
        },
        "item": {
          "id": "de8eefa8-2ec6-4df9-b2c2-2550e61644ff",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d80955e2-e514-4848-a7f1-640bf660890b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067b0635-2d55-4157-948b-22e106abfbe5",
        "cursor": {
          "ref": "97bfeb65-4e9e-4ea2-b43b-74d7eb893461",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e1394e72-fded-42be-820d-0a0eee3230a0"
        },
        "item": {
          "id": "067b0635-2d55-4157-948b-22e106abfbe5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "1e9e1139-d76d-4101-8c16-fb9d79975ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842b3c37-8adc-4288-8d39-3065684b1021",
        "cursor": {
          "ref": "d96492cc-e82b-4e42-ab47-f1773e51d663",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8bdaeed7-37b1-4c01-abd1-dc4cc3b83727"
        },
        "item": {
          "id": "842b3c37-8adc-4288-8d39-3065684b1021",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "30142971-d759-43eb-be65-e4d67563cb5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4e7a22-8737-48e5-9532-92d233d34870",
        "cursor": {
          "ref": "48fd2b05-3c52-45eb-a7c1-afbbfd5fde09",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ce7d4429-c9a2-4cba-a561-596e79c0fe99"
        },
        "item": {
          "id": "1f4e7a22-8737-48e5-9532-92d233d34870",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9d7caee2-43af-4018-a702-67fd1e5027e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a37ee3-91df-4bca-a4d7-30ba7506a1a2",
        "cursor": {
          "ref": "b34f6815-f0bc-41cd-97b5-0471a415f068",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "8492c054-7feb-4ec2-bdcc-2d5b7857fa9f"
        },
        "item": {
          "id": "b1a37ee3-91df-4bca-a4d7-30ba7506a1a2",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "087d511c-dfc6-4e0b-9261-6157e423a6a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2353d5-af5f-4151-bc98-f7ffa7c9bd31",
        "cursor": {
          "ref": "d8af01c3-10b5-4360-bf0d-65c14ecb8a54",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5e7fd0f7-6b6e-4b8c-8f82-361e43f60b98"
        },
        "item": {
          "id": "8b2353d5-af5f-4151-bc98-f7ffa7c9bd31",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "270ce0ad-c484-4f3b-b411-f616c119a7d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7611749-93a4-4a5e-a135-096c4d9ed619",
        "cursor": {
          "ref": "46264576-4d38-4a7a-94da-bfe5440902c2",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4f3a74c3-1da4-4287-be89-b5feeec525cf"
        },
        "item": {
          "id": "d7611749-93a4-4a5e-a135-096c4d9ed619",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4648e5cf-5650-4b04-80ee-94730514630b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754b8dae-9edd-46ee-8a60-a79f45d11159",
        "cursor": {
          "ref": "0bbec243-df7f-43af-93cc-1cf1e5eadb0c",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4a59bdf9-c681-4075-b4aa-681730a11907"
        },
        "item": {
          "id": "754b8dae-9edd-46ee-8a60-a79f45d11159",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f126e167-93d7-44c1-bfb1-9cd5fc381ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088d0a18-3d0e-4ee4-b157-80ab9329723b",
        "cursor": {
          "ref": "f0b4c43d-c6b5-45ac-ae5b-d27345bbed30",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d335df5e-ab5e-45b5-99d3-47f0c55ebf7b"
        },
        "item": {
          "id": "088d0a18-3d0e-4ee4-b157-80ab9329723b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9a6a1b0c-1ca5-416e-8381-1d0f1c24f057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3ecbc7-6489-4bfd-9632-46d9a31bb44a",
        "cursor": {
          "ref": "b824f36c-28b6-45aa-a15a-16ba3aaddd69",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "bdefb5ef-19b9-414c-8f45-b2f05734980b"
        },
        "item": {
          "id": "7f3ecbc7-6489-4bfd-9632-46d9a31bb44a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "fd3db30f-4c53-45ef-9e14-8eb3a6fdc6e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942b11fe-10d5-4d8e-ae20-ba50eb9eb5e5",
        "cursor": {
          "ref": "beb7ba78-28f9-4581-ba73-035cc30a517c",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d634898f-67c0-48e0-adf9-98a372665109"
        },
        "item": {
          "id": "942b11fe-10d5-4d8e-ae20-ba50eb9eb5e5",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "460fe0e7-1eb2-4939-911d-5d2f2cf4fc9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64671ee4-955d-4ed3-a67d-919a808c89aa",
        "cursor": {
          "ref": "f5548465-7c70-4c75-bd14-08dc775470ea",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "39ca68be-911f-403c-9d6e-8facb4b860b8"
        },
        "item": {
          "id": "64671ee4-955d-4ed3-a67d-919a808c89aa",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b3256eee-da81-48ee-86d0-4ea472ee0b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d5e0f1-46c0-408a-904e-0bdd29c13eab",
        "cursor": {
          "ref": "2075b8dd-16e9-4d6e-b986-b285fa2e55d6",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "0f26d7e1-5812-4b13-8f3e-461271815859"
        },
        "item": {
          "id": "49d5e0f1-46c0-408a-904e-0bdd29c13eab",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b68a7439-0b87-4ec5-831a-bba7241bbb65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c496e95-605b-43d9-b9f9-f4d1af5cb7a1",
        "cursor": {
          "ref": "df2ec72f-ac59-4a78-920b-226f1bcbb389",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b5d01f8a-0c92-4fa6-bbbe-a629aec21660"
        },
        "item": {
          "id": "7c496e95-605b-43d9-b9f9-f4d1af5cb7a1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f84b31f0-a652-47a0-ac57-9de6e45dc16d",
          "status": "OK",
          "code": 200,
          "responseTime": 256,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "44e13792-8b34-4186-84a9-d8b8115e8d28",
        "cursor": {
          "ref": "b2b11db4-bbe4-471d-8b4a-07b8d243cf33",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ef726dca-7158-4b26-a0c5-b6baa1681e2e"
        },
        "item": {
          "id": "44e13792-8b34-4186-84a9-d8b8115e8d28",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "575f3b19-60cf-4dff-ac91-5f32d26e07ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0feff5d-faa5-4cbf-bcb0-074a8b87a9c7",
        "cursor": {
          "ref": "44a9e51e-1e43-441e-9bd8-c465d2cb9ee2",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "51efd4f9-6782-4b74-a5a2-81a81f2be272"
        },
        "item": {
          "id": "c0feff5d-faa5-4cbf-bcb0-074a8b87a9c7",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d92e674b-2709-4222-b1c7-f51d4e6c852b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a3a1a2-770e-4b0b-924a-aca3bc2eba13",
        "cursor": {
          "ref": "215d3f1f-ffff-4fef-9fd0-402de227bd67",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b5c8f60a-df2f-4d10-89bd-f7e87c65dcac"
        },
        "item": {
          "id": "05a3a1a2-770e-4b0b-924a-aca3bc2eba13",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1f73f253-5883-4933-b34f-fc6593f12882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61940f1d-ab9f-4881-a7e3-3eddc4336ae7",
        "cursor": {
          "ref": "0a15660a-cf72-497e-be8f-07d0bf790fa9",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a21d26f7-7a6a-43b4-a8ee-b14858cb1895"
        },
        "item": {
          "id": "61940f1d-ab9f-4881-a7e3-3eddc4336ae7",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "908b1805-f93b-4440-9c39-122db0e6851f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd6152ae-ae00-4505-9394-6305e2899c04",
        "cursor": {
          "ref": "48bc222f-01d4-4051-b19d-f2fbeb47a0e7",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "db179b5a-c373-4e85-8f28-4c408ef26635"
        },
        "item": {
          "id": "fd6152ae-ae00-4505-9394-6305e2899c04",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d0ce3d00-d1e2-4f1b-b51c-48be354e3b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a79e39-e72a-4174-908f-3efd39f0d770",
        "cursor": {
          "ref": "b9c73dfc-1c51-46fd-9cba-de100e38819d",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "da2ad845-72a9-4b8a-8bde-00e3266095c4"
        },
        "item": {
          "id": "a1a79e39-e72a-4174-908f-3efd39f0d770",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7067aa69-f78c-4657-bd3e-88751e223e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b169a8d6-8730-47cc-8dad-5b4ec7e3b6f3",
        "cursor": {
          "ref": "ec126940-0109-41b7-a450-394abf78654d",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7287a018-8d8a-4ccc-8085-8ccd76220e91"
        },
        "item": {
          "id": "b169a8d6-8730-47cc-8dad-5b4ec7e3b6f3",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6c9990b4-f625-4efc-b7c1-40d9dabdcfa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa42b936-329f-4b1a-9c27-cb51811a3749",
        "cursor": {
          "ref": "3c29c177-2cd0-4284-8c4e-11fb2382bdc6",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "86968bd9-ddc7-4109-8ac5-a433b82d0e1d"
        },
        "item": {
          "id": "aa42b936-329f-4b1a-9c27-cb51811a3749",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "dd15ff51-db60-47dd-bee1-dd21626d064a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc1f4964-0b2d-4d9e-a0db-7f1eaa6a8857",
        "cursor": {
          "ref": "f86c4343-442a-46a7-95c9-e356b102e3c8",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c77b80b4-9f5b-493e-baa0-a878bfb823a1"
        },
        "item": {
          "id": "dc1f4964-0b2d-4d9e-a0db-7f1eaa6a8857",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e801f8a4-db32-4af4-852f-e7b6f6595fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144dc517-4511-42ab-a3c1-f9f94d5ccbf7",
        "cursor": {
          "ref": "61997e5b-3cf1-4c65-bfe4-e0b0696ae285",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a72c4773-bc62-4eb3-8cde-7a1f1f690f0a"
        },
        "item": {
          "id": "144dc517-4511-42ab-a3c1-f9f94d5ccbf7",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "36d8e73d-bd6f-4a83-9722-b88ad859601a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be6e34c-3dae-4c3f-b696-300aa74f1209",
        "cursor": {
          "ref": "9bf430c3-5e5a-496e-95e3-1b687d81c203",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f36dcc13-a16f-4cbb-8741-daac00248414"
        },
        "item": {
          "id": "9be6e34c-3dae-4c3f-b696-300aa74f1209",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b03ae440-2d30-472c-9ce5-ac2106a4dc95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9325e30e-b806-48c9-9c21-811a9cbd5251",
        "cursor": {
          "ref": "c57811e3-63a9-49fb-ad1b-a472c0d7075a",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d2d1b4dd-2c0d-4064-8f46-0cdf96bc294e"
        },
        "item": {
          "id": "9325e30e-b806-48c9-9c21-811a9cbd5251",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "bd117850-2063-4aac-8853-2c76fe3ba6b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe82f49-4263-475f-9e44-d4c6402271de",
        "cursor": {
          "ref": "8a634db6-ed05-4e79-b19e-7eb2f3a25a21",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "7c15be21-ea68-4cad-b6f3-e827ecd8868e"
        },
        "item": {
          "id": "ffe82f49-4263-475f-9e44-d4c6402271de",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "eaf0d0ef-69b5-4517-9f6f-e672fb2c14a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690f876b-8b6c-4788-bd5d-ee90012e9031",
        "cursor": {
          "ref": "c29d419d-5cd1-4d52-a150-95bf24239491",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "310cb9ce-11e0-4cb4-9339-2ea040170fc5"
        },
        "item": {
          "id": "690f876b-8b6c-4788-bd5d-ee90012e9031",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "612e1ae8-6dd5-4afe-9549-4e5a12d53975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2468b052-9ead-4589-986f-780cfdb6535e",
        "cursor": {
          "ref": "beffd1e7-6338-4bd8-af50-e7b5a0511cda",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "dfb02923-e80a-4483-86d1-0d7d8567a888"
        },
        "item": {
          "id": "2468b052-9ead-4589-986f-780cfdb6535e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "07c8d089-5e79-442f-9737-66284a1a8e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e50dae-4fd1-44e0-8a3e-0017565aac96",
        "cursor": {
          "ref": "d6ac7b29-d9d9-4aec-8adf-4527589eda0f",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "65c10256-038b-4c2b-9997-b3598e618409"
        },
        "item": {
          "id": "b2e50dae-4fd1-44e0-8a3e-0017565aac96",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ad8facc2-1de5-4ef6-a17a-9e7e8fe6bd47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50000341-90f0-4177-bd33-bdd0a64eedd2",
        "cursor": {
          "ref": "b299ca6f-50b8-4269-a124-ec697f6f22e4",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9f4c3ccd-e3d9-409c-80da-2f3bfa45dd9e"
        },
        "item": {
          "id": "50000341-90f0-4177-bd33-bdd0a64eedd2",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e7a699e9-5227-44f7-a5ac-553cbf804eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0dfbb5e-b45a-44b0-920d-b31f6abbb58b",
        "cursor": {
          "ref": "9080f451-702f-43b7-b556-ffabdd6ee17a",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0e77f492-1896-4016-80c0-255886bfb0a6"
        },
        "item": {
          "id": "d0dfbb5e-b45a-44b0-920d-b31f6abbb58b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "add17be7-e431-4c96-878a-04efc9d187f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "607d2902-0cbb-4c9c-bbb3-abd97efd2092",
        "cursor": {
          "ref": "0c4d5ca6-bd6f-4371-a9e9-8bc03b056893",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "27eadd49-a1cd-4888-81aa-b963e50fbf6e"
        },
        "item": {
          "id": "607d2902-0cbb-4c9c-bbb3-abd97efd2092",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "39ce57fb-ba8c-4818-9469-185c8161decb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77641fe5-06ef-4e22-ab66-d79a535e5744",
        "cursor": {
          "ref": "6676704d-4c68-4dbb-9e27-b30e5297d6d1",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6cb9673d-e699-45fa-84b7-726ea1ceff25"
        },
        "item": {
          "id": "77641fe5-06ef-4e22-ab66-d79a535e5744",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "fd19f878-ea8b-4b70-a8e9-d5d7814b0ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1342f2b5-dbe5-479e-8e9b-5c6ae9743e50",
        "cursor": {
          "ref": "d45e4b74-439e-4a7a-acc8-fb726cf76757",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d62b7c11-cd7a-40a2-af43-43b33ed127bd"
        },
        "item": {
          "id": "1342f2b5-dbe5-479e-8e9b-5c6ae9743e50",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "66be316b-4f4a-4e14-9ea1-473203bac842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a02e3f-4cbb-4859-bc73-2bf5e9a3a283",
        "cursor": {
          "ref": "356d6ae7-3cd2-4653-9237-c675df4ea4f8",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "71eb0e82-0366-4bf8-96fa-ec5924545168"
        },
        "item": {
          "id": "96a02e3f-4cbb-4859-bc73-2bf5e9a3a283",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8341ce22-f471-48dc-a0e0-505226e8c8b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9e60d6-06e8-467f-99db-624f0ea8bd5e",
        "cursor": {
          "ref": "27017665-79e9-45ba-92f4-1720e0c27b9c",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "44e52be4-186d-4128-9698-22ff2143c447"
        },
        "item": {
          "id": "8a9e60d6-06e8-467f-99db-624f0ea8bd5e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "bfbfeb5e-28e4-46a6-97a2-459be41c3fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290414aa-c871-4fc4-8234-802254bba67a",
        "cursor": {
          "ref": "7b4de52b-5bc7-46d0-a782-d84cee3e0de8",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2896f13c-f554-4dec-8732-8ad4796784f1"
        },
        "item": {
          "id": "290414aa-c871-4fc4-8234-802254bba67a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "edf33bbe-17e3-4b32-af44-85c8bd7cbcb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd19b757-1f6b-498b-8d33-3b63ac7b8e08",
        "cursor": {
          "ref": "9f6a15ab-ce19-4955-93b1-9b2b99316bc8",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b006a269-818a-445a-a3de-d0dfa40d2d52"
        },
        "item": {
          "id": "bd19b757-1f6b-498b-8d33-3b63ac7b8e08",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "93dd9e35-2651-475a-8b00-5ad7e7ed7fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3494d679-0733-4765-ae3c-22c512ec61ca",
        "cursor": {
          "ref": "c1d28c90-896f-4060-9161-0f6b80a7e403",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7c9027e9-c052-4f4e-bba8-0f4120d887ac"
        },
        "item": {
          "id": "3494d679-0733-4765-ae3c-22c512ec61ca",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3c403761-94ca-4c97-b31a-b9572cfe53ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17687a68-830a-4f0b-b988-cdefe8b7ac38",
        "cursor": {
          "ref": "009a4a49-c1f6-43f6-b87b-68b91bc83cf0",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "86934922-92b2-4215-8a88-7cacf1aaabc0"
        },
        "item": {
          "id": "17687a68-830a-4f0b-b988-cdefe8b7ac38",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "82cf628d-3711-4a9f-a658-f7ced13e12f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "951dd1d3-6eb5-480d-937b-b759605318d4",
        "cursor": {
          "ref": "c8445dd9-142c-4144-a0b5-767d3d5fe672",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6474218e-f375-443c-be60-088235af781d"
        },
        "item": {
          "id": "951dd1d3-6eb5-480d-937b-b759605318d4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9f50f9e2-2d43-4602-909a-6e1ef29edd56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eaa67b1-e8c9-4b46-904c-355fc85b671e",
        "cursor": {
          "ref": "dc59131e-1752-498e-9c37-d2b31a72ac0c",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f5975987-ea58-47e4-bfb0-35563a5c476c"
        },
        "item": {
          "id": "1eaa67b1-e8c9-4b46-904c-355fc85b671e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "55fe907b-f6f1-4f46-b05d-d368ab96c7fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e512e83-ffb0-4acf-9659-8fe19910d503",
        "cursor": {
          "ref": "c17d2273-90a0-4c6a-917d-77fd69e01255",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "89efe4e1-0e58-4196-aed7-af94364f2322"
        },
        "item": {
          "id": "2e512e83-ffb0-4acf-9659-8fe19910d503",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "41b04a37-7843-4c4b-abed-ab5a348888b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23daea7-44bf-4062-abda-ae15accb30e0",
        "cursor": {
          "ref": "f943d5a1-a761-46b4-b5a2-73942c24b947",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "27689582-dd53-45b6-9b74-34b1c2c16e0a"
        },
        "item": {
          "id": "b23daea7-44bf-4062-abda-ae15accb30e0",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d1e3f798-b42f-4c13-bcfb-a93ccb6274a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d36dc74-0909-40f3-a664-d3ca2a25a139",
        "cursor": {
          "ref": "51f14899-933c-459e-9aa8-4b9b5425c2e1",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "02b78467-edd9-4f4d-b30f-1c8268417499"
        },
        "item": {
          "id": "9d36dc74-0909-40f3-a664-d3ca2a25a139",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "29afbdf2-0ede-4e78-9a09-42cf182b4e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bedb97a-0d10-4bd0-8ce1-ae8728d5ea0c",
        "cursor": {
          "ref": "bbddc928-601a-4a76-9ada-bda78e8beffa",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "86b07a18-1226-48f6-8327-0d7b636b4bfb"
        },
        "item": {
          "id": "8bedb97a-0d10-4bd0-8ce1-ae8728d5ea0c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1aec39c7-afb2-4e5c-a247-1b604dcda41b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46d8ee1-90d9-4b4f-9359-db76acc37003",
        "cursor": {
          "ref": "e1d6e011-e31e-428d-9117-88e4e2aa865f",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8895c7f3-56d7-4479-98e3-e7fe8aa203b7"
        },
        "item": {
          "id": "b46d8ee1-90d9-4b4f-9359-db76acc37003",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "280a709c-0c18-4e5b-bf0e-5e453f37b038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be5fc6a-34f9-457e-9160-d6147e288f5c",
        "cursor": {
          "ref": "a69576a8-998a-44f1-9586-8fe3848a0f31",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0267bde4-eaf4-483f-b476-02d8d3d4366b"
        },
        "item": {
          "id": "0be5fc6a-34f9-457e-9160-d6147e288f5c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c03a43b0-7375-4bf1-9b1d-1157a6aad693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f82d9bac-af08-4871-8576-39c3ea289625",
        "cursor": {
          "ref": "877aed73-45fe-46b8-b607-b726f3682e5b",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c547aedb-51e9-41ca-8c8b-0b567518e08b"
        },
        "item": {
          "id": "f82d9bac-af08-4871-8576-39c3ea289625",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "44ec0666-10d4-4775-b1e2-17577d3fe705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c124f3-7f7a-4145-8306-99657e3abe6f",
        "cursor": {
          "ref": "2cbada51-61ed-4987-a69c-b6b851eccd8d",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4586d881-e88e-4f67-a3f8-de0800269d8d"
        },
        "item": {
          "id": "25c124f3-7f7a-4145-8306-99657e3abe6f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "64e73644-8268-496e-8ed7-f6242f73391a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c669ed-fb3f-4552-a96c-bf3312b74aca",
        "cursor": {
          "ref": "9b1a177e-0bc9-4284-9b1e-5c2ae7c6e5c0",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1b9304c5-cc1c-4d01-8d60-6e938faef322"
        },
        "item": {
          "id": "16c669ed-fb3f-4552-a96c-bf3312b74aca",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b50a888f-c915-4a1c-a2ec-487e06e8c2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96a26e3-b5a8-45ad-a9db-864f6ea957b1",
        "cursor": {
          "ref": "e05cfe7b-13d8-4a4b-97d8-b96dcae911a2",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "35e015dd-ad8b-4c37-bdb1-74c4ceffe8a9"
        },
        "item": {
          "id": "f96a26e3-b5a8-45ad-a9db-864f6ea957b1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "eeaf4379-f85c-4e4c-9910-10c95d9f09c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c1d15e-5b63-4ba5-a3fd-377d192b3962",
        "cursor": {
          "ref": "83a5a5ad-b61c-451a-8de0-612e5914fb16",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e14548de-033d-40e1-986c-8ca39afbfb7f"
        },
        "item": {
          "id": "93c1d15e-5b63-4ba5-a3fd-377d192b3962",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "020a4beb-eae8-4fb4-b17f-fac1f795558d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee1b5c9-e509-4a4b-8c96-7483fe7a75cd",
        "cursor": {
          "ref": "4981b97c-36df-4cab-9944-621355c23dcd",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "34bd9e42-03d3-499e-b90e-c040cf9d383b"
        },
        "item": {
          "id": "6ee1b5c9-e509-4a4b-8c96-7483fe7a75cd",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "bf451b12-0f1c-45ab-9971-0ce345c37359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a75762b7-2d0b-42d5-96cc-8a61cdffdf12",
        "cursor": {
          "ref": "f7c957c6-0155-4c27-a670-252aad5d9b0d",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d1af78cb-3b59-4aef-a7f5-a542dd1c3390"
        },
        "item": {
          "id": "a75762b7-2d0b-42d5-96cc-8a61cdffdf12",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d8f2091f-1a3f-4d8d-b86c-f9c992b6ba05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61bd8b96-8425-47f6-bd38-3a35d8cec833",
        "cursor": {
          "ref": "bc86c236-feef-4cf0-ad82-045ff9532433",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "53b28c00-a277-4ee1-8c72-fea2b6704f62"
        },
        "item": {
          "id": "61bd8b96-8425-47f6-bd38-3a35d8cec833",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "66d9a32d-5b85-4b25-8232-5706e353c274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9e107b-f6c7-46d2-a69c-186a0234710a",
        "cursor": {
          "ref": "0c1ab5cd-fb17-4d8b-8cc5-4746f3832cf0",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e0ed9151-f175-41c4-b7cf-af3399d66e54"
        },
        "item": {
          "id": "7a9e107b-f6c7-46d2-a69c-186a0234710a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2eab6ea1-1273-4bf1-88c0-55fbb8c08bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b78c55-57aa-4245-8f14-629cf0623be6",
        "cursor": {
          "ref": "37363b36-989d-453d-b85a-073ec6dc9ca5",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3108ea17-816c-47a5-92ab-98f7d16f6140"
        },
        "item": {
          "id": "65b78c55-57aa-4245-8f14-629cf0623be6",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c3ebd281-1f44-4005-aa05-036ce1848776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7177c1d5-0393-4903-bc06-15740087fb4f",
        "cursor": {
          "ref": "666c307b-202a-4c13-b850-21b5e61ea725",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1a21c117-b42a-4958-b9a1-46c502e2d53c"
        },
        "item": {
          "id": "7177c1d5-0393-4903-bc06-15740087fb4f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1308a820-447c-4245-8bae-b5f991fb7e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78538658-6991-47ae-a78d-2e7da75de799",
        "cursor": {
          "ref": "81f27b78-adc4-4372-8f80-8e81210618c4",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "33eddf57-a5ae-4816-a511-00b5e2d1a13e"
        },
        "item": {
          "id": "78538658-6991-47ae-a78d-2e7da75de799",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0850c1ba-ca17-43c7-8801-fb1d0ddbab38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db857a9-a61c-4b0e-95ae-f6ab50ef2d2f",
        "cursor": {
          "ref": "1c89710e-68fc-485d-8ce1-d93b9d6838a4",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "607394ba-32b9-4e1c-9bc8-cf74df428181"
        },
        "item": {
          "id": "5db857a9-a61c-4b0e-95ae-f6ab50ef2d2f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7143bfd0-cad4-4b4c-bd28-9654c7341d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc3799b-566a-49a0-a276-2b67b2eebd60",
        "cursor": {
          "ref": "a7601981-3b32-4d13-85a1-46245c4aef5b",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "2eb8308f-515c-426e-86a5-00c0a0d2ceb5"
        },
        "item": {
          "id": "0cc3799b-566a-49a0-a276-2b67b2eebd60",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "654a6312-82f5-4f05-87fe-66fc07775843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad51c660-2242-4031-8bdc-09f12d98d9b2",
        "cursor": {
          "ref": "2608c543-c5fa-4b81-83e4-ad02ef0adba9",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f5ee1243-68e1-45ad-874e-e69d2cad3d26"
        },
        "item": {
          "id": "ad51c660-2242-4031-8bdc-09f12d98d9b2",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1ab67c25-fa71-4baf-b817-b8054e42e787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f3887ff-802c-4bef-85f5-a02aec29c84c",
        "cursor": {
          "ref": "cc8408a4-d770-4d5e-b8e5-5a6d9dc74943",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "15d07445-901b-4821-b8b0-27c8d6717deb"
        },
        "item": {
          "id": "6f3887ff-802c-4bef-85f5-a02aec29c84c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "2ee7778e-c20f-4f4d-a269-17f07b96d4b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "258121f1-5782-4dd2-98cb-42b7664b6dbf",
        "cursor": {
          "ref": "14edb333-aa8b-4f7f-b348-c243cd0897f0",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c2182b4a-96d6-4048-9cb6-a18f9df536fd"
        },
        "item": {
          "id": "258121f1-5782-4dd2-98cb-42b7664b6dbf",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5aa6e327-7785-4611-9b7a-b68c028d1fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0d50d1-3da4-4267-84c6-89194eaa7a72",
        "cursor": {
          "ref": "2ff70431-3f5c-478c-a52a-71f79aab101f",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "decf911a-2122-4535-89f8-ad320ba2eb54"
        },
        "item": {
          "id": "5f0d50d1-3da4-4267-84c6-89194eaa7a72",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c82bb999-c685-4f84-af8d-faf778a94071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db871bd3-1d60-407d-bddd-e5d4cf2b9649",
        "cursor": {
          "ref": "d7c206c3-a2d6-458c-ace6-975c97038b55",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "8f3fcc18-5704-4df9-bcdc-bf8a991bc706"
        },
        "item": {
          "id": "db871bd3-1d60-407d-bddd-e5d4cf2b9649",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d142d0b9-928a-4523-86c6-5402e4cfa478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786e3e3a-1cac-47f0-a40b-777d484711e5",
        "cursor": {
          "ref": "084a822d-fd19-4027-8e7d-5a9abc03c91d",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "92a0e74d-c73e-46e5-9b98-36789d9c1342"
        },
        "item": {
          "id": "786e3e3a-1cac-47f0-a40b-777d484711e5",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6f947a65-965d-4795-83b7-05153a16e9cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a793b5-fb75-474a-b25d-ae024f2bf9fc",
        "cursor": {
          "ref": "f360b64d-b397-48f2-bb86-b8c8e82d3d84",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b931bb12-ab8a-4932-b51b-2d393b826147"
        },
        "item": {
          "id": "49a793b5-fb75-474a-b25d-ae024f2bf9fc",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "6ff72bac-dc86-4d7f-ba05-efa9ea46deaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0020707a-7a81-4342-919d-67c0ebb136d3",
        "cursor": {
          "ref": "9f8afab5-7814-4b14-a500-8429f2a11898",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "acda97e3-41d3-41a2-b628-33b6c621ddec"
        },
        "item": {
          "id": "0020707a-7a81-4342-919d-67c0ebb136d3",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9ad49bed-04b5-4a49-8a28-355df2e875aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 144,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8278ddba-8fab-4ace-9511-7b6d26a8eeb7",
        "cursor": {
          "ref": "5e8b555b-abc3-4956-8e32-7b0854a57ad1",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "4aad3203-cdf4-4b0e-ab01-27c374634057"
        },
        "item": {
          "id": "8278ddba-8fab-4ace-9511-7b6d26a8eeb7",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1d17bbbc-599b-43cb-9eab-764737d80038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373c9413-3269-4fe0-9ed6-81b8cfa25923",
        "cursor": {
          "ref": "9b5dc7a6-33e2-41c8-b0ea-f6392fb93370",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "43142d45-bdb4-4af0-8de4-8a30440f29b1"
        },
        "item": {
          "id": "373c9413-3269-4fe0-9ed6-81b8cfa25923",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9eb9acef-edb3-4f80-8c39-004141b81a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c374966-3a20-4922-a169-c6c7984e9640",
        "cursor": {
          "ref": "3a66436f-7012-405a-9f1f-af34fce914ea",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "5050b667-08ae-4711-92e1-93909fa4dbef"
        },
        "item": {
          "id": "3c374966-3a20-4922-a169-c6c7984e9640",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "168665a4-53be-4855-8966-f1fc612457a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47616bb-6623-4ae7-a454-012c7128b9c9",
        "cursor": {
          "ref": "cdfd8171-0eb1-45da-8774-23978e2d6a92",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "82567dc6-c2af-4a14-a2f0-e4c9a6e42206"
        },
        "item": {
          "id": "d47616bb-6623-4ae7-a454-012c7128b9c9",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "5e07250a-5c5a-4962-8111-e66174c3b25b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d86ac9-dbe7-4e2b-a5bb-e7faf5ca8641",
        "cursor": {
          "ref": "a7824d64-64c0-49ea-9acf-e03fd8e9d95c",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "c36f3deb-1443-48a7-94f3-e69d8e44fcdb"
        },
        "item": {
          "id": "68d86ac9-dbe7-4e2b-a5bb-e7faf5ca8641",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "3d9a4874-8387-4327-ac82-73545bc8e4a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5eab90-b322-405d-bd6e-ebe409883512",
        "cursor": {
          "ref": "15702bf9-cef6-48bf-ab3a-ef767dd3806f",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "a6f0ec2c-bb32-428f-bac4-383b457d4fcc"
        },
        "item": {
          "id": "4e5eab90-b322-405d-bd6e-ebe409883512",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "36956e28-f87b-4390-919a-7b9c7b00edbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef41d130-c8e2-4279-aba5-2e375c74cfc4",
        "cursor": {
          "ref": "11fb2242-e8dc-4ca8-936b-17165a23589d",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "0b09a89b-f9bf-4100-b36d-25a626c87a78"
        },
        "item": {
          "id": "ef41d130-c8e2-4279-aba5-2e375c74cfc4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f12744ba-4564-4581-886e-fc1bf0bd01b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2eb269-bbaf-487d-94cd-77a6125adf9b",
        "cursor": {
          "ref": "cd1086b6-458f-4b61-97f9-d380f81e415d",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "feb007fe-975b-4f59-ba57-103f53d4ed42"
        },
        "item": {
          "id": "3a2eb269-bbaf-487d-94cd-77a6125adf9b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8ec56abc-f6c7-4e75-925a-990a742c3eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5688aba-4827-40c7-8d5c-1e83cb0c3e81",
        "cursor": {
          "ref": "48ad9171-00ff-49a7-a99b-929a475a368c",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "7e76303c-eafd-482d-a78d-67f5f5a5c4bb"
        },
        "item": {
          "id": "d5688aba-4827-40c7-8d5c-1e83cb0c3e81",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "22257018-ead2-482d-aa07-1fcda45c54f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c6ead7-c6ec-4c46-ba65-0e2ff2f5fd6c",
        "cursor": {
          "ref": "e5b20a9e-5682-45b2-8079-12820bdff773",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "6bc857d7-ee95-4fa6-b12f-9ac173de8bc8"
        },
        "item": {
          "id": "b3c6ead7-c6ec-4c46-ba65-0e2ff2f5fd6c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "495e5f15-f464-40d4-a600-2ca6764d5122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459b1d5a-366b-4b9c-9e86-b86e21846086",
        "cursor": {
          "ref": "fbc70cb4-3c88-4b5e-874f-5e2acd913914",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "8dd5bdb7-2028-46d7-a4bd-7686b5fd19c8"
        },
        "item": {
          "id": "459b1d5a-366b-4b9c-9e86-b86e21846086",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "3bcda36a-486d-49f9-8a39-e1d2129db44e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f6174f7-d202-43e5-982c-f171c757e313",
        "cursor": {
          "ref": "88e22a7d-fcc3-462d-8f9e-a387d6f5e7b5",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "2eb2b512-d384-4b1b-827e-08292a701de2"
        },
        "item": {
          "id": "0f6174f7-d202-43e5-982c-f171c757e313",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c65ae602-4c44-4243-b9db-a3d196d1e2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a502d4-5176-4934-81b6-06c8b01e87c5",
        "cursor": {
          "ref": "1d254e83-e56e-4b1e-9b31-bf0afeb5769a",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "160a3594-3487-40a3-ba74-ccd1848a7c13"
        },
        "item": {
          "id": "f6a502d4-5176-4934-81b6-06c8b01e87c5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "95843dd7-0a26-4713-9861-086a021c0cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddeae1c6-bdbe-420a-b97e-d839f97da02f",
        "cursor": {
          "ref": "f097f441-026f-4370-8f1d-caabc8152195",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "55a1a1d0-7284-45eb-aae2-29fb0cdfd843"
        },
        "item": {
          "id": "ddeae1c6-bdbe-420a-b97e-d839f97da02f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d6f4c58d-ac2a-45fa-a231-f0b1a692fd4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c9995f1-3376-4da2-a8e2-49d72affc00e",
        "cursor": {
          "ref": "0a1a8a24-ae92-4c4e-819e-3c75d6d9de19",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "78c3d619-e5d6-4a9d-a6ad-b8c6d36f318e"
        },
        "item": {
          "id": "2c9995f1-3376-4da2-a8e2-49d72affc00e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "06a10898-80b9-4c62-87d7-d6e90cbde0df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e74ea45-20df-4c19-b80b-0a0686763684",
        "cursor": {
          "ref": "5af27c30-55b1-4703-a396-c09846e06a4d",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "b40f11c7-62f3-4da6-a359-58596d941fdb"
        },
        "item": {
          "id": "0e74ea45-20df-4c19-b80b-0a0686763684",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "453e79e1-f301-4fde-aadd-983280fa53fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6a0838-73ed-4f00-a970-c91a80eb8199",
        "cursor": {
          "ref": "2b20a456-995b-4234-a525-fca9d3db057d",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "474c2693-3b50-4462-b93b-e3af62c7554d"
        },
        "item": {
          "id": "ef6a0838-73ed-4f00-a970-c91a80eb8199",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e5b0d10d-db18-48df-ba00-73db19753fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f8336c-d9ca-47cc-8dd6-8db908186b47",
        "cursor": {
          "ref": "1966fb8e-7e16-490b-b934-dd9b9836b24f",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "eef95039-08b1-4c25-863d-0e6d9996a120"
        },
        "item": {
          "id": "97f8336c-d9ca-47cc-8dd6-8db908186b47",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2104ef7a-2e4e-4c11-ac74-40fd663fb6da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89617d8c-975c-44d7-a6d6-a076228a3ab6",
        "cursor": {
          "ref": "58d261b9-7692-4557-ad14-4d92c8da5090",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "a4938487-bc7c-4432-99ff-f7b4c66e57e2"
        },
        "item": {
          "id": "89617d8c-975c-44d7-a6d6-a076228a3ab6",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7edd4b7c-e45d-4700-959b-1aba7682dce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a120f590-f8ce-41d5-b84f-83ae628a93e3",
        "cursor": {
          "ref": "4e0a7b78-a68b-4381-ac96-5cd758eefd05",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "08c88be8-9cf9-4e6c-85aa-8c8d51a202bb"
        },
        "item": {
          "id": "a120f590-f8ce-41d5-b84f-83ae628a93e3",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1b22744a-952d-40d9-925c-d0a5f2ef9a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0cd6ef-d6f9-43a6-ba6e-d84e85efd671",
        "cursor": {
          "ref": "3e660ab0-2e02-4cb3-b532-adcfc5cfa5a8",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "bd60c001-889a-40a3-83b7-62bcf7c0535c"
        },
        "item": {
          "id": "0c0cd6ef-d6f9-43a6-ba6e-d84e85efd671",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8447ea24-d39f-47c0-af5a-8d8474fbcddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d7fc69-b2da-405a-a7ab-2b351e8c5ffa",
        "cursor": {
          "ref": "83fa8ec8-f03c-4db1-ad79-934b32c27ef1",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "1c70ab2f-5720-4eff-9d35-d7999bb11945"
        },
        "item": {
          "id": "c5d7fc69-b2da-405a-a7ab-2b351e8c5ffa",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "138f6788-60bf-4570-b662-9920ce6521ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83392ce-41b2-42ad-8603-996c4cbb2609",
        "cursor": {
          "ref": "7060fac5-9be3-44ba-8ee9-ae79e40c2195",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "afc68f75-98e9-405d-b5bd-faf942cf9da4"
        },
        "item": {
          "id": "a83392ce-41b2-42ad-8603-996c4cbb2609",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4e40581b-80c3-437e-9254-0da3afcbf936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4efce2-c538-40f9-8f59-753e82f0f32a",
        "cursor": {
          "ref": "e961f33f-8ef8-42a6-848d-9703479b563a",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "81ee6887-da04-47e2-9c77-5404a4e1c0d1"
        },
        "item": {
          "id": "de4efce2-c538-40f9-8f59-753e82f0f32a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "09b41f9e-4165-4e9c-8007-847e692602b5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c731117d-90c7-4218-a63d-be6e1de08969",
        "cursor": {
          "ref": "93ef2dca-a009-4926-b782-bcd3542b8bda",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "3d653d00-370c-4640-8883-a1066d6606d5"
        },
        "item": {
          "id": "c731117d-90c7-4218-a63d-be6e1de08969",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "84ac24e5-e62e-4d07-9fbb-a25ef19992c0",
          "status": "OK",
          "code": 200,
          "responseTime": 83,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5e1d95-b8df-4c25-9bda-10be21931493",
        "cursor": {
          "ref": "5d63f2bf-127b-4c0e-905c-d72ef195e058",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "5a44fa10-85f3-465f-b646-09a81c7985e3"
        },
        "item": {
          "id": "0e5e1d95-b8df-4c25-9bda-10be21931493",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e4b825ac-2469-40d8-80a6-e13dc4704bce",
          "status": "OK",
          "code": 200,
          "responseTime": 1778,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c166093-f382-43a7-919d-3092ca6ffa48",
        "cursor": {
          "ref": "49190e4c-be12-44dc-b64c-5828eb412388",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "e549a227-e94f-40f2-abc8-50cc86079b17"
        },
        "item": {
          "id": "2c166093-f382-43a7-919d-3092ca6ffa48",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b18b0fdd-755a-415a-a73e-2ac8482c3bf6",
          "status": "OK",
          "code": 200,
          "responseTime": 2343,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b065737b-43cc-4f5b-aba4-7d6b9b962e70",
        "cursor": {
          "ref": "92ded0ef-eaf8-474e-a1bc-dadc03e8d56a",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "37a87cec-a5f8-4524-b728-f81865dbb03f"
        },
        "item": {
          "id": "b065737b-43cc-4f5b-aba4-7d6b9b962e70",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4452c05d-3490-420a-8ee0-9a8140b0f905",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b065737b-43cc-4f5b-aba4-7d6b9b962e70",
        "cursor": {
          "ref": "92ded0ef-eaf8-474e-a1bc-dadc03e8d56a",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "37a87cec-a5f8-4524-b728-f81865dbb03f"
        },
        "item": {
          "id": "b065737b-43cc-4f5b-aba4-7d6b9b962e70",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4452c05d-3490-420a-8ee0-9a8140b0f905",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "127de1ed-2e95-4deb-841d-7e7e817d2f27",
        "cursor": {
          "ref": "a816452b-f971-490d-ab5c-cb913cb7dd6b",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "be7f5793-18c2-4082-b6b9-6f3e32eb2cb9"
        },
        "item": {
          "id": "127de1ed-2e95-4deb-841d-7e7e817d2f27",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "87c878d1-6bcb-4406-b147-0b7afaa5f9b3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ade0a04-63f5-421e-ae09-8967106e236f",
        "cursor": {
          "ref": "85e9f469-9d5c-4423-ae2a-79cf22e79d90",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "1ae2c6ce-30f9-42ba-a60d-4d427d52b83e"
        },
        "item": {
          "id": "7ade0a04-63f5-421e-ae09-8967106e236f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d772d18e-24bf-4348-b251-2f7d6184b9af",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}