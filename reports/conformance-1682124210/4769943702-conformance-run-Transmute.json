{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4e586774-6681-428e-8545-de0209fb8492",
        "name": "Clear Cache",
        "item": [
          {
            "id": "eac64809-f219-4d2a-9c9a-60bdfee294d4",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e4e1e39b-2765-4c66-8792-c02de4c7d8bf",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2ea0bb42-1447-498d-bb7b-ba0ded6134a8"
                }
              }
            ]
          },
          {
            "id": "7b05735b-9f7c-40c0-acfd-4259af6a8945",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "79f9fd91-01b1-46a3-985a-765bd565d289",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b8981196-1b02-45e2-ae25-07202bfc20f2"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "691bf0e3-7fd9-45f8-a4be-780215b1d3bb",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "18199d9c-123c-4084-999c-0650f23583bf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e7069174-3291-43e6-91d2-42466a9c0434",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "40cbcbf8-1683-42aa-a7eb-f5a65fca4436",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d6ae3a80-66ad-436b-a836-db182ab87978"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "881bfa22-816a-440b-9313-4d44b40434ee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d995c76c-df93-4733-bb59-3848d2de2391"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3c1acb89-2ad1-438a-b290-abfcd996653b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "22fa5210-699a-423f-9468-fe58b4ed1255"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9d603e9a-c4fb-47e1-9f5c-3760a205ff84",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ccca7f7c-0c21-40c2-83fc-f793afd58e0c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f99182f1-cc14-404a-b304-c22430b0704a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "11a21cec-f7b1-49e5-8549-f4a5e4b19d76"
            }
          }
        ]
      },
      {
        "id": "ab2f8e2b-6408-44cb-8742-0bd7012a623d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4b3b3ce0-3180-4c71-9777-8c38fa2bed1a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e4085b16-8c0e-4696-a344-b998ba7ba2e0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "be8a4ec0-c858-4405-91b1-320ae60d4798",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb32bb8-9f9a-4c13-b272-5b5d0ce1b35b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7621b8ab-1afb-44c6-836e-bc81e19f73b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb9cf398-4f07-474d-9895-5ab6783f0cf4",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba5c6ea-ad65-422f-bfec-8e53664813f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4630b2a5-72c6-4875-ba1c-abb413bda508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d59bc0d-c4a7-45f3-a2c1-aa4088ce687b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c8a8d3-2b90-4554-8f81-0fa818e43c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad55e8c4-e77a-470c-8798-ff0e848e153f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ee4e065d-5f9d-40f5-9d66-add5332add1b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7e4a7edb-fec8-42e9-a688-e50b23b95788",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b348130d-6718-4292-b24b-d3c91aa77a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "630e756e-4952-40b5-a26b-6be8d460383d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5dc70c-b39f-4277-886f-f8f594e57962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95661837-92a3-410b-bce0-5a08792bb3ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d84008b-f9cf-48be-bfd3-e29daffb923b",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11a27de-0970-473a-8773-f7d172caba1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2e42865-7ebf-4a3c-96fe-12a775a04d77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b9af272-ce23-4c9d-bc25-3321a9240486",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "27a459c0-0056-4e98-a984-c91cf04a0413"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a3b19d2e-b628-448f-bda2-75ed491d7c28",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5ec82755-2e07-4c0b-b2dd-3e19d65eccf2",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6dd85589-99eb-45d3-b31a-0b068535b933",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "8c956f75-1861-4f7c-93ed-a6204edb90bb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a6ba67c3-f520-4ce0-baae-0fe40a539945",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "11c2d414-90cd-413d-884f-03011a1944a9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1f447410-fb2d-4af0-a09c-76a1fddc69f0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b6418adb-6e41-41b7-b587-11be20da1732"
            }
          }
        ]
      },
      {
        "id": "83e6a01b-a415-4bd0-b87c-859d061aa9c4",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "5de88385-62cb-4775-ba73-eb7a8f058bb1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9e37f77d-8578-48ad-8539-1394872e7c32",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "594e6444-990f-4b1a-a900-8613eeea3300",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fff6e51-12e8-4b56-b17b-5ef981a2e3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8cc2224-7398-476e-a935-c645d04b43d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc705d4b-4e79-4612-a232-3a835e82c704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c8a56f2-f3b5-4741-acd3-b83ddf01687b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8e0083-546d-43c1-84f3-737b753094ef",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab7478c-c39e-411f-8dc8-8b5a78ced6e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c859169-66df-4718-b20b-174e12995bd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7300f56-b193-4887-85e9-00095b47a8e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47f31558-ad00-42d9-abd3-e3dfd006cee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7593d4-64de-49cd-9270-1e526596c02f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "093862e2-7487-4f57-9741-9a8f93cc9cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcd7769f-f8bb-4504-a485-84116e78e05f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d0bd71-77fa-42cd-b999-41dec531852c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f594c5cf-3eca-41c6-9891-64edad355e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e045bd07-6566-4d93-a623-06cc01fe6246",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a770f6-8574-46fb-bae2-f64508ef485e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11e5bda0-782f-4832-afcb-3156fafde06a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98cc20d2-316a-45b6-b364-9d43c2366c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60613b98-0b7f-4951-b5c1-1acb605afafb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47611f62-8857-4877-8d7e-389f4058f086",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de04eea3-7798-4f1b-82c4-012bb646b0b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f08689bc-2d67-42da-909c-193a14bdb9a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a854c3-7598-431d-abb8-f1b6c02b10a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5b168ac-b1ad-4aed-bf40-a888bf52ef2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e3573d8-fab5-453a-abfe-d17c60631936",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dbb61ab-b0f6-460d-b37b-7d073b58e8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c6c6649-369e-42a2-b981-04ef196cc1bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9441301b-27cf-4a5c-aed5-7294ca4fee33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83f7bd62-c439-495b-8570-024e2c0c184c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec77ad6-789d-40d8-92ae-dba6cd27a7cd",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3357d655-c7c1-4aa3-8135-47e903997776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1296c22-6215-4322-aa81-ec1b1e04bcbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56c40d7-6bb3-49d0-98ed-60afa4be9347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ae793cc-f278-493d-bfd7-1afacddffff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3f0d41-ba08-484b-bcd0-f10110a09a3d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e145d27-984e-497b-abdc-f037ca3c1014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "622d8382-2ff5-4c6b-b3c3-f31fddd0c19b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c15f360-30d0-4519-b8a1-b474894a08b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b784eb70-557b-4804-ab70-a3a6bc833605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95468cd5-3d15-4830-abeb-8cb74d90fa09",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa23ba82-ff38-4ba1-8946-7cdbe49661ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "480ae8ab-f35a-4f2e-9e87-94e899be3777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e6f56ff-7d83-4594-8c36-4433eb422cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53aa5bf0-b3cf-464c-b2ff-87ed4ce6ffcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c525d4-6c3d-49b3-a026-808576d4d052",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9191972c-44fe-438f-b6d1-b39e7c9a4433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91cc08db-11ac-4f4f-b6bd-05458c60cf91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0993e953-7fb7-41e9-85f4-c4e8e1c12875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08ba61a3-b2b4-465c-b839-3de75d6fdeea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c2c0d8-c048-401a-ae2e-51bb262ad93c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c00780e-14bb-4b85-a748-fbf2fb0dcb84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32462e9f-d4e4-4760-beb3-10c021cc741a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba74ada-1564-4241-b59f-a283125c84b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00c08ea0-3577-4f27-8d9f-3c84ed7f9cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c61732-bb5b-4ec0-a251-acb3a2c97e77",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce5b4318-6bf1-4601-94db-2bdf82f92df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25d48ca9-987e-4907-8059-fc1c66fc0eb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c68ca83-6890-45bd-867d-54fadf421711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06a9bb73-b03d-4631-8830-fcc28e01cf35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7904ea7f-d110-4a51-8cdb-b45a95be1152",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b37de20-00a7-4a6d-ae5a-b95db0f2aea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e86edadb-0996-4d96-9564-08fd5e492fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9267d8-2e99-4229-b540-adb4ca075757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0ed52c4-5daf-4a1f-85ba-799752933448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419effad-e487-4f4e-b6e5-cf3aceeeea7c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "366e4c63-6404-42e8-a923-1dc4a4d7f1c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0c118aa-c226-474f-a0e2-91951a326063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8452992-1089-42c3-b81d-dcf36eb86403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "744c6a26-d780-480b-ae90-5819edc848d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2dd4f4d-7613-4431-87f1-617bffdc9502",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d6402d8-db34-49a8-b60e-74b9acd3d3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad48cca7-67a9-428f-a3a7-c109c16a69e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259e2f8b-a481-4171-be2a-44d101996156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b5b43c9-df99-4630-bae9-76c56bd75f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e93229c3-897a-4005-9cfc-d130ee4fbc60",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c09dc87b-345c-493b-877c-5f6666aace26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e14b276f-0575-49fc-8562-f31424619f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d38a86-560f-4836-af37-a3f6ae58faee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80735164-b47c-491e-817f-eace6df72713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fedffa21-22cc-40d8-b082-a5da68ffd7e0",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1df26d4-e71e-4cd1-a4c3-7591848c87de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffcd10c3-d795-4a88-b7c7-acd15863cce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbab0976-52b1-4320-af72-18acb3089765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b25ff7b-11a7-4f75-9705-f60ef2159864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9427c400-2f24-4d44-84f2-e11c3a04f5a5",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed370f6d-1979-4582-8132-b1d28306a9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aca9cec-9aae-487a-bdad-45faa6286ce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "113dbbba-f5c6-42b1-b6f3-5f086485772c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1d1090c-5bd7-4cfd-859c-17ebf93f85cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc28ea06-52af-4339-abba-f6a8e204d42b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b7ad87-5fcb-433a-9926-72f83b02f198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7a24c93-bf3b-4fe8-a0d6-759db9b95005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cadc67c-c5f6-4ef5-88f3-f592cb04b654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c16402ad-25f8-4734-a3d3-2953b7cbc33f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdd9588f-ea9d-484a-9c2c-8d2c10966040",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45503f5-0041-4d1f-b8af-3654cdc1a323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7743274-42a1-4360-8816-210c494e8e8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d777ff-3c32-4874-bac1-bea6e6d6c86b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0cdb3f8-5e67-4c3d-bebe-d1608e080237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5d494f-7648-4a0d-82d3-3342bc389252",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b297acca-46fc-4ce9-8993-5dcc521835a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4f03c24-a7e9-40d3-9fdb-029e1917ef5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee8f090-c6d7-401c-ac27-ad65108586c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eceac6db-5407-4147-9fb8-569e2a74a7ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c797e86-9a0a-47c9-b66f-0c23b7a4995e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee61d46-237b-4a8c-bb11-cab1cbc7382d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f119001-d557-435e-a198-cc6d5b8a00fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c97d3d-20e6-4139-a9e9-ce5d4ecbaf6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6863593a-97a7-41c8-a099-7df7bc15b9b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c35c8b-05ee-4f19-a1bf-5d351911ffe1",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d7760c-58f3-4120-a618-060961b782f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c16e5305-9450-47db-9972-788e9bed4fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a6e55f-b8ea-4d5d-9343-f02b18178c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "37606dfd-bb43-4eb8-990f-3cbb6c86274c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ccb1c9-6373-483d-9d0a-5949d1258a90",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9841be45-cd23-4cb5-9008-bc96c1b82ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eaadf8c-c625-428b-b993-153cac778371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6942ce56-ce9a-4463-8964-7b772c99c1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "04643c5f-7456-45ff-bb01-61097e454ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5924cfe-20d2-4405-85cd-e3db66b199fd",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "019bd8eb-d1cc-40df-8f50-5e6d9c1f3217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fba98c6-507a-45b4-bc7c-43ee6009c11d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f7a521-2cf9-4fbe-82d9-da5e031288bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "184fd730-be4b-45a5-8947-ce1a0f36456e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6616607c-67cd-4ec8-b9be-7e7a77a3f754",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0d70c4-63f9-4edf-9835-ab65d12a8ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bef26e8-4176-4b3a-8ced-bfab31580c2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15def260-3bf4-4a21-8c8f-41e863ddba2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "673b9de7-0729-4f5d-bbee-c790c5747c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f70284e4-3265-482f-9084-27962805669e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b4e9ac-27e5-4cf0-af6c-d4b73dc3ff6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50bb9742-57ef-4f64-8ca0-89a2dba2c151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3816a3-cdaf-41db-bdf3-ed9a3c235261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "78081a1d-dbd7-46ab-90e6-fb45f98f31b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d52c77d-de08-4dbd-a442-23406763295c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f33ee0-2d62-4e00-9a67-2cf1bc83598f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebf3be0d-5acd-4659-8b07-a5e4bbf6d6d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f01f55-b2e8-4c22-bf74-7d09afdda937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "49f73e4d-63e7-4c5d-b9e9-cd9c2ca6d2e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "281f3798-34b5-49fb-964a-43ef4678c008",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7eddd9-1fe4-420c-ade2-9d53afeb77da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cb054d4-db1b-4e22-bfbc-4f5b0bf4e88f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98b4ed2-b966-41e3-902d-049922cdb41d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfd8accf-a865-48fd-a913-7e9d5387e5d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5059f4a6-bdfc-40f5-ba41-e37a52947bf5",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc8cf04-f6d2-43be-ab09-8bcdfc21aa1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ac71ae5-1a45-42b9-ba90-42ddaaa5cd81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e75763-e80b-4119-9629-fce60203954d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6574a0c3-b76f-4adb-9900-02bae77aec5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e18a2bdf-a676-45cd-b947-240644e9786b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5869639-2c85-4a2d-8f0d-fdf8f449801b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4faa48ad-3c75-4895-a7c9-6eac82bff418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f490bef4-8207-404d-8c02-260a26238175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5cd3041-c06c-4269-992f-f7bb6d3c3639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98113c2e-8016-4817-bb1c-b79f07bcd9ba",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f3335a-bdcb-4259-ad2c-67ec3148504f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a77ea779-3adc-4e28-8597-62113e48a261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c375b48-c73d-4c83-9f9a-689aa85816d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b42e7910-f4b2-4038-95c0-3488b8cc41f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddafb663-d43c-4129-b63a-8b012e219f3b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fdb1038-024d-41f2-9718-74e91897e688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17abb45c-d35a-4959-b1bd-edaef87cfb0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726c3fbc-f97c-44a8-8b3f-4f4ba20a0e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f97e978-0c95-467d-b4a2-fe8d81ae0fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1013a3-828c-4594-a7d0-d3f2dbd4e9ab",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f0ae969-658f-4c37-9cd0-ae971ffa2e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4be55d20-8371-43ab-b5e6-4d411b1fc767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4129a5e3-0f66-45a2-bafc-9d93f8a039ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "827cfc20-2fd1-4d51-b223-095f08e3d5a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5ecba88-c07b-457d-8af9-403187e3c09a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1fc5d1-6ce4-401a-b1fe-f84a982b3d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a207f605-4569-49f2-8255-0d5d056d8fa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c45f151-c45b-427d-807a-cf223cbcd2ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6a59e539-5dd2-43fc-86bb-6aa5488df78d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0fed524-c360-4838-88c6-50abc24be15b",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7fdc038-e893-40ff-9087-9efb856d2013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8cdcf47-1de8-4531-9a89-784dfd61a6e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a219d1-d8e8-419e-bf56-29962090f1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "048620ac-f095-497e-a04b-46cf0ec6b38a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d068dcf8-f92d-47b5-96b9-cce82b7a49ad",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1551af1-f6d1-4c3b-a7cf-00db4435075a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac76658c-b537-420e-bf57-d378d964da6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa77044-ec4b-4432-9189-6b8a36843f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c334339-4c0e-4ea4-a689-ce87ce0116de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba0ef0bf-c8f7-4e69-802f-3ad7910ae1db",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8685ac-ee7a-45ce-bfc1-4fe2d7ff99a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b913e048-f37b-42ca-8466-df93abd14f98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "097545b1-a75c-4603-b660-52cb0b199e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "275a7224-2137-487e-9bfb-19cfb71bda9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba841c25-b07c-4b42-9270-9e80db2783c0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c274030-3508-4f12-878f-e8b3b90350c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4904768f-679b-4ed2-84c8-7c49bf8b0fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d07f6053-35de-421c-8f41-99ebed53fb33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "27387e60-bb4c-4fad-a213-a92cdc5cf5d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "322f2d3d-def3-49c0-a640-7c68b8ff8d2c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3d0063-1868-4028-9e8b-4f1cdb3792bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b3c7e0b-f167-4449-9c69-49906ba57ac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97be9de9-197f-41fb-b4cf-56e43b849b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1744b823-35f1-4ab3-9dd3-da8e7e48bc1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c5906a-295c-4a20-bce1-7bf093423e19",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d108bd-5745-4d76-983f-00da7078f806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d311c4b3-ac5c-4a03-9376-8a90cc30ee2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3cc671f-6f63-461c-983e-fe2bebb63eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3266236f-71aa-4fa2-a3b3-12cfc1dfda6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd097c00-2eb7-4311-9f7e-cb17b449c879",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d79976-7c7f-4dda-8880-837e65ee75d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00e6a082-d5bd-4d80-b75c-1ae46b9a12fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a313cd-df77-44e2-908a-39b418c264d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b7087e29-6cf5-459d-b0dd-4ab897ba88da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd6807ed-a4ec-463b-8975-206d9d8c3a4a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03b1180-f1ec-40e0-81b0-e706dd3d1de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0958f933-914a-453d-96d1-0d0c5c930865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0009dd7-6391-4e97-840f-0c617f5da65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2855bfe8-e8cc-454b-ad49-ec75fca121be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74e3314e-9fb7-42f1-8d46-7931e2e558c6",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb167a82-4c83-4ae8-8f6b-634f21216bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6101eb7-2554-4276-b438-fa9f84f2e0ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9374ec59-72d1-47b5-bf95-590ed312a34d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c09ce09d-edd3-4cbc-b6c6-583e745531ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6a2d66-75cb-4858-a563-494ad84d1e50",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7239a5-1711-4206-b964-c9925b20449f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "008dbbde-ec1d-41b8-8418-762b94b05f26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a9f1ac3-682e-41cb-aef5-b60dcc07a14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a358c50-58bc-47a4-899e-59eeec7bbc97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de543a1-01ce-4aa7-b261-f976e5b9245f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cfda4ea-fb06-4a05-a93f-069b8ca066ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec043b3b-7e2b-4508-81d3-c0d80e5b41f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f82f2d-c833-46ab-81d4-2736a597d5c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "696c1952-e945-4c0b-9d09-6f0e0f3c9499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e62a237b-5eb7-4a30-8598-9f7c5cb9f2ea",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36509366-2a91-4ebf-8dba-c88eb8ef5748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49255a48-e931-4afc-86ca-f2b64019d028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a20e5734-342f-4fa0-85c7-47153cf38a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72d34f80-f185-4c66-baeb-d97e23e35310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e727561-8c45-4616-bff1-3844b4352e8c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99538db-2c44-4ecf-8188-2315ab2f6a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73772d50-6f02-438e-bd31-dcbc760a18e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f4ac73-7621-4278-bf29-332e4d949cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8e3fe98-2bab-43ba-bb35-0db6651e6e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd961a9-822f-4932-a40b-8938fda72ebe",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af7500f-9674-402a-8581-5ec6b90c2647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1cefb02-f4b1-4fb3-bd93-56ec5a4b325a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a35d42-6232-4407-a0f9-914a2472264c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b4c8421-b908-46c7-9c1e-c5deac51783a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db01a14b-6124-474f-a077-1cdcf89b3c8b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5baab0-9413-4e96-a002-a8d30c9ae656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b204db09-c904-487f-9825-c3c4932a2009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6114868-5ab1-40f7-a4fb-7e29c07faad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "88d8bec9-162e-4477-a6fc-ffddb7c0a5ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd907f23-a8e4-42c3-8a6b-df85f4697855",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92786a7-1d09-4a7d-8e01-d3a96c358273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fec228b-d241-427d-af4c-defe8c18fb97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a572ce7-56da-4588-b9ea-4902ae563828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c2191e6-25d1-40a2-8b86-3c71e2836722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c21a9d0-0f55-449b-a572-baeedacf114b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf1c851-f8e1-433f-a4be-f095f49a8f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea45b7e0-e152-4644-877f-e5dd7ff56f86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e7d59b3-112f-4134-82ee-94d8a008e6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fca39189-98fe-42db-81cb-1514ea85d211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15f00af-e887-4e8f-ac57-ee7143320470",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2cc030d-67ce-4c6e-80cb-8708b5b52758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4976d0a8-1b6a-49c6-b80d-13c66f785e2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c74e0f-78d3-45d3-863d-43eb3770dd10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "94d1d4d2-6805-4719-a174-02676ac5130d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81096b7c-30c2-4f34-8d0d-4f6fb2b72c7d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d16b63-fd38-4a5b-8e42-1161f4b408e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "149d7e59-41c8-4e58-8931-6a13d3466bd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf8ce77-0a91-4d7f-9ea2-1e71e592198d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "89e89def-65c3-49d5-9327-b6385fb29a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1182d42-85f8-48a7-8b2f-7c82989eb183",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d6ae5e2-9d04-42ff-9f66-f00f329389cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20e067d4-cdc4-4ba0-9171-16a038bcfe39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c296b534-0d37-40f0-85d7-7aa215d5eaeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9dda69f8-f9a7-4909-9f3a-c70982ce994a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0aa707e-d94a-437f-944c-9dbb99bdfb40",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cda601b-1a03-469c-a408-c4c6e3199d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c381112b-a458-4357-ae77-35c8d4eca1cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2474e4ca-9cf8-44bb-b5b7-d76a2daa8376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "311c9e76-b608-46f0-9814-e57627c2195a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f1d69c-3946-49ae-9540-23580ab4326a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36a7831-e7a1-49b2-91d1-ecfab4617320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "317e34ce-aada-40d2-9d4a-d0b7dbeac5b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e135e65-2c16-4b20-a545-66f0a46f26c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "15c7aaf4-750d-4bc2-b60b-9796ab1d4316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "470f03ae-7245-4e01-9236-dce64aa6462d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbcd3ce9-f337-43e0-a4ad-e28dd21ad9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "171da650-212d-4633-b411-7b4334fb49f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675d962c-44ce-47a6-9347-daa81139edcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1b830a9-3db9-402e-bce4-7452eda1f018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48348bd-bc87-4275-a823-9f4d5b2f496b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "211f447d-67b6-4734-83e6-837c66749747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2df40a0e-c53e-4551-ae67-fd43d1ea11d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "053b1593-69f4-4f98-8d15-8a58ecdbbe35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3a6b80f-9e19-4b64-8beb-97b7cf230c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b832af0-37b0-4e5e-bb53-2bbe42568e64",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ada4f6-8bb2-44c5-9e8b-7affc18c4a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7240132b-7c73-4d7e-9247-b3e912474b21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ae5a0a-f172-4062-bca3-64d9ef2f3f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0384d7f0-5665-491c-8668-31ea8379d1a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "624b89b8-c3a5-446e-83c6-aa741d382f0e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7483155-72db-421b-a5ff-59ad247e76bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4656f4dd-5e79-4956-8f92-27846e06534a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0728111c-29f3-4629-84c1-ef7e6beb4cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b640f1c-a2a8-447f-94b6-aa2ef44860db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53bb12af-9289-4d34-a89c-8c7aafe0167b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "513ba4f2-b51a-48b7-b671-3bf387a3057e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3d1bf93-b689-4922-9d3c-4d7e8b741124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9000153b-8399-4640-ab63-6278e43c60ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "aed01bc8-c26c-4d4d-ab25-adea1e04e7ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1a06c7-c3f2-4202-8d46-bd5f17b56ba1",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf9fe6e-d7e2-4624-8552-2b879d7439b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7888f429-41e4-40d6-b80b-232530e86506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d8ad4df-25e7-4bad-8893-b1a84e0f2ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e8fab4c-3c4e-44f0-bf86-2168c6bc92aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "902bf977-761b-4a3d-8427-ce1c0391cae2",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b070b286-74d8-4c12-aa5b-d199e33fd92f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f78f9bd4-df89-4593-a513-beae7486ec30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0a6b32-592a-41c8-9f1e-abcf3cea6922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d7ed8e8-f6eb-4af3-9d4f-de50d7d214f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "395b5c3b-94b4-4787-9c89-83397c217276",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d12aac-af98-49a9-8b2b-a008682bf8a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccb168a7-d9ec-4b91-b708-f0df055f9dc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be64805a-969a-4a3c-99a1-41b12c9400d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "90c2b974-e05e-4328-a164-c7ea9ff3ea58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862b5bb8-5405-40c3-bce0-f8c2ca153cda",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "accfad54-e228-4e76-b0db-26911d8803d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84644751-914f-4b6f-954e-fd0f44ae4c55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56badfbf-a2f6-4f49-aebd-9a4832a81980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7684327-e8b1-459e-803c-edffe5d4bf16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067fc694-bba3-4907-8ff5-4cb19031e6bc",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c69edaa-eb8a-46c5-8ccc-dcfb3c32b544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83bb8980-66d1-40bf-9073-48b91bcdfda8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc28bf42-8e12-468d-b320-93c435d78cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f6bfa1c2-6409-4e1d-b735-563502547c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e9ed4c1-006a-4282-81c5-8cbb19dd4e58",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f417624-aaf8-4304-97da-84bbd30f4d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc41a612-5cbf-4b1f-a59e-c37fdec6f072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb506a6-efe4-4bde-ae5e-50a6e256a191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4750bd3-7534-4bcb-b106-8c12467c3e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d457ed-41c7-411d-819b-242faafc0ca6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1eb010b-9eac-4c68-9a35-953f05ce4843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82632932-138d-4fdd-9e6c-d325bd7726d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51aea55c-5d32-4d73-aab6-2a38b0aa65c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "88a16b11-b68e-4f2b-8033-82af8ffd8abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559e5269-c6d8-4813-adbb-891858f8fa5e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "283378f6-73c2-4381-9fbb-7845bdc3af57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95c99d69-d766-4a2c-a26f-751936b6a00f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09307e41-4259-4c94-848a-e6d0e9e28188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "69d8d163-d083-466f-a95d-d13b69074db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d7360b-e8df-4ccf-bdd1-8fea4b4de182",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3065f82-d2a9-49cc-bdc6-c289efeabca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bff9e9d-15d5-4d7f-94ea-bc63fe7b90de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a5d998a-ae5b-43fc-be2d-eb3fcccafb1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cad5999a-f310-4f16-80d6-d7218936b771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0389370-4696-4d5d-8320-d0106fb7fc2c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0503cfdc-b537-43f5-9617-74e67459a863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8794a4b5-d153-46e2-a2b8-8c126f579e9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5717527-e9f7-417d-9826-4430253831e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcde1e9f-0bc6-4ac4-9f0a-78d95a9a1898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5cfd49-208e-4008-b006-0c93d86a7553",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab77424-cfa5-4e5d-8914-635b4d2f1e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6d67c4a-7d09-48d0-8677-28eac08b7d71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "484db2a5-094e-4ec9-ab34-c1102a2b0daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6c786e9-009a-4a8c-8e2a-8d88039acf4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b544bb6f-8d01-4ea8-bb3f-7f312dddbbca",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de68ed0b-84eb-472e-9b6b-5a6db891cac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82d2974b-f04a-4ef1-ad3b-9851f2a38e4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e1c658-4d4b-4297-91aa-d31680345d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dedac894-006d-4cfb-91d6-de799f891a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d238d4d-6bca-4970-af51-c3c458ca0468",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "920109d4-26eb-44aa-b5fa-f16d72ba5c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4822383-527c-48db-8996-ddd96b23b6ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbdb9173-d3b1-479f-a63a-45d2ecd2020c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bb5b7e7-19c6-4b17-b68e-5c6355e8058e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c96d7b66-0604-4616-b37a-d55e9320e6a4",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d395806d-e122-467f-b939-decf36d4c53b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31bb5c5e-d344-4ca8-8313-916cf234025d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59253861-e218-49fc-aee1-d3f41b81e2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "efcd36e0-732a-4f22-b4ab-f8a2768f2812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f0437c-9651-49b9-84b6-52f384c18f56",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c66fc5-a270-4f73-b42d-4ba957ac6f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47272f24-8458-4f3d-952f-02a754a6e1a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89f0d355-3113-4e4a-823a-4de9d1c3df68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "adf49655-b26d-4af1-a091-664dce9450e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "221b1738-b789-423a-b40f-0ac01967383c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "611d64fe-c45f-49e5-b77a-13206a164af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8740995e-a896-48bc-9a06-77525731a52a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00751ee2-10b8-40b1-9a3c-2c5c15feecb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47e7b9f0-11c1-4f5a-93a7-753c43005187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5e4bd5-2061-42b9-94fd-2f0371b62303",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1570f1b-0058-4c49-94eb-477e104a7247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10de4e10-9faf-4237-895c-9b617ed2969d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20757579-cdbe-4a17-9bbf-6edc53ca862f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "beecdc2c-b12f-4998-9c80-cd01f9e3373b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3835cdbe-2ef3-42bd-857c-85747f3168bb",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5220bf2d-3002-49f2-9949-134a63ca9c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ce3e4ef-46a3-4aa6-b5dc-4b7ea43297e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98332a78-53e3-499d-8213-502df0e08cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "94c02ef1-a769-440a-a2fb-c74eb9dbf6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb3dd227-6e97-47f0-b702-53dd30f326cb",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a881ba08-c1cd-40f5-a68f-0ca5b4dfa753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aefc455e-8670-46c9-b724-c1645e6c7d61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00cadf5b-5dae-49cb-8d6c-351a5de16dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7baa0335-9b8b-4472-b9e3-5179f8329ee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "618f8a80-0058-4b17-9dcd-8fd348fe5fa0",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "067e8b80-0f0b-4f53-ac95-c7b262250a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad921bc4-e0b6-4a17-b536-6c1e1994caee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1816c658-5142-4e5c-8662-5b689d6d3712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee35b8d8-7713-4355-ab62-0bb0d0bee823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7c3915-2c02-468b-87d5-0f148932c536",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "515e7d55-2f8b-4909-bf17-5ce6dadf8a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e0a6a8e-0d5d-4ba1-8254-5c020e594c66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "702a63f7-ee12-4549-a98a-b7662f7336d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a2c848a-dd20-432b-b467-f5656ab3c25b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a53d704-ba41-461c-9936-1405b43d8397",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13ea69f-8449-4d86-9fbf-d47ac8a9d7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32ecbab6-2e7b-4ef0-a0d9-2e19abecdc0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9fba2d-9e45-4aa5-842f-364b3129ecad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b563db4-2362-4a53-bd86-9e65747b317c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e4e4c96-e6f9-4484-92a8-1458524f19df",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d25a5d1e-4ea5-4979-a47e-99ebd023f798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76e4be58-ffe8-4490-a314-6996d9d65f2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f3705f-18f7-4ba5-b379-b1b995edce74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fe15259f-2578-4b03-9a4e-030f1867efcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d87c4466-31f0-4ce2-9ab4-ecfcfff4f7aa",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "852cb89b-a53f-4d11-b4bd-6521f52ab7a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb73479d-f8a4-4b21-b6a2-00fc296e9279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845a459e-705e-49f6-b79f-0beaf530061f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d346500b-d89d-4285-8cb7-b0a93be64269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "064fb66c-42f5-4dae-b576-989d206786d8",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "250561db-203d-42cd-85f0-b5ede24cee69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60d38278-49cd-4ef7-b0b1-5e9d46ca762f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a9a2e8-7f85-4a1f-a000-44306397b0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c803ddf-f8c9-4406-acbd-95641cf19d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e750643-bd50-44fc-97c9-8b69702fdba3",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c6bb03-570d-4509-8157-13f3c448ce00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a72e5194-08f3-405f-87ee-04eae37a9680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b4f7e89-f4b8-448f-a043-eb658d0864fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a583f21-c932-4454-9ec1-f38425f5c327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57383c32-a5b3-4a53-8b29-35c1ef7da3de",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "219c54a7-376a-4d70-a9b2-94fdd0f30e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5292179f-dbc3-4a07-8920-71a898ba66be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d22491ee-30f4-421d-9767-f0fb517c68e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e055aeaf-6c28-45fd-a300-7fb7e3d50bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d1ca09-6b47-4f3d-aa0a-52733ed08150",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf8966f7-0101-4027-969b-3e34dbc647a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f55ee6ef-1f4d-4cff-a281-d2faa81d8ed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e00c23-4c52-4163-b370-3508d2c22696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a583df33-a4d0-43a4-bf64-c6ddbc70ec54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66037aa7-4530-4006-bd16-363493dc2a2d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a028dee-3079-4c3d-b5df-40a5a86105dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3523388b-0932-4f7e-a162-4805049b3a1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d536d1-fed8-4765-a9af-ecf3f24124bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "602cc4cb-3bf7-4191-bc03-cb172ac29937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e7eb58-3e8b-47cc-b682-afda712ce676",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1eff11-89e8-4c2d-b9fd-ed3d20167cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "acbd6ea3-4302-4fd6-bfec-47cb97c0d146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa514b48-cb63-4041-8360-90b1a0504744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1243a7d-affa-4caf-a816-245b688527c9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fc8af16f-eacb-4a33-bcb1-947714952d8b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b0e26c64-7744-4b1a-9de6-8615d9bbc5cc",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84fa481c-ef02-4484-9979-59afee26c06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "24e93663-253f-4b03-b573-68d3dff7971f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f720876-4bd5-4bc2-8cc3-bf7dd428f0d4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd81694c-1552-4800-be84-50ed6fa8ce50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a7e3d1b-7a12-41fd-9889-e1b29193b843",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3737344-6945-4efc-ab26-175119d1e2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ca4488a1-3050-4bce-83be-0dccc1419f3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e7fe75-1d73-4277-ac71-df393fbaf1c1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99655d76-1e7c-48f1-97af-84352bdfca77"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26c75350-a6b5-4044-97a9-342ca8e0aba0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff576cab-7f59-42df-871d-63edd5810046"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "02529797-e2a6-4826-b684-fe03f81bfa77",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3eb55f1c-a63c-4648-b698-bef6413ed702"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "29504604-634e-47e6-815a-f2b5b3288b7f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0d4209a7-51fa-403b-bf79-04ba46881c12"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c2120659-3d9c-40bd-92f3-53f64eae4394",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "34d28769-a6d3-43eb-8d09-e7e1b9af8e51"
                }
              }
            ]
          },
          {
            "id": "7f214fbf-3673-458a-a4ae-1a3f2b61ef11",
            "name": "Positive Testing",
            "item": [
              {
                "id": "09f8c6e4-c218-40f6-a9e4-eb4a9a0d62f9",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dda631c8-4ba9-4607-854e-d34ad3e5f854",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a74b2ae6-f16d-49d9-99ef-a9464463af89"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16af83a2-074b-4f09-be1c-39ae5fc4a0fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0629ffd2-0452-413e-987e-3a551de9c9d3"
                    }
                  }
                ]
              },
              {
                "id": "655a46ee-c24a-4ebe-830f-eabd84b51236",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "694da47d-2482-4a57-ac01-49fe6dab8dab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cf369a51-fb40-48e6-b3d0-704bf7e2c927"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62b79d4d-9e3b-436e-8480-d804a85c0f17",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c5c2c776-0c40-4464-a3d4-9c37f568866f"
                    }
                  }
                ]
              },
              {
                "id": "ee17d279-3eeb-4e77-a49c-6c47917d53f2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a509e22b-ae7e-4b0a-9b15-13e18bb38f3d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ff0deafe-ae45-42d6-95c6-f4e4aa848977"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f56d3029-3229-482e-8095-0f70e446c520",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b3488325-6097-4313-a40f-eed91911ecd7"
                    }
                  }
                ]
              },
              {
                "id": "8a189b4f-0b80-4ea6-96ba-25762e7a823c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab0053d7-7a14-4017-8aa0-6eab54a6cbbe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ea3d967c-fdf2-43d8-bdff-4bc76845b206"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f9aa2b62-3265-441e-919c-992a68f8a7b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c36a6e41-99a5-4f6a-bfcb-a1bfbacd4914"
                    }
                  }
                ]
              },
              {
                "id": "92b19222-2532-41f8-a7fa-330d7cda6432",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0bd12945-3fe9-452b-a6ee-708dafd7a461",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ed248752-1259-4d27-855b-f3eb514bb45d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c949bb5-c118-404c-9e08-a4dbd41e5f2d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "df5df58f-91f7-4d93-8d47-04f808024e20"
                    }
                  }
                ]
              },
              {
                "id": "df16ff1e-a99c-4424-b4b5-d10325cda402",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa301f1a-1193-4715-9be0-fe1621dea5cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "658c5ef1-ee72-40bd-97e0-2f6f593662fc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "582c6e23-d6bc-4333-8678-db791703cf40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "06d2d563-8b5e-47f6-9700-651bdf66618e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "93b63ca7-7e13-47e4-bee4-37c0c57b40b4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3219fd0a-0e4c-4813-bbd5-28391d9e71b4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "12728360-996d-4982-ab1a-fb616a24c512",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "16f7593e-9154-4709-ba3e-05e03ee2fcaf"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4c0e6888-5635-4fe9-a3b4-2de546f9726d",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "bb9d5f20-a62d-4d9f-9ea5-2a0441aded9d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "acb122fe-0ff6-442a-af91-94a2f05a2171",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7f9cf95e-5629-4f28-b587-52e60624f49a"
            }
          }
        ]
      },
      {
        "id": "a2b94936-d4f3-4631-bcce-a43754075f5e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "21b1391d-3c7c-4129-ad19-edf7d16d88cb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bce6852f-cc4f-49cf-a0b0-e3e4c3b9ac10",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0df230e9-8d83-4a34-a5ce-d1134e62c92f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec93b317-a8af-4e34-a8ce-2ee3f6dc901c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3c1f230-e09f-45b3-b48f-665046f9d2ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d80c00-a614-48f9-8d43-c0f15a825293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf1215e9-5a56-43cf-a1a7-502e0d262485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b4e3b1-197b-4aa7-83ef-97a0ccfddde1",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa64409-ffd7-4720-a509-30ac1ed6a3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7530a73e-9cb4-4171-b64a-ffa41d34b422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e50747-1fb3-4b66-bdc5-76f7d71a4b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1862adaf-0b0b-4f26-a000-869dffa6467d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6453fe2e-b36e-4d01-ba1e-d5cae3a36fab",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a337cb9-937b-436b-a3c8-6ff6439ccff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "251a76b5-cbac-4a94-b0f1-2f2a6de1ee86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3305ca5-441b-4a66-8be8-cb987858c498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c49574a3-8d04-4299-88bf-639ac09e58d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccadf2fb-8e36-4618-a33d-70b950ab58ea",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcbc0439-4c48-4f49-8d6b-4981e7ba54ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d56054e-1c32-4271-9eae-7d24ccac3398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02af55ff-27f7-4c70-a338-c18bc4107cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "643c8fa1-561d-4b06-837f-5da2ba0e8cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ccbb1f-0282-4f33-8ad5-e83f20f573a5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e6c4a67-dfa0-400b-acbb-e7239fc8a86e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c187129-bdaf-413e-b04c-b6e9985a46df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf6c932-6b2a-48b6-b1d1-e930ef860f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e2d62da-af92-48c2-9b64-c1e38fef27b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15377800-7299-440f-ad69-4ebd495cf54f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f1cfad3-d43d-4795-a4c8-377fa7676f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76770f5a-aeca-45b7-a168-6b6fe3747bc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca231ad-0a6c-4e0a-be6e-b4094efaf28e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "405bdc53-a667-4776-81b5-f06cd6df19a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f1f521-e779-4785-8659-552914ad52b9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eabee5dd-ed8b-48cd-8660-d4dd43dd0e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a7aabc9-53c0-451a-8564-fe4c6a609814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd7550a3-56f6-49b9-b9f9-101f2621edac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcf21651-1196-4fe7-b9aa-d90ce6f66230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8aca60c-6a7f-43e4-bb97-4deedb4e71be",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0604b08-45d7-44b8-aab7-a78d43b34013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d27c5556-f82e-4970-a81a-b03f9d8152d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72f6a3c3-54ae-4759-ab3c-3843b8c33e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ced80c64-cabc-4c2e-b998-73b8a17c9244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf29e08a-e112-4e55-9b3f-32685f5bb74b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "000c7e9b-2000-4e94-b64f-e62b57bf5682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54c4adfa-8c65-49b4-8d97-d047e20cfbbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b48059-c70e-4353-884d-44279eccbeb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8026d375-ceaa-4c93-91a0-a9fb2beec1e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa408c63-d29d-444e-b898-21becf61c537",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "163780d2-69e0-4fd5-915f-7904f910fa4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f72dd9c8-44ca-4069-86f4-a5cd1d64b806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a6ac5d-b12c-4456-9d62-62fb8ab0b38b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "973ca948-98f8-4223-8afa-4d0e62a5b679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f4b4bb-bc15-440d-9f42-3cf5d3ce7fbd",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c67b08-b068-486e-9776-ebd8ddb666a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45d9ecf8-6a4c-4ad4-8697-fdfba19714d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d387d7-624d-49e2-9e90-52b48e7923d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c7039e27-68c3-4295-a7dc-1027d04fca12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e9c581-c1fb-4062-98e6-12b2930e8055",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afca4a0a-7c16-40d0-965b-53be505e8949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5df2d8a-42d2-4e54-a276-f6fec8c0e094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec99fb0e-dac2-4c86-a86e-36e04bd1f30a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1e4de1fe-f350-4808-aece-7c79ee061310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f59ef27-81c8-4f0e-b85e-448b13e0b646",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ccf391-6a4e-4504-ba59-ddc7389c567d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04cf9016-0105-412e-a3f0-5b2a8fc4f5e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ecce1af-ce49-4001-aa0a-c32111b60063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ab2bd55-8292-4891-af43-61f546e123cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c85d23-af92-49fb-b719-4a30313e1ae5",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cbe9e1e-f472-40eb-b305-a30b044f89f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4901e430-1099-47be-b419-8ad96a52dd6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae90c8b-b355-43ad-95ab-5d3ea2ed95af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "87d3ac67-3beb-44e7-b1c8-56bee64223a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "639d6d66-24ad-43af-81ba-46cccaf113aa",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f45da1e8-a37c-4239-974c-7a11fc575c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a51caaa5-2874-4156-b327-849487dd1347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439a4471-aefa-4af7-a8c5-f1ee6c228a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "34db861b-14c7-4d13-af78-e36eb671404f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68d48d5-287b-458b-b99e-f1f2dfe2a819",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc67cec-1de9-46a5-aa50-e3fb4c484a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba1c21fb-8fbf-4e6f-ad85-2672c483c684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f27534-a236-4851-86e7-fe3e62415d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a89b80ab-5429-4254-b8b5-2354d04a1d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792da4e6-9543-4882-8bb9-4218493bfa00",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d1a4d6-d5aa-4493-a655-8d44e369c576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85fc0a66-325f-428c-9dd0-a21f283329c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5f049a-96b0-4c34-bc54-6670340f60a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fe07e89-b3c8-4505-89a5-dd882ed0e421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ca8714-a6a2-48c9-88f2-ac9028c518f1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab9f677-1a05-40cc-8569-36b6e972252f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf36f11c-95e7-44b3-bea2-81ffb861c851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1877468-5eaa-44ab-98b8-875776be8c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "48931319-673e-4246-bf01-e695da5de85b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b507f8d-1196-4097-92d5-92108ad35d2d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a234b0c8-d67d-4065-a7d1-ebd889a7d94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81019137-f2b6-4eb6-b75f-3de51b4ec30b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6871414a-3f9f-4fc5-96f0-15f119ad8d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "292e00cc-9a98-4183-ae72-a85fea6fb0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794ab166-6281-419f-b979-4da743255af6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6977c5fa-d0b2-4531-b263-956c94ac2462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44e027ab-2b46-4091-ba9d-d87863a8ee1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c179c0fc-e9db-4f63-9f54-f3eee746eccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f6407f5-5d3b-4280-8af0-4fc5e1c7e8f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca320bf-8b5c-4a6e-8d16-e7dcf90aec18",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b241345f-a8ed-4153-9f62-ec5fa3379188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bbb06bd-04f9-4f1b-a8f0-e18aabb555fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0850a59-34d1-4a66-922f-32b745c25853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "079ccf48-37e4-4360-8db9-2233f25be60a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c67a22-2747-42ae-bcdf-c59b37c46014",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e836887d-304a-4b22-88b9-5c6d889ab4ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82debe4a-d976-468f-85a0-e9c82550ce9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619b5ef8-b329-442f-b372-800aba33560d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a12c34f9-4984-4f9b-8a47-bab00c5ed861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c471b8b9-093e-49d7-9fb1-7676ab80c367",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a603c3-c6ef-41aa-8c7d-c66ca231efd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f2a424c-1602-41d7-9648-870c63c0f53a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf8022f-53a5-4436-ba2d-30aaaa394d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "366f9831-a78a-47e4-a4a6-a16c2011f2b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e4d819-6b16-475d-ab3e-42d29437e7e8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f2da256-bfa4-452c-958e-d1ff8519d914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d2e2461-6d78-4219-82ee-70ac88050bc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb5036d-e44a-4f2e-b16a-cc6f11330c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09053ee5-e74b-4b9c-89c9-3775c395b760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751297c4-4449-4b96-8cb9-5720538d8f75",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3becd362-a317-488c-9200-a89deece1fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e08d8c3-15e5-4df7-8181-928ecfdc1476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0927c59b-db94-4a72-a7ea-2d774bc6f468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ae124e4-5a8d-49f7-b6b8-7192875f731d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9981fd56-6099-469f-85bb-8c6ff48a80da",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a720b2-273e-4a67-9790-4002399137e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd682bf3-2fad-4dad-b85e-b3b89ed4ded2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe624f1-c35c-41ae-bae3-847f9943ee0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3800c0d2-8f80-4090-86dc-2e129caf58d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "410d449a-1f24-4d18-a74f-85d1425bb003",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "765e2716-bf5a-4823-8ccb-9c8c6d0ce2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b7ff593-35fd-4fdd-81e9-242a76c24a17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0094e2-00af-416c-964f-448eb8a17118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ea63b51-9635-40f3-825b-ba3a594a606c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d42be9-4ca0-4d0c-93fc-e17169164d52",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb61557-aa3a-468b-9922-388965ff71f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff2642a0-7926-4855-a26f-c1522da7101a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2087bd2-fd81-42f9-bc47-1939ed9b99f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "edad5b9a-7a76-44b5-94e9-ef721be74247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6182e7c-9cf8-4170-81b4-60b6933536cd",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f77162-367e-4c5c-ae3e-7b9ac60c7a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "612b09d3-65b8-4671-8e82-60a85709a123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64f9d3c-65bb-4d85-8f14-b84c83cf53a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c0285af-d4ab-41a8-80fb-6819523a3e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98890c87-0b69-49a6-ab29-0ccaebc2e9d8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58854365-9418-4153-a6c3-a551c61f5453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85c79223-0efd-447c-9581-50f444782ac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c262a32-c32c-46cb-bdd4-33a9eb75d838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f23fe05-bcba-4788-93d4-44a899d33096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "006ab645-19ba-4e17-b8e9-51a9b2f17dd4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cfdb2e2-9409-4a57-8814-ce925ab68532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "792b1158-3ec5-47b9-9a2f-0868fa101dc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "311a8e1e-9551-4d33-9a63-1a663fe7f2d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c562a4f0-b479-40e2-9289-2a4790e00b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b80b6684-98fe-4f70-8de0-e3c16fd674a8",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f938792-7109-4234-9f4a-8215b2ddb025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f402b98-4f51-469e-945d-d747e7190614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5efe19-b004-453e-b4f1-df4d5460b67c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "672037fc-9ba7-435e-838d-19c98dcf6ad2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d4fdf3fa-9b71-408f-a2fb-a1f19984c82d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e772a2cc-cc2f-440d-b96a-9b38d73da215",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c7c4e4-3728-4972-80ab-fe7b249f38b6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d237dabd-1eda-4421-93fe-1d8121934e30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d0bd2e4-b698-43f2-9e5a-492b5f55141a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4f7be50-af75-4ce8-a18c-3b10b2b92cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a7cfac-3f8b-4af6-8222-a4e862fee2ee",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edbb5964-25ba-4577-b896-996a518d9e24",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7737c984-93a9-4683-88f6-0bf7f50484f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d063a50a-a9c7-446d-81c5-c1d001055845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ecb352f-1a04-45c6-b7e2-0c5be5cbedb1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f581497f-0823-4ba1-bb5f-8d4bf0779305",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0963c12-ac81-4ed1-a7b5-eabc2173e4df"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "395351c6-a79c-44fb-9f60-426ca9427aef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "465d467c-eabf-4e7f-b7a5-4881b3814f62"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "48d5fe7c-af1c-40ff-b901-63351fdbd73f",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8c304da4-fd62-412e-a5cb-3b1a04a61831"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c66a05d8-8e57-40a6-932d-9f9de10e53d4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bcf69e90-f5cf-46c7-a475-ca9497eb2e01"
            }
          }
        ]
      },
      {
        "id": "6f713b33-c95b-40e2-8eae-2032bceb1216",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "73bac702-0adf-4557-b0ee-b78917f4ccb4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dbf09169-bbd5-4d63-be12-ab14f151f577",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "52dd982c-38c8-47eb-80a5-c8f89b294c84",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c07a3c-94bf-4ff8-939d-ecb4ce44b70c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4a5c424-b8ce-4bb0-990b-c7e781ca7d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f09ebfc0-ef89-4f2c-b6dd-a38fcc4c7561",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1641c2e0-6b55-4c49-8c97-f521c10ceecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6045fa8d-223d-4881-86e2-8a3b3d948794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20207062-c955-4f0f-84a6-279b34428046",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5047fa37-69d1-4239-90e3-0021a2c97802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f491dab3-655a-4206-a75d-3a48fd487cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "471a678b-2127-4fa6-972a-c349d3e71d4e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2517af56-6e46-49e8-8053-9ad6835b5fe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1053b40f-7477-48e1-a102-3c3733cde6b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb20c81-798e-4295-a3ab-c460d7e4f123",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "425b52ae-69e6-4e46-ae82-2e1ac55b9e10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8e016df-c3d0-4f1e-935e-457cebd23576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c68b689-7e4e-41f0-92fc-f3efcbb62137",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3502c065-324b-4b8a-89d0-2e30ca3bce78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cac1385c-ff6b-4631-90a3-2218a1616288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c8aed4-fa44-42e4-94af-899c555af30e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74836e1d-3be2-416b-b488-192a10a4ca78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e11a991-e87e-4ab0-9b26-6697992fb339"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3923f2ff-7458-480f-b84c-9e29caad58f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "428d9008-c790-4e3b-8259-c1c6dd53994d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "928d74da-f58f-4006-a52e-7cc7bb2aa676",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4638598-e028-49eb-bec8-93b586f79ef1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ae7fce6-1b33-4e77-adc0-58fd9cfb7a5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "314c2fcb-2f99-4731-8f9a-d7781e3d6b7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e398732-3231-4e95-992c-0f3eb4cf6d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f4fe2e-9003-4035-ae26-34002db53a79",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496391cb-ec0d-49c0-a200-81f1204a4c5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2854101a-6a56-4151-b5ea-eb394f203bbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e64e48d-a2ec-483c-b450-28993884a13b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12d047da-fb65-4b7c-871a-0f9c8d0609bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae91a1e0-dbd0-4b1e-8f59-223972e84468",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a3aa48d-c192-41e2-93b6-f373fe621b8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea2ee8cf-982a-4503-aa7a-ca48f0bee3be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d0b5b5d-d37f-44fb-a923-18765ba4ea02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1904f2a1-9fa4-4595-8641-8a64fa819129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b38ffb-1b35-4c0f-a8f1-6acbd9f84590",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f81c346-52c0-4df3-bf7b-77cc80d6c316",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8889517b-f330-4e96-a541-cf4bd794065e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d8c88e-4efe-4a19-9f9e-5820d46f9fb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df0e5602-cf43-4080-92fe-2894efb9482c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "febc95c3-698a-4898-b1a4-7fc9f49c790f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ebf3908-1084-4b65-a356-48caea0ac0d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18e31eb3-7a28-46b6-bb7c-0ef581b662b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aea8196-9b74-4a3a-b365-b45c902982a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89acaf13-ed6a-4cd1-9b2a-fe601bb02ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e38b06-eea4-4f62-a020-c34d84a534d1",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c6a7cc-68de-49b5-9c60-1c071e8c77f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "622b893c-d0b5-43a4-bb14-91d706905a0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11fa86d1-7134-4f98-a1f8-bca534333cf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e761add9-6064-45c7-8e43-f8c0086af4a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a397e71e-04b6-4de8-947f-5fd08ba9498f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0019270b-30e0-4eba-ad24-0c52e296d3fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15d431fd-b682-452a-bc9d-3acae2b88a68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a438c4d-5073-48f4-9101-af2b752c38e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "428be01b-23d1-4469-bc30-1482eed5542c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79e2366-fa09-4e3e-9e11-c57a6fa657dd",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27fa88fb-d9c7-4ec2-8e03-8c3d3c66f5c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a91128c-611a-4a99-a86b-09c4cb895c60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f51cbb6-aa0c-41e6-92c6-77d434ba860e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b1ed3a2-398f-45f2-8fc2-d2ff8dcf6a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30080f6c-9032-4185-bb4d-9552335afc3b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d35023-6902-4a5f-bb7c-ca6ac9a826a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13821843-e471-458c-ac8e-2742d1c7c61e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f75a5e-8c39-4a8d-9cdc-b348278ec4f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63ec50d3-7804-4ddf-84ff-b2cae873a5af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee995de-cc4e-427d-9faf-96aa030c14fc",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c62089-ef6b-45f8-850b-1f5a47161b0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbdc2a0a-0ed8-4b4f-8928-a9c38002e71d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a7adc9-458b-4e2d-af3b-aa13636d266f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aabddd63-accf-4b5d-8ad5-9566ce3f866f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec791090-546d-4e10-9569-d487ef525b68",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f406a54-5535-4b36-9f2f-29046092229a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c873c08f-56fc-445a-9fad-0d15a5dfcf57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf20978-0340-4cd2-8ff3-0740bc124f85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1a7fe80-1064-4e78-8bb1-45f6b13faccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd32cf01-cb25-46bf-adcb-68371056b3b1",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081ffc38-3e42-4e8c-b0c0-7fe7a307492e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4d7f0c8-72f3-406e-b457-282554e71811"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63186b00-5dda-4c2c-a8e1-5c9cac7336c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9d25df3-97cc-4a00-a255-45bf5b8a2feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f7253b-ea3f-4d10-9e37-072e25c31608",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513155e8-cb05-481b-a678-3af0de0b8f84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d5c40b8-9de7-45db-9d6f-b7b02b00baf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c26774-3336-4da8-8252-af653cf8ec51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8e0c846-43ba-4c99-aa08-4f127c7ad2e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248e78f5-a875-4291-83ee-8cb042429127",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7856f95-bee1-4b44-acb3-396acfe2d80d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcb34d8b-bd02-4c1c-a594-6e5870b162c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b063076-23c0-4441-a793-3f068118ed8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9634dc12-0ad2-459b-81b2-97e640b85964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b204427-01e8-49ee-a448-a75fee2be7c8",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c79a3227-2628-4fe2-8178-49639be18591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e01b1e5b-98e1-4d89-9782-99bf45c5c16b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed01e67-c4c7-4588-abe3-896cc97e708c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "624e58ca-d8eb-4e5e-913a-60de2866847d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a908ef-c8c0-47c6-b199-62e95cc67038",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68b5621-679d-4109-b0a7-7cd8ccf09ea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "786e6f7a-56c4-4d10-92f6-ecd7167fa404"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9110d872-fd2b-4b71-901a-d436c28e5186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7545d546-65e9-4aae-ae43-f17b33baea69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13120e1b-4322-4c67-aa7a-52d2049a24c3",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614927bd-5218-4d1b-a385-918367280101",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47a06649-3881-4135-87ff-f9f2c1b14a18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1045bf79-f983-4dc4-8749-832ee624dd00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cedc8e77-3539-4d3a-9279-efedfd592d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39bb55f9-eed7-4ee6-95a7-92cb3e3bf258",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1a69d4-24a8-4503-884b-5f725ecf26a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f64994c1-df16-4cb0-bf59-ca4541fa3257"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7368fe83-ec1b-4be9-a576-1fc35979dd77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9997f34-eb4f-47fa-9534-9994d6c0b25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e42a5fe-c22c-442a-a744-8f254360ece7",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21895c60-f51f-40b1-963a-8396c1966351",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb291a86-5717-48d0-b647-febd9a5cc6af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "619fccce-683b-4bff-bd54-720e090207c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ae127cf-8500-422c-8256-8df3116bbcc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "856085be-3f64-44ff-bc6f-fb2805c3cc60",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea7f918-ab95-4e3f-a108-56f3ca2f947a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7f8970d-ddd2-4827-9555-5b7f43719500"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6aa643-01e7-4659-9671-b719d43f8707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dd01d77-6cbe-4b0c-bfff-7175255bc747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "351834f5-9e8e-408c-b129-5b3cb171281e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc578239-f52a-46c2-a292-4eb1ae99400c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30b680fc-2245-4f28-aa36-bd37911ad838"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e6fe42-48e8-4e28-873e-244c9bb3372e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a70df9c0-972c-4799-9cbe-3c97f2d35129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "977fabfa-49e8-4eaa-ab3b-ec157fe12c70",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc7f702b-71a3-4939-a15b-672753f09b91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0df874a-01a2-406f-85f1-3cbd5d8f4843"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "709f6467-fd9a-4c51-a465-3e999675ae17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b74dd6b2-b123-4dc2-abc5-1db1f708e480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24cd59b3-f44e-45e4-849b-ad957185209d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce6f19d-5678-44a9-9927-956cf91c6fbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3a288c9-19c1-4cdd-a2e5-2f31b43b252f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6399e40b-0c3b-493e-bbf9-784fe8df8140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93a02ac3-f034-49d0-b1aa-3bafe7f68909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "558e8ae2-e9c8-40c6-8790-69c9b67e6617",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c2e266-eda3-47ea-899c-1f805d037c56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21a96891-abe5-4372-805d-fe91965bffd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b5e80a-a799-4cbe-9909-84f468551589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6fa7a9d-77ef-41d8-804a-6f1190783367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab7e9fc-11c6-459b-8c7d-00774553e039",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f799bcc-2c58-439c-85b8-ca8ad422e510",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fb34c4e-0ef8-4240-8c94-1a8e99123fbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28582773-a89c-4906-94d3-aa71d562c25b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "069c54a4-99e5-4e7d-aaa7-9c4025f859d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed406ae2-ad57-4bba-b1b2-7fe312afaf46",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77eb2147-d4c0-49cb-9746-d3bebdadda01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c3ba9f0-a480-400e-b196-61faf39589e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "606c2d6c-fa9c-4210-8481-8ec27c83588e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2ddb744-67b6-4a2e-934a-d45ec7b436a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a81d08-5159-410e-8e42-c13796fc21ed",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b24514c-354a-4f05-8c34-69b9f972e90d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9206a93c-c24d-4769-9df2-187ed6392674"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9845d4dd-95d2-42a2-a438-f8269b1528ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2329ba05-d62c-4562-9573-15a6665950f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a146f89c-4750-4d95-b86e-cad8c6b907ef",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fcbecf7-e7aa-4577-96f0-054f44e8d44b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e42edf02-9935-4946-90ef-1b221b736f09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81743c90-ec9a-415a-9a6a-d5738ba08832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac494882-9685-4dfe-a959-6c3fecf370b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc836e5-8f01-4c48-b732-71b85dc286e8",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f43f361-f8d9-44cb-828d-1a90b0b629da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f42cf325-51ae-4b47-a1f8-9f567bada979"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08b9a18-b609-4f35-8ea7-d77436461b24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56e76933-50cc-45b2-85dd-e49c1ca47785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e59e1e9-8bb0-4936-92d2-c3e0646cb5fc",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9a5239-0cd9-4a8b-a718-f9b85f698369",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b74f9def-1084-47d9-b985-143f4b3b0f60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "411f2089-ccbf-4827-8f8c-07e354fde563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "846263de-0206-49e7-81f6-fbc4829ecce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e3be9f-988d-4b84-8c00-5b5beb2b1b6e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaecf865-2b84-4434-8ddf-2173b179be41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3e2e71d-7e28-45c5-a02a-91d2d4bbbf3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "573d0b9e-b47c-4c12-9c1d-4e0dc6a71f85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab0b23d2-9f0b-442e-8064-d59ca77d2591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "865a9538-4f64-4501-926f-66453bdebc6d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc45c35-8044-44b0-b6b8-b9eed70c9dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0f6dfa1-2de1-4f52-ac3c-b60696f6dbf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98780f2b-652d-4c81-ac2d-aa2370e6598a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5400e3e-4cf6-495c-b2fa-1946968d0158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "634e599f-f49d-49e1-bf47-f1520a4e1528",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0827bee6-6d3d-44cf-b8e7-9614b44c6102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50622dc6-78dd-4f34-b45b-530831fd0666"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "429d4d59-bbb6-432b-be77-e3efcfede938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d3c74c9-0cc4-411a-aa13-35a05cb77966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da8fa5e4-b63a-4819-8195-1e132ce47e31",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c545dc-346a-4271-88a9-cdb75953b224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cae4cf02-cb4f-415b-81a1-857837c59cd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b563d38-3cd3-4fa8-bd3f-6c6f917e0900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3de0748-b900-4a23-b103-05e40c9a49b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f34951b6-fe69-4701-8023-387dd7859448",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c99ebc4-ff87-49c3-b8cb-500b2d1ccc02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeeed18f-1543-4813-8c1c-0a62b1e07445"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "312e4255-3229-47fe-ba29-9f70ebe88322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aabee79-b031-4423-a0e5-df9434d4ac51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12953ba-2b5f-41fb-8360-6b7f0e6fbffe",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1021245-7338-44b9-bfdf-438b82068078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a01599e-0e41-4e0b-8baa-9e47cf41a73a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95feaa7c-a3fc-4289-8d0c-4ea69b8084e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8c4e6c2-2520-4cba-a70e-9aa9624bd4a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fdf3c91-7b98-47ec-9ea8-1b8ef88a4126",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b964a764-9e88-49c7-aaad-f0009313efeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6bf9ee6-1e5f-42c3-b7be-f379a9c42610"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeaebcb6-75df-44bb-8a31-c9c0d304cade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a061c3cd-c78b-482e-9cc6-c3b7f8990b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac0f672-269c-4288-853f-77bce0918a0f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31089d8a-9aaf-461f-8352-b4922299bbe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abb5a9c6-f900-4e61-b0ec-bd62425decff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6830c69-ec87-478e-b174-1e74233198d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bbd026a-e064-49db-a39d-8bdffac574c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9cf52bc-1ec4-4c08-b8d7-b544ee9a78cd",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3777b819-1abe-4472-8a2c-708283f0c378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f63813a-a781-4b33-a1c6-7981578e5da1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43d4989-8ca9-495c-b09f-5e28ca56e20a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e154d10-5d55-489c-b64c-51bfd67b9af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1330cb6f-4fbd-41dd-b832-d97f9c70df10",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c04778bb-61bf-4e7b-826e-c0d14d6b7eda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0560baa2-51a5-41a1-8f5c-5e320cbe1d24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32907aec-40f5-4a74-b811-14e050cf1276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69177ca9-373a-4715-bbe8-a0db1a5725e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea1963ee-4257-4448-9f76-226d1e49405d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2984fd6-c5e7-4c7e-a6f0-9e8ce178a5cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "178eab77-4965-495e-9991-273ee4ba43b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d792f3a4-b6b9-4595-8413-1e060c394823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7a2fdaf-f795-417e-9950-7c5c17f12e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "958f4a6a-c271-4ef9-81a1-6ea7f6c78a23",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "534d29b0-fcff-456f-82b1-0986254a644c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e2e6c25-e27e-4fe1-8b24-c430051c50c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "430b76fc-7c39-4c04-b6ad-f54ba85f3e12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d37d2cb-1248-4c8a-b0ab-aadd1809997a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e22a9799-8f31-4bae-9159-9c37d622b798",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3035e7-5491-402a-8871-8bfb7c6d48c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e03c1f1f-1b8e-4936-8215-31f6a3c8beed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15deb900-dbc6-4a08-8f6f-d1eaa26664cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7f03f15-495d-41a2-a960-89bb814a84ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a17815d0-3485-43cf-9a31-d01c5f4661cf",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af7c72c9-1e76-4cd3-a82e-70eaad5805a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c29b74bb-606e-4310-a8f2-fd4731983de3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6a5088-e640-4eec-9775-9f0b55adac84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd5a7dc5-d9c9-4111-85d3-44e718a00f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "273a2915-f339-4d8d-9274-8f55004fc3b9",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df605bf-e3de-421a-9af0-5e386326d290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b06b014-6386-4d12-8ade-3b12665637ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d13d75-7bd0-4edb-8cfa-fd40c8a77b2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "641ff2fe-2569-416a-bdf5-3d2db2b70b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c86e8ba5-66cf-4b67-9cc8-cbd808c80b44",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46533a09-9dfd-482a-9df6-0e0fb6f85e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ecce384-d83a-4fe1-8426-c64fd28c3ec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "642a880e-c25e-406d-bb73-07b54090e2de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21968ec3-df74-4a2c-bca6-4997d1b4b886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d704fec-d8fb-437a-ba6e-83369fcde57b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29b0931-c7bf-4748-9afb-3bfff9c172fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ede97f22-b22a-48e7-ae79-6377d40392c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3409611a-57b5-4262-b521-f1bc9e65a675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bdfc09b-cade-4996-a4eb-5e5ce914a933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fdde15a-1665-4509-89be-dbc6993f9ac3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d395e9-5686-4eb4-9731-43a556618950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23cecc6e-5a3f-43e1-ad1b-5964072f9a4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd37b8f8-145b-4871-bd08-24e42f4e1e3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22dca1c3-37ed-4ea7-b495-4085b812f7bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "947b5ec3-2a6a-4729-b8e8-1c12cea2b82d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4fd972-1fb9-4111-befd-0a4432bf7556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3e5d974-dda2-4f77-9c4b-170eed0ab7ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9706f95-effc-4b5a-bf92-f4d18a0bda23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb6be39c-0b65-4237-9b42-204cec8403b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f2efe5-79f7-40a3-a8f4-31fb26e496a1",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "908c5cf4-8fdd-480e-ada0-9871d8e46553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02832373-63b8-4196-99c3-86288551ef60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ecb911-27ce-43c8-a744-65581373da4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d06d9d6-8e20-48c2-a75d-80df5bbf556b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab9efca-ac90-4a0d-aec4-eaf6386438aa",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c84195f4-f162-40b4-808a-a92845f8e43f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2683fce7-2ce8-46a9-9585-36f24c3fe6ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f12c43-875c-42b5-8301-b29d17a1fe85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "420de879-55eb-4219-838c-6c7c36a5f5dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68be2456-5d0a-49db-a292-38995c3dc448",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "570112f0-c2fb-4401-8e75-3ca4ac41ecf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9b391ef-70de-488e-aa4f-e5134aefe19c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6476a59-dbfe-44be-895b-8bf8cc30065f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3ff4343-3ce0-4bae-8ba0-63f7c0f3a49e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5957cae-ea47-4eb3-8715-e842ae231d09",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632c92dd-e022-486d-b8bf-ff900c9aba66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb13723f-27eb-4a5c-a7a0-8a4e66a6846b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c13d0288-ded3-4c01-ad65-7dc805470b15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b97a0897-b5d2-44e8-885c-43af18af75eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "610d389a-b635-4435-94c5-fc6daa6fb39f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e95ebb-1fe2-41e7-9286-fef4b6e89c4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "261186e3-9f20-46b0-bd55-c759551c4fd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc159da-1524-4f90-85c1-547c622ba646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43cd36fc-c6a5-4196-a2b1-1a398acd106c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d3a4a1-dbc5-4c04-8ffd-68f76344275f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12fa047e-8bee-431f-8ca9-e1eab8db33ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c43d7b38-0e5e-46f0-9e65-fb75216d8578"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e0a86f-7911-4346-9364-f5d3820fc749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6de99f3e-c9b5-43f8-8338-b8707bfdf5d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c88bacb1-2d0e-4afb-95a1-1b4b46bc0514",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac3369ce-8cc9-41d7-8330-77f40e776e21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8fa1305-55e1-4385-a7e1-752c1ecad286"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f24bfe7-05ab-4b55-a9b9-e35453f31bb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "089c7040-7878-424a-a026-e0554cae986d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dba7559-0137-492f-bfee-67427d2741e2",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a708e5b-34a1-4f10-bdf9-677c7ab6c14a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89db395e-acca-44a7-ac42-317da740333e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2101391f-2ac3-4ea6-bc55-f14280042618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57a587af-03b7-4b2f-b3ef-60d0ffcd3b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d2b56f-fc5e-44e4-bb66-c9eaed0d03c3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a535c24a-70e4-438c-b384-59720e69a8e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e755b4ba-fdec-4395-87a5-438b812caebf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee721b06-073a-47cc-9297-a09169f0e74b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "636ff940-7618-4c7f-b35d-49750c6b2da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf9f2cd4-63a5-4a56-833c-d1c88803c3c2",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c272eed-5389-4a36-8500-be20f4395634",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83a40f24-38fe-436a-8774-85896ed9c05b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde04c22-7ff1-415d-aa0c-4fd9d47c625d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48e6dd38-0b07-4f7c-a14e-41b2eebb7c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d897d2-fbae-4e10-8210-6b91bbe519a4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc182d33-b5ec-41dc-8ea8-7971f3b0e433",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edf92bf8-6197-401d-9533-1c7cd8b2be56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e30b3ebb-2680-4c55-a013-266f52e93994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58829bdb-5418-4d84-b075-9f9510c61fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d56013-f6bb-4477-a2dd-e224e6213941",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b11174-db37-4552-98af-fe19c829e239",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b55abdb-2cdc-41be-9918-cea033bd17a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53de2be5-4841-4b4f-9d41-7427fbb63c22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "274f0935-0d40-4fd0-8400-a23a6343b83c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00090e5-0a6b-4ba1-bf40-d9977b649ad9",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a9101e-5642-4a45-b2e2-0bcde9447b5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "803334bb-37e1-4ae3-bb9a-191e079a18a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "602d5873-49f4-4c2d-a5e9-8e751ea3b3a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2471fd4f-8e57-4d40-b95d-5c19d84d1d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0efa3b48-7536-4ccf-8df7-711370a3823d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127b8116-d3cc-429d-ada0-9aeda87d1db6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66a390c6-f26c-40ad-b7b0-23864c5b7d19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e2384e-e816-4af6-bf8f-2cde6d219df0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ada5bf5a-881b-4ada-9163-50315d4541fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77dbcce3-0944-43dc-a85d-1e4ca7b854b1",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b9c55e-9162-4b33-94d8-eae07772ac18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32fa62e6-fe6a-4027-9d19-01345da5f9eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba136f73-da72-4604-9c12-5d095297a1d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af88cd8e-5d81-49b1-b41d-23cfce922379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b8ff79-2e8c-4311-8816-6fca6afef7fb",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0960c47-585c-4d38-a7d4-7568d74bc2b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "847dc6c6-8b0f-4ee6-9c1e-d29721eae74e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "541b5e48-0edf-4e76-b868-6b8250557e4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e163e7a-240c-41e1-b4c4-722d3ef6b252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e964de5d-1a9d-4517-ba60-37cc5250686f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebbac24-ae45-4a82-93e6-463808c24133",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a541e04b-2b79-4184-8577-222e7ed7467f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fec3a64-a1c9-428b-b83d-a3cc07acf533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61bd9431-e78f-4c6d-8f8f-5f0fafdc2794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8f3106-ea58-4b84-948a-482466717fa9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef2f392-6e97-4239-8c57-3a55fe6ca9da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d01fb3b0-98b1-4581-82d8-2acf9687d700"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab9e5114-6902-406d-8fd5-f2113afaf04e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fca89fb7-415c-4bb5-8bf0-e0afa2592c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824c5058-8df6-4554-a7e9-3f64fb078be1",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51215b84-97aa-4718-969b-216402dbdcdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "674eaa2a-b781-4edd-916d-9a6e0a478110"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2455c2-322a-4c04-abe8-09359b59e481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8dcea13-032d-4f56-bbee-567a7b6eb345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0353c78b-6966-4378-8af3-3564c690d784",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c8e01d-482b-4f77-988d-11cec44a420f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81516684-264c-4f6d-81a2-4757b2be0f5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cccc396-c1ed-47d0-9b32-2378b20322dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c89b22d-9c13-43c1-8728-59017d44c411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9464b1e6-da2a-4a60-b5a7-8892df75d604",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58fb9957-8a8a-436b-b3f9-a27d721424f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9aa65fe0-cdc0-424b-9a60-835d7223303f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a89c207-1610-4923-809f-86b05f8c8177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "887f3153-16b7-47d5-937a-11de512f5467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f996b6-d4e4-4ba1-acda-9d216d5a8b09",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e264b3b0-49b8-41ff-8b5d-976db329877a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f55dbda-4669-4034-8725-ef65308381ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17fa7ed1-5ee6-4ede-bdd4-7a366f730214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a77b989-cded-4d0b-976f-9f9c52f79179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9c2568-c4dd-4b38-8661-a65b292949b8",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b32006-b020-4b5b-8e22-0613bbfed350",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44f9f860-fd55-4276-b1f2-d8ed485836bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b50cbe-afa8-4074-8498-10dbc5612fd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf31a3e-5d09-4740-845c-e9839776dc8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66861786-ed17-4443-a728-578b57e13d40",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68867131-191f-47c2-8d2f-47fa58d56131",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c7c5bd5-1543-46e9-8cf0-eee092756170"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f76ac88-7cd4-48d7-8add-7dd04ec96aef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e08dd754-240d-4de9-a4ba-fc56d8bd24ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a14425-1efe-469c-96e2-9905ec2529ca",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523abaa9-c5c6-4adc-8456-29390a356d55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d56fdc2-ab4f-4eec-9dfe-2af914700399"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce0aea2-27a2-4589-a11a-b85801d05565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c42bfa05-2ccf-4e94-9d73-bfcfd32242c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18542393-c215-4376-8959-91d559090f75",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61dadbac-7a33-4286-a430-bb145207aeb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c48d962-03ac-4eff-a929-6b8d636ebccf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca09d46-9cd4-43f2-985b-4a20170cdcc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2377663a-1a14-47c8-ae67-46221a0d7062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0f71ef-a0ea-4350-8bf0-589af8a02d8c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a294b831-51ac-4aa7-82bf-779aa5efc75e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9535323e-0d1c-48b1-b600-fc578a430722"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac929cb6-6998-41a4-b71a-3b4924449057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1485ea7d-74fd-42fe-8fc7-b6d255fc8146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47297ece-2356-4b13-934f-4b83169edc47",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51487dfd-68e9-494c-b7df-2940a9bc5807",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7774dbad-f123-4fe7-bb63-87d9225cd18c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb06ea2c-abf6-461a-a08e-c06299d1c87e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42671370-2488-468b-a512-682e384213dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13565c3-952a-4093-bde6-68652b9ef05f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8fb839-c4c6-4605-955d-e725b66b87c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "841d0d66-c935-4e33-ac25-2e5adb636ff8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5caab41-d64f-4d47-bba7-3152fe1c7d37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98666d47-94f8-4c17-8f31-9f99441cd331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3360374-99d5-4139-a16d-2af39b75c07f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff05bb5-0bb2-4808-9176-94cafbc21f70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a20863e-da86-4254-85d0-e5240b7e9ef8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af91fc48-04c8-4ff0-be41-495a85f609e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c169655-ef45-453c-a142-42f6643b7e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3def0d42-9807-464b-90fd-b5a9f6bbc5e7",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "108ce9d0-bada-4ec2-9fbc-13550d99328e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e41b77ba-9728-4bd3-a66a-28d08eda5a69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be99ccee-fed3-4f90-9419-fe147341bd69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c6ea27b-f4e9-498b-81c9-c16096dc0a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f664e4d-cc60-45de-9a02-ee0132ced4ca",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "183c75e7-7d24-4934-9c96-de132671c2f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6da2ccd-081b-4f3f-bb53-86cdec1b139f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b48a243-0cbc-44d6-b0a9-6df3fdf16d59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f230b812-4f91-4c85-bec0-fae1d5d52e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "179562bd-427d-4512-9e4b-09ccf6dcef08",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36bd44c7-d98e-4785-a439-655ef739ba7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "636c60e1-5bcd-43aa-91fe-c30d34a463b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "202e62e4-cba2-4b30-8346-990b743a9cfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dd6ce1c-aa63-48db-bce3-9735f42f4a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb81295a-cdcc-4c0c-98a5-729651aa46ce",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e869c08e-ca23-48b0-8425-46d2508885be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b868b5bc-ef9e-46ae-bee6-caa12c799542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52cbfdfb-94c1-4c4b-a771-9e66c6c061fe",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c9fcab1-7634-4ba0-9be9-060868274d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b71acc-ff45-46a8-ae19-e7469b681f50",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dac12f3-b19a-4aeb-90b6-01cfb6f0ce79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23cca02c-f218-4702-b67f-1c4f1c2e9806"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc59c98-5731-4b71-9018-a7f464ed32f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc42a19f-b510-4da6-91f6-b886bea315d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b04bc07-f723-4cff-bdee-64fa7378960e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f4d3bd-e0af-429d-9c76-5b33f94a050b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49b661a9-9c61-4a1b-b3fc-61158441a3ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "361a2801-5440-4890-af69-2696d5371ab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d55ab8d-1178-4fd6-92d6-f69884eac2b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb778ab-3ca2-485e-ba8f-71f6f0d564d6",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa2e93d-ed6a-48a4-b7a7-79f4fdf64638",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b1f4ad3-9051-4d9f-8679-f4f473736e3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a4aba8-8034-4e96-94cd-13f2b06fa413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fc9fefa-51e5-41ab-b30e-a7e2247dacb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7978cfd9-71a4-4ecb-838d-aa3cd91c6cca",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9cd754-d97d-4802-8aae-d71b493ba91f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15addc53-0e6f-410b-92ed-8bb419dd14ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed8fd01-3ed4-4c56-8e66-141417e3d0bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd824e8-ac44-41f3-a893-cfdcbf916830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72833981-17b3-4e04-b085-c7cb977357a1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04da163-27a6-409d-aaea-bfbebc1ac9cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "530fe4ad-675b-4c1c-b352-a67402747e0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96127aad-c368-46bd-aa4c-d1daa736a981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b195c043-c025-42aa-8538-40e73be61ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c281bc49-c92f-4f80-a32e-8fceccd3982a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a37770-0ebb-49b7-8b7b-f3d0f172642a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8fe99f7-5c3a-41f7-9040-1147c52b8012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67ba0aa-14e5-49f1-afdf-5a1bc5d3b240",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd725a56-6a7a-42d7-9a16-14b3d787c3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e58594-1af5-42fc-9a78-015f9ffd6fea",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e91a42-5cb3-4c30-b3ce-9b48bbc96677",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e06592a8-69d3-4dba-91b2-c67a2da10f32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8cfeb7d-45f7-4da5-bcf1-f2ba9ab2635f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1fe2296-98a8-49c1-9ada-126cbf30b217"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc62d15a-0da7-41b8-9954-0b5862826cbf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05972795-4e17-4644-b2b3-0001e9a6ff3f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5eb3a529-ff76-485b-8e1b-91b45154a756",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0a51252c-5316-454e-a374-69114c02d540"
                    }
                  }
                ]
              },
              {
                "id": "57a5a880-e0b4-4425-8852-76bd56efaab8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f38ad8cf-3414-4139-bd09-cd78c8731270",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad1e57b7-148c-4228-9d57-581d70d26117",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "cb9442c0-3826-4dcf-807b-14cf1b6169af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b68ae30-52fe-4367-8b6e-3564bc335545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6aa38a8f-5194-4e08-a6f5-0b68a4c431c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a6f446-d806-497f-a3b0-59db30abdf4a",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "925fca10-7358-487e-93bf-4041a4de13fe",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4083f494-6a45-4779-9286-6fda1ee8636e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a448b4-f48f-4821-b976-6ce540e19ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b9b2f0d9-0ec5-498a-9dc2-39b026830dce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66a18454-e491-4470-b61e-6aa615bc16ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bbbcc0eb-82bd-434d-b898-0d1996a414ee"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "63ffed2a-a632-4438-9ca3-2b1c344a3435",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "619d89bf-0bfe-4317-8f68-e4ece92a0495"
                    }
                  }
                ]
              },
              {
                "id": "5b1704f6-e436-46fe-baf7-5522507f759d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "93840bf4-7389-4dc6-b7f5-a10ea1a5db49",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b7387a-127b-4fd2-af66-96d4ea04f436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7a57d5bc-e19a-4786-8813-db534855339d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21d9015-84a8-4768-8b0e-3a89a7863b46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f3e2b3a-b010-403b-82d8-47b3d9c4df16"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "27842fb0-06ff-452c-8b36-2a083f3f36f2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6523b5bb-f1a0-41d6-87e1-500c3785ab29",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ac52f06-1338-4278-b072-1e2e34c6fe85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e9fd1b0a-7bc8-4096-b871-a2ccdf19a37a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75c0062f-fb33-4d57-86b4-e17f522ece89",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a8f6630-0d52-4000-ba3f-3ef34a41c3fe"
                    }
                  }
                ]
              },
              {
                "id": "7a8e1cec-adc7-40b5-8ac4-b8d261097ff2",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e89c923-3b67-4203-9b03-7c383407c160",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4bf32af5-d6c7-4e2f-b632-5ae5e4854927"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4e36472-ac36-4178-a74d-149e402eb185",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85adc86a-6bfb-45c0-8260-890dad939e7d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f720040-3a38-4f4e-85f9-82ec5f547324",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "85258d22-3a1a-49f3-b41b-ef5f5f41a3f3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d8787b92-97d5-4b28-8175-c507cf3f426e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cd5721f8-4632-44be-9a19-e7450205a765"
            }
          }
        ]
      },
      {
        "id": "06c9685f-9be2-4b7e-81d9-e966416bc035",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "10d91270-5a9e-419e-aa88-0580ec948ada",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fbb647b1-2b1b-47a1-899f-9499e274f175",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "abe1c241-bea5-4631-b75b-41cd3c58a24d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec76b84-f7f8-4a4a-a75c-07ce410869c8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "21eb3010-0aa4-4e42-8968-dce16eadf8c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b4df67-7ba4-433b-92e2-771f4f5cdd05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "005af6fd-598e-45f1-8a54-fa554db8d95b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10297696-b8ce-461a-befa-17791f715d80",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ffad03e-7937-4788-97d1-cac6d2b8ca2a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "217c7982-203f-492b-bc02-7284f7a7cb3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "966f4deb-06fb-4163-a51b-edcdfe45cb12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "027aa26b-a169-4fdf-8dc3-f8cf66a12316"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b9f9f37-6738-44cb-b172-8316c878e285",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5701853f-e490-47ab-b20f-2facf9cb7ab7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6d807ba-0d9a-4ee3-bf71-a554f9cee932",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5fcec61-dff0-4d45-9ee1-e0ac51c033d3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6fd158a9-764b-49a4-be82-cf0327a92e93",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "411ee5fa-795b-4f8b-8bde-5b1763116cb5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd659728-8be0-4085-a5f9-8f3eaef9fff8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "36df570e-3aee-412c-b011-7e285c6505c8"
            }
          }
        ]
      },
      {
        "id": "467d7c80-51aa-4281-9346-358b44cd706e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b61c3631-aec8-460f-839b-eb94e9609cc5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b067bef0-a0ae-41af-807f-09692ec7f81b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c20a3e87-6553-4f6e-93ea-b53c2673ff9b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec52179-ab51-44f7-a2aa-155863640821",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c90ce7e3-535a-4410-8216-95b0746f7723"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b4166a8-549e-447e-81c3-48efc1cfedb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1dfccd8b-7f84-441c-ac74-2803f04c1715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05cb2b72-79d5-4ae8-849e-255a7b32b968",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d366d474-223b-4b68-8918-e4a0c3ea266a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2cca0a56-1a01-461e-8d1a-8f26527bd8d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "595f7d42-f2e7-41da-9fbc-132ee167afd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ffc600e9-4e02-4ca3-8726-5cba2f3be216"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "974fa1d5-b22a-4e15-a7ed-1d033d04d3af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7e8a500-e1ff-48cb-bc48-dc95750c8ea5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9df90b91-f597-4a0e-b535-b1f4f2706350",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be353246-730d-425c-b073-71ae815fe53a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a9cc34aa-362a-452c-8f20-4fd8a1498dc1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0dfaaf9b-9512-449b-aad5-99e0f0225be3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8b36c49b-63c8-4d64-b439-7695948e99f3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "76c815ed-a128-493f-b2e8-8d9beeac1371"
            }
          }
        ]
      },
      {
        "id": "acfde49f-a182-4c78-935b-3dd1ee0f3a29",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "071dc735-6b7a-485f-8af9-b1b18d69778c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b0eea751-70c0-4be6-8be9-e537a29556ed",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "10d1ce91-e071-401e-a4d8-09f699665a8e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032c1e8e-983e-436b-9472-9c86768ee467",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00cfff8c-c2a4-44d8-86a8-db938c9bce45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcdbf281-ddd3-4dfe-8e5a-bf0b2bbae4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9f7208d-17f2-4c84-89d7-e498ed5df259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f1ac09-f2cd-48c2-a987-33a77fc0b625",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f6e284-54dd-4159-bd7f-0813fc8ac741",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d71dae8b-d5c5-4755-aeed-819bd05c8d74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d74a3c9-aa19-43c9-8006-9643f54605c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ae909664-d7d9-4260-8aa8-223abc3d70b9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "515f3c52-3365-4af5-b5f0-38e9a001864a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b567a094-1c14-40d0-a31e-0963b1451033"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "407427a1-a2f5-4d89-b9b7-2157223e5ac8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77ebfa43-05bc-4682-a63c-80457d3b3e69"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "10853cb7-d269-4d64-bd45-74118fe4428c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d263ae77-b667-4806-be51-54e2e37612b4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "61050785-d866-4fe7-a82c-2249973e032f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "602bd43f-7f82-436c-a025-9a1c3189245c"
            }
          }
        ]
      },
      {
        "id": "7953b744-55ce-4c93-bc20-16d30da04e6d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "200b52c1-c0ae-4508-a4ba-ce79d322a31b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8e2325e2-84f4-4563-b34b-f97d022eb173",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e1adc86e-7324-4655-ab8c-f6acbd68210a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "581fa017-0475-4e8f-baea-06b5fe6bbfc9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b4e3a811-ecb8-4350-9eba-7ab383baeeb6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 798.9153846153846,
      "responseMin": 21,
      "responseMax": 8686,
      "responseSd": 1076.6857661333145,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1682123781907,
      "completed": 1682124000298
    },
    "executions": [
      {
        "id": "eac64809-f219-4d2a-9c9a-60bdfee294d4",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c3a03838-d352-48f8-9310-f0d724ac388e",
          "httpRequestId": "ac1aed82-cc31-4731-bd9a-db44129262ec"
        },
        "item": {
          "id": "eac64809-f219-4d2a-9c9a-60bdfee294d4",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ffa8f346-6d5b-4ecf-aa5e-b8377ba98335",
          "status": "OK",
          "code": 200,
          "responseTime": 82,
          "responseSize": 0
        }
      },
      {
        "id": "7b05735b-9f7c-40c0-acfd-4259af6a8945",
        "cursor": {
          "ref": "d37ab4ef-8716-405c-9985-1b735d8dd0c7",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2ef9ef9d-5063-4a08-a96c-1ac388d37307"
        },
        "item": {
          "id": "7b05735b-9f7c-40c0-acfd-4259af6a8945",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "714ce4cd-dd40-45f3-ac79-3fab758181f0",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "e7069174-3291-43e6-91d2-42466a9c0434",
        "cursor": {
          "ref": "bfbe6c48-9fdf-4ccb-8c77-247751ec7fc5",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "60fbbed0-c91b-405c-8806-280251dd622f"
        },
        "item": {
          "id": "e7069174-3291-43e6-91d2-42466a9c0434",
          "name": "did_json"
        },
        "response": {
          "id": "3ec80aed-bb1b-4215-8703-7637af3f18d5",
          "status": "OK",
          "code": 200,
          "responseTime": 1385,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be8a4ec0-c858-4405-91b1-320ae60d4798",
        "cursor": {
          "ref": "7982014e-6a83-4f5c-a718-8c0ee10577fe",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "dd20313a-3169-4c33-9c5c-01080b74cd44"
        },
        "item": {
          "id": "be8a4ec0-c858-4405-91b1-320ae60d4798",
          "name": "did:invalid"
        },
        "response": {
          "id": "c97028a0-f68f-4157-bf85-fb825dea89d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1072,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be8a4ec0-c858-4405-91b1-320ae60d4798",
        "cursor": {
          "ref": "7982014e-6a83-4f5c-a718-8c0ee10577fe",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "dd20313a-3169-4c33-9c5c-01080b74cd44"
        },
        "item": {
          "id": "be8a4ec0-c858-4405-91b1-320ae60d4798",
          "name": "did:invalid"
        },
        "response": {
          "id": "c97028a0-f68f-4157-bf85-fb825dea89d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1072,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb9cf398-4f07-474d-9895-5ab6783f0cf4",
        "cursor": {
          "ref": "247ed908-acb1-4927-bdba-a228b714fa5d",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "69a726b4-4790-4619-af0e-d5366102c260"
        },
        "item": {
          "id": "eb9cf398-4f07-474d-9895-5ab6783f0cf4",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "2dc3925c-f512-4a5f-ae36-04a244e8eadf",
          "status": "Not Found",
          "code": 404,
          "responseTime": 866,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d59bc0d-c4a7-45f3-a2c1-aa4088ce687b",
        "cursor": {
          "ref": "63f60434-fa75-4b33-93fd-d3bdccdc38e2",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f776fb9b-bc96-47b7-af10-47981c718190"
        },
        "item": {
          "id": "6d59bc0d-c4a7-45f3-a2c1-aa4088ce687b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "ff6a0629-9939-496c-85c7-3f6770479ca1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 642,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4a7edb-fec8-42e9-a688-e50b23b95788",
        "cursor": {
          "ref": "68fd97e5-2bdd-4342-b495-55f145314540",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "417c86eb-482c-414d-a0c2-1f7401b71beb"
        },
        "item": {
          "id": "7e4a7edb-fec8-42e9-a688-e50b23b95788",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "28bd2649-c762-4284-b9fb-283923de7013",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d84008b-f9cf-48be-bfd3-e29daffb923b",
        "cursor": {
          "ref": "435b28c3-e180-4841-8d4b-e86fc1e8bfd9",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7ca7d1c6-8699-4598-896d-4099c671cbbb"
        },
        "item": {
          "id": "9d84008b-f9cf-48be-bfd3-e29daffb923b",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "b481be6c-8912-42b8-badc-2f413c2e4e2f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 632,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d84008b-f9cf-48be-bfd3-e29daffb923b",
        "cursor": {
          "ref": "435b28c3-e180-4841-8d4b-e86fc1e8bfd9",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7ca7d1c6-8699-4598-896d-4099c671cbbb"
        },
        "item": {
          "id": "9d84008b-f9cf-48be-bfd3-e29daffb923b",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "b481be6c-8912-42b8-badc-2f413c2e4e2f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 632,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec82755-2e07-4c0b-b2dd-3e19d65eccf2",
        "cursor": {
          "ref": "a1d992ec-2d8c-4448-a15d-81243b2cc3e7",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "48d5fed9-0108-4690-a40f-0e8bc82dd245"
        },
        "item": {
          "id": "5ec82755-2e07-4c0b-b2dd-3e19d65eccf2",
          "name": "identifiers"
        },
        "response": {
          "id": "7b8a1345-ed36-4c9f-b3de-78d7458e8054",
          "status": "OK",
          "code": 200,
          "responseTime": 1254,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594e6444-990f-4b1a-a900-8613eeea3300",
        "cursor": {
          "ref": "5aae5758-fcde-45bc-92c1-4fdc23baa9d0",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "96565542-4596-4b5b-bda2-e308bce82e29"
        },
        "item": {
          "id": "594e6444-990f-4b1a-a900-8613eeea3300",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "84d02d56-96bc-4cf4-87ed-356eecca1331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594e6444-990f-4b1a-a900-8613eeea3300",
        "cursor": {
          "ref": "5aae5758-fcde-45bc-92c1-4fdc23baa9d0",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "96565542-4596-4b5b-bda2-e308bce82e29"
        },
        "item": {
          "id": "594e6444-990f-4b1a-a900-8613eeea3300",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "84d02d56-96bc-4cf4-87ed-356eecca1331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8e0083-546d-43c1-84f3-737b753094ef",
        "cursor": {
          "ref": "9121ffbb-19f4-4899-ae69-199876aa9f4e",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "5f585885-dc03-4f64-a8c2-a956ae3eaa78"
        },
        "item": {
          "id": "0f8e0083-546d-43c1-84f3-737b753094ef",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "caea8e68-c49d-4f07-b9cf-1103b8524414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7593d4-64de-49cd-9270-1e526596c02f",
        "cursor": {
          "ref": "b02b134b-32cc-49d3-bf88-a9c8cb5ae0a3",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a620c2b0-17c3-4e9b-8c8d-c06988c477df"
        },
        "item": {
          "id": "0d7593d4-64de-49cd-9270-1e526596c02f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4602a769-23de-42e8-9377-42150955b05e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e045bd07-6566-4d93-a623-06cc01fe6246",
        "cursor": {
          "ref": "c8f7996c-e66b-4af0-ad80-29d9a1c56895",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ba84c84f-9e4e-4ba7-b4c6-744793b80fa0"
        },
        "item": {
          "id": "e045bd07-6566-4d93-a623-06cc01fe6246",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e3d69558-e8d0-4337-ae36-24215173265e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47611f62-8857-4877-8d7e-389f4058f086",
        "cursor": {
          "ref": "61a69723-d30c-485e-8951-fd3fd094c04b",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e8256937-ead9-4022-9404-62a2962677e7"
        },
        "item": {
          "id": "47611f62-8857-4877-8d7e-389f4058f086",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "dc8ed0e9-ce23-4627-9154-99265e0e8e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3573d8-fab5-453a-abfe-d17c60631936",
        "cursor": {
          "ref": "0d5e5815-d75c-40d0-a9d0-e05e0e942d74",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "bf2a1d2d-7b34-4634-8cdc-969edd62fa30"
        },
        "item": {
          "id": "4e3573d8-fab5-453a-abfe-d17c60631936",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7a12dae6-d99b-4bf2-8dbd-efdaa0eae989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec77ad6-789d-40d8-92ae-dba6cd27a7cd",
        "cursor": {
          "ref": "465fc493-14b4-425d-a20e-098ecc0a34cc",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e5e14c9e-4af3-417b-a99b-bdc5308e5549"
        },
        "item": {
          "id": "bec77ad6-789d-40d8-92ae-dba6cd27a7cd",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "51aae808-510f-412e-b329-18dc4def51b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3f0d41-ba08-484b-bcd0-f10110a09a3d",
        "cursor": {
          "ref": "f1417c13-3fe7-4c47-b2d8-ef6a0fcde8c6",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7a657d83-284a-4a68-8f2d-d42e18b58268"
        },
        "item": {
          "id": "6b3f0d41-ba08-484b-bcd0-f10110a09a3d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "65982990-9700-41fb-b67b-fc993e791390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95468cd5-3d15-4830-abeb-8cb74d90fa09",
        "cursor": {
          "ref": "41cb30b3-96b6-4e46-a7a5-4dafeef00f53",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6b8ee7ad-d00c-4a5f-b378-94732c0ddd14"
        },
        "item": {
          "id": "95468cd5-3d15-4830-abeb-8cb74d90fa09",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "04d66176-fe0b-49b6-8754-fabfac1cf8ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c525d4-6c3d-49b3-a026-808576d4d052",
        "cursor": {
          "ref": "4055bbf9-522e-4871-90e1-1bdad83ba087",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "26abe48c-072d-4531-8a4d-6661d846d4f9"
        },
        "item": {
          "id": "d3c525d4-6c3d-49b3-a026-808576d4d052",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "07fa232a-1128-47fb-83ad-c19fced8b85d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c2c0d8-c048-401a-ae2e-51bb262ad93c",
        "cursor": {
          "ref": "04e87801-f10e-4b46-8a29-74f761ca73c8",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "02f6a547-922c-41ce-9334-1ed300bca43b"
        },
        "item": {
          "id": "f5c2c0d8-c048-401a-ae2e-51bb262ad93c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "cc9e9609-5be1-4173-9e7b-33c7e3629c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c61732-bb5b-4ec0-a251-acb3a2c97e77",
        "cursor": {
          "ref": "b8015afa-44a7-4a31-a085-875a030fe5e4",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3b7d9aaa-57c4-4c2d-bdc3-edb85f338243"
        },
        "item": {
          "id": "f4c61732-bb5b-4ec0-a251-acb3a2c97e77",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1e03dd25-6d5a-44da-b512-64e250ca935f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7904ea7f-d110-4a51-8cdb-b45a95be1152",
        "cursor": {
          "ref": "e4ab0a31-6969-4c80-9b72-cedfa680f10b",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "00ecf76f-f28e-481e-8144-eafbe17faede"
        },
        "item": {
          "id": "7904ea7f-d110-4a51-8cdb-b45a95be1152",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5dc500f6-5c51-4804-a0ff-181bcc7d57d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419effad-e487-4f4e-b6e5-cf3aceeeea7c",
        "cursor": {
          "ref": "813c767a-d81e-4874-b02b-fa75c1bdd92d",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "129d05ea-c25c-425d-8b2c-80f495aa5774"
        },
        "item": {
          "id": "419effad-e487-4f4e-b6e5-cf3aceeeea7c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9462f080-24e3-4877-8f74-9940b785dd7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2dd4f4d-7613-4431-87f1-617bffdc9502",
        "cursor": {
          "ref": "81363ea3-6053-45c9-a204-497bffca79e3",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8c75affa-38df-4718-9487-efe8cf5e0961"
        },
        "item": {
          "id": "d2dd4f4d-7613-4431-87f1-617bffdc9502",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "37278738-6fa4-4b6d-822a-9b989cb628b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93229c3-897a-4005-9cfc-d130ee4fbc60",
        "cursor": {
          "ref": "6655b52e-841a-44ee-a03f-328a1ddcd84e",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "093548b2-c7b1-4e5e-b3b6-af73c76c6c4b"
        },
        "item": {
          "id": "e93229c3-897a-4005-9cfc-d130ee4fbc60",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "59c0d26e-e0f6-4b81-a308-cfb0e02ca1a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 982,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fedffa21-22cc-40d8-b082-a5da68ffd7e0",
        "cursor": {
          "ref": "b4bcfc2d-940d-4a20-b3a5-d0c50d410a9a",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a69997c3-7a26-488f-a6d4-47b6045eaf8f"
        },
        "item": {
          "id": "fedffa21-22cc-40d8-b082-a5da68ffd7e0",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "3e11010d-70f1-425f-87ce-f2db79c92ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 955,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9427c400-2f24-4d44-84f2-e11c3a04f5a5",
        "cursor": {
          "ref": "4aeb7619-2e81-4f1f-ad1a-182712244d8c",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "cc22126e-ff3b-419a-be31-ebd221c5f998"
        },
        "item": {
          "id": "9427c400-2f24-4d44-84f2-e11c3a04f5a5",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "dc074368-f092-4d87-b8aa-529fe7795b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1159,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc28ea06-52af-4339-abba-f6a8e204d42b",
        "cursor": {
          "ref": "432bf085-2abb-4e5c-b29a-75a35be08ca5",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a4374eeb-9c33-4b78-b355-c1b167633373"
        },
        "item": {
          "id": "bc28ea06-52af-4339-abba-f6a8e204d42b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4446e5ac-221e-4b4c-8a8d-2c91796009db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1164,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd9588f-ea9d-484a-9c2c-8d2c10966040",
        "cursor": {
          "ref": "b940a1c4-6c61-4c47-a6f1-ae9fe276b3e9",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6fa7b48c-53fb-4fb0-9d14-899cdab7e0b1"
        },
        "item": {
          "id": "bdd9588f-ea9d-484a-9c2c-8d2c10966040",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "756dc58d-1564-41e9-a7fd-ae7b2e300f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5d494f-7648-4a0d-82d3-3342bc389252",
        "cursor": {
          "ref": "03c34a03-4c43-47fd-93cf-cebdd4c931d2",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "bbede027-67d4-4cf9-98d8-200f4fb115ff"
        },
        "item": {
          "id": "9f5d494f-7648-4a0d-82d3-3342bc389252",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1af477c4-839e-4938-93a9-6f01d6953075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c797e86-9a0a-47c9-b66f-0c23b7a4995e",
        "cursor": {
          "ref": "df9bc630-8bcb-419e-bb69-2775209771f6",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c3241755-5a52-450c-ad91-e067d20b6736"
        },
        "item": {
          "id": "2c797e86-9a0a-47c9-b66f-0c23b7a4995e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "5941dd57-b5b9-409e-9ad5-b962aed01a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c35c8b-05ee-4f19-a1bf-5d351911ffe1",
        "cursor": {
          "ref": "3523e172-d0de-4784-bd50-676ff092ef05",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "22f06e09-f8a6-4845-95be-9802d4a4185b"
        },
        "item": {
          "id": "94c35c8b-05ee-4f19-a1bf-5d351911ffe1",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b1cc46df-df83-425a-ad20-c2f20407b89f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ccb1c9-6373-483d-9d0a-5949d1258a90",
        "cursor": {
          "ref": "73ea901c-c50f-408e-908b-4c89a33589e0",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ccc2b314-abf3-4063-ba8f-9aed6a113b57"
        },
        "item": {
          "id": "18ccb1c9-6373-483d-9d0a-5949d1258a90",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "2ad22acc-c921-4790-b758-408e3a90c42a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5924cfe-20d2-4405-85cd-e3db66b199fd",
        "cursor": {
          "ref": "1deac895-360d-4f3d-b17a-6d676e3ccb93",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "335b41a2-0fd6-4525-a877-218a5a4148a7"
        },
        "item": {
          "id": "c5924cfe-20d2-4405-85cd-e3db66b199fd",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f45e9019-f2c0-4899-8803-9241caa72747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6616607c-67cd-4ec8-b9be-7e7a77a3f754",
        "cursor": {
          "ref": "a52aaf05-b91f-4fa3-8ca7-fc494f0f21e4",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "cee575e2-48a4-4095-979c-9ca0ace5a740"
        },
        "item": {
          "id": "6616607c-67cd-4ec8-b9be-7e7a77a3f754",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c161af63-4cab-432e-8ff4-e4c03fb8ca76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70284e4-3265-482f-9084-27962805669e",
        "cursor": {
          "ref": "cb8fbc73-8456-4a5e-b83b-5d7bfb9c9ccc",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c4e667b5-9fe5-4a4c-80fa-f57cd87cc494"
        },
        "item": {
          "id": "f70284e4-3265-482f-9084-27962805669e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "313c0de6-5ddc-41dd-9eb8-5a72b7551c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d52c77d-de08-4dbd-a442-23406763295c",
        "cursor": {
          "ref": "301a1978-8885-444e-b334-9dd2507288c2",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "65e79d6a-b0f9-413b-9398-43ace76824ba"
        },
        "item": {
          "id": "8d52c77d-de08-4dbd-a442-23406763295c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "0f4deb5c-a619-4656-856d-08b7a8f1f1cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "281f3798-34b5-49fb-964a-43ef4678c008",
        "cursor": {
          "ref": "0ac95b64-549a-4590-95ab-55077c46a4fe",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "447313e6-31b4-415f-9ff1-2a55f838ff06"
        },
        "item": {
          "id": "281f3798-34b5-49fb-964a-43ef4678c008",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "454925d8-9223-4c3c-a14e-9fe6a096f45a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5059f4a6-bdfc-40f5-ba41-e37a52947bf5",
        "cursor": {
          "ref": "823b408d-525d-4f83-b3d2-04c40d9cf8c7",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f20f9c02-75a5-466a-887c-91cfb2d65dc9"
        },
        "item": {
          "id": "5059f4a6-bdfc-40f5-ba41-e37a52947bf5",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "19901d4b-763c-492f-9a15-5e97da9d8337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18a2bdf-a676-45cd-b947-240644e9786b",
        "cursor": {
          "ref": "b40344c1-9406-469f-884a-9b1e9a53612b",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "be5556ec-8d50-4f44-bb0a-b52ad4070cf4"
        },
        "item": {
          "id": "e18a2bdf-a676-45cd-b947-240644e9786b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "bd1fa3c3-c572-420b-90ee-27f0d9a0f379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98113c2e-8016-4817-bb1c-b79f07bcd9ba",
        "cursor": {
          "ref": "7ebd405a-98eb-46e2-a2e6-53ea07317277",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "125fef9e-2e1e-4c40-967d-2e685fa93827"
        },
        "item": {
          "id": "98113c2e-8016-4817-bb1c-b79f07bcd9ba",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "796069c6-42cd-4f12-a900-9379ed1f054b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddafb663-d43c-4129-b63a-8b012e219f3b",
        "cursor": {
          "ref": "b7d60e25-b7d2-401f-9fd8-db4584ad4c28",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3f289766-92a3-4576-81ce-df0fee34fe91"
        },
        "item": {
          "id": "ddafb663-d43c-4129-b63a-8b012e219f3b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "3d96f186-7a96-4a23-8b08-b4905a2b6c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a1013a3-828c-4594-a7d0-d3f2dbd4e9ab",
        "cursor": {
          "ref": "3c83c038-ed21-4acd-a988-a546641801d1",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "037c08c3-7457-4266-9327-29671bd3c8bb"
        },
        "item": {
          "id": "5a1013a3-828c-4594-a7d0-d3f2dbd4e9ab",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "56e73d06-3a63-4fb2-b9f7-67f54349c593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ecba88-c07b-457d-8af9-403187e3c09a",
        "cursor": {
          "ref": "1314b3b7-4f7a-40be-8527-fe5101d57f6c",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "322e0b26-3b72-4636-9923-77650f7e069f"
        },
        "item": {
          "id": "c5ecba88-c07b-457d-8af9-403187e3c09a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "65c1d81b-4bb9-4138-b6af-a482a16a7682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0fed524-c360-4838-88c6-50abc24be15b",
        "cursor": {
          "ref": "2dac8efa-7b1c-422a-a9aa-75c99875e7c2",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "625f5505-f591-4426-9755-7f2191db3dc0"
        },
        "item": {
          "id": "d0fed524-c360-4838-88c6-50abc24be15b",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "4af2931a-6575-422b-8e73-fe70eed50290",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 746,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d068dcf8-f92d-47b5-96b9-cce82b7a49ad",
        "cursor": {
          "ref": "03b91ebd-a0bd-4136-90f8-3b3990921bb1",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "72af6d3a-834d-4f0a-b90e-c3c0e119a869"
        },
        "item": {
          "id": "d068dcf8-f92d-47b5-96b9-cce82b7a49ad",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f48edbcf-3be5-482a-b379-19271fff84bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0ef0bf-c8f7-4e69-802f-3ad7910ae1db",
        "cursor": {
          "ref": "e90d230b-4fcc-4166-a9ea-07005d56121b",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c811b0c4-351f-4524-9e15-1ab7def9b2e3"
        },
        "item": {
          "id": "ba0ef0bf-c8f7-4e69-802f-3ad7910ae1db",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "716750f3-9a39-4a16-9f1f-4bfa62ede17f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba841c25-b07c-4b42-9270-9e80db2783c0",
        "cursor": {
          "ref": "c6f77fe3-543b-4d8b-9c57-b7ab8267e4d0",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "20930f0b-7e5e-4e56-964e-2f9c60e437d2"
        },
        "item": {
          "id": "ba841c25-b07c-4b42-9270-9e80db2783c0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "adf61387-e2cf-4eb1-b133-776e4c2b6783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "322f2d3d-def3-49c0-a640-7c68b8ff8d2c",
        "cursor": {
          "ref": "71e93bfd-6562-47bb-b338-b604e06bd3ce",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "75586fc0-1bf2-40f9-9c47-6bc81d816c16"
        },
        "item": {
          "id": "322f2d3d-def3-49c0-a640-7c68b8ff8d2c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "999415a6-5bcf-445e-ac1e-9f09ded2566b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c5906a-295c-4a20-bce1-7bf093423e19",
        "cursor": {
          "ref": "d9e336d7-f5ac-4f26-bdf6-02d23563d0a5",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "cdee5493-9779-4753-ab15-841cf45ca6fc"
        },
        "item": {
          "id": "a0c5906a-295c-4a20-bce1-7bf093423e19",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "1f491afb-bd71-46c5-ba84-15c626207f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd097c00-2eb7-4311-9f7e-cb17b449c879",
        "cursor": {
          "ref": "55f77e4e-a772-43b6-a33d-ad0e621ed6ac",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9855e59f-29e6-49ac-a7c4-564be3fc70bf"
        },
        "item": {
          "id": "cd097c00-2eb7-4311-9f7e-cb17b449c879",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "90ef6e9a-ee3d-48d6-a03f-68db72b9bd5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd6807ed-a4ec-463b-8975-206d9d8c3a4a",
        "cursor": {
          "ref": "57be3ab1-8d09-4032-b2a1-cc081fed12f0",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f017235b-a090-4a98-b591-61377bd6cff2"
        },
        "item": {
          "id": "cd6807ed-a4ec-463b-8975-206d9d8c3a4a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "97e67a6a-b982-4999-925a-f7722042142c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 749,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e3314e-9fb7-42f1-8d46-7931e2e558c6",
        "cursor": {
          "ref": "702c1f0c-ce7a-4cef-808d-f62f3a984115",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ab919db2-5d44-4a2f-b4d6-2b4bbf958199"
        },
        "item": {
          "id": "74e3314e-9fb7-42f1-8d46-7931e2e558c6",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d758cc4f-573e-47b3-bc4d-874e89cb1297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6a2d66-75cb-4858-a563-494ad84d1e50",
        "cursor": {
          "ref": "8350f094-b906-4c3a-8da2-8925845057cb",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "72cbb3be-7fda-4214-be78-c88cc90f8ce0"
        },
        "item": {
          "id": "1e6a2d66-75cb-4858-a563-494ad84d1e50",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "cae40d16-096d-4453-9ea7-2b7ac1cd4167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de543a1-01ce-4aa7-b261-f976e5b9245f",
        "cursor": {
          "ref": "fd62a833-e8de-43e9-8c89-5c27bd573ccb",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ec71de0d-3961-44a7-b864-f4a7482d172c"
        },
        "item": {
          "id": "9de543a1-01ce-4aa7-b261-f976e5b9245f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "75f740b5-f873-4538-8c0a-a586177d9549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e62a237b-5eb7-4a30-8598-9f7c5cb9f2ea",
        "cursor": {
          "ref": "52497014-1406-4d0e-9e7f-1053c3756ef6",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f22658f3-f364-47f3-944e-ad45d8d91878"
        },
        "item": {
          "id": "e62a237b-5eb7-4a30-8598-9f7c5cb9f2ea",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f4736b13-3d26-4794-b489-e6013d269239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e727561-8c45-4616-bff1-3844b4352e8c",
        "cursor": {
          "ref": "641195c0-13ab-4d35-bbf5-dea3ba342565",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0b467ad5-e5f9-47b7-b396-a98cac436da6"
        },
        "item": {
          "id": "0e727561-8c45-4616-bff1-3844b4352e8c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "1ecf393a-56e5-486f-8940-30c45546ae73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd961a9-822f-4932-a40b-8938fda72ebe",
        "cursor": {
          "ref": "a7bc43e3-839e-47ab-b081-fe566d9b88d8",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "63ce5ee3-313a-4821-a2f2-0b6ef890e13f"
        },
        "item": {
          "id": "4fd961a9-822f-4932-a40b-8938fda72ebe",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "1e38b5ea-1440-41b2-9e8e-85c64cb613fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db01a14b-6124-474f-a077-1cdcf89b3c8b",
        "cursor": {
          "ref": "7b042a5b-badd-4488-b697-9194f507e9ba",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "61a31f74-cd73-45e3-b2d7-bd389f72ca16"
        },
        "item": {
          "id": "db01a14b-6124-474f-a077-1cdcf89b3c8b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "5b567c21-6856-48a1-a5ef-28a35b39665f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd907f23-a8e4-42c3-8a6b-df85f4697855",
        "cursor": {
          "ref": "402ff7cd-ffe8-4ae2-beae-a73f50cbb539",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1bf868c0-46a3-40cf-b7d5-d78e13a83d88"
        },
        "item": {
          "id": "fd907f23-a8e4-42c3-8a6b-df85f4697855",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "0519629a-dcd7-42d7-a5c4-28ea181746aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1152,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c21a9d0-0f55-449b-a572-baeedacf114b",
        "cursor": {
          "ref": "d5c91b68-baaf-43fa-bf71-e2c55944e9c2",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "2c3a86b5-e1ff-458a-a1e5-3a76fde1afcd"
        },
        "item": {
          "id": "0c21a9d0-0f55-449b-a572-baeedacf114b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9eb800cd-269f-4bac-9fe5-83c2ab2787b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 953,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15f00af-e887-4e8f-ac57-ee7143320470",
        "cursor": {
          "ref": "7115a826-3e04-4299-89e5-6360c78f3aa4",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f7809e3b-3223-424c-a6bf-07b51cae59dd"
        },
        "item": {
          "id": "f15f00af-e887-4e8f-ac57-ee7143320470",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d8228b77-c359-4f3d-a84c-ad510bce9ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 878,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81096b7c-30c2-4f34-8d0d-4f6fb2b72c7d",
        "cursor": {
          "ref": "e85dcc9f-3898-4de6-b290-d68392b1a444",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "de237e3d-8e83-4a98-90c6-98518a8232b3"
        },
        "item": {
          "id": "81096b7c-30c2-4f34-8d0d-4f6fb2b72c7d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b40ae93f-7ad4-4739-8808-889df7bfa6ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1182d42-85f8-48a7-8b2f-7c82989eb183",
        "cursor": {
          "ref": "e5a948a2-f6fa-4c9a-a329-f36543445737",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2d8b357f-9e8c-4e5f-b483-6af791b98936"
        },
        "item": {
          "id": "f1182d42-85f8-48a7-8b2f-7c82989eb183",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0d3a7a2d-ca9d-4df6-b40e-50b05e280365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0aa707e-d94a-437f-944c-9dbb99bdfb40",
        "cursor": {
          "ref": "8f7cc41f-299f-4731-a8b9-1550d300daf0",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "6ab58aaa-fb71-4b8d-b43a-1188a8c6f8ab"
        },
        "item": {
          "id": "d0aa707e-d94a-437f-944c-9dbb99bdfb40",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ec42cda7-9512-468a-a834-6b0f9a13f45e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f1d69c-3946-49ae-9540-23580ab4326a",
        "cursor": {
          "ref": "c775eda6-505a-4335-94e0-73f3fd8e0deb",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6c930b0f-810b-490a-8374-fd1d7f635fef"
        },
        "item": {
          "id": "18f1d69c-3946-49ae-9540-23580ab4326a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "53143e1f-8610-4802-bf73-b2d301656819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "470f03ae-7245-4e01-9236-dce64aa6462d",
        "cursor": {
          "ref": "a58a5e73-5a78-420a-87ce-2e60037d05b2",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f5736a69-24eb-4694-8676-a27a34df1cce"
        },
        "item": {
          "id": "470f03ae-7245-4e01-9236-dce64aa6462d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "269de08c-2f53-452f-a89a-dc0583819422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48348bd-bc87-4275-a823-9f4d5b2f496b",
        "cursor": {
          "ref": "8df00490-c95b-4984-aafe-f0658050c107",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "de4f09b9-3bd1-4ff7-bef6-15224daf9e0b"
        },
        "item": {
          "id": "a48348bd-bc87-4275-a823-9f4d5b2f496b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3adebfc0-0fbb-473f-b78e-2674b2b53c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b832af0-37b0-4e5e-bb53-2bbe42568e64",
        "cursor": {
          "ref": "fd4a070a-ac3c-4545-a6f4-188f3b5c9548",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "1da953d2-ec98-432e-ba85-043fd64ae252"
        },
        "item": {
          "id": "7b832af0-37b0-4e5e-bb53-2bbe42568e64",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d6b5bc64-510a-40ba-af97-47214e9a8e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "624b89b8-c3a5-446e-83c6-aa741d382f0e",
        "cursor": {
          "ref": "866ab9ef-61d4-4453-8e10-0612f95f159f",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3a298841-168e-4bf9-a2b2-07c44601892c"
        },
        "item": {
          "id": "624b89b8-c3a5-446e-83c6-aa741d382f0e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c59e90c4-d01f-458d-b53f-c9ac9aec7352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53bb12af-9289-4d34-a89c-8c7aafe0167b",
        "cursor": {
          "ref": "2254653b-35ef-476e-8d04-c9b1720d1fb5",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "db03b812-9023-4bb0-b408-b703e8f4614f"
        },
        "item": {
          "id": "53bb12af-9289-4d34-a89c-8c7aafe0167b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c9ce2ea8-58d9-480f-9bd2-608c3b9cad32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1a06c7-c3f2-4202-8d46-bd5f17b56ba1",
        "cursor": {
          "ref": "48b7e03e-9f98-456d-999a-6c8f0b70f06f",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "898edeb8-6feb-40ad-b551-def693880351"
        },
        "item": {
          "id": "1b1a06c7-c3f2-4202-8d46-bd5f17b56ba1",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "687035f1-60b9-44b0-bc4c-fb22350113aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "902bf977-761b-4a3d-8427-ce1c0391cae2",
        "cursor": {
          "ref": "bffde566-e9a7-4293-b272-b45dafad5ac5",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f848dd54-17bf-4bc7-a850-4c95d5df887b"
        },
        "item": {
          "id": "902bf977-761b-4a3d-8427-ce1c0391cae2",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b4016bf8-8f61-4a2b-9c78-56697d519915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "395b5c3b-94b4-4787-9c89-83397c217276",
        "cursor": {
          "ref": "ee74f024-edbb-4828-a34c-2c0c28db12ab",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ed290cda-1ef3-49ac-ae50-057bb82c4be1"
        },
        "item": {
          "id": "395b5c3b-94b4-4787-9c89-83397c217276",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ce98ad4c-9a7a-43b4-9687-be2a87f0d360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862b5bb8-5405-40c3-bce0-f8c2ca153cda",
        "cursor": {
          "ref": "d257e0b1-117b-4054-9986-783725e895c1",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e7e6460f-9a4c-4388-a86c-c3d70fb52768"
        },
        "item": {
          "id": "862b5bb8-5405-40c3-bce0-f8c2ca153cda",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f9927c37-86c1-4abf-a7ad-de5ba7b48c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067fc694-bba3-4907-8ff5-4cb19031e6bc",
        "cursor": {
          "ref": "54d715e0-c66a-4a33-b244-5cf126c71d9f",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4de8acb9-1ebf-49f5-9878-31584539588f"
        },
        "item": {
          "id": "067fc694-bba3-4907-8ff5-4cb19031e6bc",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "9143e76c-9e6f-4525-b054-c342a5c3e529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e9ed4c1-006a-4282-81c5-8cbb19dd4e58",
        "cursor": {
          "ref": "7d21f59f-b964-4ccf-a82b-048a953b6e4c",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a6e9b612-6321-4893-a7fa-7f3b9aa69078"
        },
        "item": {
          "id": "5e9ed4c1-006a-4282-81c5-8cbb19dd4e58",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "76d96934-e976-4092-b05f-e229d1d450d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d457ed-41c7-411d-819b-242faafc0ca6",
        "cursor": {
          "ref": "fb8c9059-1cfe-4d70-953b-9acdde9109c8",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f3ce31c7-e065-4bc0-9d84-e74bcc1b8e83"
        },
        "item": {
          "id": "24d457ed-41c7-411d-819b-242faafc0ca6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8938f578-e66e-43b5-8990-c881c6e365d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559e5269-c6d8-4813-adbb-891858f8fa5e",
        "cursor": {
          "ref": "e3048f73-26aa-48b9-92f4-4a70c28f1d5d",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c99dec89-8575-4daa-986d-b66919e4f983"
        },
        "item": {
          "id": "559e5269-c6d8-4813-adbb-891858f8fa5e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "bd4b21b3-ff9a-4713-8e12-01abef27c8eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 964,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d7360b-e8df-4ccf-bdd1-8fea4b4de182",
        "cursor": {
          "ref": "e8b7e42f-7e2e-46e3-8823-dd06850e2436",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "59bd9607-c478-4430-bd2d-2e0495582d61"
        },
        "item": {
          "id": "80d7360b-e8df-4ccf-bdd1-8fea4b4de182",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8dc5cf41-3c85-40d1-937a-182b35ef4427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 998,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0389370-4696-4d5d-8320-d0106fb7fc2c",
        "cursor": {
          "ref": "4b9c84f2-57a1-457e-9be7-cace847c4a61",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "bc58fa44-9769-4f03-a6fc-1a689fba5200"
        },
        "item": {
          "id": "d0389370-4696-4d5d-8320-d0106fb7fc2c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f9cf2932-cea8-4d16-bf3d-58410c35fa22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 977,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5cfd49-208e-4008-b006-0c93d86a7553",
        "cursor": {
          "ref": "ed5e2794-5655-42cc-8519-5173fc6c371f",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "670ecd90-478b-4393-9c2a-a9bb52145792"
        },
        "item": {
          "id": "2c5cfd49-208e-4008-b006-0c93d86a7553",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c44431b6-47b4-414f-a383-32028c28b242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 986,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b544bb6f-8d01-4ea8-bb3f-7f312dddbbca",
        "cursor": {
          "ref": "e2d080ef-d383-4a65-bbbd-5fda6d90527e",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e498e9b9-5c8d-4414-9d99-14aeb02120d0"
        },
        "item": {
          "id": "b544bb6f-8d01-4ea8-bb3f-7f312dddbbca",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "00f70a1d-64e4-4d4f-a07c-bdf204e38bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d238d4d-6bca-4970-af51-c3c458ca0468",
        "cursor": {
          "ref": "718cbde3-e05e-473a-8fb7-967ea506fec0",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "68be15d0-37e2-477d-8c8d-8c34cd243168"
        },
        "item": {
          "id": "9d238d4d-6bca-4970-af51-c3c458ca0468",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "17c6cefc-9898-43d1-9cca-1ff5eac89759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c96d7b66-0604-4616-b37a-d55e9320e6a4",
        "cursor": {
          "ref": "ad93c38c-6ea7-46e3-b734-bd58e346c987",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2104cdbe-1ac1-4e44-90ae-e361ae1ecc6d"
        },
        "item": {
          "id": "c96d7b66-0604-4616-b37a-d55e9320e6a4",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b4c61c80-9092-499d-90e7-fd88bc1e0db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f0437c-9651-49b9-84b6-52f384c18f56",
        "cursor": {
          "ref": "603e2a93-7c20-4f92-ac62-d8ea43cfdb30",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f4dd851d-f3f4-43cb-bb15-91c43d45f2d9"
        },
        "item": {
          "id": "58f0437c-9651-49b9-84b6-52f384c18f56",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "51f689cc-9974-4115-b7a0-d8666d6b19e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "221b1738-b789-423a-b40f-0ac01967383c",
        "cursor": {
          "ref": "5b8e3835-0b08-4c21-9364-de90b2f1a9b4",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "91fb4a32-615c-4435-83ad-bff7fb9c5dfc"
        },
        "item": {
          "id": "221b1738-b789-423a-b40f-0ac01967383c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "64ea6b52-c243-4643-acca-0867ea722a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5e4bd5-2061-42b9-94fd-2f0371b62303",
        "cursor": {
          "ref": "623142a7-7041-4c87-9ed3-32f77f0ec82b",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "75cf0310-2fac-4553-92d3-582992b56d33"
        },
        "item": {
          "id": "8e5e4bd5-2061-42b9-94fd-2f0371b62303",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f0537d5f-69e3-4e87-9f9a-3a9a7adaf5c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3835cdbe-2ef3-42bd-857c-85747f3168bb",
        "cursor": {
          "ref": "cd0c1586-f43a-4cab-8b4b-c76f08eddd85",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d7f24759-a121-437c-b32d-be7b2828f0e5"
        },
        "item": {
          "id": "3835cdbe-2ef3-42bd-857c-85747f3168bb",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1d4b7437-d568-4baf-a269-70c981cd6e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3dd227-6e97-47f0-b702-53dd30f326cb",
        "cursor": {
          "ref": "f5a33df3-38d8-4468-9449-c5f61feeedb9",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c21a4e1c-c2cc-4ded-86c6-bb00a88ff7aa"
        },
        "item": {
          "id": "bb3dd227-6e97-47f0-b702-53dd30f326cb",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "31468046-9451-48b0-be5c-bea9de772ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "618f8a80-0058-4b17-9dcd-8fd348fe5fa0",
        "cursor": {
          "ref": "f167c15a-a5c9-4a7e-a901-ac891ebe83d5",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "90905616-b839-478e-8b26-91d5bdcb477c"
        },
        "item": {
          "id": "618f8a80-0058-4b17-9dcd-8fd348fe5fa0",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "17371aaa-bed9-4821-812c-cd090e2fd5b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7c3915-2c02-468b-87d5-0f148932c536",
        "cursor": {
          "ref": "25696ae7-97c9-47c6-9405-fd1be25d7f9c",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "431ec725-50ef-403a-9d07-df797e38bc3c"
        },
        "item": {
          "id": "2c7c3915-2c02-468b-87d5-0f148932c536",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "fd494041-714b-49f7-805e-059bb7bf0c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a53d704-ba41-461c-9936-1405b43d8397",
        "cursor": {
          "ref": "7a64b86a-7c7d-4f09-b7e5-dc64049cda19",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f7f71a8b-0b34-4161-9862-0a172930a04c"
        },
        "item": {
          "id": "0a53d704-ba41-461c-9936-1405b43d8397",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "08c43b59-90d1-46ed-a327-bd7c41a9a90c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4e4c96-e6f9-4484-92a8-1458524f19df",
        "cursor": {
          "ref": "73c2de17-4a8d-42c4-9bc0-9d402fc85a29",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "585787df-2360-4873-9d89-d0c76652994a"
        },
        "item": {
          "id": "6e4e4c96-e6f9-4484-92a8-1458524f19df",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "eb241788-45c6-4243-88c6-45c59eb8f249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d87c4466-31f0-4ce2-9ab4-ecfcfff4f7aa",
        "cursor": {
          "ref": "ac9c53ee-f132-4c99-bc18-01f1ca49b1fe",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "174ea95e-ebdc-49c1-84bd-e5c943e3d46b"
        },
        "item": {
          "id": "d87c4466-31f0-4ce2-9ab4-ecfcfff4f7aa",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "9c4ec90b-9f94-49b6-b4ce-573576ba2d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064fb66c-42f5-4dae-b576-989d206786d8",
        "cursor": {
          "ref": "36f143b8-790a-4657-b148-a227bc1e7b1d",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "489d578a-8468-4c58-be99-bcb93960cc48"
        },
        "item": {
          "id": "064fb66c-42f5-4dae-b576-989d206786d8",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d756c0a8-f3d8-4fd7-9811-06513ac71afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e750643-bd50-44fc-97c9-8b69702fdba3",
        "cursor": {
          "ref": "b7fd8582-7c47-4410-b7f0-e9653805d302",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "cd454238-c051-4b4e-a317-1e51a5c213d9"
        },
        "item": {
          "id": "8e750643-bd50-44fc-97c9-8b69702fdba3",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "30b723c6-01ca-4712-8d23-bf7272fdcfa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57383c32-a5b3-4a53-8b29-35c1ef7da3de",
        "cursor": {
          "ref": "3d749cdf-f76c-47f3-a6ec-d432b5258496",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "4b1bb41e-7c9a-4fad-a0df-2888a2049373"
        },
        "item": {
          "id": "57383c32-a5b3-4a53-8b29-35c1ef7da3de",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "46cedb55-f97d-416c-948e-7288fd8a1eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d1ca09-6b47-4f3d-aa0a-52733ed08150",
        "cursor": {
          "ref": "acb9afe9-b034-407f-bc68-e2acf5a8f501",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "532c7abf-91a7-4a6c-8eb2-eeb750271310"
        },
        "item": {
          "id": "a5d1ca09-6b47-4f3d-aa0a-52733ed08150",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "50ae8a61-e073-425d-9f47-7978c0b8efc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66037aa7-4530-4006-bd16-363493dc2a2d",
        "cursor": {
          "ref": "ca2b8c37-f635-4697-96f9-c3c7c1df5ec8",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "dc229be8-2c78-42ad-9395-2d81bd121844"
        },
        "item": {
          "id": "66037aa7-4530-4006-bd16-363493dc2a2d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "53548fc1-b98b-4b6c-9cfe-edd37124a939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e7eb58-3e8b-47cc-b682-afda712ce676",
        "cursor": {
          "ref": "8d409d1d-ca5a-4c64-8159-e94be080ca15",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9a93630f-8bb2-41fb-a129-632527f98760"
        },
        "item": {
          "id": "38e7eb58-3e8b-47cc-b682-afda712ce676",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f44a5989-920a-4b70-9a55-b87e77dcefbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e26c64-7744-4b1a-9de6-8615d9bbc5cc",
        "cursor": {
          "ref": "b11cdb88-e0dd-4569-9ea8-eeddd5db15a4",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d683175b-77af-4779-8cd5-c5ad826706bb"
        },
        "item": {
          "id": "b0e26c64-7744-4b1a-9de6-8615d9bbc5cc",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3ae98612-5fbf-4a81-8890-a88066411c7e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7e3d1b-7a12-41fd-9889-e1b29193b843",
        "cursor": {
          "ref": "1ea60e38-3023-4a61-b261-e44eafe5cd85",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "773ec624-af18-4fc2-88a6-f498ef88bec0"
        },
        "item": {
          "id": "9a7e3d1b-7a12-41fd-9889-e1b29193b843",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "1071fee6-0e33-4d77-a27b-9da39ec0497d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 623,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f8c6e4-c218-40f6-a9e4-eb4a9a0d62f9",
        "cursor": {
          "ref": "b1263520-3914-456a-a296-d243058be82f",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4dc0e443-17ac-44aa-978b-77a79d8c8b1a"
        },
        "item": {
          "id": "09f8c6e4-c218-40f6-a9e4-eb4a9a0d62f9",
          "name": "credentials_issue"
        },
        "response": {
          "id": "0d4b4855-e7cf-44ff-b363-88989569ff55",
          "status": "Created",
          "code": 201,
          "responseTime": 6608,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "655a46ee-c24a-4ebe-830f-eabd84b51236",
        "cursor": {
          "ref": "d8f385a8-7327-4e2e-a582-f3de75698dc4",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "df0063b7-1212-4d23-833d-9a561a6f942f"
        },
        "item": {
          "id": "655a46ee-c24a-4ebe-830f-eabd84b51236",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e951f6a7-9029-4f30-9b04-384000033ed5",
          "status": "Created",
          "code": 201,
          "responseTime": 7388,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee17d279-3eeb-4e77-a49c-6c47917d53f2",
        "cursor": {
          "ref": "7b4b1018-030b-43c6-8b4a-f9d97fbffb85",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "46d5de0c-7abe-48a5-8090-6d7bf9d56b76"
        },
        "item": {
          "id": "ee17d279-3eeb-4e77-a49c-6c47917d53f2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "80d18b94-62c4-4a30-b437-37a3efcae1a4",
          "status": "Created",
          "code": 201,
          "responseTime": 8514,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a189b4f-0b80-4ea6-96ba-25762e7a823c",
        "cursor": {
          "ref": "81c7cad2-6426-425b-8316-8881756b28b9",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "3d5efb99-239f-4ae8-9179-f6461a5c0f29"
        },
        "item": {
          "id": "8a189b4f-0b80-4ea6-96ba-25762e7a823c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "dd1bbe33-25f8-4c47-9f2c-d44bdf4c26e5",
          "status": "Created",
          "code": 201,
          "responseTime": 7412,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b19222-2532-41f8-a7fa-330d7cda6432",
        "cursor": {
          "ref": "1b7363a7-f386-4baf-9454-0c76758d8da0",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9c05b885-a496-4b5a-b642-bf4a32347f53"
        },
        "item": {
          "id": "92b19222-2532-41f8-a7fa-330d7cda6432",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0a75bd3d-85ee-49ec-a205-d01ba6d470fd",
          "status": "Created",
          "code": 201,
          "responseTime": 6490,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "df16ff1e-a99c-4424-b4b5-d10325cda402",
        "cursor": {
          "ref": "ebda43b8-fac4-4598-bb8f-968590a4c9ba",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "beae3c15-f9e0-45bf-8959-13dba89b4dc3"
        },
        "item": {
          "id": "df16ff1e-a99c-4424-b4b5-d10325cda402",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9a5fd814-0665-45f9-b821-0bb3f549390c",
          "status": "Created",
          "code": 201,
          "responseTime": 8686,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df230e9-8d83-4a34-a5ce-d1134e62c92f",
        "cursor": {
          "ref": "b5dd42ed-bce4-4e42-b596-ef2ccecd84bb",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9d789493-4fa3-4493-8814-e3ad18b6f788"
        },
        "item": {
          "id": "0df230e9-8d83-4a34-a5ce-d1134e62c92f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "65bd00f6-c298-49d4-8361-abecb0ec4b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df230e9-8d83-4a34-a5ce-d1134e62c92f",
        "cursor": {
          "ref": "b5dd42ed-bce4-4e42-b596-ef2ccecd84bb",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9d789493-4fa3-4493-8814-e3ad18b6f788"
        },
        "item": {
          "id": "0df230e9-8d83-4a34-a5ce-d1134e62c92f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "65bd00f6-c298-49d4-8361-abecb0ec4b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b4e3b1-197b-4aa7-83ef-97a0ccfddde1",
        "cursor": {
          "ref": "6efb1355-6696-436a-9ebc-1821b8046832",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1516ebe1-9738-4225-abb0-6c692ce35abe"
        },
        "item": {
          "id": "43b4e3b1-197b-4aa7-83ef-97a0ccfddde1",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "72a6697c-bbfd-470e-af89-ab88e2cc0e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6453fe2e-b36e-4d01-ba1e-d5cae3a36fab",
        "cursor": {
          "ref": "11277367-4359-418c-9027-64a1f7be8b95",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f98e2516-0673-4982-a001-dc095881b524"
        },
        "item": {
          "id": "6453fe2e-b36e-4d01-ba1e-d5cae3a36fab",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "32ddd0af-b477-48ac-a7dd-4bdac46c2e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccadf2fb-8e36-4618-a33d-70b950ab58ea",
        "cursor": {
          "ref": "56d6e096-89ee-4c70-8f5a-ab5e139f629d",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "efe916d6-c77d-445c-b3d1-ba8069ec6e24"
        },
        "item": {
          "id": "ccadf2fb-8e36-4618-a33d-70b950ab58ea",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4489ca64-2e03-4bbf-8120-41985444cfcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ccbb1f-0282-4f33-8ad5-e83f20f573a5",
        "cursor": {
          "ref": "2295c7d2-2d08-46b4-a389-dac9d04a19ab",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d07fdf98-b2f4-4bb8-96b7-b3044dca7bb3"
        },
        "item": {
          "id": "57ccbb1f-0282-4f33-8ad5-e83f20f573a5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "280f2096-6380-4989-b6cf-b363d9bd1ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15377800-7299-440f-ad69-4ebd495cf54f",
        "cursor": {
          "ref": "d38e11e4-e0f8-476d-8cb4-20cbea10d350",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "33b01189-a08e-4205-8b5a-af59234b594e"
        },
        "item": {
          "id": "15377800-7299-440f-ad69-4ebd495cf54f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6f4fcf78-3b20-4322-877b-93a5bddefad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f1f521-e779-4785-8659-552914ad52b9",
        "cursor": {
          "ref": "1401eb30-57c0-40af-b40b-57bef2e3f141",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "80a030c2-558b-4b19-808f-f46f8be2a3e4"
        },
        "item": {
          "id": "87f1f521-e779-4785-8659-552914ad52b9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e5fd143c-058e-4381-8a5d-a3e56ff9b759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8aca60c-6a7f-43e4-bb97-4deedb4e71be",
        "cursor": {
          "ref": "cb3eca05-913b-44c8-b220-4a0614c86410",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2bf22e36-97ad-437c-9057-4a744b9b71a8"
        },
        "item": {
          "id": "b8aca60c-6a7f-43e4-bb97-4deedb4e71be",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "105615ab-a4d2-48a6-8a83-991b6db26a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf29e08a-e112-4e55-9b3f-32685f5bb74b",
        "cursor": {
          "ref": "04edbd44-870d-400b-bb9f-c30f74b4473c",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "bf6af0b7-5c3b-418b-89fd-b279f1af55d2"
        },
        "item": {
          "id": "cf29e08a-e112-4e55-9b3f-32685f5bb74b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "984e977f-e4ab-4c69-aca1-e13412596133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa408c63-d29d-444e-b898-21becf61c537",
        "cursor": {
          "ref": "acdd2ae4-3084-4d5e-b08e-b2f566566c41",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d6134d5e-3dc6-4634-a12c-7c336015243e"
        },
        "item": {
          "id": "fa408c63-d29d-444e-b898-21becf61c537",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "aeb35d77-6b8d-4d73-9111-79cdd2ecd28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f4b4bb-bc15-440d-9f42-3cf5d3ce7fbd",
        "cursor": {
          "ref": "ab37374b-1161-4596-891e-406a4b4c865b",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c22e477a-d701-4943-bed8-229865556bbd"
        },
        "item": {
          "id": "30f4b4bb-bc15-440d-9f42-3cf5d3ce7fbd",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3562705e-b1ea-430f-a434-b14fc84aaace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1151,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e9c581-c1fb-4062-98e6-12b2930e8055",
        "cursor": {
          "ref": "c9c963de-ee3a-4e92-bb01-c0e5da45ab89",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "bb56a1c3-636f-428b-8f73-298a9295adda"
        },
        "item": {
          "id": "26e9c581-c1fb-4062-98e6-12b2930e8055",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8c638996-9d0b-4594-96e1-c59cd6651b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 898,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f59ef27-81c8-4f0e-b85e-448b13e0b646",
        "cursor": {
          "ref": "6e471582-85de-4775-bb97-ee2825d9cb47",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "abcca357-9405-4297-b273-25358ab22af6"
        },
        "item": {
          "id": "4f59ef27-81c8-4f0e-b85e-448b13e0b646",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "20f0de7f-c3ae-444d-8229-16ad8d6e53df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 943,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c85d23-af92-49fb-b719-4a30313e1ae5",
        "cursor": {
          "ref": "15f372e3-a22f-4fd6-bdb4-9873be53d5f0",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1aa4765d-f5b3-4a85-ad2a-01c2c32a45fd"
        },
        "item": {
          "id": "f6c85d23-af92-49fb-b719-4a30313e1ae5",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "00604550-6c6d-472f-b71c-03dea68ada09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 800,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639d6d66-24ad-43af-81ba-46cccaf113aa",
        "cursor": {
          "ref": "01adb018-fb01-4ff3-91aa-b79d176ff981",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9ffc513c-aa32-46a0-b463-05f92392843b"
        },
        "item": {
          "id": "639d6d66-24ad-43af-81ba-46cccaf113aa",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1b4738c4-a1f1-465b-b57f-837023f7d354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68d48d5-287b-458b-b99e-f1f2dfe2a819",
        "cursor": {
          "ref": "32e0fa40-0640-44d3-899d-5c737d101f6a",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "5f186177-745e-44cb-995a-37f6d9a7a019"
        },
        "item": {
          "id": "e68d48d5-287b-458b-b99e-f1f2dfe2a819",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7a7a5775-454f-4fe3-9a37-095fbfbf7ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792da4e6-9543-4882-8bb9-4218493bfa00",
        "cursor": {
          "ref": "b7430d2e-fa11-429b-a5e1-761b8d405bd6",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9a7f157b-56c6-4e16-ba6d-657dea470f12"
        },
        "item": {
          "id": "792da4e6-9543-4882-8bb9-4218493bfa00",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "449b3007-2f4a-4e8a-84f5-a3c2bbaaf65e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ca8714-a6a2-48c9-88f2-ac9028c518f1",
        "cursor": {
          "ref": "d06b5b81-0d49-42b5-9d84-78ab77bfa4e1",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2b7583b6-b6e9-41fe-9b66-26cc4c601588"
        },
        "item": {
          "id": "b0ca8714-a6a2-48c9-88f2-ac9028c518f1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "17a2f015-71bb-45e2-9308-67b1d233f8d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b507f8d-1196-4097-92d5-92108ad35d2d",
        "cursor": {
          "ref": "9fa150c4-0b5b-442e-b0ae-c3ca41e1f2a4",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a8f53f91-e574-4904-b2c9-6011c8e258f0"
        },
        "item": {
          "id": "1b507f8d-1196-4097-92d5-92108ad35d2d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5ad4f828-c7a3-44ab-b6db-c178c1d3db95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794ab166-6281-419f-b979-4da743255af6",
        "cursor": {
          "ref": "e48328ce-1ede-4984-8133-40bedbc8247c",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f81616a6-a1cc-4dc3-95e5-d9e80c45289b"
        },
        "item": {
          "id": "794ab166-6281-419f-b979-4da743255af6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "88c37a5e-8f34-43c9-a27b-fecc7ea75795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca320bf-8b5c-4a6e-8d16-e7dcf90aec18",
        "cursor": {
          "ref": "d1d344d5-d806-43af-b8eb-5384bd7f2b69",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "06fb18f1-6d4b-4304-b6c4-01d2b36e10ae"
        },
        "item": {
          "id": "bca320bf-8b5c-4a6e-8d16-e7dcf90aec18",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5e7cfb59-69a8-4955-8e6c-a885062eef02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c67a22-2747-42ae-bcdf-c59b37c46014",
        "cursor": {
          "ref": "945f0bd4-162d-4a19-b8d4-e602c14bab22",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ddf935f4-1925-4aea-8e02-940568a2f317"
        },
        "item": {
          "id": "52c67a22-2747-42ae-bcdf-c59b37c46014",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2efe0817-7412-4717-a78c-da40f374e459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c471b8b9-093e-49d7-9fb1-7676ab80c367",
        "cursor": {
          "ref": "a43d1ff0-9e42-4c06-83bb-62186c529ce9",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "749ca5b1-6bcf-421a-a641-0f3e7cac1052"
        },
        "item": {
          "id": "c471b8b9-093e-49d7-9fb1-7676ab80c367",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5c05b900-e374-4c22-8298-62ee06a8c7b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e4d819-6b16-475d-ab3e-42d29437e7e8",
        "cursor": {
          "ref": "c41cb096-4591-4994-ae16-6284cdc1972b",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "05cc8dfb-52a1-4992-b744-24e2be908070"
        },
        "item": {
          "id": "45e4d819-6b16-475d-ab3e-42d29437e7e8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7241ac93-fc1e-4704-b323-d7c3f5a1e6f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751297c4-4449-4b96-8cb9-5720538d8f75",
        "cursor": {
          "ref": "56497ddd-9265-4659-baca-6a886c31acbd",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "0b3dfb00-b8c0-4b9f-9862-4344bc9a14c0"
        },
        "item": {
          "id": "751297c4-4449-4b96-8cb9-5720538d8f75",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8a9c672e-8de1-490a-8eb2-d98bbf125ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9981fd56-6099-469f-85bb-8c6ff48a80da",
        "cursor": {
          "ref": "35e0c8ac-7c78-4641-9596-03f807c73b16",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1a1cb7eb-20db-4d03-9ba2-198d6ecd2898"
        },
        "item": {
          "id": "9981fd56-6099-469f-85bb-8c6ff48a80da",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "83d09feb-65f1-4b4d-a4fa-32496119e8c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410d449a-1f24-4d18-a74f-85d1425bb003",
        "cursor": {
          "ref": "433cb2cd-245a-44ff-a124-597e2cdb69d3",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "74799a9a-8a22-4cc5-bbe8-cf0bc761064f"
        },
        "item": {
          "id": "410d449a-1f24-4d18-a74f-85d1425bb003",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "fe9a34d5-6b84-4b4c-b262-34244241f088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d42be9-4ca0-4d0c-93fc-e17169164d52",
        "cursor": {
          "ref": "a08810b9-8eb2-4304-8777-02399129db28",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2c1f4c92-6099-4cfc-a8b4-a3e2005679a7"
        },
        "item": {
          "id": "a3d42be9-4ca0-4d0c-93fc-e17169164d52",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "47c7f9ed-bdcb-42d4-92db-37fe37eea2a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6182e7c-9cf8-4170-81b4-60b6933536cd",
        "cursor": {
          "ref": "c4d8e326-009c-4e80-bc61-42f561eaf59f",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "78ca5153-5c95-46a1-82ff-a8c7af421bd3"
        },
        "item": {
          "id": "f6182e7c-9cf8-4170-81b4-60b6933536cd",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ab94f575-e3ce-4bfc-a972-74f29372776b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98890c87-0b69-49a6-ab29-0ccaebc2e9d8",
        "cursor": {
          "ref": "480ceb98-435d-4433-9670-1c10caebcb79",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "40cc60e7-bacb-4fe8-80e9-3e33041de471"
        },
        "item": {
          "id": "98890c87-0b69-49a6-ab29-0ccaebc2e9d8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ac52ab8a-dbc2-41fc-a7d2-2f9c903fd90c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "006ab645-19ba-4e17-b8e9-51a9b2f17dd4",
        "cursor": {
          "ref": "5ecb0141-bf5c-4135-ae0b-3fd60b1a36ed",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d3057b04-42de-4d0d-9941-f025490b5605"
        },
        "item": {
          "id": "006ab645-19ba-4e17-b8e9-51a9b2f17dd4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "dd8515bc-0b56-4f2f-be64-a9d0d992a5de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80b6684-98fe-4f70-8de0-e3c16fd674a8",
        "cursor": {
          "ref": "7e542cd6-8a58-4a32-aac7-3dd4fe96c630",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2da21553-c677-4b59-a780-b5d82d898531"
        },
        "item": {
          "id": "b80b6684-98fe-4f70-8de0-e3c16fd674a8",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "bcb0d32d-4b85-48bf-8eaf-54affc9932f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e772a2cc-cc2f-440d-b96a-9b38d73da215",
        "cursor": {
          "ref": "e0b5930f-4150-42d0-a018-437d93552405",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "fc303319-68c2-4b9e-920c-e8ba16222ac8"
        },
        "item": {
          "id": "e772a2cc-cc2f-440d-b96a-9b38d73da215",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "eb03199f-786d-4d9d-bd9f-9b8c0141565c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a7cfac-3f8b-4af6-8222-a4e862fee2ee",
        "cursor": {
          "ref": "f55784c0-ff18-40bb-8602-af1c93b36b25",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a764d6ca-0f9a-4e4c-a91f-f7c56ccc712e"
        },
        "item": {
          "id": "39a7cfac-3f8b-4af6-8222-a4e862fee2ee",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "8de82b91-662d-449c-b69e-77ac29d57ba4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 613,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52dd982c-38c8-47eb-80a5-c8f89b294c84",
        "cursor": {
          "ref": "fab5d9e1-f3e4-4d6b-a8d4-2206bddea5b2",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "31e8540c-58af-4377-89fb-1d35d81964ef"
        },
        "item": {
          "id": "52dd982c-38c8-47eb-80a5-c8f89b294c84",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f31df687-c85d-4b08-a3de-ca630529bc88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52dd982c-38c8-47eb-80a5-c8f89b294c84",
        "cursor": {
          "ref": "fab5d9e1-f3e4-4d6b-a8d4-2206bddea5b2",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "31e8540c-58af-4377-89fb-1d35d81964ef"
        },
        "item": {
          "id": "52dd982c-38c8-47eb-80a5-c8f89b294c84",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f31df687-c85d-4b08-a3de-ca630529bc88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f09ebfc0-ef89-4f2c-b6dd-a38fcc4c7561",
        "cursor": {
          "ref": "47fb1277-175e-4fcb-a15b-7e6abf7211bb",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5d6eb763-38fd-4c50-8e44-6d0d5a7109a3"
        },
        "item": {
          "id": "f09ebfc0-ef89-4f2c-b6dd-a38fcc4c7561",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b8961e4e-fe2e-47b1-b105-861c352afce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20207062-c955-4f0f-84a6-279b34428046",
        "cursor": {
          "ref": "591c91e6-2611-408b-878c-5ac21627b7de",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "24b1d54b-4c2a-4538-a9d1-fe890ce72ee4"
        },
        "item": {
          "id": "20207062-c955-4f0f-84a6-279b34428046",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "bb8ea402-11ac-4466-9d2c-ecdd7f216274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471a678b-2127-4fa6-972a-c349d3e71d4e",
        "cursor": {
          "ref": "de64eded-82af-426a-9cc0-249ea8f08ca2",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3511fbf3-b1e1-47be-a3bc-380906676193"
        },
        "item": {
          "id": "471a678b-2127-4fa6-972a-c349d3e71d4e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7b8fe22a-c5c7-4467-9b62-04248e734df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb20c81-798e-4295-a3ab-c460d7e4f123",
        "cursor": {
          "ref": "f4ba5cf2-e72f-42ea-9742-b9c9544604bf",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "cf553e7a-2122-40e5-b32c-093ab6200ac3"
        },
        "item": {
          "id": "3fb20c81-798e-4295-a3ab-c460d7e4f123",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e8e96dd9-837b-456c-879e-6a31899b33f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c68b689-7e4e-41f0-92fc-f3efcbb62137",
        "cursor": {
          "ref": "8bea7415-bbb0-4405-806f-ff7acae6b1e9",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "32f7e51a-4a6f-4185-9193-9a9744ece260"
        },
        "item": {
          "id": "4c68b689-7e4e-41f0-92fc-f3efcbb62137",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "af852919-251d-4a0f-9c9c-b7b95f891b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c8aed4-fa44-42e4-94af-899c555af30e",
        "cursor": {
          "ref": "62032e8a-bde1-4046-813e-1128375839df",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8a048f41-3f64-444a-9527-c533082eb4ae"
        },
        "item": {
          "id": "54c8aed4-fa44-42e4-94af-899c555af30e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d0275505-a502-44ff-a3ff-c5dc44130111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928d74da-f58f-4006-a52e-7cc7bb2aa676",
        "cursor": {
          "ref": "d8b4bea8-71c4-469e-a5e0-f2df5c0b4058",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0115c565-ce41-46d2-a4d0-7fe346f5f8cb"
        },
        "item": {
          "id": "928d74da-f58f-4006-a52e-7cc7bb2aa676",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6ea4b2fe-e9bf-457e-ad8b-677a86fdf622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f4fe2e-9003-4035-ae26-34002db53a79",
        "cursor": {
          "ref": "90e37dcf-9ca6-4968-8125-6b5fbcb17dd5",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ba26ba87-932c-4ca6-b717-b7a333690fe5"
        },
        "item": {
          "id": "00f4fe2e-9003-4035-ae26-34002db53a79",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1f152b61-87b4-4e49-8d4d-20ba4a6ceb38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae91a1e0-dbd0-4b1e-8f59-223972e84468",
        "cursor": {
          "ref": "07f30ae6-3c5e-46c6-a709-b223f0535141",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "666ab3d1-6a6e-4358-8ca5-d5a4597b9b05"
        },
        "item": {
          "id": "ae91a1e0-dbd0-4b1e-8f59-223972e84468",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d1ed0130-bfd1-4ee0-9950-337db4a8a44a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b38ffb-1b35-4c0f-a8f1-6acbd9f84590",
        "cursor": {
          "ref": "5e1bfca8-420a-4e9e-b5cf-cccb1dea3f7e",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0949b00a-2249-4154-ae16-8250931ab8f0"
        },
        "item": {
          "id": "96b38ffb-1b35-4c0f-a8f1-6acbd9f84590",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "58b0b2ee-86a6-486c-a1ea-00b31e66e079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febc95c3-698a-4898-b1a4-7fc9f49c790f",
        "cursor": {
          "ref": "1054dcb8-4e9e-4d68-9f9e-41250ec391c7",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a43edc8e-c59a-4ffe-bbd9-7af12819550e"
        },
        "item": {
          "id": "febc95c3-698a-4898-b1a4-7fc9f49c790f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2ae38a12-e2cf-477c-be29-4a0f4197b518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e38b06-eea4-4f62-a020-c34d84a534d1",
        "cursor": {
          "ref": "f56933f5-a43c-414d-b1d0-d7309a367a7c",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "bf655ba1-06f2-40fa-9070-9d9a74ffdb0a"
        },
        "item": {
          "id": "93e38b06-eea4-4f62-a020-c34d84a534d1",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "cf15cfb4-8b66-42ba-a802-d136067bb0fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a397e71e-04b6-4de8-947f-5fd08ba9498f",
        "cursor": {
          "ref": "3c5b9d00-3c2d-471b-8cbe-6eb2c4336624",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a3dc2c7d-9e15-4f9b-a4b6-b3fcd9792a12"
        },
        "item": {
          "id": "a397e71e-04b6-4de8-947f-5fd08ba9498f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "382af425-dc87-4f1c-97f5-245869db2cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79e2366-fa09-4e3e-9e11-c57a6fa657dd",
        "cursor": {
          "ref": "38117b11-01d7-44e2-93cb-c9f9bc3b711b",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "9dfbcf02-10c4-4bb7-85bf-45ee2d2e9ebd"
        },
        "item": {
          "id": "d79e2366-fa09-4e3e-9e11-c57a6fa657dd",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "5d408f35-4dc1-4392-b8f4-b82713ad0a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30080f6c-9032-4185-bb4d-9552335afc3b",
        "cursor": {
          "ref": "fb39daae-2589-486c-9789-58c59692744d",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e62f1953-4981-41c3-81ce-69297f0130e6"
        },
        "item": {
          "id": "30080f6c-9032-4185-bb4d-9552335afc3b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "48fae8a9-8929-484c-aea6-dbec3a1791bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee995de-cc4e-427d-9faf-96aa030c14fc",
        "cursor": {
          "ref": "67e1480c-d625-4253-a416-e74e968cba34",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2cbc7e40-016f-4bf9-86b6-85c362e7c97a"
        },
        "item": {
          "id": "0ee995de-cc4e-427d-9faf-96aa030c14fc",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2226dacc-eb6d-4e86-90aa-c89f8a17fc70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec791090-546d-4e10-9569-d487ef525b68",
        "cursor": {
          "ref": "e648e13b-a2fe-4444-a931-c54703596c1e",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1ff0f750-7224-40bb-9e5d-eba9520d8e10"
        },
        "item": {
          "id": "ec791090-546d-4e10-9569-d487ef525b68",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "746fab03-d4a6-41e1-8890-bc2153f96789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd32cf01-cb25-46bf-adcb-68371056b3b1",
        "cursor": {
          "ref": "64ec0bd7-7e35-4282-b0f5-f3c6ae31c684",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "efcdbc0d-f3f5-47ae-99a0-459378d7bd94"
        },
        "item": {
          "id": "dd32cf01-cb25-46bf-adcb-68371056b3b1",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "9d45762b-dc97-4efe-86fd-bab208f1a3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f7253b-ea3f-4d10-9e37-072e25c31608",
        "cursor": {
          "ref": "ab7fd064-9859-4492-8acf-b562c7314822",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "70b2a41d-3ae8-423b-b48c-990a7cf40637"
        },
        "item": {
          "id": "a1f7253b-ea3f-4d10-9e37-072e25c31608",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "183398f8-65b1-4aaf-a6a8-cde40cecacdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248e78f5-a875-4291-83ee-8cb042429127",
        "cursor": {
          "ref": "15ec1daa-b363-49d7-a93e-0bc57f3eef2d",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "af5567aa-00b2-42c0-a736-5af181c0ea37"
        },
        "item": {
          "id": "248e78f5-a875-4291-83ee-8cb042429127",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "be8c831e-6341-4b17-8605-807f6cbeb841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b204427-01e8-49ee-a448-a75fee2be7c8",
        "cursor": {
          "ref": "68adc003-dd75-4914-8d3d-12f48fe33f59",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "2aec4b0b-63cc-4624-be1a-01f0d3198b88"
        },
        "item": {
          "id": "2b204427-01e8-49ee-a448-a75fee2be7c8",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7577e186-b192-4e57-98ed-746cefa40021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a908ef-c8c0-47c6-b199-62e95cc67038",
        "cursor": {
          "ref": "a3d98434-fa6e-4d78-984d-aea616708a20",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "64f81aa5-043b-4096-98e5-78793fc1df33"
        },
        "item": {
          "id": "c5a908ef-c8c0-47c6-b199-62e95cc67038",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "414c41b2-8484-4823-aaf2-b6a122d71fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13120e1b-4322-4c67-aa7a-52d2049a24c3",
        "cursor": {
          "ref": "3ef962f8-51b7-4312-a3f5-7a14b114279a",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4ed33e9b-b10d-47b9-b616-58bc43db8c4f"
        },
        "item": {
          "id": "13120e1b-4322-4c67-aa7a-52d2049a24c3",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b26218d1-0ab1-4185-a260-14604be6b61c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39bb55f9-eed7-4ee6-95a7-92cb3e3bf258",
        "cursor": {
          "ref": "f529ebca-e323-4d6f-b244-db6be029db33",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "491387ee-1e08-4106-bdea-3b00d6adafc6"
        },
        "item": {
          "id": "39bb55f9-eed7-4ee6-95a7-92cb3e3bf258",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "b07639b2-c8f9-448c-898a-e2332c622040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e42a5fe-c22c-442a-a744-8f254360ece7",
        "cursor": {
          "ref": "0cd5f488-17c9-4773-80e8-94095d09f1d7",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e0709a58-bbba-479b-81b8-cafcd5dfe8b8"
        },
        "item": {
          "id": "4e42a5fe-c22c-442a-a744-8f254360ece7",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "81b0bf74-45d4-40f3-bed4-001e9e73d9ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856085be-3f64-44ff-bc6f-fb2805c3cc60",
        "cursor": {
          "ref": "8fc18584-1150-4b35-841e-845d23380b18",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9e91e752-fb30-48ab-bea9-817317b1b9dc"
        },
        "item": {
          "id": "856085be-3f64-44ff-bc6f-fb2805c3cc60",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6cd4194d-8ce5-485e-8e27-605978ad7995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351834f5-9e8e-408c-b129-5b3cb171281e",
        "cursor": {
          "ref": "9704b7e9-76fb-4177-ab4c-2942b131d731",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4e1fbe91-6348-4a80-8a93-82855c0c1436"
        },
        "item": {
          "id": "351834f5-9e8e-408c-b129-5b3cb171281e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "80e5fefb-9fc6-4d87-9842-d69213121c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977fabfa-49e8-4eaa-ab3b-ec157fe12c70",
        "cursor": {
          "ref": "444c21ec-dff9-4fba-98aa-3f99e3cd47ba",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "1d5ffc41-9616-46fd-ab08-a58a96d73bf7"
        },
        "item": {
          "id": "977fabfa-49e8-4eaa-ab3b-ec157fe12c70",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ec43f276-ae52-4c16-b470-33a89b1665ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24cd59b3-f44e-45e4-849b-ad957185209d",
        "cursor": {
          "ref": "d9a52ac7-8f11-420d-baa2-3e8df717221d",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "9976b8a1-8e11-42c5-baba-88b362a1cec2"
        },
        "item": {
          "id": "24cd59b3-f44e-45e4-849b-ad957185209d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ad1b8fe5-cafe-42e6-baf5-dcc4202c6ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 992,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558e8ae2-e9c8-40c6-8790-69c9b67e6617",
        "cursor": {
          "ref": "1f81c92c-37ef-46f0-91be-27c4cdff599e",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b0a76544-383c-4894-9a1c-36a6517286fd"
        },
        "item": {
          "id": "558e8ae2-e9c8-40c6-8790-69c9b67e6617",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "87a4166e-e9b6-40f0-9e87-ceb72fe3bb34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 842,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab7e9fc-11c6-459b-8c7d-00774553e039",
        "cursor": {
          "ref": "14b0b90a-a65d-4c67-811f-30386e29854d",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "226c1d83-7778-482d-ba31-0315859c3a14"
        },
        "item": {
          "id": "dab7e9fc-11c6-459b-8c7d-00774553e039",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ea706685-c03a-417e-b98a-5bdc034c5b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 944,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed406ae2-ad57-4bba-b1b2-7fe312afaf46",
        "cursor": {
          "ref": "d85b31bf-6337-41fe-a433-50c6f006c42a",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "eaf347d0-fda8-40ce-ae90-3a965110c461"
        },
        "item": {
          "id": "ed406ae2-ad57-4bba-b1b2-7fe312afaf46",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e6da87b1-8426-43de-adf9-5ec2b77cc17e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1711,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a81d08-5159-410e-8e42-c13796fc21ed",
        "cursor": {
          "ref": "b3e54335-87c0-4b3a-ac39-005329793d7e",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "73e15dcd-a0d2-491d-aa75-01d8300b85dc"
        },
        "item": {
          "id": "e6a81d08-5159-410e-8e42-c13796fc21ed",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f479fa16-b001-4261-ad99-16520a90c7c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1776,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a146f89c-4750-4d95-b86e-cad8c6b907ef",
        "cursor": {
          "ref": "4b919eeb-fe61-4f57-9259-71a649213b3a",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "905288d9-64af-4ee8-a200-943e21f63fbe"
        },
        "item": {
          "id": "a146f89c-4750-4d95-b86e-cad8c6b907ef",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "01cec4a7-aeff-45f9-9684-89a311d2e4d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1230,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc836e5-8f01-4c48-b732-71b85dc286e8",
        "cursor": {
          "ref": "57db9a9f-dc34-45c5-8af3-aa9b56e3758e",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "06dbbc98-ffbd-4e60-96e2-aa8fe6397f2b"
        },
        "item": {
          "id": "cdc836e5-8f01-4c48-b732-71b85dc286e8",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d6f62d8e-3577-4adf-8b71-37cc375a1e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1750,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e59e1e9-8bb0-4936-92d2-c3e0646cb5fc",
        "cursor": {
          "ref": "aa9aa3d6-595f-422e-b773-7c2cc1059179",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d6779507-9d79-4692-b0cd-75eec1449f4f"
        },
        "item": {
          "id": "0e59e1e9-8bb0-4936-92d2-c3e0646cb5fc",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "acb7a04b-9423-4189-b3f7-fa9c633469f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 942,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e3be9f-988d-4b84-8c00-5b5beb2b1b6e",
        "cursor": {
          "ref": "3981c3d1-1ad8-43c9-9abd-3270627d7a40",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "58838427-827f-46f4-95f7-c62e7cfd07e4"
        },
        "item": {
          "id": "f8e3be9f-988d-4b84-8c00-5b5beb2b1b6e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "90bc1fcb-ac65-49e3-9928-24ecece6f4d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865a9538-4f64-4501-926f-66453bdebc6d",
        "cursor": {
          "ref": "131ae8b6-f077-445c-b334-b0f29066bc4e",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "2996ee25-fa91-44e8-9858-3779650aabe8"
        },
        "item": {
          "id": "865a9538-4f64-4501-926f-66453bdebc6d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7ec35a40-49c1-46a1-a3be-f5a35643aced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "634e599f-f49d-49e1-bf47-f1520a4e1528",
        "cursor": {
          "ref": "49950caf-5089-4dab-af29-65cce7154136",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "00beaef8-1fed-43ee-87dc-9c8a66d412c0"
        },
        "item": {
          "id": "634e599f-f49d-49e1-bf47-f1520a4e1528",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e8ee7aed-e395-4c25-85f9-2c08a2657946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8fa5e4-b63a-4819-8195-1e132ce47e31",
        "cursor": {
          "ref": "bfcf64bc-fd8d-4cf6-a508-f8a18dd01aa6",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "4c6acc6b-b519-4507-822a-3d225361c6fc"
        },
        "item": {
          "id": "da8fa5e4-b63a-4819-8195-1e132ce47e31",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "03f38b76-c339-43a7-9c49-767c9235519c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f34951b6-fe69-4701-8023-387dd7859448",
        "cursor": {
          "ref": "5d8d953b-e6f7-45fc-94ea-da8e1d948639",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f749f466-cf79-44f4-a12b-dab4562aefdd"
        },
        "item": {
          "id": "f34951b6-fe69-4701-8023-387dd7859448",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "85ef8cad-410e-4f02-b31f-c660a32e65c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1322,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12953ba-2b5f-41fb-8360-6b7f0e6fbffe",
        "cursor": {
          "ref": "643d3eb1-f357-4315-9e3d-b7134ea31103",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c012fa17-f8a5-42ba-a5d7-fbefaae77fcc"
        },
        "item": {
          "id": "f12953ba-2b5f-41fb-8360-6b7f0e6fbffe",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ca9b28e3-62b3-4852-8915-407b79a6dff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 879,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fdf3c91-7b98-47ec-9ea8-1b8ef88a4126",
        "cursor": {
          "ref": "69014524-cccc-4838-93a4-ff6694e91a14",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d6bb6c41-0134-4148-a35a-17a1038b794d"
        },
        "item": {
          "id": "9fdf3c91-7b98-47ec-9ea8-1b8ef88a4126",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d4ce1e39-f0c3-484d-ac30-782c5f0eb77a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 868,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac0f672-269c-4288-853f-77bce0918a0f",
        "cursor": {
          "ref": "29616221-82d8-4bae-b5c4-d1b39e7f17c7",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d4ab32c6-6126-4bfa-b42a-4c9f0ccfd6bf"
        },
        "item": {
          "id": "aac0f672-269c-4288-853f-77bce0918a0f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5701647d-b110-4736-87ee-6c14ae9d7fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9cf52bc-1ec4-4c08-b8d7-b544ee9a78cd",
        "cursor": {
          "ref": "2a838ab8-a905-4a9a-97b7-2aee021283f5",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "33c738c3-943f-4463-8380-3802b4ff34ae"
        },
        "item": {
          "id": "b9cf52bc-1ec4-4c08-b8d7-b544ee9a78cd",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "bddca0d0-59ad-4cd7-872d-d5f68b93420c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1330cb6f-4fbd-41dd-b832-d97f9c70df10",
        "cursor": {
          "ref": "eebf6516-8486-46b1-9790-e3a7508f8d06",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c5151974-0ed2-4463-b04f-d976824f6e27"
        },
        "item": {
          "id": "1330cb6f-4fbd-41dd-b832-d97f9c70df10",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "dc9a6739-df62-4503-bbaa-94fba616eed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea1963ee-4257-4448-9f76-226d1e49405d",
        "cursor": {
          "ref": "97b97dc2-2680-4e18-944a-7ae50ae89d56",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b41e7b75-683c-47b6-954d-5a82c49878d4"
        },
        "item": {
          "id": "ea1963ee-4257-4448-9f76-226d1e49405d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b2456ec9-8182-4f5b-9a60-1375df5bc2fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "958f4a6a-c271-4ef9-81a1-6ea7f6c78a23",
        "cursor": {
          "ref": "e522b610-e8f6-4487-b14e-669ae443f4a8",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "cdff7bdb-da7c-4cf3-8e31-82bf78a4cd07"
        },
        "item": {
          "id": "958f4a6a-c271-4ef9-81a1-6ea7f6c78a23",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ee133fee-e345-4e19-a42f-eccc264182d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22a9799-8f31-4bae-9159-9c37d622b798",
        "cursor": {
          "ref": "5deaee8d-f958-4989-8ec4-1950a3020d06",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f97a3028-c49d-4e97-b9ce-8ff4d5d67f23"
        },
        "item": {
          "id": "e22a9799-8f31-4bae-9159-9c37d622b798",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4cccb609-12ba-4198-a52e-1976bed6bab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17815d0-3485-43cf-9a31-d01c5f4661cf",
        "cursor": {
          "ref": "68fe63b6-c989-4b90-919e-cbe24c3dc437",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "fd8c0270-a93a-4497-aa80-d4cc3324e821"
        },
        "item": {
          "id": "a17815d0-3485-43cf-9a31-d01c5f4661cf",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1d67b22b-492d-47a2-9fa2-0e0f7321c497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273a2915-f339-4d8d-9274-8f55004fc3b9",
        "cursor": {
          "ref": "501df2e8-a248-4d72-b5f7-4af3733aec7e",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d23804c1-416a-4934-9744-4aac3e821933"
        },
        "item": {
          "id": "273a2915-f339-4d8d-9274-8f55004fc3b9",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "12f0113e-f600-4d3c-b048-c3c5613d41e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86e8ba5-66cf-4b67-9cc8-cbd808c80b44",
        "cursor": {
          "ref": "b22ac5c6-1246-44a3-94e8-89faa20df15e",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f9c19f8d-19c4-488d-89d6-4d20b5b6a5f3"
        },
        "item": {
          "id": "c86e8ba5-66cf-4b67-9cc8-cbd808c80b44",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f405e1e5-0930-4d88-bcb7-c35074da459b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d704fec-d8fb-437a-ba6e-83369fcde57b",
        "cursor": {
          "ref": "f1e34f5c-6fd1-4acb-88fe-36105177e500",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "bc107315-4f01-44e8-ac44-b081fd54424a"
        },
        "item": {
          "id": "3d704fec-d8fb-437a-ba6e-83369fcde57b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d8dde52a-b935-46a4-a5b3-3e04df9cadb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fdde15a-1665-4509-89be-dbc6993f9ac3",
        "cursor": {
          "ref": "8940b692-ba2a-4109-a7ed-61c602ffb15a",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ad84d397-64bf-42c0-9454-2594b65710fd"
        },
        "item": {
          "id": "6fdde15a-1665-4509-89be-dbc6993f9ac3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8ae469bf-fc2f-46de-bbb2-dac8b30db68d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "947b5ec3-2a6a-4729-b8e8-1c12cea2b82d",
        "cursor": {
          "ref": "0fdb4311-8909-4045-9140-1ad440d35433",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2b5ea597-31d5-4fb9-80aa-e2195cfdfbf9"
        },
        "item": {
          "id": "947b5ec3-2a6a-4729-b8e8-1c12cea2b82d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3ad31838-0f89-4f07-96f5-ccff1dcd2fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f2efe5-79f7-40a3-a8f4-31fb26e496a1",
        "cursor": {
          "ref": "915ef018-5ba6-4e47-a63b-900e4344869c",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a2c99b72-c2f8-4d62-a39e-a7563198c651"
        },
        "item": {
          "id": "44f2efe5-79f7-40a3-a8f4-31fb26e496a1",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a3af2a7c-286a-4757-b000-7a45daec3109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab9efca-ac90-4a0d-aec4-eaf6386438aa",
        "cursor": {
          "ref": "fb8b9ad8-eb65-48ab-b031-4fae24ec62ce",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b3e72f3a-9ed3-4a57-9c0b-408a32604876"
        },
        "item": {
          "id": "eab9efca-ac90-4a0d-aec4-eaf6386438aa",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2eb617a8-f618-4f26-9c24-3d0e3df32e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68be2456-5d0a-49db-a292-38995c3dc448",
        "cursor": {
          "ref": "91718dba-8406-469d-93f8-4d0ec7b6f9c9",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8e3f50bb-b6e4-4b0d-a53a-9291f6b35bb7"
        },
        "item": {
          "id": "68be2456-5d0a-49db-a292-38995c3dc448",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c5a0ca7b-ead6-4d3e-88e3-e2daa4a63228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5957cae-ea47-4eb3-8715-e842ae231d09",
        "cursor": {
          "ref": "0e9851ef-fdf8-4f12-bf4b-6421042b33a2",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "79292569-c0a1-42ce-8962-7cfc57fb9d80"
        },
        "item": {
          "id": "d5957cae-ea47-4eb3-8715-e842ae231d09",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "4daed577-4e2a-459c-a3db-539e7d12cfae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610d389a-b635-4435-94c5-fc6daa6fb39f",
        "cursor": {
          "ref": "1258992c-63a7-4952-b884-2a72d05ca587",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "71d5afbc-775b-466b-9a19-0accdc0decea"
        },
        "item": {
          "id": "610d389a-b635-4435-94c5-fc6daa6fb39f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "306256f6-9a89-4499-9458-13311dc9189b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d3a4a1-dbc5-4c04-8ffd-68f76344275f",
        "cursor": {
          "ref": "668c80ba-d5e9-4125-a8eb-c6c09aa077b9",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "bf1ae30d-a356-44bf-8bee-df89353f3706"
        },
        "item": {
          "id": "a9d3a4a1-dbc5-4c04-8ffd-68f76344275f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "72b12b96-565d-4b3f-94c1-8634f6595cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c88bacb1-2d0e-4afb-95a1-1b4b46bc0514",
        "cursor": {
          "ref": "3a1d6608-b703-4c84-a958-b3609532c2f2",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7d82fe78-0411-4664-9416-e957a5005c4c"
        },
        "item": {
          "id": "c88bacb1-2d0e-4afb-95a1-1b4b46bc0514",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "75c5cadd-287f-45c7-bc64-388091943e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dba7559-0137-492f-bfee-67427d2741e2",
        "cursor": {
          "ref": "efa02f4f-d7c3-4800-9242-c778e6e64c9f",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4567207a-0005-4a60-8345-65d92d01351f"
        },
        "item": {
          "id": "7dba7559-0137-492f-bfee-67427d2741e2",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8d93cc77-e93d-4602-9085-756436edf85f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d2b56f-fc5e-44e4-bb66-c9eaed0d03c3",
        "cursor": {
          "ref": "240c9254-a9b3-4cb1-9527-cd3a005a758f",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "7ddb7315-4dda-4c64-90de-327ecd9dcbf5"
        },
        "item": {
          "id": "98d2b56f-fc5e-44e4-bb66-c9eaed0d03c3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b946d510-5893-4e42-9305-0bc069b55827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf9f2cd4-63a5-4a56-833c-d1c88803c3c2",
        "cursor": {
          "ref": "b5db4a66-e65f-4d9f-bb8a-223e68c49552",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "de0bb712-815d-45f6-bcfc-8cbcd1f236f3"
        },
        "item": {
          "id": "cf9f2cd4-63a5-4a56-833c-d1c88803c3c2",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "781074f1-5a40-4f3f-88d3-f1a8b443593f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d897d2-fbae-4e10-8210-6b91bbe519a4",
        "cursor": {
          "ref": "bd1e26e7-46d6-4471-b053-7a234367e490",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d1e68a0e-5a32-4f6e-94e7-fa8371fca094"
        },
        "item": {
          "id": "69d897d2-fbae-4e10-8210-6b91bbe519a4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3f1c4489-b80f-4fc0-a56b-466f692c0ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d56013-f6bb-4477-a2dd-e224e6213941",
        "cursor": {
          "ref": "6318885a-1466-428d-8338-a6f3c0929554",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c1143e61-9cca-4eec-98e4-f62abd7abb52"
        },
        "item": {
          "id": "e9d56013-f6bb-4477-a2dd-e224e6213941",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "88dc5294-1879-443a-a132-c594c54e4f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00090e5-0a6b-4ba1-bf40-d9977b649ad9",
        "cursor": {
          "ref": "6024fc79-c401-4c9b-bbb5-aa12db389d00",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5ff9a927-415e-4018-b293-63cefb3552f6"
        },
        "item": {
          "id": "e00090e5-0a6b-4ba1-bf40-d9977b649ad9",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "36a2a524-4fe3-4820-bc44-4b867849e5ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0efa3b48-7536-4ccf-8df7-711370a3823d",
        "cursor": {
          "ref": "573acfe9-c141-4908-929b-5b4ee44c23d8",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a7f5262d-6f57-4039-a95b-f16aba94e4aa"
        },
        "item": {
          "id": "0efa3b48-7536-4ccf-8df7-711370a3823d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4565bdab-a712-41bf-835f-15e4501b2ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77dbcce3-0944-43dc-a85d-1e4ca7b854b1",
        "cursor": {
          "ref": "f3043be4-011b-4c1f-ad0f-fbbe5d839912",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8720ce65-ffac-4246-a634-ef8ff4c2393a"
        },
        "item": {
          "id": "77dbcce3-0944-43dc-a85d-1e4ca7b854b1",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d991148a-6efc-4fa0-9a5b-83197f633bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b8ff79-2e8c-4311-8816-6fca6afef7fb",
        "cursor": {
          "ref": "46c60d6a-b417-4851-9f1b-c126d03b760f",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "7dbba274-d56f-4998-8784-719e0ce3f117"
        },
        "item": {
          "id": "84b8ff79-2e8c-4311-8816-6fca6afef7fb",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "636f2081-ab22-43f2-a84b-1b30e0cbc722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e964de5d-1a9d-4517-ba60-37cc5250686f",
        "cursor": {
          "ref": "522458d0-28da-4cf2-af4a-a609fc58d28c",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "187e7316-7356-4f10-bb4c-053f43926599"
        },
        "item": {
          "id": "e964de5d-1a9d-4517-ba60-37cc5250686f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f47c13af-b8b5-48e1-bc89-b9b633969b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8f3106-ea58-4b84-948a-482466717fa9",
        "cursor": {
          "ref": "1aba4cfd-f36c-40f5-8f39-a405d19fef65",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ed0c486e-42df-4b3e-b5b7-5cdb3f9faa6e"
        },
        "item": {
          "id": "5a8f3106-ea58-4b84-948a-482466717fa9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0603ae98-1cae-4a06-8cdf-7b38b17cd408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824c5058-8df6-4554-a7e9-3f64fb078be1",
        "cursor": {
          "ref": "7525f9a2-b6ef-44db-9dda-8eda2df38b32",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "93a445c7-9c62-48d9-8b74-1106dcfcefd2"
        },
        "item": {
          "id": "824c5058-8df6-4554-a7e9-3f64fb078be1",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f8ae7ac8-1710-426f-af60-aff823d1998c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0353c78b-6966-4378-8af3-3564c690d784",
        "cursor": {
          "ref": "df07f556-8174-4b27-bac1-7c6853fb375d",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "1424b064-0d88-451d-ab33-fb6848506137"
        },
        "item": {
          "id": "0353c78b-6966-4378-8af3-3564c690d784",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ac892f80-6734-4e40-9f6d-049ecb4eb070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9464b1e6-da2a-4a60-b5a7-8892df75d604",
        "cursor": {
          "ref": "7db81e6b-98b8-4d91-974b-e3997932aca9",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8d086300-6593-4eff-a341-b0d40d7f9636"
        },
        "item": {
          "id": "9464b1e6-da2a-4a60-b5a7-8892df75d604",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "19154a4c-c169-4b2c-b998-58bc3dd87844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f996b6-d4e4-4ba1-acda-9d216d5a8b09",
        "cursor": {
          "ref": "e9ec16fa-d258-4e44-be13-82bf832c9ea7",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "10943013-44ed-4a41-97ac-52e63235a8a0"
        },
        "item": {
          "id": "14f996b6-d4e4-4ba1-acda-9d216d5a8b09",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4cf9d1fe-b049-4297-9593-ac5b6d3a2fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9c2568-c4dd-4b38-8661-a65b292949b8",
        "cursor": {
          "ref": "c0a06e65-fdb2-4be7-84dd-6236bfc0d498",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9abb4c08-1de2-47e9-b94a-0f79b2983a22"
        },
        "item": {
          "id": "ba9c2568-c4dd-4b38-8661-a65b292949b8",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "02849eb5-8b5f-4475-b7f5-e260eb776f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66861786-ed17-4443-a728-578b57e13d40",
        "cursor": {
          "ref": "dbed67f7-bb9b-4098-ae78-ac3674599d21",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "09c47976-7e25-4608-98ad-ab4bc728c319"
        },
        "item": {
          "id": "66861786-ed17-4443-a728-578b57e13d40",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1a5354de-2f2c-4fe8-8d7a-0457c55ff7e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a14425-1efe-469c-96e2-9905ec2529ca",
        "cursor": {
          "ref": "82e615d5-b685-44fe-abf5-b487c5dbf30f",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7e76d051-f43a-42a7-b100-5d9d7c9049e3"
        },
        "item": {
          "id": "b8a14425-1efe-469c-96e2-9905ec2529ca",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "94b0f801-bb2f-40cd-ad54-04dc90cc495b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18542393-c215-4376-8959-91d559090f75",
        "cursor": {
          "ref": "b3a80efe-d7f9-442c-a7b6-8b8aeeacdea6",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "3090f1b7-70f9-4cc8-bf38-3460063662e3"
        },
        "item": {
          "id": "18542393-c215-4376-8959-91d559090f75",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c0160b01-9c4f-4fba-be2a-ad641e1c362f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0f71ef-a0ea-4350-8bf0-589af8a02d8c",
        "cursor": {
          "ref": "d35c78ca-4497-4714-acaf-0658b4c73618",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "2d82feef-dbda-4fc1-83fe-74e048f810f3"
        },
        "item": {
          "id": "8f0f71ef-a0ea-4350-8bf0-589af8a02d8c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c14e4e88-9e0d-4d51-8295-b06f5dbb26b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47297ece-2356-4b13-934f-4b83169edc47",
        "cursor": {
          "ref": "52e31ee0-3468-4e64-a795-dced0a06b2f9",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "89d53b76-01ba-47cb-bde7-35890f4b196c"
        },
        "item": {
          "id": "47297ece-2356-4b13-934f-4b83169edc47",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "525683bf-1294-40c8-82cc-17f51d6fb6fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13565c3-952a-4093-bde6-68652b9ef05f",
        "cursor": {
          "ref": "54de0704-4068-4b1f-b0ae-a54d5427f0e3",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "36f6cd47-cb84-41b0-9d40-0675c94d98c3"
        },
        "item": {
          "id": "f13565c3-952a-4093-bde6-68652b9ef05f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "448fea22-caa9-4a52-a1e4-8397d5898017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3360374-99d5-4139-a16d-2af39b75c07f",
        "cursor": {
          "ref": "599945d7-6e4b-4485-b0f5-2cae39ae8ef1",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "cb19bfa1-f98a-4c8b-88a6-9fba6ae0deef"
        },
        "item": {
          "id": "a3360374-99d5-4139-a16d-2af39b75c07f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "bf208b3a-88e4-4f3b-9447-2a27c4bc21ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1129,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3def0d42-9807-464b-90fd-b5a9f6bbc5e7",
        "cursor": {
          "ref": "84767656-f9f2-4cf0-b0aa-ed74b3244306",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "6a5d53cb-0201-4a58-8909-b54c2bd5fc7c"
        },
        "item": {
          "id": "3def0d42-9807-464b-90fd-b5a9f6bbc5e7",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2711bdc0-6044-4b72-9449-52c322373f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 884,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f664e4d-cc60-45de-9a02-ee0132ced4ca",
        "cursor": {
          "ref": "8ca2eac6-5272-48f8-9a83-2f6d01b11250",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ff692e8b-1b84-4dbd-a652-92ee35186041"
        },
        "item": {
          "id": "7f664e4d-cc60-45de-9a02-ee0132ced4ca",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a64bc493-971a-45cf-a054-469a87e27e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1380,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179562bd-427d-4512-9e4b-09ccf6dcef08",
        "cursor": {
          "ref": "e9b82bd4-f815-4bfb-9f56-e6ac49ac857d",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7b6ec7d1-7697-4f48-86b5-f6516a6ea9e7"
        },
        "item": {
          "id": "179562bd-427d-4512-9e4b-09ccf6dcef08",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f770a570-e42c-41f6-a9a9-296f60ba477b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1152,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb81295a-cdcc-4c0c-98a5-729651aa46ce",
        "cursor": {
          "ref": "a7d5c32a-bdca-4bff-b17e-d7bfafc4a849",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d626a2c5-3c98-4fc4-8535-19467a250be4"
        },
        "item": {
          "id": "cb81295a-cdcc-4c0c-98a5-729651aa46ce",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "520b7355-50c0-4d75-a17a-67b4128fdad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b71acc-ff45-46a8-ae19-e7469b681f50",
        "cursor": {
          "ref": "81b0ddd8-2b04-401d-ba7a-600ef5c1634b",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "978c98a2-d014-455e-8a91-19bebd0ef62f"
        },
        "item": {
          "id": "d1b71acc-ff45-46a8-ae19-e7469b681f50",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "310739a1-7b65-4f17-a927-eb85dd232206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b04bc07-f723-4cff-bdee-64fa7378960e",
        "cursor": {
          "ref": "6e214aa5-52b5-4985-9170-84beec768e8a",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "269d78d7-4964-4a9e-bd04-62c9fe048e66"
        },
        "item": {
          "id": "2b04bc07-f723-4cff-bdee-64fa7378960e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "24901d9d-3ac0-4933-9fdf-9e216508a251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb778ab-3ca2-485e-ba8f-71f6f0d564d6",
        "cursor": {
          "ref": "a80f69fe-9543-48ff-bbf7-29ce3221d34d",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "7549a8d9-686b-4c9f-8a28-afea23dcf751"
        },
        "item": {
          "id": "cfb778ab-3ca2-485e-ba8f-71f6f0d564d6",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "cf2df450-adc1-4d3f-94b6-eff75c8d099c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7978cfd9-71a4-4ecb-838d-aa3cd91c6cca",
        "cursor": {
          "ref": "f3433b96-9690-4402-9493-e7a1622b96ab",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "afbe3a91-059e-481f-a522-15d57ee40919"
        },
        "item": {
          "id": "7978cfd9-71a4-4ecb-838d-aa3cd91c6cca",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "91266658-e2e1-43ed-abc6-555e6e8fc69e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72833981-17b3-4e04-b085-c7cb977357a1",
        "cursor": {
          "ref": "26810852-2571-4709-8c16-a66c05626728",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "5d78ceec-5b2a-4c0e-8f17-10a9f55ecefa"
        },
        "item": {
          "id": "72833981-17b3-4e04-b085-c7cb977357a1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "fc561114-e844-465b-ae1f-bc4d45b1309d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c281bc49-c92f-4f80-a32e-8fceccd3982a",
        "cursor": {
          "ref": "30acb4ac-a4b8-4bda-ae6a-85939ecb3088",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ec4399eb-aede-4dab-8155-56d0b2d42915"
        },
        "item": {
          "id": "c281bc49-c92f-4f80-a32e-8fceccd3982a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ac23dafa-7519-451c-94d2-6378f270e883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e58594-1af5-42fc-9a78-015f9ffd6fea",
        "cursor": {
          "ref": "860f362f-c878-462d-bdcc-36066bb06bad",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "452c736e-e0e2-42c7-b5a5-8bc6319a8a7a"
        },
        "item": {
          "id": "42e58594-1af5-42fc-9a78-015f9ffd6fea",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a134101c-ef73-4186-bf45-3029f16ed717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38ad8cf-3414-4139-bd09-cd78c8731270",
        "cursor": {
          "ref": "01682e26-23af-4c84-84f2-935c376b5d23",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1c4200b7-5f3b-4331-962f-8c64493a7b50"
        },
        "item": {
          "id": "f38ad8cf-3414-4139-bd09-cd78c8731270",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "8806b8f5-2652-4d82-b7d5-68b43487627b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a6f446-d806-497f-a3b0-59db30abdf4a",
        "cursor": {
          "ref": "2286dca4-3657-40f6-be61-1597ea6a8b90",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "789dafb2-b150-4e08-8224-57a0f24f9442"
        },
        "item": {
          "id": "f6a6f446-d806-497f-a3b0-59db30abdf4a",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "eea1334c-1b58-42a9-90b2-653d0529b598",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 539,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93840bf4-7389-4dc6-b7f5-a10ea1a5db49",
        "cursor": {
          "ref": "460f9ec4-3c9f-4cda-b5a9-49ffb960f79a",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "74f80e58-da52-4636-acb4-8467a81a497f"
        },
        "item": {
          "id": "93840bf4-7389-4dc6-b7f5-a10ea1a5db49",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2d3f88cd-60e1-4d7b-b83f-8788a1218b04",
          "status": "OK",
          "code": 200,
          "responseTime": 624,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "6523b5bb-f1a0-41d6-87e1-500c3785ab29",
        "cursor": {
          "ref": "4b3ede96-a524-47d1-bbba-d308bfc12501",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9df75ee8-9927-41fe-80e6-196363a089ee"
        },
        "item": {
          "id": "6523b5bb-f1a0-41d6-87e1-500c3785ab29",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4106ac0f-931b-48a5-9586-1fc91a75e612",
          "status": "OK",
          "code": 200,
          "responseTime": 2241,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8e1cec-adc7-40b5-8ac4-b8d261097ff2",
        "cursor": {
          "ref": "8e41619a-c3d4-4d2f-a897-6267a7c25c51",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "53215354-a3d5-4853-a68f-4fea57a34fac"
        },
        "item": {
          "id": "7a8e1cec-adc7-40b5-8ac4-b8d261097ff2",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "dc0bf349-978f-4b8d-b0fb-028d1407130e",
          "status": "OK",
          "code": 200,
          "responseTime": 1978,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe1c241-bea5-4631-b75b-41cd3c58a24d",
        "cursor": {
          "ref": "da60c70f-a950-47e9-9269-680da39cfe87",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2f467a81-f7d1-4715-aa92-7bbe80bcccce"
        },
        "item": {
          "id": "abe1c241-bea5-4631-b75b-41cd3c58a24d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ca3239bb-57bb-4b87-954a-fc37a6f72073",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe1c241-bea5-4631-b75b-41cd3c58a24d",
        "cursor": {
          "ref": "da60c70f-a950-47e9-9269-680da39cfe87",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2f467a81-f7d1-4715-aa92-7bbe80bcccce"
        },
        "item": {
          "id": "abe1c241-bea5-4631-b75b-41cd3c58a24d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ca3239bb-57bb-4b87-954a-fc37a6f72073",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe1c241-bea5-4631-b75b-41cd3c58a24d",
        "cursor": {
          "ref": "da60c70f-a950-47e9-9269-680da39cfe87",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2f467a81-f7d1-4715-aa92-7bbe80bcccce"
        },
        "item": {
          "id": "abe1c241-bea5-4631-b75b-41cd3c58a24d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ca3239bb-57bb-4b87-954a-fc37a6f72073",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10297696-b8ce-461a-befa-17791f715d80",
        "cursor": {
          "ref": "bc598f4b-9e9b-4060-b3cb-ed61a354e83e",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "677aad22-e6bb-4630-a9a2-b425b3c187bf"
        },
        "item": {
          "id": "10297696-b8ce-461a-befa-17791f715d80",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "cc270b5e-62e1-4462-8335-4671720d45b4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 427,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20a3e87-6553-4f6e-93ea-b53c2673ff9b",
        "cursor": {
          "ref": "03964d0c-9bf8-4fff-9977-8aefc1aa8750",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2e224c43-bbfa-4fc6-89b6-95b069984ece"
        },
        "item": {
          "id": "c20a3e87-6553-4f6e-93ea-b53c2673ff9b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4455b977-999c-4fc3-8ba5-34492e1730b2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20a3e87-6553-4f6e-93ea-b53c2673ff9b",
        "cursor": {
          "ref": "03964d0c-9bf8-4fff-9977-8aefc1aa8750",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2e224c43-bbfa-4fc6-89b6-95b069984ece"
        },
        "item": {
          "id": "c20a3e87-6553-4f6e-93ea-b53c2673ff9b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4455b977-999c-4fc3-8ba5-34492e1730b2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05cb2b72-79d5-4ae8-849e-255a7b32b968",
        "cursor": {
          "ref": "398e2200-d594-48f5-9040-0fc469013f50",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e5ac2edb-1d25-476b-9802-27a76da93470"
        },
        "item": {
          "id": "05cb2b72-79d5-4ae8-849e-255a7b32b968",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "f8c2e7c0-82b0-4a51-92a0-bb2540a1740a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 659,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d1ce91-e071-401e-a4d8-09f699665a8e",
        "cursor": {
          "ref": "2d76b3dc-4e7f-4edc-b540-675a2799bdd5",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6afac02e-f8d5-4472-9e70-56cfa3a26aa6"
        },
        "item": {
          "id": "10d1ce91-e071-401e-a4d8-09f699665a8e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "94ac7b69-db5a-49d7-9fa8-08713897b874",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d1ce91-e071-401e-a4d8-09f699665a8e",
        "cursor": {
          "ref": "2d76b3dc-4e7f-4edc-b540-675a2799bdd5",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6afac02e-f8d5-4472-9e70-56cfa3a26aa6"
        },
        "item": {
          "id": "10d1ce91-e071-401e-a4d8-09f699665a8e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "94ac7b69-db5a-49d7-9fa8-08713897b874",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f1ac09-f2cd-48c2-a987-33a77fc0b625",
        "cursor": {
          "ref": "4e66ef8d-0d9c-4941-a27f-bca7ab38c9d3",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "0fd85f39-c923-44a3-9c41-bed52ae95aa2"
        },
        "item": {
          "id": "a0f1ac09-f2cd-48c2-a987-33a77fc0b625",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "e43333dc-ac33-4e61-b6f6-30233e199d4d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 636,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}