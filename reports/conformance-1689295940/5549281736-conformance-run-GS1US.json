{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9bad6f79-1a3c-45ef-a44e-899d3e03c383",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6f6f51e2-dfdd-480f-934c-7689091272f4",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "915d7548-2c6c-40d0-9ccf-ba85a0a108a1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f8934ceb-7b56-4f11-995d-895263684078"
                }
              }
            ]
          },
          {
            "id": "5e1401eb-1f7b-43c6-bc11-9f02abe6b149",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4cbd15f3-4110-4c29-9e25-1ed3390d9d7e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "46e25534-0606-4309-87df-da8d57056dd3"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "88b66e65-464d-438d-a03f-0af438f55ee0",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d8fe043c-64f5-4b0a-a5d2-9662346ac985",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b385b74d-5c34-4952-9a6d-1cf825c298a4",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "788ecb41-641b-4cbc-accd-bbbb0ba7dfd9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6e3b7654-1469-4eb2-8b5c-781f7df81885"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c2dc1514-1a41-4ebf-bbb6-f28eeb843fe5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "12dd9928-3f9e-4d5e-8a56-b4e0f409a669"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fb3729fa-22ce-4ee7-9258-c48832e2c814",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f1069e02-a920-4f92-acc9-5dbfd1be0c9b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "416df5ae-71b1-48f7-aed9-42fa34a7ed99",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "da4de86a-845e-401d-becf-8228a730c744"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9b980da5-69cc-40f7-a669-998ba7bf32b5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5e59b2dc-f927-4815-8e9e-108ede22a33d"
            }
          }
        ]
      },
      {
        "id": "d3a70a35-f35c-4894-8653-b672daee84a3",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "92d8916f-40dc-4840-9f74-5b05ebccceda",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a9051d51-5208-4061-8b3c-b4bc632f2794",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "542b8678-42bf-441d-aee7-a67d1f690121",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50272a55-15ae-423d-896c-d08633976a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af8d2d8d-dada-4829-818d-696762132c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded529e3-491b-4536-8b4e-5a49db3039d9",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96348ffc-857b-4c99-a51a-d14b8b79f065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "65df32ea-afec-493f-9ae7-1a0241e8dc22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6882c7-9d07-4a1a-90a5-0fbc1b01d258",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9886d7-d22c-4355-810b-318e97c8ed6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b2ab00d-d952-4b51-8910-581e65cdddb2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c85812ef-d8f2-4b5f-b665-7ba69846f77c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "edac6a03-ba79-40b4-bf94-057fe0f48f98",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6588bb0-1b6e-4c5e-a8ae-969860e1002f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f8b2dbef-48dc-49a1-b77b-fdc46eb59a72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38b1399-2b92-41b4-acf9-ad2226c784a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b0822b0-a641-4c17-a11c-aba5a45b3ba1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "128a7bf3-58a6-48ba-a708-0d655d42da85",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2d4e69dd-ba09-4607-8582-57bcc1ea8d32",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae94141b-b2e0-4a1a-896d-d23f54043c13",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c425e6e9-7fa5-4490-97f5-842c9c8dca0d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "68de4543-9e9c-43a4-bab0-3f169f26c3b9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "0164fe4d-c3cc-4f8d-b1c7-bda1ff0d0c33"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "05d536f1-6689-4d2c-a19b-dbe73360ac2d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2a64ddae-ba92-4b9c-94d6-0b564f1bfee6"
            }
          }
        ]
      },
      {
        "id": "15831708-b0af-4837-9e28-c2cb5a2941a9",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "46164d80-37ad-4954-b714-292ed9c90fcc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1f304d67-dc52-4c92-957c-d81444305f02",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "419727fd-19e1-49c4-be02-553429af78ee",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61377ef9-9a9b-4975-ba98-7994032a71da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe1b6a33-cd1d-443d-9c68-3a4dd920feac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf835166-d6dd-46a3-8b0a-6e2e145ffd50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5a4de67-e297-4d47-a810-d076a9b5c10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa54503e-ea26-48cc-bdcb-58e0341bfd43",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77290a4-4f12-4e8d-bb6c-ba3d7ae0cb1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a126f48f-e7d0-4623-b3b5-c7a394d47c71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f68d614c-c23d-49ee-8ce2-9dc929cecd67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3b4d8e5-3949-429c-859e-4b0a6ac7c5d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec6f4cc8-d66c-49e3-8da8-d5bd5be82d8f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cffc9f8c-a7ac-4146-abdd-a5899d6e4b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bde96ed-5978-4a53-b106-d725931a274e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1d854a-165d-4111-ad6c-75ebdaf0ebeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad90e084-e1c8-4e5d-b45a-14a2ad2521ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6570ad8-0ce4-4f30-8e2b-4440711c9341",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69649715-4a6a-471c-be7a-a603cc834c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "445e045e-cdf3-4b93-82ae-3b9688a40f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423ac736-e606-414e-a0d4-be4d1d146229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0da88a67-1f10-44cc-bc40-a969c981b5b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6660d3-574d-4ad8-8015-6f2ee1229159",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a78ffae-33ce-4ef0-aca6-dcfc27eead6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c36f90a1-9c38-4f6e-aa6d-ab2345ed52eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef920ab-9d52-47ff-8fa3-306d7d0374a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b6f6b1a-64e2-49a1-a30e-9aee1ddbe98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9861e66e-27f9-439e-902f-d737b0c2c2b1",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eb3d503-6ad9-45c5-b2b6-0b294ed3339b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82b2bd31-3966-4b6b-bd37-07ef0ba92899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e2c035-ba74-4c24-aadb-2ca11d8683e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3e047b4-a431-4e65-a277-5d4b22086d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ba842e-bbaf-4351-a620-98968d3ed01a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d799c594-6189-453b-88c3-c1ca43c63baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "847ee060-87a6-4d6d-a7ec-5babd24aa535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40fad87-c8aa-464d-801d-1950a3b09bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1a9ae48-e0e8-4694-a951-f6749f87edbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bda8a44-0a9d-4801-8891-0f1e030415b4",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "890581d0-31c4-4949-98d0-8dc1f910ad6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b34b28ca-2140-4d8b-8004-98c9e59ea3af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81d64be-a1de-46d0-86b9-0f42fd796c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e21cc3cd-b7db-4dad-8c19-3445192cdd7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18822b74-5026-46bd-95df-ac0541a1244e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2ac2da-b636-4e4b-99a8-1b4dbb6d58e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "139fe128-0173-44d9-9760-af02c664742f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a52d46-c622-4fd2-b82d-3b3fef36a231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b820bdf7-27c6-4abd-8548-7cb7c1673233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5071feb-1169-4981-99c6-3f280b6f0d82",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "196bce09-a99f-45dd-ac29-b179af32d912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dab299b8-5444-4972-82d9-6087e92d9747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e95f2ab-ac85-462c-abbe-fc04df6aaa45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5c29e8b-74fb-4819-aa6a-231267910f1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda9d0d8-0d66-4dda-86d2-44749b2f5239",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e0f5fc-86b8-4f59-88fd-062a91dc4a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f1e456b-e9ff-4b08-ad95-ad04e85e97bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439b034f-f77e-43b2-bd56-e00e603f210a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d2f2a9c-d69f-4de9-8bad-66c36b228837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bacb16a-1b42-4777-80be-eb3b0d9f8703",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3fb877-52d1-4314-a32c-7fdab9ca91de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84e437cd-f417-4081-8d42-4f9aade7f326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b117cf0-836e-4500-b7b5-0e9e63148f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eff09be6-f48f-40f5-a13e-c601e2a5df18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fba85cd-9efe-438f-a579-440c98247d0b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28aeef80-2e92-4a5d-a5c7-7f3ec1013e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "001980d6-606f-492e-87e8-20fa2feec9f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb39080-8026-43a6-8230-af3b33ca1ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e65b027-5e8f-4d58-9806-740723cfc118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b2193c-ab6c-4bf2-ab3c-1f7eeeee78aa",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "613eaf1a-871d-49aa-9338-0879a10be0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7f440e8-54ac-4266-a150-586cd8d13b21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa59479-374a-4cf4-80e8-3811905faddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "920ef13f-0e79-4343-8c17-93efb520b39b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27bf1aa-8200-4359-90cb-978ee47603c5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd1f883-1cfa-4634-8d11-c99c1ef223a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a112c03-21ca-4f30-83fb-41aae4423524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7523f2a6-18a1-474c-a8d2-dd163761271f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8c36873-2fea-445f-a84b-baac257d5cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0155168-903a-425a-843b-8e5ff3c45c85",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "931a830b-8484-4abf-a7da-e31cc555469d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dc27840-5839-4638-92c2-5835fc17b419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b57b9fd9-0e8d-41a3-8466-20060da094c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc565cf7-db74-46d5-89c9-8190dd19f6a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa17fcb-41b4-41c1-8ba1-ce351c8575d5",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b369581-3a02-4619-a887-5740557f8307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aa1851f-486b-4fbf-a9ee-8f0e575b64d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619d93e3-2032-4c62-8d01-1a95b2d9b0b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8fbe89a-7e9a-477b-9d12-3b2d8ed9976e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6beedcde-1d6b-45f9-a430-ee31b02c1957",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8ef42c-7ebe-45a8-8a3a-3953c4ba0694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d04b65a-e5a6-4216-ac6b-7c7aa8eabe1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba44f969-ab94-4b00-b3dd-33b66bb7b751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6745ecd2-f6a9-4be4-89f3-776e9ea58e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ced4de6-3705-4120-bbc7-2fafd20ec3dc",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ddacafa-2746-4c8a-8e41-62b9b1b116cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "751b2dea-aca1-45e1-88e0-49041c846680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9265b7b-4826-4150-a628-16fec123e352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "837a67db-2c1c-4c05-9a88-d8b60066034f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01f18d1-200a-400f-aa06-d47692de0551",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb3ffa3-ed02-40ef-b736-50c2885fb719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c314a5d-13b5-4a74-9c8d-d1fc01714457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "766bd3f8-d535-4a3b-80fb-77307dc41ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa85c00e-7aa7-44e8-bb08-11a85e6d6ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d937d5-6106-4b41-b151-6ad6684959e1",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ea6bbf-a9f1-4518-82a8-7b350b8a2e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9180fe49-69c9-408d-b39e-620148ecf55c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6827ce7c-4aab-48e1-a143-4db94b28d5ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7422b57d-cc0f-4b0d-adf4-5f4663323cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6570cae-0990-4f4b-ab26-679f53150439",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7bcd93b-02e2-4d4e-b21d-39c271ec1278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb62cd71-93d1-43ac-a9c9-0841c96d2f0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e597db48-c7bf-49d2-84f9-e8c6674ca41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "04dd5ce8-7d48-42ce-b79c-c90166dd74b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b912142a-c4cb-4f78-8313-fc5d4e1acd98",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92377a4-8da6-476b-9c7d-566a56cff73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7269668d-e1f9-4c9c-adbe-29c44473a639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5029ec95-7d2d-4239-b8f2-9285c6c7e11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "73e79cb1-bd9b-4549-ab47-20498682d622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648d63be-6067-4557-ae32-39cc604ee3b5",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a35c81c-f59b-4c4d-90b3-62eb1d2bec23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76d6d702-3877-4f3c-aa87-b06a135e5ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56ba7d8-99a9-416f-a1ae-9be4cd69ab78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "abe9b556-1d4d-4884-8f4c-2dbc9d0c00bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec9cc8c-4bc2-4753-8638-cc84398ca74b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0509c55-0f77-4899-a388-faa6aa8e5e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a687020d-b32c-46ad-8e2c-6c82ab5903c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "839454e1-9794-4508-abc8-115fbaa38769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5431f57d-97af-485d-b6a7-a76e926b6d15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e685d7cf-82df-4fbd-a9a7-1bc3ce8856e7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "636974fc-1d25-4a0b-957a-0cb30bb5023a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85876d75-eca2-4701-a50d-c0edbf04baca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f28c5e-5474-4581-8c41-520086b8a63d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "610b653d-a09c-4fee-b8ea-a250f2651a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b07d864-b0f0-4903-b386-5ce16bf9dd3f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df8cc30-ed39-414f-bdd3-ffa529be7350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "252b369a-a3c1-4377-b259-349ee2c26901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163e2e70-d970-4e4e-9985-1c013edefc67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "16d3f81b-e5f1-42c8-ba3d-7cd1e04c9915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "120ed7fc-f201-42d8-a403-d797d52542e0",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c23177f-93ce-4c9f-a72b-fcfeeee2df8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29930ce7-e52c-4ab6-8998-0094995d1b32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "383ef4af-ff80-4ad7-892c-61f11901f7a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "81d66a20-5394-4977-aba2-08917d2aabe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4042bf39-0cc8-4332-a826-99f83f77f9d3",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94641007-37d2-4624-a051-553f06683a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4163a3c6-8e4f-4c49-b82a-1a2627e81709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e4e1ec-302f-40fa-9fd4-af374734d5f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "151ff890-71e2-4db4-978e-4a7c7741f6d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1951e4dd-9b92-459c-afbf-4788b4fa5161",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6fe473c-0fe0-4c1a-9184-14acd074b385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61463b47-ec00-4591-9983-977d97317547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fabdc7f-e2ad-4639-bab6-d39f2ce1da50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "defc17c3-47b7-4d4f-b74a-46ace7193838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2eb6cb6-4ce5-47af-a4d9-4ce2d7a5f918",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0da925-e13d-4be6-9ade-a2d73f202b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e5f452b-a64c-4ec8-a959-83ff6bc06e28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97156a41-deb2-4bf1-bdc6-ba027197dd0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0efa8693-608f-437a-a672-3e3f0f3755b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c08865a5-032a-4bc1-8041-9605cb95ff08",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da3dbf4-0b06-4de6-ab0e-d6797f9be3fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb905d91-f346-4861-a17a-3e146656df1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e68662-b6e4-4ede-8b80-6ed8a386b2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1145b4de-66b8-4152-bfc6-eddd171c9310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f772aaa3-e71a-457b-81ec-5c5acb0918d6",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "383f14fd-1ccf-4f95-bace-0e50d16aeef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "577864b8-b406-4a4a-aa61-5c5c9421ad62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2108a3bb-afb2-4031-a25d-ebadcca85905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f106804-4149-46b8-b345-459d38aa7760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3310fea2-a745-4564-99e6-c9fee7a38237",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f09446d3-d49b-495a-bf0b-05534469a9f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c8639b9-d608-4238-ad39-a4bf4e974ad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c9d918-7cf8-41c2-9ea2-7523d6adb5e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b115f9d9-c5c3-4d30-bebf-ab92f31a7274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93f1aa9-595c-43b2-a0b0-df37508eada2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c95f7ed-9f8e-4f12-b0f1-a52caa152079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0fa60d9-0ad4-4225-b4c6-6fdb2b668b8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55db969b-e35a-4446-be09-38712dc86c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a3600c43-cd95-4f04-bc2a-a00ffe885658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1912a385-6a09-4dd3-8cb2-94c7dc84e387",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ae98af-d110-4083-be7e-e70bf88f111b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "59852703-665f-4efb-910b-c3376100d477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c1fd8d9-43ce-43b5-a916-246767a53705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e85a80d9-641d-444e-a84f-44b2c798d2f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619086a0-f836-4786-b529-c5c68759e26f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a9f997-f6ee-4d99-b25b-cea141209e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38408ddd-f3ab-4aee-8dc3-d62822cf045c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "637385c1-ebd5-4da1-ad5a-517c8dcf9f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "60d5ff88-b1f0-4c41-898d-898f60704ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f365497-5a24-40f7-a48b-8ef99322bbff",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b733f49b-5a83-44b4-b942-cbe587f18c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "079becd9-ce12-49b5-93fc-b3a808a9360d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14590575-c93d-4506-b5ee-c56dbbb01c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c2dac65-6395-44f6-8d82-6bcce7ea7fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84fd0159-24fc-4cdd-a5cf-87ba702f7f44",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02f5e81-6f29-49d9-a5a8-34e47dc190e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "514f0ad4-1dc3-4686-a129-b5d72713370c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e711a4a-b4b7-4c60-970b-0e813cb83ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "19b6fb2f-6434-42d5-938e-925733c72419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c088fdaf-4d5f-4e3d-b8bb-89ed897b58d8",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00d5427-c90b-4cfb-8ea4-78014b5fda0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a09e4451-6657-44c8-b8a0-1941102bf9dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba72668-b3ec-4ca4-ba70-acb6c05a5432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b90549e-9cf2-4602-a06c-3b55738ff40a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb57e89b-7cb8-43c3-8b3a-cda39fef7313",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "867f2932-238e-4b7d-86ea-0a2d12b824fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9f28509-af84-4cce-94e7-23db6ac02367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddfdda60-fba7-406c-beec-3c3fb65c88bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f652ce8b-4721-4bb6-80d3-eb5154ebfb6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f2b49c-99b2-4092-ba98-819f56e323fc",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "224b2842-4e94-420b-87d8-d6b8a3e429e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e30dfda4-8054-48d2-a494-79f9059b6763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9256e828-a667-41bf-be63-46fa5a7e3a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4041db48-2cd8-45ac-87b9-d6575e34b3f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046ec337-a217-4ab0-b8e2-570fbf54d353",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed51089-177f-4ff3-a409-f90b84f306dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14eb7d06-5c9b-44c9-95ee-a85d65d2e000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53277dd2-52b4-4d19-a64d-1ce7800cb9f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cfd72f1-8e57-4f7b-9a65-e88255bc673b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48969593-4d83-40e2-8d33-9487e7276cb7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f90c02-80a7-4667-914a-6bed7eeb827b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff31116a-98bb-40af-a67b-a1fed06423e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e359b18-354c-4fef-b38b-70b6472eea00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5d3ca01-7289-419d-97cf-0f2fc23579df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f0a8822-3c42-4ac8-8493-4839d26400c8",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c017cd-0f2c-450a-8c1a-a1e533573b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4747ce07-758c-4b62-b2cc-f9bf5313920f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05350847-53cd-45ed-a28e-6327d7aff275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a99f4802-49e0-40af-9adb-a51f00664f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eefd12d1-bf01-4bf5-b8e5-fbd9b6a51119",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2588a7f-5983-4692-9752-8014e5a89f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58c1aee6-e26a-4d70-90a1-98d9ace5c230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f888f577-5f83-4d76-babd-166dfdf1353c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb90d304-0948-4ec9-811b-da43e4e20f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a631bb2-d0ac-4cbc-b361-c26e1903f281",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8636219f-1da9-4fd9-b620-0dcf323850de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d0189a2-7778-4e36-a2b8-38ebbea24adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff87a9d-f5c8-4071-abed-53c1c24e7b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "77450bad-e5e0-4cb4-82fb-a1f756f67f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8630acdc-b6fe-42d8-84a6-554dd0c0e3ee",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1b9e14-a237-4721-93a8-6c34ac3aa1b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4232286c-e3f6-4712-a98e-40d9cbfd4b0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322f83f3-f08b-4c1b-bc73-d0ab58ad98d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "00751061-b32e-4a0e-9ad5-a77c401dfd6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bae1e60-f838-4182-9f34-992ce525cbfb",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a6a57e-b43f-486b-b0b2-8e2986dcb602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d8ed429-5f53-4897-865d-a4fc41836428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82db3806-37c3-4b24-98d4-820b698c25e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c43e443-a88b-4dc6-96f7-edb1001f5e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf7d7cb-052d-4a0a-aec6-f859739e7159",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c129d8f-0d0b-4e15-82db-bc1d21c03f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abe4f628-b07b-4294-8f33-6bf35752149d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef7e1ebd-6563-4420-a26b-dadccfea9c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1a280aa1-1366-4722-a7c5-69d1ba962c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d3376bc-7fa3-44d9-aae5-7168d90e1d3d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "281b1ea6-24cc-4578-a355-4997121f4bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f19c736-bc89-496a-84e0-f1bfff2a8de8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10feb6b0-4b4f-46ce-9e2c-801ed04b30dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "4287922f-0757-46be-ab61-5d43552afb39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4fbaf19-dbbf-4fa9-a688-8229dd80d8d1",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7424a57-1d87-4cc9-8c74-fb68e20d81b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d084d3d4-13c7-409e-ab60-edfbdeda1e53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad2b8c2-fcd3-4a1e-b0a0-3c1dd619020b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c9067f2-e184-4eea-ae1c-f570e25fb1da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c99b7e06-f28b-4fb8-853c-d4ac95bdaadb",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbbf5055-751d-43b6-a77b-881466eeef36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d12a2280-27a4-4c49-b396-f7289cdc335f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6524e218-79b0-4bc7-ab16-847b0f64f513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d014f931-c270-434c-82f5-600af5e66619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8685746c-108d-4c2c-8bd8-b592add46bb5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be63fb9-30a3-4506-9f9a-922a03ba8d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40ff4b5d-815a-4e16-9000-85a8ff8e2863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f48894-bb1d-403f-968f-c7af2922c172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b95c1533-751c-4260-9d7e-98f1f5f33656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f404d0ef-eeeb-44f1-9314-d941f383e19e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09403fc2-6868-4e49-bea4-6c10b1485072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "162d6c44-0759-48f9-a405-292c26fa5ecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2960f85-07fe-47aa-a919-7882b27511af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "efc8af05-ff75-4915-88c7-73f7e00a918f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "963bd76f-886e-4ef2-94bb-54759f7e7d89",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd65f43-c78c-4dfe-90b5-8c3071724a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41aa3b05-6fa2-43a3-99c5-312b1846cb43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac06b673-1e86-411a-aeb4-d1a21c369076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ec5eb0df-b265-40ef-a4a5-3962209f697a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c2cc842-28a5-440d-9082-30ced5189711",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9917e736-52c8-4b28-8e35-a43ef304c71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "250e8c9a-ed70-4c0a-9df9-1327da9093bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb0e3778-9402-4954-a20e-ddc5a675a81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc242490-9bc7-43cc-89df-0c64964f365f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c945b4-ef75-433b-8588-a680e17722b9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "babe15d8-9c70-4dd4-a085-55bce939f05b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e515bc34-b596-4c92-a119-a2ce03ee3149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4d671c-2fa4-458f-a82f-ffc78310c45d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "61170cd6-8f16-4cf0-b69f-f1909d9a34a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce6f641-2a63-48bb-8a36-535c87db1bb0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d56a79-299c-4e3a-94e4-afd51edb44b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e463a81e-c280-4776-a334-e56345303347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f56254-1c67-4ef3-853e-153db7cae31a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "51b2760a-8f9a-4f58-b044-da1a3e4111ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe86641f-f078-49e2-9e5d-bf2641b10153",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04807ae7-4a61-49bb-87bf-733d350d2a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6db8228-0390-4659-8fb7-4ff8e1064b02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5987f65-4722-4813-a0b4-f4e92906da53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "07d4cdfc-b264-4acf-8a5d-2baaf4612ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "506dce5e-8051-411e-960c-05e87aba32df",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b67499-9316-43f5-8de7-022380c35379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a09d63f9-d9f1-4097-861c-cbc6ef8be9e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b74d968-a69e-4169-b97d-fba5e68e8bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ebdc76e-58e4-4e99-be3b-f38aff19fb42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e382bc07-9844-4ccd-a09b-9a38f62effb6",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30df5c47-5c56-4bda-bd80-c879b4aa50f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d329c19-1a46-435d-9206-ed28ebb90201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc666321-8b6e-4fd4-8bc8-ea1c6ea378a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "faa10bb0-f7dc-4a38-af3a-ff37feb5d94f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53051751-da59-42a0-af4b-2e776aaa821e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb6bd07-4e65-48eb-9461-44311141249f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b63f294f-07c3-4bc4-a3c4-b96e8e733f91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be66bc70-3bda-4233-be81-691769b79edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb1e6af5-f66a-4a04-aca8-2085bb8e31a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd5f7d1-a081-4437-b679-db7494c259b0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a8ef28-27be-445b-bf8c-d83dd6692cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "519c01d7-2184-40f3-a9df-e4190898e627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d59afb-9073-406e-a269-849b7da3ee2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "958479d5-3a1c-430c-9714-05f427d56bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cce7333-c660-4b83-865d-f5d18a3df9c7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3165c79b-4e28-464b-9525-479d58919beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a722dba-291a-4a0a-8f5f-c070debea194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "386f6e2f-a32e-4a9b-8b16-de212ebe84d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "944dea9d-8fda-4a64-8f21-003a6dda1431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9435d58-243c-4e67-9161-9ff4e9c00da1",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0244c87-8593-4b41-b1bd-cd84b2072abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6104825-625d-40a2-b516-861cd0b01a6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41eba8ad-899d-45c9-81d8-ee3fe9be2d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8abf27c0-c67b-4c14-b31a-ce81f6487f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8784bb-b969-456f-bb1e-812d80da5571",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b7bf5a-c973-4b3d-bbc7-2aa4898bb939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0519a0ce-09ab-4890-82d5-c26dabed65b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11596b84-a1fb-4328-a011-e70d63166720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8eadf5c8-3ea3-4108-bd83-88a73036a89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b940435-51fb-44b3-b99f-5562f1d8564a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2475273-abfd-4916-95c5-b40e92930271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07af8923-8702-4ea3-a406-22bfc5709b4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4550e345-607e-4b46-98ec-4e281f5cae5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff6cdcb5-1283-476d-bce4-9c1804d46da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00574310-8378-4093-8d8e-8a406997d876",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14095412-6813-47b5-9492-018b5421dd3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51ba5e86-8d68-4bee-9295-92043e59b8f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d96359-8d50-49e6-96b5-6ee01f1863f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e76a75d0-323a-471d-9d5a-2a1456dd840f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1937a332-566a-4990-82c2-f516e243f543",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e1dbba-1ace-4c17-aa2a-d8f1b0576513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23a2bd59-9bd3-41fb-9ff5-cf14e1db8bc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d690ea-3412-42e4-bbc3-ade570b4955f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f0f9287-c8bb-43eb-895c-a20c007fb2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6321b31c-837b-46d0-b204-2f099bf85171",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c7d3986-31aa-408e-8353-64fb258beb42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7640539-a745-4e32-8348-ef4e7ed35859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a48d1b-5d22-4ac7-b1f6-d946f9abd0b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9cd4eaa-1203-4ca6-b54a-ed047fc51e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9397718-abe1-4828-9ada-94bcc4191fe8",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4dec4ac-ef83-438a-a819-34aa2385b06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4b4638b-d81f-4d3f-a51a-c86f288ecfc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ebcf45f-5ab9-4373-a2be-6f4b0adbfc37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "96f52d75-af8e-4e6d-b891-9a952337d97b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a56543-853d-4ce5-a999-1bd5f82e60cf",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f0fb4a4-32d1-42e1-8ae1-aee0a0d31547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94e43fb8-9341-4494-8452-09df97c6f931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f648bbf7-a99e-4760-a8f7-5520f60a3120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e31c80f-e5e4-4753-a811-a24dd32bec5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2185fdc3-b147-4e85-9164-06f868a25a66",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6919940-b27a-40c7-9ac4-e774366c1e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb4853ef-28b0-4a99-b04f-5bc718fecbed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779df3e3-1239-44c3-a942-c5042b155e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ae46406b-6338-45e1-ad70-afec20e29173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62df2086-5956-47ff-9cb7-bdd69f927ec5",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bdb9dd9-2629-44ac-819b-e3029221e20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "165a4261-54da-420c-8d25-d7301d0fd5a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7406db6a-03c7-4738-b945-aa708143af4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b0a28cf-c5e7-46d2-9d48-d86034efda6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99209a75-cb47-4c26-9b21-7c2bb305df0d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c2bc3d-34e8-4a3f-be8a-60652b779e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dddef72-b7bf-400b-ae20-5c6b80b01db8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ae4b58-c1a4-4b8e-81e4-5068a840539c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "164ff140-3502-4f7b-b563-89553a55550a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a55cd66-afa2-456f-9c36-dd34cd96901a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a40744c-3c3f-420c-83ab-da77520bdd7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bde73ab2-ed6c-4098-a714-0cdc1fc5f48f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55270d39-172f-47ee-b639-ec3231be8f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "686a78c0-cc9a-40fe-9879-de8e44c469ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f605885-8542-4431-ba92-f4cb658bf9e5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c461c613-3704-4be8-859f-7cdb0f1b9a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3f58799-9954-4d8a-aa2d-b008734dc8d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735ff20b-a513-40ae-95f2-ada34f9db643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e44f6658-c10f-4f34-9646-28f255d95265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da844205-48d8-4c3e-bd36-3bec091b4143",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00294189-0a8c-4b10-af59-4b2c51338c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e6d6c16-ef34-4a89-95d0-e2bfcbeb48a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acecf28e-0834-42a4-8021-480696b386d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "721e988f-c511-4ce3-8095-37a7b2fb9746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6a154e-4020-44e6-a9d3-9ed2cd8986c3",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa23a2f-75ef-4c81-9bf7-d0ad842c59b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eb6a3c1-21bb-48f9-8267-a8928bde2878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ffc688-9def-4ff8-836a-30fb2ffd9c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fec0deac-af64-4137-aa83-78303bc18ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f153ab14-0f5e-4314-904f-6c36abf2b333",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "042cefbb-bbec-437b-9698-9aed0c3f42ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a48bc0-55f9-4f18-bceb-0e1a23f728c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7104414d-1e37-47f6-a2f6-0413df19614c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "36dca272-c2e0-48ba-a8d5-9d7669b28f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ada6cd-aba2-4438-9df6-f71397ef0cbe",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1853c130-43fd-4a6c-bfe2-9c3929fc8280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2dc13fc-a407-4e01-b54c-d04b8e41d614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f2b99c-9e54-413e-8678-b19dd76f8863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d8c48d9-290b-4eae-8829-e08f134e0e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c24ef2-75e6-46ad-9c2f-372b9007ee60",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d429fc-8da9-4fbc-aba5-fa9252f231b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1f2f7c2-cdff-475b-a983-c66e0c54a264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e81f5b3-547c-4d05-adca-d31c58c5c24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8626483d-2f3e-4c25-9167-055c6be17236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2eea71-869e-40fe-8f01-49bd5e5d0aab",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97975655-c044-4c55-9ea7-4febe42b9e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "585683f0-17d4-4baa-a1ff-779f6de64e32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eaddf73-9525-4198-8c88-2c1d8f79c9c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a035a61-c729-48fd-9573-872fc8cb5ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0208c6-e2c1-4956-b97e-d32ebf68c636",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f78004e1-7dab-449c-b32d-2e0377bdfd64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39effa54-c284-4c46-b92d-6420ad9abe3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2454bb-9729-4ade-a18d-ec8fd8c94ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "103fcfe5-4e4b-424b-8b92-f27068ca9812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547fcbcb-fb51-4b28-821a-79dbd7ac44a0",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3150057f-99e5-47ba-ba1f-c99354a578d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ebc7ddc-4411-4ff3-8760-46c40d2bf654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7512a97d-9522-476b-8b56-11a4922e76d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3040a35d-6857-4269-8d92-78d82dde4ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c3d8c6-7aae-4e0b-9f3a-3c8835387495",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0fcb110-3dfb-4008-9f1c-7f94cc64b2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f830fa0c-09c3-48a9-a59e-045b66b3a8cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70cc97d6-b5ab-4916-bb82-06e989f143b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "222f8bf5-ea4a-4059-b34c-763d5e27156b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d13568d9-756a-4cb9-bcf2-3dd3f02ff957",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c3dab1-1a12-400a-b06e-b054590c1ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70888b0d-635d-4b70-9c2c-bb0781b5aca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c911a9-7e25-487a-b1f5-8ae2e737fb27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4bd96f61-f132-46a3-95eb-2a440667213b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc57a9e9-150f-4b7d-b3c4-d82be4738c62",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b371ccab-ec8f-4a4b-8349-05fd7925b322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37700d23-eab3-41fd-aca9-c466bd492074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d997cd-50bc-41bc-9f9c-1f15d16644ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2fad098-1b1e-4a4f-a7ec-ba170041a2c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f2c4330-ec26-4bd4-824a-b1ade26d1be7",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "216e37ad-45b4-432c-920d-038047adb5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fb7b764-2cb8-4a6d-b657-3cde42a4d36c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0958b087-90bd-4333-a0d8-ef314a06643c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dfad0fdb-4d3c-4dea-9d9b-7b84805c4664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8af2a6b-9ea6-496d-b7d5-ab2034615a27",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1780d3b5-637b-4b63-bb4c-0362613d7bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9097e441-73ac-4b35-ad18-0c35f6329330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de56c8b2-3e4c-41b8-8cd2-39f65ea32c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "14434650-363d-4e3f-80ca-ca4b472b24ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "101c42f7-c054-47b9-aea3-8bc86be9f6d6",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30163156-258b-46bb-95a4-8f0a49c62c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7e31f611-5f88-4078-a78d-2e3ccddc1973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94476333-ce9f-4bad-8caf-b41e71787f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1fbd1f7-27ce-4999-ab59-a6ae1ed3cff5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "55c279d4-e710-43af-9a71-19f6b33f8843",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c9c1a753-54f2-4a6c-8bc4-a9fa6a019641",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c88cb7-af12-4e5e-893c-e83927ae9c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cae4a885-5ec7-4828-b073-91ef98c66ee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00695b5e-3fc2-429d-a5ba-752d03e2f1b8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8691a77e-57bd-4a3a-a706-4b2ebeded4b5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8bbeb262-a1d3-484a-ab7a-be870179665c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69dbc3ac-2eb5-4244-a8b3-378db7f1d0f3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a659f668-904b-4fcd-a696-1e057057451f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ddddde2c-caa4-4db6-93e8-811890dbc834"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fee4e33a-c309-4ef9-b963-ab36ccdd65b1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "29d44806-4594-48be-a264-59e4bb9da492"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fc8643a6-deea-4858-bd2e-d8820338a011",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a9213ac4-9d17-48a6-8319-0efaf9246001"
                }
              }
            ]
          },
          {
            "id": "d891ad6e-9070-41b0-a384-b1b773afd0ca",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e0280f30-be47-43f7-b75d-9829358bf194",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "24c4a602-7e66-485b-a7f7-2b70d0090060",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "066cc946-a25c-4d8f-804a-4c7ec416cc82"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c84721a5-b9ce-4e9e-a5e3-dc5fdc1a32c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "99b2f44d-1288-4767-b271-b58edcc5af9e"
                    }
                  }
                ]
              },
              {
                "id": "76c13791-a3d1-416a-b031-07d0f8a455fe",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc79ac8b-b7f2-49e8-8dfa-ab27f948bcc6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "94a6acb3-89ee-44b9-be0d-bbae3bba4949"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "711c0300-3334-4f45-8794-56ca5002d56a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f2d4a980-9759-4e38-aa6f-ac0238653ef0"
                    }
                  }
                ]
              },
              {
                "id": "23a21281-8ca8-4c2e-b592-b090835a5fd2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c6eddb6-8708-462b-b471-8f71e498f017",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fbdcdff3-f6db-4a25-83c0-9a65f1cbe597"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9113aac-4d28-4615-affd-631f9434d3e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e62e102f-6d51-4661-9626-819edfa24d06"
                    }
                  }
                ]
              },
              {
                "id": "f2f801d9-6edd-4e8a-95ae-5361cfd2b8de",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4517295-131a-4555-a085-82801d165576",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "205a448e-5482-4ca2-9c4d-72fc0095c88e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9dc093a8-ebdd-4e8d-9f83-fb4555186d87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a25bc236-d520-4335-89f3-2085145d9f68"
                    }
                  }
                ]
              },
              {
                "id": "ebd9300f-5a8f-4235-b4fe-e242e91fdcc9",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ed1ec21-299f-41d9-abea-7023fea4a1cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bcbd4ba1-27b6-410b-a84f-74418b244a8d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0b1d8cf-2f97-42b9-b4e0-f51a7dfcf15e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "1eed05da-3a74-4148-864d-049da4eb6fd3"
                    }
                  }
                ]
              },
              {
                "id": "cbee980d-e1a9-4dc3-bc08-263533618db0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7099ab38-5545-4502-b252-b13daac5f96d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c5a88133-96d2-4af8-8ce8-20fae975f6ad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6544d742-9571-457a-a6d8-fbb5fe288deb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "039bd01a-551a-44c5-a906-be72ae1926d9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3b854584-16e0-42b4-bab1-5fed84559be8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "354506dc-b59c-43d0-af0c-9a821b17081b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f3e54bf6-ad66-4b7f-8e42-383ead92c4e4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5b024da8-6a6c-4a7d-b31c-b79ffa797c2c"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "16a4f0fc-1af5-4d24-b269-112a09cd398f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a612de4f-8f83-4f01-8048-53a6f56db67f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5c6bf1e0-1ddb-4c4d-9971-5ced1829707e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0cf5466b-b0f2-40f8-a48e-bc30234cf526"
            }
          }
        ]
      },
      {
        "id": "2bdcc01d-1a10-412a-bb3e-eb563c472ab8",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "33323171-7e0b-4a6a-aede-70e5625c00c6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c67ee42d-1c73-4c2c-b498-eb4ac0705e86",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6f2be719-bdb1-408c-88a9-5107692b18d5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6382b718-1142-4ffa-9a9a-3d6dee4dc3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d3d4c49-f5e2-4032-9c09-95e9848ce210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "811e9a87-ef34-4c91-8f41-d8c6487b7cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b824dee-6f6c-4789-9b6d-7a5637865430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab0df4b-33cf-4f5f-a57f-ce3ea59c8891",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "069a885a-a584-4471-ab5a-83dea9b58035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "558fda32-ba67-4e2f-a23b-27e786e5cfd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f43329-4fc8-408f-b9b5-8aa0b35dbc26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "862d6e12-8e63-4349-ae6a-ffd853a5abed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3041770-daeb-4c69-a71b-03d4869896c8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48ed88e-d46a-4699-875b-5cc5f013d821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae2763ec-5499-4820-a4f8-0250760b0c7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14fb5cc4-05eb-490a-ad60-6695b2590c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a22c4d76-473b-404d-95fc-decefafca4b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f815e670-f5a2-4160-b72e-da66bd52d4da",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9beeb0c0-d322-41b6-ac90-42df06f430bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ddc80fa-33c0-4b8b-bc20-af1fc3a60be4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaed4768-0772-4799-b3bb-6307153ca0a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6b04a56-9668-40f1-8bd1-bd38f2ef74a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a1de6f-6c6d-4e20-9d4b-e2b0b0efcfdd",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6a66e0-31b2-4403-9708-4344ca3549ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "538cc04f-a6d0-451b-b6f5-1cadf1cdda0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de0e3d97-1124-4580-83ef-496d096f7b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c99efee-c197-4e81-9674-ecf0654c9d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb9811f1-5f63-43bf-90a1-0f9764d6f414",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83653ba4-8b39-4a62-b35a-c45fb128fc15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349b9894-a370-4704-a3ef-16ff9903dcea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac185732-d00f-4d8d-9cfa-75b5a120485a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dab16ae9-9000-4261-9030-48e13cac5be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1072f9cd-099b-4152-9407-a4e2aad62d2b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51bf0975-63ff-4d73-b11c-d85ca96a5795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "002954c4-9eeb-43d4-a1ba-f79bda7fc188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5803288-18e0-40c7-9bc0-a6fb18a8568e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "50a37bee-1ec1-49e4-9069-7aa0559a26cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "818120f5-eb83-4329-9a8e-23cac4fef250",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4759bb-1bbe-41cf-b758-4e6664e57b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "441b5925-929c-45b2-906f-938e76688fda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9551b54-5665-4a87-a99d-c83628c1a75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9188dc9d-3c0e-4666-9567-238e9a6e0c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f132f3-efb6-43e6-914d-7114adc3b24b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6835eef-d870-45ca-8402-f822a1e60d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0f260cc-929c-45a3-b4ad-741de0b1c336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878194e3-5122-4b5f-bce5-46807b6a8c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c4ccef1-ef5c-4509-b7f0-b9042f66e38e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27628f5b-f239-4027-8c37-8e928262e587",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c7976e-a12e-48b6-96df-fb0910f12e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf10148f-5c6a-49d1-adb2-48874082cf41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7699b432-ca2b-4baa-82c4-a6f9d0c7cbe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d34171f1-c549-4e2e-9b75-96f361c94f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c8efac-aba5-4439-b396-fee045ae8f5f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e02d12-928e-46dd-ad57-8c24b0ab6780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc84c289-4525-40cb-a71f-b80382b56af6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e644f846-6a2f-4773-91a1-fe96dbb4eece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fc5d7e65-d51d-423d-9ef0-d055ba9d295e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76226d23-96f5-48d6-a703-40222b8dfe3c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72f325d-fcd4-4c20-b137-f50b6712e2a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a29e7b0a-7c59-46ac-8374-bb0fe0875689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0819225-716f-49cf-9408-893128f9d222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "997464d0-5015-4135-b5f3-f5780273cdfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc738a8-d57c-4969-a05c-2ccb6955ad3e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70217d22-9926-4a93-8f45-39299623f270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d68c074-5424-44a2-b329-af0e33142f9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce51e4f-8c29-4949-9c6f-2e8dcb2b9109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c3e8f92-3f73-49e0-a55a-c964e58fd01f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d03252c-de2c-4b42-bf41-52583a9c8a0f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb48a88-97a9-491c-8696-433628a4821e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ae176a2-05fd-4eb9-87db-6e5fa26cee0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64462e66-3eca-4b81-be65-bf5e5771135c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e976f859-1097-4c84-bf6c-1ee43a08f1bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67ce36a-223c-4a22-8998-afb89c2cdf54",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f316e296-6482-4e73-a6f0-8e4c64ce741a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad2b2c03-cd8f-4c5b-a643-1f354fac9d06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f74d89-d8f4-4a16-a9cd-5437a3e14b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcc91aad-3b1e-4cdb-8d6d-33dc698f73c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619c8cab-34c7-4c98-9223-b51e98a4d751",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5235cbcb-d758-4a22-bdb3-79541585186e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "362b278c-310c-4e6a-ba07-873c14924f74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a71f2e71-0685-40d6-abde-a12aaa8abfde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b20f7905-d9ea-45a1-929d-c3888be5cd59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7f8998-6401-4886-a02d-096feb191bc7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc50a55e-77ff-4edc-9ee1-c8c55f1a5179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dbe7677-c1d4-4950-83d2-1e46aa56dffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c56052-824d-4ce6-b20d-459b763a7092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "47dab0b2-5fc9-4a9d-a814-0363337881e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895c58f9-5faf-4cec-85d6-b4c763e426a5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe96ecc7-9556-405c-8f75-05b760ddcf12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e25ff94-5e22-431b-a21c-6a9a948cdbde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ea9cdb-e1c5-4430-b3ab-d21bdd475875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "70e7a0b4-7fe1-47b7-9877-a0a5973b4f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67ef9d2-fc7f-4cf4-bb1f-279f6be2a591",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64ae6c6-c8f1-4053-8837-2bf7ac1e788b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d804e27-9e5e-4574-b0c6-8086854ad988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec585fba-5692-4c3f-b190-9d7812ed0cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf2935fa-389f-45eb-9d77-1469772e1f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92e3b6ee-a08f-477b-b747-f65f2c365732",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a14056-4f92-47bd-8da4-4811f4b1cdd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7effadbb-056f-45bc-8811-06e59855f1b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc4a3814-84d4-4db8-bca2-786400a3b12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec45e27e-175e-41b5-bd47-50d30a4fdfaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eed67b1-ab6b-464f-a750-d8cefd256309",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d61a5f-e6d1-4907-b398-7637b75f08d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a17a513a-a0f7-467a-b678-c7fa136f4bfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73174172-8f56-4ca8-9448-bd665b8e39a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38dca260-455d-473e-98c0-8584814f4cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57f4643e-f141-42c9-a6ed-670348c427d8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4699be4d-b8b1-45f6-b066-9ab2853c2e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "327b6bf1-cfa7-4cd5-aa77-71e9dea847f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1edbcfd1-7176-43de-8d0c-e22b494d969b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e0d456c-208a-46d9-864a-f09bddd209d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "353d9096-192b-46da-9e32-8be2baa9a3e1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48722da-eff9-4154-a612-8a830123b124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c86f77ed-bf08-4eb6-9abc-b0309e720f27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850ff334-778c-4b69-839e-69786636315e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd26f72e-ec11-43e8-aa72-863acff10541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d36f4ef-5cf9-40bf-bbb0-df5d1cdd92df",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c8ddaf-34aa-4997-a613-5e9fdeff2107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8df563b-65fe-4b79-8ff3-1593feb32329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1324e26-f470-4457-9b15-aea542c30cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98e9c41f-6270-4f38-8fc7-08969efa6248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b925b7-1525-4dbe-b22b-3913d2cc71b6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "162f1b9b-a731-4839-9936-8a566c1905a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d102da9-1d2f-4790-834b-cbbfe6607817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54954d36-3d2b-4136-8976-968678be8b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e919b5eb-78c2-433e-9213-2739a1a4ccf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df46c4c-5d14-42d5-9ceb-dba9712c7c59",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "548834ca-177f-4ddd-b056-cd050670b9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19b66b32-b7d8-428b-9288-3b63e19ae1e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae07454-7de6-40dd-b66c-de9e20d019de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05ed529b-21a0-47b9-8fef-cabbcf2dafc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcdd6797-afd6-4aff-b7d6-8d7ed7527171",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48711e2f-e8ff-427b-97a7-0554bffc50c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fe79976-95c7-44c0-95ff-40aa3e7079e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea3ae0e4-b7b7-43d9-bd4a-f1450394056f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01ec84af-4f65-469f-b254-dfe6dff53c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "472779cb-84e9-4de9-baa8-5bccd2e13a25",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c6d616-7c5a-48d5-bc61-a165b162e5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4adf2d05-e52e-4677-a3c9-b5906675d5eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7864549-995e-43c4-a88e-19879d3794e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae054d65-00b3-480d-a1ca-257bb5f21550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10679169-aaa6-478f-baa0-3bc8ec8f0f4e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9924e23-cf02-493e-8567-7b677de3e8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c08279a4-97cd-4ad4-80cc-2dbd1f1ff5d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0887056e-8d63-42eb-a8b9-06e5d01d051c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60d2d90c-0ddc-4ba5-b208-2d499234dd0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "637ba432-4fc8-4b77-a3af-90d87641597b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec7324d-9813-47c7-95be-06fde48efec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb67f2d8-9760-4466-a678-8f70fe5892b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884fce3a-df80-4983-a8e6-d422c0e736e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "940a4d11-7f5d-4011-9518-063c26e70ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba01acf-3fb6-48a0-a46e-fd9508d1736d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d322532a-1435-41bf-a78f-2d552f77b2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d201cd11-c71c-48c3-ae09-60de7b159741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d00634e-0bb7-4a5a-ba3a-eedad30195e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4ace9e3-5c62-4373-bfd0-f645510b0f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2190599e-855a-4309-a65c-9db455454b29",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9398cc60-19a8-4d1e-9e87-5227d347bacb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d07722-bd3c-4a97-967a-019e1f07f5ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d18797a9-90ca-447d-8bad-17e92bde8152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a449ba5-10ce-4038-9073-9a7d88bc8ad7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "57f4007d-a10d-4846-9b28-6b9567b6ff84",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "133e965e-684b-4594-9abd-4089fb925a8a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1874e525-076e-4ceb-90e9-6c247a63b869",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "88df55a3-832e-484a-9eaf-f20365bb2b1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c39bc0d2-507f-4069-8923-3443d91d2877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ceb6f533-989e-44b0-af52-733e4c9b0927"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b26657d-b8c6-44bb-998d-75290ce487a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1246fbdc-8742-4c8a-abba-0289ba3eeee4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d1eedd2-a944-45f9-b6c7-4ac7a2a0483a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45a8f07a-4ba1-40a2-9e3f-77b95e0a9c79"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c2834324-626e-472b-91dd-43d02bce38fe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ee3eb435-2e50-43b2-bb96-3e602abdeeec"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "940f49c0-b1e8-4f07-b7da-f14521086d0d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "27340d6b-288d-4efe-883d-c7d7702dd1c5"
            }
          }
        ]
      },
      {
        "id": "b3da2d6f-cab5-4d91-8557-253a6acff242",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "556c0f8d-4891-48c6-8cc7-2d98b13c2c83",
            "name": "Negative Testing",
            "item": [
              {
                "id": "91cb4c42-5cc1-40e6-a542-4f44fbc9122d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "987a651d-5fa3-4806-a020-2d9490311d8e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a15652f-cd56-40d3-9600-063a23d012e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84e00d3d-d5c2-4ac4-9b84-19473a4a72da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14440bd6-1f79-4ea3-80f0-2f7bec35e19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "62b09a56-3d9a-4238-bb83-35f524552de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f9b66b-9098-457d-841c-2a71fae1ed52",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87d9381-14d4-431d-a77f-b3c5a4d79d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "013e627a-3e2e-4983-9bf1-7bb964f97af1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c6174b1-8705-4d6b-8345-1b3d740aa130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7ca3096-75c4-4f47-a0ed-2fca4790c91a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "395a531e-ce35-4b61-ba71-47ad1a0325a1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b5c285-4306-44fc-ac0b-bbdd144f6308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b1a6f9c-8d48-4313-ba04-738d477a3321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9431bcc2-07a9-487f-813c-77029b21fd40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f89951e-4d67-455e-951e-1de91d0c059b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e664cd-a114-4104-9aa0-c10a1583ee67",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f80ee7-9d98-4924-9eb0-d84b332aa235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4259a1a-6524-499f-b8ab-6232909c52c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36cb039-5538-4435-aa52-39da8199f077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae6f2b72-cfa1-4c2e-943a-35f6703bd72b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d021926-e07b-4a02-b528-fe502ab59ce5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86d6ae3-b8cb-4dfd-9b97-8463d1283c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "834c801c-8115-4eaa-b62b-6deb86f762ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c561f83f-9fd1-46bf-a1fb-f62bcc770c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "771e9b44-8ab7-433e-9411-24148c1dfe49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c87563a-8253-4258-b8fd-45ac99e5d653",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a11c14b-fae4-49c0-83a5-61b02b3076d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "856c1d25-0ed3-4da5-b189-48a126979d22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e994fb0-d13a-4035-aac3-aeb5e7a9d1e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e54ac657-3c01-4ea3-81a3-245bf01285b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db16c7c6-352b-4e32-94ba-59f7a5073c04",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a791df9-a2eb-4904-8d0c-b98b7f4365c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4df3bbd-434d-438f-bdcf-6c99a5fe783e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1300384b-ea72-4607-8ab6-51b188956424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ecf45e8-9e46-43be-8d35-e25230374717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64e34c9-855f-47c0-8cc5-9ac529d93699",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b66adc-6a8b-4d62-8d13-3d98ae347d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88bfad70-1dfd-4e56-ba74-87e899cd1828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66048207-17a1-409e-bace-a44d84bc824a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ccd0188-9c62-4e78-8faf-ac44b61913b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e18cd027-fa37-48ba-a08a-96083b759e6a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf7a822-ca96-4554-a3f0-6dc645f1e4e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "329ab9c1-305d-4d8d-8fa2-4e2aece02d73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620b6f27-b355-46a3-9697-2f805466ed8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "51874288-16bc-492d-9e4c-cc371a45a394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "186a958e-0387-42fa-87df-e427ceb79ccc",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50cc38d9-4d17-40bf-a817-d6c777276855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "434cd3c6-e4df-4a57-9d0c-5d4ae5493230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6445505-a214-4bdd-9367-2329a8f93d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d18d4a94-c12a-466c-9870-985394427934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73577f20-fb71-4554-b244-4669a2703f21",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2311ec1-215d-4d65-9a59-e2601cc58dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e347faab-d68c-4bfb-b40f-f26407154f3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea21123-d394-4d8e-bdd1-337fb4538c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "608c430f-b1ff-4e53-8194-ad18e6785371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b1ac636-c217-4989-8c28-7102742af185",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c9ac18-cec3-45e3-a178-6489007bc8b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c65e9d3b-fe6b-4a9f-bbe0-9364a29d5a83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d32bf0-5bc7-4d75-9de4-d6705cb5282d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4567f03c-9753-4568-ba88-9abe2a711e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36725e9b-b8e1-4f3e-a835-ca74f9380c5e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f28904-46d8-4425-8159-d938b50d05fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bddf4929-f0aa-4956-bc99-9da0e6dcbb53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051ed794-b592-4431-883d-349dcb5ffabc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4888b8b7-200f-4944-85cf-14c1cd1df2d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd218987-d194-4af9-8324-1132d057c2bc",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c7bfb3-37d7-4756-bd59-b793e2630266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "618d4170-bfb6-4e58-a82f-313abe6a15dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aebe8849-1d94-4f17-ab18-22b47bcb64b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dfbf49b-4cf0-42bd-8cb0-e3988a71565a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f777e016-8d3b-461b-9348-e70254f1b14b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ccf04b-bb63-469a-890a-4b7f42089184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b849ede-953d-4151-b081-f27fb26aedba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e919e3-af90-40de-b0ab-78ac1ad2f68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b9df948-fc1b-40ad-816e-fe3640f55382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a89c905-3586-40d3-8737-cb6040996300",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96809d6-88bf-41a0-a2f0-cc64f3dad591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70991b27-857e-40d8-a604-fb0c54a251ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "842d3109-dd54-4fa6-81e6-687201c44383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "09a6e961-35de-4eb2-a38b-5b5b5512934e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13696ec1-a097-479c-8eec-a159c9bb61fe",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c5095b0-300c-4eee-ae69-db94b1451729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d2f7879-06f7-40e0-9229-dccf764bd65e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d07bc57b-8555-4c06-9dbf-a10d66668b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f569327d-2f79-4325-9552-8b2abcc91cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d05125-a206-4cad-8608-4419c7997ac1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8619dfa-9587-4396-87ba-b65786e6c89f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39daad81-b27f-4298-8cae-5c242c5f4e1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27fe8285-7a25-458e-81e3-eef8b6e032f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2096c546-5704-4963-9300-e2d30fa71717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7894ad0d-ab14-4345-9396-c07d00026986",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81af6ff6-ed72-4053-ba8b-42103456271b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a8db09a-d883-443c-a558-59e04b651849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66798028-4468-4e7e-b8e7-f0d8d6dcfb30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b29bb05c-9ec8-4327-be06-84f3d9579276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccfaa90c-fc84-4b40-abee-fd8c154220de",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd0fb96-94c9-4c9d-9751-8372c78ca36d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "224f6599-f5da-4a73-a619-12a89694676f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c66eede7-74e7-48a6-81ac-f505455923d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b53d2939-6657-40b6-91ff-0b4bdbd81246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752e3248-7491-42d1-8372-1bdebe2af4d0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25852795-a65d-4f02-931f-a4eec0024568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ef307b8-ddd7-4e39-9287-37cc73666a54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5be18c2-a7c3-492b-a41d-832d12cee76c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37384127-ed51-4232-9f4f-61c559ec8bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59aa7ed0-1dc1-4e9a-8721-36f7c0d2ceec",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7780f262-b948-47b8-9b69-f16826514617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47bd5c8c-815f-43a9-a320-b550a131442f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c80a351-ede5-4a1b-b47e-0c20a6194e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93c0e50d-9125-4cd1-b44f-c16ddd5ab4b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c96faeec-d78d-4265-8aa4-287406eef3a5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f7c064a-32c8-4796-89ed-2ebb53d037d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68156815-35d0-452e-89f8-88a35fb0faa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c925034-cd13-4021-977e-95592fee13e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c7e8e53-d455-4eb7-8ff9-ed2c21c993b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec01d71-bdfa-4a62-b1e5-ca40c3ddf67a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aebca5e-3de0-439c-a9b2-fa42f97afa28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca9ec107-6ee2-409f-bd2a-bb5eac9a06ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a890f82d-1453-402a-8957-71ef024134dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee70b2cf-9f42-461f-9c4c-50ba80320609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ffce767-d8a8-4288-8f93-2902c850e951",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7182a7d-633d-444e-97b5-0266e23ddbb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b24c2a05-508e-4269-a1fe-93fae4e67374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4c2db4-7cba-43fa-80ac-2e80deecea99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "306f6ba4-0e41-4bdb-b7f7-a929c790cc67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a08892-955b-4c6b-8302-bf7bb9289a02",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb4106d-bbfd-4f3c-bceb-c3b5110b664d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "343c86c9-a37c-4982-bbb9-557d537880c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aff097b-783e-4f83-90b1-5a0f1e3c00e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "969044c9-e494-4276-b07a-996ddf463c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b310e9-3db4-4a4b-a012-54cb65713472",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe31552-464c-4fb9-95eb-2e5757d6b079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee312968-3d65-4a01-9d71-bc2ff87ff89e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c2381d-b5f5-4a15-8ae9-6cbec6b78dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c255652-c83f-4e02-b851-224216228d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff59625e-101e-4a57-8794-62122ae4b3e2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e5b3af-e74f-461e-8782-7fbea69c837d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be18df2c-833a-4c6a-b10f-1c1c3ed04c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba4b84a-948f-4826-8a10-9634de91a7f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94611c29-fb14-43a9-8d1c-db656332bc08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b77b910-08c4-43b2-852f-6676f3443783",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b726eaa0-397c-4319-9139-eac72330f38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b5881ea-b7d3-4b85-8dbb-22ea57ea0258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec853f8-1f85-41e3-80f8-19c3c974409c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25d16b10-3258-4f92-bd5b-50e9541ce5b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d08416c-a7a2-4531-ba02-357129b5c110",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "febe3604-7e78-467e-af15-2770fd1ca139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07b126eb-7041-4d1a-87a4-412c051c5067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d7dbb2-2d88-4293-834b-5459c7ee5c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcb4fa65-83fb-4b1a-91f2-53bea1b132c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5bc84fb-68b8-4d77-8508-73cafee7c604",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a15582-cc84-4970-a639-fd8822fae500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b84f1e80-9498-481d-8793-82c14844e1e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb28e6e-561c-47e8-9773-c9f53db4133f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91471e19-a296-48ec-b237-e3580ca693d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb87eeae-67a8-4208-8d03-9ac6a6f5991a",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0442159d-db69-4156-bd27-570a30bf8acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03503673-3fd9-4d31-ae32-edf5f37adf29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "341b6df7-a9dd-4666-840f-bf17981e2e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d486c0cf-55b4-4e39-85b8-af857f92a64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb45c1cf-ecf4-4fa9-a851-2e15273e61fa",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a61eb92-ec67-47c9-9e0f-02557ef28630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace06981-a5dd-415d-ae2e-41554a45b662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6cb5cd8-1e3a-4cbe-b5d5-82c234a87dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "597fd35e-2f21-4f07-883a-c704f4e5b6bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27cf041e-31a9-4387-9e5c-0f82c6245ba7",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "860d1c22-432f-4442-aecf-0b9b2fc2b73c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed0d76ed-514b-4486-98c9-1d51588edd69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3724e5-f6f6-450f-b92d-5bf0573beed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35b44862-176b-4908-a1a9-90837e079be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee2e2d7-40e8-4e6c-83ce-4461bba6b83e",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13567b91-d6eb-411a-b8fb-433dbfe96b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad191d0c-7121-42b0-80e1-2424832091f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54413982-063a-4288-9c29-b1975c92bfb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9816846-9780-4089-97e1-f3c6f60832ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8df68d9-1449-40b1-b5b3-89100d912f21",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c0930f8-7bac-4579-a05b-70ba54d8430f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b5ede70-9186-4949-a1f1-5e2113115cf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3fbe2dc-5133-46b7-8e62-8fe6849bd107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30f414b9-4d25-46ce-952d-8cea8e67f724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0afd3b39-4f3b-4fe7-a30b-2c076faea39d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a87750-2752-4833-b2f2-7492042f6505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9968bc1-3061-4d82-9f4e-35855111091b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0db838e-de0b-4abc-ac88-087de0a157f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e3cc1d5-f138-4b43-bba0-245a9163249b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cba52f72-d173-4774-9a08-ee548206da89",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "df0c15e1-e2b7-4083-9c3b-bfae0cf85718",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d805b042-d63d-4607-a3e5-0a638d95df0f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "07bfa405-8828-4405-8873-ab07bfe49fc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7781427-f813-4227-941f-d832192527cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9348f73-7487-41db-8513-0867428ef181"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d73556b0-5300-4b0a-a33e-7b5ed9fd66ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "892d37bf-bc44-4ac2-99ad-585ab4896e14"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba1e1d23-037a-4f80-bed6-0fad32fab242",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c667c98-ee8b-4161-b7d4-b722f108eb71"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "52732286-36d6-4cc8-bd74-9888bf4ed6d5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fea98635-d502-4388-8807-d561375e8d69"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6ef36e83-477b-48fa-8213-86f115975c91",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f7b8ca07-68fd-4d45-80e5-48df42b72b7e"
            }
          }
        ]
      },
      {
        "id": "6a02dc8a-4a03-4458-bef6-a95318518ae3",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5d450957-3f98-4532-9531-11accdf5b423",
            "name": "Negative Testing",
            "item": [
              {
                "id": "63cfd707-a585-440d-9954-57f2f73c1033",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7eec2022-36b4-4137-8647-038638673092",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc190c8-9fea-4581-ab1a-b5dd3cf41a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "270aff32-6f32-41cc-a372-63612e469ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b4577c-8782-4373-bd24-13364d3551f2",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e82ca86-a6fe-4dcc-a5ba-6b61299c1bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ddbcd40-7ba4-491d-acbc-02c4f2c135e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d86eb5c5-1013-446b-ae27-cd1ee4fcab40",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "114d727f-feea-4291-82eb-e4db23c2f341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc7c9d8b-2ba2-4558-9580-b40d2f1f1531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aba83fa-1c42-4890-9771-bbeb0f831032",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84be811-5cc9-44f2-9cae-ffa432899953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a83032ab-80fd-42ab-9e76-497b6a6c9690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64fad8a-7d14-4289-881a-4adadf63cfb4",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1809b24a-b968-4d74-8792-4adb68a3bcb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de86f40a-cb8f-41ac-82e9-3dd67035b69d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e01a134c-9c4b-442c-87d3-c6c0b7a3faed",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb3a637-c972-44b9-885b-757c14fe547f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "086143f5-03d4-4599-a2b9-8b9d912e5d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b76ddca-d6c8-4978-a109-00c146786c98",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e479b4-df01-40ef-8140-009044379e8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07e18d4f-8830-41b8-b1c0-eed8b4314b7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "877b388f-9510-4a40-bc0c-1b917f18895b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33fe19a2-6673-4a7b-a29f-04e61b2a147d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1765032-35d1-409a-a090-84e32c4ad8e8",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c85995-3615-48e1-a02a-776c6039da6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1da78e99-0bde-461c-8f0e-2cdbde4ef7a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2a8269-2114-4448-9202-e4fdd5253564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f83845a4-89cf-434c-ae4a-f5341110fbbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efcb7b69-aa71-4cd7-9d80-705e001b496f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deac2048-6141-40f4-8dba-cd6b3f46b661",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaf689a3-fe48-4031-88ef-b8ad6aa1db02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35560fe7-bc93-40f7-a763-3b76d0dede9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a88fedff-202b-4899-83ab-6ef38839271d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a391855e-79e5-4ea5-b237-d39cf857cc39",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b466de-7917-4398-97d1-e1f2b58b8298",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "211da4e3-8431-4405-95ec-810c393e27aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b221ccf5-4ae5-42c5-88e9-1298d0256434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d94e766-2943-4929-8492-47606df0e3ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8754a6e-7a5c-4366-8d40-0e7f05af446d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc66b17-0fb8-4075-b300-929df9e24699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a352426c-840d-4b30-84b7-4b81a1c413a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3219d326-4533-49ab-bf60-d09d65640273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21485897-0a87-42b3-a299-5232af61f5ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c13ef986-fbec-44fd-bf22-84697dafe2ba",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5acdac8c-c232-46c4-a4c3-402b7305f164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc25709b-42d6-4e0e-8e96-fe1f52d765a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cac85d4-ec32-409d-a5f6-a8390231a262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ea67d74-9735-42db-bbbb-f850112193e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be769dd-aa0c-4f12-848e-2733e593b5ec",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "670da9bb-88a7-4cb4-b7b7-91b22bea98a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "253074ac-256e-4239-9917-f72cdf98edce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80fc5762-2597-4ac7-88ee-fefa3a0ace8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98002424-9a69-4592-8082-978ac872203a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e548101-e50b-4940-b0b0-d5945e437f04",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "838bb10f-6dca-4f70-b48e-a93fb964b502",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cabcb708-bcd2-4203-b7d5-0bf2e2ada3b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc36099-45f0-4c59-bac1-6897ba060cd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b99b8044-3222-4260-82b8-442e840f2006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa939d6-0803-4046-9d98-812e5077d508",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ceac5d-efa1-482d-b063-853ac85e1622",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e364be37-6a45-49e0-97eb-1da560691f18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f637e6-8833-4a5f-955b-64341a77cabb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8a9085b-dbe1-4dea-b864-e6ccff5e9ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93089e24-880b-4ec0-a439-6ecb816f44a6",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa7c4da-aec1-43fb-80e3-922abddd5b6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b86e7d0f-8b35-4734-898c-000a7c45c1b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e9b2a78-996d-463d-87aa-e0d9e749fbe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7570ec7b-5a05-477e-9827-aa9dd0839d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9873cd86-3b24-479b-9388-2a388e477c87",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e87f89c-eed8-46e4-8960-62d56ab238a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df30bf3f-9196-45d9-bc03-1774a828d143"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "069d77ec-068d-48d4-ab30-9ef042660749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a406bfb-4d7e-4611-8595-cd017f87e262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0dfb228-f167-46bb-a2ba-a6ed3dc49ffe",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5266efce-aa88-4820-b2a7-4030f6282777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "993840a6-b8ea-42c0-bcf2-2590d82de587"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ba615d-70aa-4dab-a9d1-2466ca171a50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c9f0161-f569-4bda-b1e3-a3f80701005c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8573012-e0ec-451f-b429-5c60be7e864d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee154312-e432-4945-9e24-5ccf312aaee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "330a62a3-0c8e-49bf-bc7a-bf5d2528550b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f39c945-d21e-4eb0-a36e-19e52d764f69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a27ac658-d0f5-499c-b0d6-cdad30edc463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "684af5a6-c0ec-4792-88b7-56e4490c99e6",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed463f34-7461-46d4-95ba-fa45bee366a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b9e8981-35e5-4abe-8b76-23b43ca1c63c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45fc1410-746e-4de1-9a70-22afe99e03cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8e4b7ec-9889-4aa9-aa16-acc782e22f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce57eca5-7409-499a-af87-7b9fd325d51e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49ecd32-a625-4fb9-8484-4e0015fb358b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0b70088-418c-47d3-befb-063af8328b21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a00e56d-687c-4e9a-9597-f786529e19d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce2b5599-564e-474a-808e-d35dec4a12ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3994c7d3-2257-4780-90d6-26d9fea0e2b5",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e60a16b6-2afb-4a99-8822-fa587fa3e7a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7f680d3-bfd3-473f-924b-faa95fe05fe1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e24b7e8-4881-456d-bf4e-ab7d2795130b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "823b2629-cce1-4732-943e-1f961c7775ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97221f2-4b4c-498e-aab6-9d7fdc60589b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ded6682-b223-4302-b502-966d876251fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "409ed048-f246-47a9-aeab-3262f48aa4d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "791560c3-0b10-489d-9d53-fa9600636e48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a5da823-1f86-4899-8bc8-6af49cae656a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a108d2d6-922f-4d8e-b2ab-1b270e665897",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd1315a-4c55-4623-b2ca-5e0ca2eb80d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4086cf8-4741-4a6c-b039-600ceb9d9e18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87dc7772-6e4c-451d-9471-f6d8f71c9b3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a074509-eaab-4dd3-9ada-a9256bfab2f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72326d3a-d418-4d95-bf7e-8e5a7ecd80a1",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f3f232a-85b7-4d5d-9787-f0df5c21c073",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bc902bc-a5dd-45c6-a787-f84e564b6a0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ac8bdc-8a86-4489-8470-22578ae7a280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58870773-419f-4b25-8d97-ae9d95dcb401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4fe904c-4ad9-4b55-812e-02b2defb15ad",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0811f692-a54d-41b8-b968-3b4e8434eba2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "052a9e8d-5df1-4f8b-8cea-33135758848a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54fbaa8b-ee32-450d-83e1-8827454e97b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d6d45ef-7405-4e9c-b9a8-466a0961d4b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d31eaa5-900d-4682-bdcf-a94023d993c3",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b578c4-2b4d-41a5-9d3d-7c36ae4a2e42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "264fcb29-009c-4de1-af6f-060e2387c56d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0066137-6189-4889-ab86-87be20679d3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "776aed8e-5043-40ce-9a68-bb1bce78151b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0506b98-b1d4-4892-b9c5-8ae28587bd5b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1ff315-d8f6-46e1-9048-4d5085420290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a5b2c7d-1012-4d0d-ad7f-7eb26d56245d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2b18db-f648-4f69-bb99-0a81b2a9c92b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e659ac4-3191-44e3-b828-1522f5df6945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12d1d85a-f7a6-45d2-b01d-4bb846341a7d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ab4b54-8148-4cc0-a6fe-987daf5776da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "080d0baa-3bf5-49b1-9f21-452fbf89f4c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ffd06d-9a74-4c73-a492-8974393f1f65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5333354f-7716-4062-b6cd-47ed92647da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c8dda9-97ed-4e37-8afb-94308f824ba1",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f51c1c6-3de7-4d39-ad69-8da7952f66ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61af992c-e5b5-48b0-a173-e985bfa2995b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d85b5c-39ff-4778-ab79-0f74de422bbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c730ce6-ea22-4777-92e6-deb4c63ebcc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e85fc90-2b95-4fd9-b359-cfa254f993b0",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125e4431-a1ec-4fa4-9a26-b2e5785eb2fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35dd351b-a855-4130-ba85-b67ce50df71e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1988788f-da92-426b-a9de-e46406018a1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4abe7056-2d95-43fa-a5ef-160a9e4cfb0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602fec53-c7b9-4e14-bb3f-5da6a03511cd",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b0229fe-6925-43de-b91d-726a28822324",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cf69eaf-b7b6-4250-a834-4240723c713f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa9738f-2058-4382-b405-a48d200e5800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "766585cc-6c69-4730-9faa-5bc07a1bb52e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc48000-1b3b-4100-9c92-3c0ab24f5b97",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ee6bc4-ba87-4a8d-b223-8c194545444a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d016226a-4262-4647-993e-2990238651bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "342857ec-730b-423a-8f70-fcb9f2d7cf21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96177eff-db6b-4f8b-8920-4fc73afd1189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92657388-add6-4070-b91a-7b21e12937d4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52edee74-4ef9-4ea5-b3a4-7e6f25acfb06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71b59a1e-c7e7-42d4-865c-10faaaa44301"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9544bb0a-b43e-4f6f-986f-13907f79c9d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c30a2e7-2712-4e76-9230-4d6f2bb69725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2cfca0f-667f-4723-9a8f-4ae7799f10f9",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3161f40c-9e49-41ab-8ec3-05ac88ed9120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26f2c206-d37a-445c-a647-1ff61afa5982"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d75c243-468e-41d4-9601-e4b1c9df64fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5660c69e-0af3-4ae0-a98d-826bf7f7f5c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b0a6cf-eb9b-4793-af87-ed1ca827c0f9",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1849307-d8cd-43ac-9e6f-5e84d401d855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9faeb989-4544-47db-8744-ba33e2f6a907"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "861c1afa-6979-4756-8edc-1aa14f69a4f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2ae9842-ac7e-43eb-811a-ee31f60fc72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8038c0-3721-4ef4-bdd7-eb85bff19ae9",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005439c6-b621-409a-9c24-c0a926434980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed8f4043-0ba6-4558-bdf5-3416b8e3f3be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47902e93-f705-4744-9390-16edbe70d0bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fce6ea8b-30f7-42c1-8383-3cb5c2a0fa18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f370a5-30ee-4d63-8be6-cc8cf6b9cff1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff514d21-7134-4e5a-9cf6-b275743aeccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0ce110f-fe12-4922-9f35-f4e29ac4a210"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b04c8c-b62e-411d-b0af-7c7c95f96649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e37c991-3b6a-48a4-8e39-2eefd737c6d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ac66b2-7813-44f8-83b7-22e699d9c362",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f65f33-ec41-4566-a244-5913a47934ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "283995e9-93ba-429d-b676-0323e486e92b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ca261c-3f84-454f-86f3-28718eead1c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af169599-d2ac-4629-af67-ac12dc247238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6e6db5-a133-4988-9e33-56ebf4ad95d2",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6632dadc-a13f-486c-b498-e6f17e5d593f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bdc9da0-b9ab-4b1e-9293-13b57dcdac17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "878cd4f3-aadd-41b8-b541-a8d905e088f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74510874-6b5a-4d9b-8365-202cb4be393f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4947809-8958-4357-9cad-96a2ae237f0a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7adf3843-dabf-400b-a319-9b556fc341d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed1ea9de-fcf9-419a-893e-204dd135e410"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ba8208-3bc9-4433-a37f-104e8279aa27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94d775d7-d0cb-4a59-b054-a9e030d9d2d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74bbe020-b23d-48ed-b5b5-05cf62a755ef",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef949c5-6bb8-4d56-9958-c46021dccf59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35a79c2d-8d4a-4633-8964-4f87945ea5c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3377e00b-1940-48df-bd49-56c5b50b2617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cf83baf-62f1-48ef-8849-705833abeefd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2a87e5-925d-4af3-8e70-7193de6d1273",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45153f42-241c-478c-8e4d-4229e34a0afe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d96362e-d979-4fdf-949d-e9399c83bd6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d0ea36-d20d-4e72-bd0c-4bb84f6f5cf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb47375-5651-48c5-b8dd-5fc6b2ffdc8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9fb5d32-b364-4e57-9b10-9fdadbafe7b4",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aaa6b76-b475-4914-b8d9-0f7c84337583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d82b2598-ed2d-4e97-bc46-4bd6f18da560"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "639aa54e-b487-41aa-973a-11c5bb992051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb4e2895-c3b0-414f-b978-337f27908ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7468ede5-4c3e-4d27-8b45-48cea572d069",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b80f6e2-b22a-474f-a538-f4a2ce2d816d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33debb84-6c11-45cf-8391-893ab12ec1fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30dced2a-7ad9-4538-84ab-785387722054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4787410e-88b6-43c1-8600-d2255df2499e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f600729c-efba-46c1-8aa2-0457134f1dea",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b02baf7-cbc2-4c91-99b7-97b617a81c6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40bb5006-97eb-423a-a3cd-8893e014ee3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88443eda-06ba-4623-8cc0-a0add69d2634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3e12cb8-8a4c-41a4-9034-4988a36b649d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad62620d-661f-4887-abb0-4b99b627bdff",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a0bd49-dc3c-4bfa-be5a-de8d8c93f669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91ecd292-16f4-4b95-bda4-bc3eb47796ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fba9d8a-52c4-430b-b36d-36d2c6639267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df503e1d-d96b-4f64-9c6f-78c469406c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f09b8bf-7ab2-4a47-b411-5442b7cf0215",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba0a1804-57eb-42c5-8c21-bf76856b968e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bff03e7-8ec0-4b19-ae05-124246f66b14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3e6e81-38e9-478f-a626-a628a593bf82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43518091-dd2e-4c59-83df-7937879c23fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f17df22-508e-4764-9854-a13b34cd9f83",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f9d539-fe9b-4c1c-ba75-f98c91f6b1e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fef051b8-676f-4b89-a4f1-baf7b7fe7455"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43fb51f6-e8c6-465a-bd0c-4da2f2fd7948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb5dfc7b-4807-432e-ac56-131ddb097733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b64344-9ca4-44df-8cb8-5fc15adbda1b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08659fc5-3105-4983-99a5-05a160c73b25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f590d53-999b-41a0-aaf9-b7a020eb683b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96f94aec-7506-45b6-99ac-9bd725093cbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49a09267-acbc-4a00-9a53-1861207aa721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e9ade6-8102-4204-9084-140f604c8f95",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993010d6-8b0a-4dc4-b6cc-4a76da702ed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c436431-aebc-4349-a280-f498bef42aeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a3f37a-a171-48be-8af3-ace24dc93b0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cab179c1-fabc-4b3b-87bf-fb332e5139cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89926a65-ebef-4e59-b207-dc11b17d3213",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d1f78d-6f2f-40b9-a868-8fec3cc7f907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2946889-a79f-4cff-827b-09dbf0150f03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35af66f-6e19-4eaf-9045-17c2ef50aac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33ab2d22-7432-4c05-a10d-ae19b2943694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda2ed53-1cd6-486b-aaf4-8721fdd3e31a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3bf77e4-f9c9-413e-9859-55777d976749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c3761d2-f39a-4643-90a2-1d6548616523"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a830ad58-dcdf-4daf-ac7b-49b0ac9582a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9b20c85-8d13-41a0-9786-d1ae83e4ba2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fede7459-1f61-4e79-a461-87dffd752b2c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0e8ba2-40fc-4ff8-81ee-a04aad5a8509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07df71ed-5a35-4c5b-b1d9-01e8bfc98a94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04cd5df-7078-485d-8f7d-b71eec606054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "354efc08-4561-4508-b76f-9217800b96b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c3dd81-6e79-49f9-af2f-b618a2ba29c9",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46151008-3d68-4faa-ab28-f5bb5045acab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05c6eb8e-e969-44dd-9f91-d5fb3e9be7b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef7f7c9-ccdb-4209-bf59-39dfa9c7b4dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8b31092-5578-46d8-89ed-32a6c667b47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0476ce25-9353-4ae1-8be4-bf75afdfa9d7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d2ffb3f-b3a9-490b-a24d-8aeac2318ff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07b36d64-6cc5-4dbd-9d90-0512a2a1a96b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e42d19-bea1-450d-894f-e1c303440c90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "974040f1-9bfd-4a0a-8201-22ab40a48a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59911eff-4c26-4993-999a-948f6b6cde95",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d805402-db5c-4e15-9235-3ea2b1a56ebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c049c39-2c5a-4459-8659-e8368ab72cfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42343c4c-865e-4b41-b9a7-c6f36f60f392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a93ef1c-4c4d-4f01-baf4-00d6ac9be17c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364bd835-3a2b-49b7-93a4-7d31d7585199",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c96a417-dce0-4def-ba02-1c956f2eed8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ee7e531-d4b5-43c0-831c-1f7c964ad68b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5e1e8d-a97e-4b30-9692-faa9d1998fc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8fbda4a-b6ec-4308-b161-ea4c96796955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f718763a-7d9f-43a4-8561-cee7b8e39ca3",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbbd24a7-803c-4346-8ba0-b70a20e856bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8884599a-41a1-4754-bf77-f03f88ff35fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bfa4a7b-78c6-4cc9-bae2-2f1c3da55c07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1335d204-132c-4352-a7f9-8ffd838bad63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fab42e4-75b5-4d40-b45a-5a05e9acb006",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10de231a-30e2-4b7f-baad-f71519e443a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd1c33b2-1305-4275-b858-00225390803c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a26d04-d888-48bc-9fda-d057ee59436d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6c69f0a-e349-463a-9f7b-1e94827761b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e9cf082-b5c1-495a-bbf2-01f1e10116ef",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb4f3f5-baa2-426d-8504-1bef69524b5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92279f47-4535-4031-abc3-5887f43ace9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "953ac6fe-6b2a-4085-85da-54ab92fb0cac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a4d0e14-9de2-431c-b575-2074bd164076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cbaa33f-deb0-4a8b-83a3-8fef53435a2e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1020d5-078f-49f4-b458-d5c5330190d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af9ae842-2d95-4337-9263-649945b5e096"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d012a5e-e9c3-488b-9739-963952e33ad0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce2a4d96-e54c-4aef-aaed-be7681134cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5cbb67-c21a-4a46-aa8e-b5a9c230201e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8796e1c7-82e1-4107-963a-61775e5d5e97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7075b50f-6170-4205-addc-0044533bd67b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c16459-74eb-476e-83e4-176602b95ea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b95dcfc-ad11-4652-94ba-8b53b5e84e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51cbe502-88f7-44c9-8e46-7527bb58cc58",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb58519-b5ca-4f9d-a6fd-d348345c8c72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a242c14b-f5ab-4296-97d2-c7a2f34ae90c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "013ba479-817c-4a68-95a0-7ea951398c5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4db7d6b-36c2-46ea-a6d9-be4cf33523fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2d4233-44b5-4dcc-8b64-885cd31c9853",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "109b3d7b-bd45-4ccd-b05b-168c121bfa50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43b05559-5210-4138-aa5f-d20edfdb0d65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6300afab-1f63-4a95-889e-9fa6dabed073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d26c7cb-d648-4b31-9be2-b3715907ec97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5804fa5-0acb-44cc-bd3f-c644ba086474",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd445292-a8f5-4afc-aecd-999c9bb455f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "435e92e2-1342-46dd-a609-e2b180d8fe4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce49101c-1a7c-4679-9885-fd107c8a8666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d44e09b3-daa7-4169-9f8d-079d6d958aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a47c473-2304-4efc-a44e-d12b640ebf5d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010b2084-58b9-499c-ac50-e7ab9b3294f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e9a2123-2706-4674-995d-261ce1a8e78d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc1c02f-1fe1-411c-bb67-d981f9ad0e83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47fb2d09-dad8-405e-b581-35b9acfa4e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d1adc90-7d40-45c4-bc0a-e11189c0f2cd",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16d0d7d-91bc-449b-8f18-389bd47efc00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4834d1d-23c8-49f2-9766-f3e1e0b9b68c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4af3ac5-33f7-4ab7-8daf-0935d297ea7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e8c2847-85ec-4c72-aee8-734a3bc547cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4626a8dd-9184-4aa3-875c-55868a5cf7c4",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23fca33a-706e-4026-9388-7bc8c3b4aee5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "518940c7-d019-4ca4-bd9a-6c50163fbcae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4bfa574-6bde-49e0-ade4-7fe58c3b6670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c50af8e-5535-455c-b586-aac679d54873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff30b5f-aac1-47aa-9917-c9ad9a57ee96",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57e8120-c295-447c-ae17-ff1b8defed63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afd4af1d-9b18-4402-b79d-9795d1ffac7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7192b426-606e-4cc3-bc8c-a95660537029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d92395dd-9178-4952-887a-5778094b5577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6ce69c-1d57-4893-b05e-e6294b469baf",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f68839a-7916-4c42-b88a-82f2274fdd56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f60d6d3-6d8e-44db-b9b5-44c9403fa5fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "911d9125-e1b3-474a-96d0-43921a7d8794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7993e266-f511-4222-aeff-b5eaa8d8ab32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6836c07e-86fd-4981-96a8-9b6239a4946c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb7ab36-fc48-4895-adcb-f91ecc863887",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d414a52-da6e-48f5-a85c-f0ba952cf19b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec255eaf-e525-492e-b1e0-ca4790d41cf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37c340a4-6ed9-4fc2-bac0-ea0a34557e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e86730-c4f9-4edc-b326-ada93ed2bd4e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea95404f-1e71-4673-a57a-58fb88034f31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0c67496-c501-49c8-8a52-30ad03794f95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "228fcd20-4fd1-44de-aa3d-6ced083742cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0cc934b-ffef-46e5-9448-b4c87523954c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458760fb-9606-4562-bfdf-d9bb381c7957",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47fc16c4-bc1e-4083-830e-368019ecb7c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d59c015-7ab2-49f2-8a0d-53e7f5bc6201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67033841-e862-46d8-be45-46ea0c54b2db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e1e6aa5-6373-40ee-a513-7e28e8438899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d1c559e-bdde-449e-a090-0489aa34e493",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0ba482-e582-40b1-b34b-35d7c6be9c59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a0ec317-29ad-4ccb-b1b7-f9aeb5cb8287"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6710d2-681a-42e1-b6c3-3099e7996008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d31cd80-4d6d-4f2b-ad03-7a9607e00e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f6f98e7-a6ca-46a2-94e7-460573f47d8d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650f60ff-b90d-413f-ace7-22e7c2f1617e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caed98d5-2b05-4eac-badb-6e124834e541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b22904-8512-48a3-8a8e-ce6f060601be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78f6c29f-5b9d-491c-a28a-adaea493990d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176e4632-5063-4894-be54-a08b255c82d9",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d82bd9-7403-4c8d-bf0a-40d084fbb2bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a51779a-0e15-45a3-af52-82de89219cc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f35cb95-2684-472c-bca0-2da918d8fdb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1b7e8bc-b1e0-48a8-9966-dd56fcf60e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b892dca7-b80b-4201-bb51-5db4d2dee3b0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b446bf3-acf3-4f59-ad7b-f0b59f8a5e8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c08b74c3-6ea0-4733-bb51-1595f91ba6bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46fe86bd-b7b2-4286-95cd-ba5ae9345b29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35e51488-549f-429d-8f84-92262100bf2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e47a53d-f034-43f8-a74e-ff3b6d47aeca",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8afd2b-f84b-4cbd-b1f4-64ef23b48571",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d8cb7b2-07b5-4c3b-826b-0f52cc0ebe4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "829a24a0-ce44-4ea8-8b46-1ac085778a5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc1cf8c6-5587-45da-9fcd-3674134801ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc68b7fe-270a-44c4-bf45-59c8235e5dc8",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6369625f-d25f-42f8-ac11-b7a813eba651",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e8583c2-8011-4e79-b590-361471347125"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a252bd24-dc67-44f8-b789-ef2567cba696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d928e73-fde4-46f6-bd0a-28afb7e399ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00202c2-b976-4573-ba3d-b1b03835f4f7",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89d1dc4-b480-4d1c-9c86-bbae1ca2232b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a557ccee-d5c3-478a-bd34-7417625d0c73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ff52ab-efe2-4d96-a822-d85339d9900a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76ea8922-9f1a-433d-bf06-4f0d76d74889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f38fab-d564-4242-83d4-612b95f345d7",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b620be-8ad0-4ef9-921d-23b3edd55c94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "311f536e-d1d3-4ffc-bfda-1cecb5814dc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcbd4a20-9f3a-4daa-b09c-2896c3a98655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3562185-94ee-4c38-b262-c87c2bd94d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b051c46b-6349-4612-8775-2348f313cbf8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be187d3-0137-4112-8dd7-4dca18844f37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "651611a3-896a-48a5-871f-be93ce5fa65d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c5880f-52da-4df4-92ef-32b1d90be53a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25f016ee-f0b1-41fd-bb22-e017b1ed6d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67991c4e-f98a-4efc-bd8d-5f724feb8553",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4c3273-c4a3-4e82-8a6b-366add5e0740",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "721d6ae3-fea7-4fe8-aacd-06e02fc76240"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c549eb-b9b9-42c1-be60-d855c5d1aa92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56174a24-fab4-4c9b-b2b0-d70c0aa37e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a008251-0dbe-4524-b07b-6b20cf82ca2f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ab91b7-a6d7-47d0-b866-54611c176f7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38b62f45-780d-427d-8aad-225f374252eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d379624-0b89-4fa1-b1e2-570fc9d243bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d154265-e30e-437e-bdcc-401ead21531b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ece8056-7e37-4706-a954-4d733e94c1fa",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f4bb61-4677-41a3-a5d8-2d75002f91b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b57bd4a-1f3c-48e7-91ed-8b90f2ef310f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2b4e38-3a8f-49a0-b8ce-458d77d16f2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95d8a68c-e90a-4723-88ac-b8fa0df8fa09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a92a0be-759e-43bc-9ca2-d29e910170a5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21796aed-707c-496a-9366-f6a4439896a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e09f6fc-ee4a-4d15-b105-1645a2201935"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a90382d-2da3-4200-9cda-c0ce6822abdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3f3530c-60f6-4d86-8631-fce56d817f81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4dcc5af-f59f-41e0-afd5-a9f996b3200e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc408444-3a56-487b-ac30-059a36fc8f8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffe106dc-9d39-4af5-90df-f154eb21ab75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba535f0-8266-461c-a279-f8551860937b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "526b73b7-9712-4456-a1f7-b058b90bedf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e446c8c-84ab-4c14-a344-1d6b434cdbba",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6afae2b-410d-42e5-b6d6-02b97a7bd3ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aab6eec2-a1ef-45ed-802a-ca998d72a5ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8b6398-b1ee-44fa-bd9f-876dea90c453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acb74a9e-c809-4ee8-aa9d-cf47295bf28e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d1cc71-6a41-4a0f-99e1-fe9044a91583",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f8281d-9622-4741-88d5-114de94a246d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fdd2604-580b-4c79-9891-cc6e4a9690b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b97975-e83f-4802-aee5-01dde4ee0ecc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "926a535f-98e5-45de-983c-ccb904074399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db23ee4a-f3d1-44ec-8b27-b0b3ccd9e30c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a574241b-076f-4b26-9261-662ebafbf735",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d77e408c-6408-4dbf-83f3-8f862fd69142"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1624336-af5c-428b-8c33-70c25fcfe6d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f37f6e1-b0fa-47d4-9a80-c4a413ab596d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd4f5c3-b911-4454-aaaf-deab96602dd1",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3099ab-b26d-4c42-85ce-7bdb33141772",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acb2cf03-967f-4842-ac1e-3af99b3217e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73d8999-647d-4811-9f80-23d5e7be3cae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81d3b746-f284-4c67-928e-7a079775f3ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa1c53d-982b-4deb-9035-6df475f4469b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d8471c-05ab-42ee-9a27-69e0e07c1114",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c15952a-d26d-4625-b845-dcf9f8ae15db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27894098-2fb1-4fa2-beda-31f83496537a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8fb9e0f-08e5-45bc-953c-50d159e78607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea23962a-9760-4d06-89f8-c437c5d9deb0",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe6e9e9-7dab-4217-ac05-709255509409",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a502b612-66f6-4c5f-8462-081b4db82ced"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d66205-c813-46ae-a2fc-04b98144fc45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a4b3f5b-2056-4029-a30e-b923ab029458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9e7752-e640-4028-9770-839d6e3c3df6",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296b6f51-de24-4386-b800-9f7ee15eb8b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34761511-2373-4049-99a8-d16b3572aba0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21fffb9-54b6-402e-8dc7-bacfc8cff0c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a24ad62-8111-4ebb-9a18-7650294c0855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef08a8ad-d32f-4a43-b652-404a16c18150",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18e986e-7eaa-47d8-a867-9b67730d5ab9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cafa7a2-9d5e-4a0d-91e7-6619884e3799"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9b416b-9bc2-487f-a5ef-f6d200aa00ab",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1797c1d-a61c-438b-a82e-c9cbb5d8b09c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc50d80-ba25-467e-bac5-610d8f3b2c6b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca99323-ed0b-45c3-983e-567bbdd330ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fabe228b-44d9-4e3c-b28f-5dd7f23100f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe360301-b373-4f63-8bf4-a0bdf7fe1cfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9f0d296-449d-46c6-ae17-9dfafc740e10"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bcdbe381-993f-4e65-a93b-c7419b026fc5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e6b123f-53a1-4e0e-bde6-d64fd59a3550"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ded6ea7-4454-4bf7-944b-016338a23591",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6ac7769b-63c0-4e96-a974-d1696e455ecf"
                    }
                  }
                ]
              },
              {
                "id": "2ae27cca-9171-4920-b42d-38aa65c10d37",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c6ea7ea2-6de0-4bdf-bc7d-a39428ff6f11",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62e5537-b6a0-4fab-8090-110da2eae80c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "873d636a-3b00-418d-81da-e288c649e88d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc48274-d44a-40ac-853c-9fbe74c687f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0bf4a83-86f1-4f74-852c-f9473c88a3fc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5cd82d7b-3370-484c-943d-05dffd03f2d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0efba461-04c6-45e3-8d62-ce97967334a0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "baa7c168-7cf2-4825-923b-21010016db00",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a1af0710-cea6-4727-8a5b-ed07f669a7a9"
                    }
                  }
                ]
              },
              {
                "id": "b52b9302-5c00-4a5c-829c-9bec36efb73c",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0cba41ce-6055-4d96-a71e-3715bacb9f3e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "612c5058-213f-47bb-ba65-0b3eadaa40bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7371ed34-eb73-4595-a24a-c89d2856ffa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85646e69-e0f0-451b-a94c-f4feeac1d011",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85a39c44-9d06-4527-bd53-07f17f421603"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c587636d-6390-400e-b0ab-919d4f4b15cd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9471e4e4-e65a-4913-9455-dd9a267d690a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "98645419-f9f5-4b07-9d3b-70dc05fb8792",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2a1b8aa2-56c9-4754-9aff-f9ba7bcbf28a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28c51b5b-aa03-41ee-bef5-71bc951344aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "460d395c-844d-4133-9ff9-00b4695c0e5e"
                    }
                  }
                ]
              },
              {
                "id": "26a45d7a-fcff-46b8-9b40-64abc1d47abf",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "82c4e25c-fd42-4160-8be5-df96fe6aa825",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "344f7720-5eaf-46b0-9608-cb53109b27cc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db7d212c-08c8-44cb-a7b6-26ed3614d761",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56473729-cc5b-4060-8238-9a7de0acba45"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd04bc41-4fd0-479b-b17a-818773406129",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e6190422-5eab-473a-a69f-f483d5c96a79"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd4a9f51-b6bb-47ec-9903-b0cc472e110a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c6f47561-97e4-4871-8c85-e79ab7a019dc"
            }
          }
        ]
      },
      {
        "id": "5d8b84a9-e52f-42a0-98db-08574342fbb5",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "444d3634-cfd2-47dc-ac92-dd5b32ea2a8a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a3852183-9ae0-4d49-ad39-e87f5d59b8a0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "76e9e524-4481-44d9-a5d5-d49440e3f8d5",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8b4d29-d662-47bc-b6ee-50755390c175",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9cf615b4-753b-49c8-b300-bf6ea2ab8b6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c417b45f-52a3-432e-9e08-dbb7474ba266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3061b57e-4db9-45f1-be77-36661870c774"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa4b31d6-c083-4af5-a743-b3acded7c863",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19caf12a-aa01-4b12-ba9a-37fbe98ba99f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a964618-3764-4c3d-921d-259aeb135477",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f1d7b2f-d266-40ec-8b86-4a650820a26e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c48b23cd-acac-467d-8511-f89f6503f3ed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "750d297c-5b70-4f82-b922-fdf591960ae6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3192ae88-50cb-41de-b2a6-a284350cf6c6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6da6c5fa-5bb5-4958-9d13-8789797cd64c"
            }
          }
        ]
      },
      {
        "id": "203dec54-e7d5-4f61-9931-fc87f0d25ee6",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a7a6d100-6ded-487f-a6f5-e4160400a631",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9267d58f-c468-4494-bda9-9198bb504f7e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ae9dfda4-1051-4eef-803b-633b5e5425c7",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c97d34-c85d-446b-aa0e-228330fadfb4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95cb9259-05c4-427b-8cd9-8077598a885e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3ae2cd-17fd-4d37-9ee1-7c4473da7ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b032a51a-4e97-451a-a55b-8f47414ccf96"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33125d17-e74a-464b-a302-e6878e8f1fa5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5bead7cd-aa94-45db-90f2-8cbd7e5771e8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c3e92a04-d4e3-4b32-97a6-c7242e47d740",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d15cf94f-8a65-4885-bb0d-ff0869739292"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e63dbea-e0e6-47e8-90b6-d7fbb1d0989c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0f41b3f9-32ae-4dca-ae1f-351cea64da3b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a2d0ceab-09a6-4122-ad63-d03c1f0cee01",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "651ebf50-0c08-4c6c-ae30-4033383726a9"
            }
          }
        ]
      },
      {
        "id": "a6102704-b19e-441d-a944-403952e11438",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "2b15b468-a28b-40e1-a8cd-c1c584e0ea91",
            "name": "Negative Testing",
            "item": [
              {
                "id": "02e468e6-8011-4daf-8dcd-e41da2cfcb04",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f11438ad-51b4-49ec-a3be-cea26197b4bc",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef1f4b7-48e0-4d73-972a-35a678348cb4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9eb4fff-c183-4be0-9014-4f792a929bce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9befd9d0-264b-4961-9860-dd49d2ca49f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79777b21-e405-491d-b5aa-2fd99dd3ec71"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "019dfc64-a700-4817-805d-8bdd7cd8be11",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "918cb420-7f05-450d-9b16-250eb5ecd341"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5ce658a-440f-4faa-a612-46450748e808",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "525bcfa0-aae4-4463-8f21-939f4336a10e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eba9c763-e2a7-4676-a0ea-f4113a45640a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "909ee5c9-1279-4476-a488-648ffe50db84"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "915f2ca0-2c67-44bf-8c58-dc0fd4c8ee99",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "87a17069-2439-47b1-88d8-6618e0ac36a4"
            }
          }
        ]
      },
      {
        "id": "ecd672e3-d8b1-4c2f-81fb-adb82d75bee9",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6741e760-9f4f-4647-96d3-76fff56652de",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "570886f4-024a-4d4a-b303-6dc537a942be",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "59521d92-dd73-4ce0-9d84-caea8feecb20",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "39d19c3d-5de9-46d5-8735-8bf4a616bad2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4b379b72-9e75-4f3a-ba2f-b753f4a0827d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 242.33450704225342,
      "responseMin": 7,
      "responseMax": 5711,
      "responseSd": 667.4154618140184,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1689295691829,
      "completed": 1689295776006
    },
    "executions": [
      {
        "id": "6f6f51e2-dfdd-480f-934c-7689091272f4",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "17362e60-c0d8-4f60-9123-a16dddd8aa79",
          "httpRequestId": "f9e02479-2212-4657-b1a4-7a1ab47022c6"
        },
        "item": {
          "id": "6f6f51e2-dfdd-480f-934c-7689091272f4",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7f0b6cbd-a2f6-48c8-bd7f-87d6f9e45719",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 0
        }
      },
      {
        "id": "5e1401eb-1f7b-43c6-bc11-9f02abe6b149",
        "cursor": {
          "ref": "92ce4d72-d122-47a0-9dd3-d0208bc789a3",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e3c8c3f5-56df-420a-81fb-03d15c822eea"
        },
        "item": {
          "id": "5e1401eb-1f7b-43c6-bc11-9f02abe6b149",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "366c9360-d049-4cc4-b250-87cc96e43c60",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "b385b74d-5c34-4952-9a6d-1cf825c298a4",
        "cursor": {
          "ref": "89509d2c-0d2a-4b40-a3bc-e1e24a91b738",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "848772fd-183c-4cfd-a77e-9d3f0e474d45"
        },
        "item": {
          "id": "b385b74d-5c34-4952-9a6d-1cf825c298a4",
          "name": "did_json"
        },
        "response": {
          "id": "33690cf3-cdd9-487a-9528-38109b50550a",
          "status": "OK",
          "code": 200,
          "responseTime": 488,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "542b8678-42bf-441d-aee7-a67d1f690121",
        "cursor": {
          "ref": "ff916920-bbb1-4f73-ba9f-2c3a48acb68e",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ecb4aa21-14dd-450c-8c24-9071b8304593"
        },
        "item": {
          "id": "542b8678-42bf-441d-aee7-a67d1f690121",
          "name": "did:invalid"
        },
        "response": {
          "id": "fc176350-3dd0-46d9-a9ae-835fc7078196",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1920,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "542b8678-42bf-441d-aee7-a67d1f690121",
        "cursor": {
          "ref": "ff916920-bbb1-4f73-ba9f-2c3a48acb68e",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ecb4aa21-14dd-450c-8c24-9071b8304593"
        },
        "item": {
          "id": "542b8678-42bf-441d-aee7-a67d1f690121",
          "name": "did:invalid"
        },
        "response": {
          "id": "fc176350-3dd0-46d9-a9ae-835fc7078196",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1920,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded529e3-491b-4536-8b4e-5a49db3039d9",
        "cursor": {
          "ref": "f47e94e3-ee6e-4873-ad30-7f981173e424",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "0f39a118-381a-4c5a-9119-4774563c5fb8"
        },
        "item": {
          "id": "ded529e3-491b-4536-8b4e-5a49db3039d9",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5bb70279-d8ff-4f08-820c-aa3840373a80",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6882c7-9d07-4a1a-90a5-0fbc1b01d258",
        "cursor": {
          "ref": "dac24cc7-60a1-4f0b-ae31-8e767f496f82",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "fc4289a5-bb21-4e24-aacd-da6ed5308497"
        },
        "item": {
          "id": "8a6882c7-9d07-4a1a-90a5-0fbc1b01d258",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2d58365c-0de8-4b4b-8053-182b592d69d1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edac6a03-ba79-40b4-bf94-057fe0f48f98",
        "cursor": {
          "ref": "69ba13b3-ec53-4732-b7b1-783f67ca567e",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "da384b4b-a928-4af3-a561-5be8e62b0fab"
        },
        "item": {
          "id": "edac6a03-ba79-40b4-bf94-057fe0f48f98",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c12ba298-f1b1-4bf6-a048-bc4c8a9354a6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4e69dd-ba09-4607-8582-57bcc1ea8d32",
        "cursor": {
          "ref": "398774de-2cdd-4f61-a837-c3d192c98c3a",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d5f5d357-31ff-4a75-bd87-811ee36b83c4"
        },
        "item": {
          "id": "2d4e69dd-ba09-4607-8582-57bcc1ea8d32",
          "name": "identifiers"
        },
        "response": {
          "id": "cd76c141-9074-4a3b-9824-ac6c2ac27dd2",
          "status": "OK",
          "code": 200,
          "responseTime": 110,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419727fd-19e1-49c4-be02-553429af78ee",
        "cursor": {
          "ref": "17a3f5c4-a9f7-4ec4-8977-b77c7c71b6a9",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "dd2e56a0-b60b-477b-994e-04b78d349982"
        },
        "item": {
          "id": "419727fd-19e1-49c4-be02-553429af78ee",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "355527ac-ab6e-414c-b41a-e5b05872920c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa54503e-ea26-48cc-bdcb-58e0341bfd43",
        "cursor": {
          "ref": "352609b2-d4c4-485b-ac00-8c9e5bfc3a9b",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "52ff3e1c-bedb-4e5a-b20e-4083cd5c809c"
        },
        "item": {
          "id": "aa54503e-ea26-48cc-bdcb-58e0341bfd43",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1126b627-0e4e-4d72-a130-d5e1cf6764c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec6f4cc8-d66c-49e3-8da8-d5bd5be82d8f",
        "cursor": {
          "ref": "1256b1a2-4588-4a1e-8090-cb4551665f69",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3b92550f-19db-4353-b9ea-0d54bd95bfd9"
        },
        "item": {
          "id": "ec6f4cc8-d66c-49e3-8da8-d5bd5be82d8f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "15fe73ac-41ac-40b6-be25-9b42db66b3e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 139,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6570ad8-0ce4-4f30-8e2b-4440711c9341",
        "cursor": {
          "ref": "90bc394e-e4f2-4d1c-981f-1e4363bf42a6",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e92c2b61-52cc-4863-beb1-51c11ff21dc7"
        },
        "item": {
          "id": "f6570ad8-0ce4-4f30-8e2b-4440711c9341",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "aaae89fc-3efe-406d-a4df-e0b63cbeb868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6660d3-574d-4ad8-8015-6f2ee1229159",
        "cursor": {
          "ref": "c0617f73-d996-4281-a20b-77526fdd9a24",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8510f03d-d619-45b6-b83c-5d7e30e878c1"
        },
        "item": {
          "id": "fe6660d3-574d-4ad8-8015-6f2ee1229159",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "87a00f9c-f245-4fe8-8f12-659ff8baa177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9861e66e-27f9-439e-902f-d737b0c2c2b1",
        "cursor": {
          "ref": "33ce1df0-6740-44ef-b272-79c7dd41a1e0",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3b1b2b45-0f0f-49dc-a088-4a57b3f5387a"
        },
        "item": {
          "id": "9861e66e-27f9-439e-902f-d737b0c2c2b1",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "3643e8e2-3cac-44cf-a69a-9c3d4c33ae46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ba842e-bbaf-4351-a620-98968d3ed01a",
        "cursor": {
          "ref": "ec1f3f7e-b3e4-498b-b6c1-38a5458f1465",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b27f62b9-8696-4c79-bc35-cdeeae9b225d"
        },
        "item": {
          "id": "c4ba842e-bbaf-4351-a620-98968d3ed01a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a8f2e5a1-a275-4a7e-97b5-5624395faedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bda8a44-0a9d-4801-8891-0f1e030415b4",
        "cursor": {
          "ref": "6ef012fd-02cd-47e1-b960-5cec6139362c",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9de9dd4a-6685-4951-8941-6e3cff77d24a"
        },
        "item": {
          "id": "9bda8a44-0a9d-4801-8891-0f1e030415b4",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b2165e80-e371-47b3-b665-96756a228f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18822b74-5026-46bd-95df-ac0541a1244e",
        "cursor": {
          "ref": "b58c3a10-904e-4230-91be-8f6d7f9f2034",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6cdc8b36-8e0e-4f7e-9078-63ffe7f24e07"
        },
        "item": {
          "id": "18822b74-5026-46bd-95df-ac0541a1244e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "798c0113-5083-493e-9db0-9c38874ef9e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5071feb-1169-4981-99c6-3f280b6f0d82",
        "cursor": {
          "ref": "ee33320e-c6e2-44fd-bfc4-2f9bdb9e2b21",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "56b256e7-574b-45f4-85c3-7e1f2cc2aafd"
        },
        "item": {
          "id": "a5071feb-1169-4981-99c6-3f280b6f0d82",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "202e549c-d018-4e50-9224-654dfdce8911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 891,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda9d0d8-0d66-4dda-86d2-44749b2f5239",
        "cursor": {
          "ref": "cf49c3b4-8d20-4884-87cc-61900998c9ab",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f7ba2cad-4b3b-405d-a62c-28fe6d289db7"
        },
        "item": {
          "id": "cda9d0d8-0d66-4dda-86d2-44749b2f5239",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "85c23505-92c7-4abf-8069-a1a276d61c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bacb16a-1b42-4777-80be-eb3b0d9f8703",
        "cursor": {
          "ref": "eaa7f3c8-742b-42f9-8abf-8429216b8ed5",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "80ed9cbf-eac6-42e4-b4a7-a118feb6f912"
        },
        "item": {
          "id": "0bacb16a-1b42-4777-80be-eb3b0d9f8703",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "524732f4-4630-47c5-8232-32c54ee43220",
          "status": "Created",
          "code": 201,
          "responseTime": 1123,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:20)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:20)"
            }
          }
        ]
      },
      {
        "id": "2fba85cd-9efe-438f-a579-440c98247d0b",
        "cursor": {
          "ref": "d9389857-a645-4976-9108-bb006eb3ead5",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8c877a13-e76f-456d-bac4-03dd5769a1a3"
        },
        "item": {
          "id": "2fba85cd-9efe-438f-a579-440c98247d0b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "89b5e326-c319-4312-9dda-7c3be3b6303f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b2193c-ab6c-4bf2-ab3c-1f7eeeee78aa",
        "cursor": {
          "ref": "4631c579-e22e-46dc-b632-80a889e43af0",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c39449a4-9e2c-4a27-a764-0a587afcc4e5"
        },
        "item": {
          "id": "f3b2193c-ab6c-4bf2-ab3c-1f7eeeee78aa",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "529bcc02-6a97-483e-a5e7-c250fba0b783",
          "status": "Created",
          "code": 201,
          "responseTime": 5711,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "b27bf1aa-8200-4359-90cb-978ee47603c5",
        "cursor": {
          "ref": "64a61651-2e18-4543-924f-3af392191840",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "10c3604d-047e-4ed8-bbd7-57149d424c05"
        },
        "item": {
          "id": "b27bf1aa-8200-4359-90cb-978ee47603c5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d8ce0443-8f35-49c0-920a-29fe82362498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0155168-903a-425a-843b-8e5ff3c45c85",
        "cursor": {
          "ref": "a8af73ce-e856-44be-a1f8-4f7137e84da1",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "95130f01-35c0-4815-883b-02ccda386547"
        },
        "item": {
          "id": "a0155168-903a-425a-843b-8e5ff3c45c85",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b1c1ecd0-d037-4ffb-9cd9-1776b3fee609",
          "status": "Created",
          "code": 201,
          "responseTime": 2834,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:24)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:24)"
            }
          }
        ]
      },
      {
        "id": "5aa17fcb-41b4-41c1-8ba1-ce351c8575d5",
        "cursor": {
          "ref": "4591d0d7-d4f9-4a43-8b56-e51fd1ea51c7",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "15dce62e-40ba-45fe-b2c4-8140198446c0"
        },
        "item": {
          "id": "5aa17fcb-41b4-41c1-8ba1-ce351c8575d5",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "48575969-9479-4f2a-9225-a765eb7c8378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6beedcde-1d6b-45f9-a430-ee31b02c1957",
        "cursor": {
          "ref": "c0ea532b-c161-47a0-9f76-1bcf946fdae5",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2a7e1c81-4e6d-4ee6-b9ab-e4c99c5cb503"
        },
        "item": {
          "id": "6beedcde-1d6b-45f9-a430-ee31b02c1957",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ce92825d-213a-4f0c-9e24-90de517fddab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ced4de6-3705-4120-bbc7-2fafd20ec3dc",
        "cursor": {
          "ref": "c746b5db-f566-4d1f-9201-050378323b73",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "71c72b49-37cf-414b-9430-937ce90adfc7"
        },
        "item": {
          "id": "3ced4de6-3705-4120-bbc7-2fafd20ec3dc",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ed84fa1d-9a2e-4c96-99b3-72954fd5bc5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01f18d1-200a-400f-aa06-d47692de0551",
        "cursor": {
          "ref": "561524ee-d4e6-43e9-88b2-dd49aec533f2",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4de0ed1a-6d22-4681-8aaa-2453918f62da"
        },
        "item": {
          "id": "b01f18d1-200a-400f-aa06-d47692de0551",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "7c3a71e2-83da-429e-b6d3-ee5e8e7c129b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d937d5-6106-4b41-b151-6ad6684959e1",
        "cursor": {
          "ref": "01f187f1-a199-4e78-b9f4-fab3f6d66cfa",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6ff604b0-62c0-4b3c-9b7d-ee99f9c63028"
        },
        "item": {
          "id": "94d937d5-6106-4b41-b151-6ad6684959e1",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "3be78238-0ea4-4352-b088-59b05b4ded3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6570cae-0990-4f4b-ab26-679f53150439",
        "cursor": {
          "ref": "aba4d375-2d97-4a11-8574-aadbb7e55799",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "16a510aa-022d-495d-9eb1-78bf4d26afe9"
        },
        "item": {
          "id": "d6570cae-0990-4f4b-ab26-679f53150439",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7905210e-5901-4df0-b8c4-180edaad596d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b912142a-c4cb-4f78-8313-fc5d4e1acd98",
        "cursor": {
          "ref": "0bfe8b8b-8efb-40dc-a086-b9a8e53dca6a",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "45bb1b78-2c02-4ac6-b516-6a2e7e742d07"
        },
        "item": {
          "id": "b912142a-c4cb-4f78-8313-fc5d4e1acd98",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ba24b77c-c227-4452-8dfc-52475076672d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648d63be-6067-4557-ae32-39cc604ee3b5",
        "cursor": {
          "ref": "b2a9f99d-042a-4852-9ed1-f1894d9c9417",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5384268e-185a-4c9c-a52d-ffafbaf9e9aa"
        },
        "item": {
          "id": "648d63be-6067-4557-ae32-39cc604ee3b5",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e86f074d-d634-44da-957e-7da9bc236ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec9cc8c-4bc2-4753-8638-cc84398ca74b",
        "cursor": {
          "ref": "1a8c3fe3-49f1-4ecd-9cf0-d009a87aa610",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "991231dd-6a94-4634-8a9f-927fcd179ae5"
        },
        "item": {
          "id": "dec9cc8c-4bc2-4753-8638-cc84398ca74b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3f3df0b0-5ffc-4a9d-8e79-0bc1bf759420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e685d7cf-82df-4fbd-a9a7-1bc3ce8856e7",
        "cursor": {
          "ref": "0d9deade-9cdc-4105-8135-24062711ef51",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "adae8699-e85e-45aa-847d-975ac98c257f"
        },
        "item": {
          "id": "e685d7cf-82df-4fbd-a9a7-1bc3ce8856e7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0e572d63-2990-45d8-9a20-852d071c94df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b07d864-b0f0-4903-b386-5ce16bf9dd3f",
        "cursor": {
          "ref": "6d5889ae-ea7c-4341-bc86-a39ffed4e8e1",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "824cacc0-f05b-4305-8f95-6cceaec51b2c"
        },
        "item": {
          "id": "3b07d864-b0f0-4903-b386-5ce16bf9dd3f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3a420afa-923a-4f59-b9f8-c0d6358212bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120ed7fc-f201-42d8-a403-d797d52542e0",
        "cursor": {
          "ref": "37299dd4-b6d8-4830-bc7e-04bfc198a1e6",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "124fa546-7aac-420e-9b01-6d01418cfedc"
        },
        "item": {
          "id": "120ed7fc-f201-42d8-a403-d797d52542e0",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "dd2e9cb2-6b22-4948-a19f-174e9b55545a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4042bf39-0cc8-4332-a826-99f83f77f9d3",
        "cursor": {
          "ref": "58858ce1-e359-4c6d-ab2f-d344e4acf8c3",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d7817f13-5bfb-4634-b0ed-599834b45977"
        },
        "item": {
          "id": "4042bf39-0cc8-4332-a826-99f83f77f9d3",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "52c1dc7e-906e-42ed-8347-b90c4677de3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1951e4dd-9b92-459c-afbf-4788b4fa5161",
        "cursor": {
          "ref": "49f54504-c917-49c9-af3c-3b5215d59edb",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "708e8206-96ae-4021-86ff-acd05e232318"
        },
        "item": {
          "id": "1951e4dd-9b92-459c-afbf-4788b4fa5161",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "66c9da28-4f14-4880-a687-28fe1d8c47f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2eb6cb6-4ce5-47af-a4d9-4ce2d7a5f918",
        "cursor": {
          "ref": "016c8d62-acfe-4c3e-9070-69c135b8085f",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "320f3507-ee6e-4595-a196-5e864d99f664"
        },
        "item": {
          "id": "d2eb6cb6-4ce5-47af-a4d9-4ce2d7a5f918",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "34488aa9-4e62-4638-a58c-8986234675e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08865a5-032a-4bc1-8041-9605cb95ff08",
        "cursor": {
          "ref": "da3b257b-3bb2-4a55-8c98-203628add169",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "abbc83fb-f0c9-4309-ae1b-8838a06ce3c8"
        },
        "item": {
          "id": "c08865a5-032a-4bc1-8041-9605cb95ff08",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "47a191d4-39a4-4bb9-a580-7d558f4d156d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f772aaa3-e71a-457b-81ec-5c5acb0918d6",
        "cursor": {
          "ref": "5acb25a7-787b-4bff-8d2c-b1919f7f2058",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "80543e3a-8071-4b6c-948c-a6b36c08f2e7"
        },
        "item": {
          "id": "f772aaa3-e71a-457b-81ec-5c5acb0918d6",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "38282678-1147-4e23-b2de-2b797cb9de81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3310fea2-a745-4564-99e6-c9fee7a38237",
        "cursor": {
          "ref": "b81766cb-a9de-4d8f-ae57-a745f2150dfb",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f15a7760-e95b-47ab-ba47-7c9fab0a9b07"
        },
        "item": {
          "id": "3310fea2-a745-4564-99e6-c9fee7a38237",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f50e11ec-84af-43bb-a6a4-ee5a0c6c9964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93f1aa9-595c-43b2-a0b0-df37508eada2",
        "cursor": {
          "ref": "43e50df7-47d7-4b7b-9b71-2b327e00acde",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b54f70c5-9542-4d8e-a220-6ae5e4228b9e"
        },
        "item": {
          "id": "b93f1aa9-595c-43b2-a0b0-df37508eada2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2b355c94-61bf-4876-a8c3-d28fbd5785d0",
          "status": "Created",
          "code": 201,
          "responseTime": 2637,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:43)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:43)"
            }
          }
        ]
      },
      {
        "id": "1912a385-6a09-4dd3-8cb2-94c7dc84e387",
        "cursor": {
          "ref": "4554ad54-b88b-4990-b4dc-f5b3ba7919e5",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a375c9fd-cc7a-4e66-8ce8-1672492feeac"
        },
        "item": {
          "id": "1912a385-6a09-4dd3-8cb2-94c7dc84e387",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d94c07c2-8659-40a0-a5a0-3ea295a96844",
          "status": "Created",
          "code": 201,
          "responseTime": 2611,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:44)"
            }
          }
        ]
      },
      {
        "id": "619086a0-f836-4786-b529-c5c68759e26f",
        "cursor": {
          "ref": "dc589fd6-5f55-4dbd-8631-486d98b4e754",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0450d3f6-7737-4196-9445-12cfccb11658"
        },
        "item": {
          "id": "619086a0-f836-4786-b529-c5c68759e26f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e6b17b41-4753-4ae7-a603-58d7e8ff485d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f365497-5a24-40f7-a48b-8ef99322bbff",
        "cursor": {
          "ref": "e1959552-8a6c-441e-9ca7-cb04ba1a6864",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b2a618a3-031a-4a40-ae5c-b60f6a243669"
        },
        "item": {
          "id": "4f365497-5a24-40f7-a48b-8ef99322bbff",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3e4594ad-e8ff-4b07-ade8-59e0da244157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84fd0159-24fc-4cdd-a5cf-87ba702f7f44",
        "cursor": {
          "ref": "d75cd8a6-4d62-4545-915e-2d3d7067ed95",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "4be0cdb5-5bbd-40ea-85af-eaf7d7e6560a"
        },
        "item": {
          "id": "84fd0159-24fc-4cdd-a5cf-87ba702f7f44",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "06de589b-e884-4b60-a047-c070accac391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c088fdaf-4d5f-4e3d-b8bb-89ed897b58d8",
        "cursor": {
          "ref": "fdacd0cd-57bc-4e79-8663-6b5aebd2474a",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "00b793ee-832c-4dcf-b301-01818fadfe01"
        },
        "item": {
          "id": "c088fdaf-4d5f-4e3d-b8bb-89ed897b58d8",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7e21427d-3c90-4be8-9bc4-48a3285c1a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb57e89b-7cb8-43c3-8b3a-cda39fef7313",
        "cursor": {
          "ref": "4d48350a-77d2-42df-b454-3e2b17c01527",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "81e1b4ab-143e-427c-84bc-83421e23232a"
        },
        "item": {
          "id": "cb57e89b-7cb8-43c3-8b3a-cda39fef7313",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7539a458-03e6-4558-ae04-3ff12dd6ac34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f2b49c-99b2-4092-ba98-819f56e323fc",
        "cursor": {
          "ref": "119fe895-6080-4cdf-a92f-1e33b6a26b50",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1fd9972b-0e72-4d67-adce-803b8bf212ef"
        },
        "item": {
          "id": "23f2b49c-99b2-4092-ba98-819f56e323fc",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c77d1b16-ccc9-45f1-a3ae-e3334b6cbc84",
          "status": "Created",
          "code": 201,
          "responseTime": 3027,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:50)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:50)"
            }
          }
        ]
      },
      {
        "id": "046ec337-a217-4ab0-b8e2-570fbf54d353",
        "cursor": {
          "ref": "e752e8fd-277b-462d-97ec-7d4d0d7cf487",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e3122ba7-4029-457c-9386-7febb0677588"
        },
        "item": {
          "id": "046ec337-a217-4ab0-b8e2-570fbf54d353",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c39b15bf-9a20-48bb-8b99-d0a9a5959c76",
          "status": "Created",
          "code": 201,
          "responseTime": 2793,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:51)"
            }
          }
        ]
      },
      {
        "id": "48969593-4d83-40e2-8d33-9487e7276cb7",
        "cursor": {
          "ref": "a9556ec9-dc07-4f42-b779-0e6d80b2ddd7",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "8c628c74-32a7-4ccb-925f-aa1da3f5447b"
        },
        "item": {
          "id": "48969593-4d83-40e2-8d33-9487e7276cb7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d4eceaa3-597b-49f1-88d4-d35312a7ac20",
          "status": "Created",
          "code": 201,
          "responseTime": 3292,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:52)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:52)"
            }
          }
        ]
      },
      {
        "id": "2f0a8822-3c42-4ac8-8493-4839d26400c8",
        "cursor": {
          "ref": "880bcf51-c015-4f75-938f-3895f565be8a",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f4e9e7bf-25eb-4dba-894c-1b95180dddbc"
        },
        "item": {
          "id": "2f0a8822-3c42-4ac8-8493-4839d26400c8",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0e2beeec-87ed-4099-91c8-53a39e90107b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 154,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eefd12d1-bf01-4bf5-b8e5-fbd9b6a51119",
        "cursor": {
          "ref": "7fc863d4-74df-4abe-b9d0-3f2771b0f0d6",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a2bb8d77-0f69-4bb8-af40-fb0043c56582"
        },
        "item": {
          "id": "eefd12d1-bf01-4bf5-b8e5-fbd9b6a51119",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c0a25fcb-fb2d-4a68-92d3-9f0ccb776650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a631bb2-d0ac-4cbc-b361-c26e1903f281",
        "cursor": {
          "ref": "2e5307c6-beb9-4f9e-9452-d72ec53c0a4f",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4f8423db-4b5b-42e1-a743-6730057876b8"
        },
        "item": {
          "id": "3a631bb2-d0ac-4cbc-b361-c26e1903f281",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "886d3306-cdc1-4883-bd6e-8a12f6bcd78a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8630acdc-b6fe-42d8-84a6-554dd0c0e3ee",
        "cursor": {
          "ref": "5cc6d7f2-a943-44b0-8360-a0572766be1c",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "217c57c9-3dc6-4837-a4b8-9f800df02383"
        },
        "item": {
          "id": "8630acdc-b6fe-42d8-84a6-554dd0c0e3ee",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "259d8526-7106-48ab-8cc9-945c81c1b5c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bae1e60-f838-4182-9f34-992ce525cbfb",
        "cursor": {
          "ref": "da5e6682-129e-4894-a1bd-e8630f3e5e25",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "56a0cfe0-6191-4956-8306-3559fe0b1319"
        },
        "item": {
          "id": "6bae1e60-f838-4182-9f34-992ce525cbfb",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0afb1087-4e58-46bb-989f-43098ab95535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf7d7cb-052d-4a0a-aec6-f859739e7159",
        "cursor": {
          "ref": "b1ddd0a2-0487-4ce2-af2b-d0fa1978eb98",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "36a38415-e764-40c8-a1a6-d1eff9589c03"
        },
        "item": {
          "id": "edf7d7cb-052d-4a0a-aec6-f859739e7159",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "038ab396-c290-4d06-90c6-e7f2fd14333d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d3376bc-7fa3-44d9-aae5-7168d90e1d3d",
        "cursor": {
          "ref": "13a1dfb3-a89d-4959-a4e0-c5fa3d53fef5",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "be3d32b3-d0b0-4253-a0a5-563ce030d63f"
        },
        "item": {
          "id": "4d3376bc-7fa3-44d9-aae5-7168d90e1d3d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "01485c35-bb6d-4f4c-9fb3-ab76ec00581e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4fbaf19-dbbf-4fa9-a688-8229dd80d8d1",
        "cursor": {
          "ref": "a27482db-28b6-4c05-83a1-461c281f0290",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "733e3f3b-bc58-4d0e-9348-b3f0b8a5c454"
        },
        "item": {
          "id": "a4fbaf19-dbbf-4fa9-a688-8229dd80d8d1",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3033a7b2-7754-443b-9717-2b2f1b04017c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99b7e06-f28b-4fb8-853c-d4ac95bdaadb",
        "cursor": {
          "ref": "0d62963d-585b-480c-b47a-87f51e7055b3",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7dd17421-7f2a-4023-a108-f1c77c64dd86"
        },
        "item": {
          "id": "c99b7e06-f28b-4fb8-853c-d4ac95bdaadb",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5661d1a5-6f5a-459c-8255-e80086252d1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8685746c-108d-4c2c-8bd8-b592add46bb5",
        "cursor": {
          "ref": "8880958f-6022-49b2-b14c-118a3dc730fd",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3ce1b8a8-a9ee-4d47-bd22-50e22c3f853b"
        },
        "item": {
          "id": "8685746c-108d-4c2c-8bd8-b592add46bb5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6eb7e1ce-65ea-4ccc-9bd4-fc84c3f3ca50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f404d0ef-eeeb-44f1-9314-d941f383e19e",
        "cursor": {
          "ref": "4366160a-6366-497f-9f94-270aa807e545",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "253cdb94-3b16-48e7-b68f-aed4a61053cd"
        },
        "item": {
          "id": "f404d0ef-eeeb-44f1-9314-d941f383e19e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "fa80f8bb-3356-46c0-94f9-2fabc2a4f4d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "963bd76f-886e-4ef2-94bb-54759f7e7d89",
        "cursor": {
          "ref": "06bdf393-bde4-4293-b061-b4b86e1766b5",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "396e785f-05f9-4ba6-97a4-7733f4b586c9"
        },
        "item": {
          "id": "963bd76f-886e-4ef2-94bb-54759f7e7d89",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "219ed91d-5f4a-433e-b732-8f5cb5e226ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c2cc842-28a5-440d-9082-30ced5189711",
        "cursor": {
          "ref": "5beb022a-2bdc-45d1-849b-153f4e657326",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "2bc49f66-0643-42b1-b99b-946b92966b79"
        },
        "item": {
          "id": "6c2cc842-28a5-440d-9082-30ced5189711",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d256d1bd-0c68-4ea9-bf97-504b92fc4334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c945b4-ef75-433b-8588-a680e17722b9",
        "cursor": {
          "ref": "edc858db-e5e2-44de-9857-f181f6201042",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "aa214aef-cf07-4768-a67c-d83bad7345fb"
        },
        "item": {
          "id": "58c945b4-ef75-433b-8588-a680e17722b9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "841f0dc6-6d45-4bcf-8d98-518a81f7f836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce6f641-2a63-48bb-8a36-535c87db1bb0",
        "cursor": {
          "ref": "c209dbe1-9980-4d07-85fb-5921929d054a",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "1c3781b0-b027-47e5-97a1-10868784ef1b"
        },
        "item": {
          "id": "2ce6f641-2a63-48bb-8a36-535c87db1bb0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c18ddf9b-d4d4-499b-96c2-18bf6bebfd61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe86641f-f078-49e2-9e5d-bf2641b10153",
        "cursor": {
          "ref": "f05efe56-f283-4ec0-8857-ef693c7fce42",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "485fdf1b-2661-4b21-865e-110c6b113b71"
        },
        "item": {
          "id": "fe86641f-f078-49e2-9e5d-bf2641b10153",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ecbbf178-6188-4e18-9d71-91a5d37130cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "506dce5e-8051-411e-960c-05e87aba32df",
        "cursor": {
          "ref": "6c9ec3e7-5d80-404b-b9c3-82d4da8291c6",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5018bf74-9f7a-4f38-a9a6-0ff8c48cc9aa"
        },
        "item": {
          "id": "506dce5e-8051-411e-960c-05e87aba32df",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "be2dc5db-69fb-4279-b05a-a483c6852324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e382bc07-9844-4ccd-a09b-9a38f62effb6",
        "cursor": {
          "ref": "8933b0e9-fe82-46f5-b907-b623d15932cb",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a84f77b1-ca01-4ac3-9c99-fbb0b7558d86"
        },
        "item": {
          "id": "e382bc07-9844-4ccd-a09b-9a38f62effb6",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2d776ee2-e4fa-45f7-8907-0bb42543df00",
          "status": "Created",
          "code": 201,
          "responseTime": 2194,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:70)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:70)"
            }
          }
        ]
      },
      {
        "id": "53051751-da59-42a0-af4b-2e776aaa821e",
        "cursor": {
          "ref": "10dc2265-c361-4eea-a5f9-c2abe501265e",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "8dff8ddb-48ef-4e39-8f2d-f31b20371db5"
        },
        "item": {
          "id": "53051751-da59-42a0-af4b-2e776aaa821e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "2663605d-e6e3-423d-9b05-a289322ce4c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd5f7d1-a081-4437-b679-db7494c259b0",
        "cursor": {
          "ref": "d705f069-2c69-48d9-a002-2f853f63e881",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "5ddfe241-dccd-44f8-b2ac-29270422bf2b"
        },
        "item": {
          "id": "2fd5f7d1-a081-4437-b679-db7494c259b0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "16680f6d-63ec-48f2-8af0-49ab257a8c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cce7333-c660-4b83-865d-f5d18a3df9c7",
        "cursor": {
          "ref": "f1291f31-5d51-4d8f-abaf-c6385527389a",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6d284523-1071-4db7-a86f-e942b769219d"
        },
        "item": {
          "id": "2cce7333-c660-4b83-865d-f5d18a3df9c7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5b561c3c-46c6-4c5b-bf90-2b892da8828c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9435d58-243c-4e67-9161-9ff4e9c00da1",
        "cursor": {
          "ref": "7e0f0dd7-935c-4c96-9bee-f4505400b40b",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "005f2fe4-5f83-45ac-9e81-dab9c0953769"
        },
        "item": {
          "id": "e9435d58-243c-4e67-9161-9ff4e9c00da1",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "de63745b-74fd-41ef-80ea-250650c65b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8784bb-b969-456f-bb1e-812d80da5571",
        "cursor": {
          "ref": "89bd14fa-d5a6-42e6-a1e0-9059737b967f",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d59585ba-2314-4437-a45c-2e042b29733f"
        },
        "item": {
          "id": "8d8784bb-b969-456f-bb1e-812d80da5571",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5c5a1c48-2752-4996-b6e3-886231cac1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b940435-51fb-44b3-b99f-5562f1d8564a",
        "cursor": {
          "ref": "86f7d208-bb49-4cf3-930b-1e3d7a64a230",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9b7ab6b4-da43-4363-8952-26ebc654fdc4"
        },
        "item": {
          "id": "1b940435-51fb-44b3-b99f-5562f1d8564a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9a23be86-045e-4677-93c9-a455d13e6664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00574310-8378-4093-8d8e-8a406997d876",
        "cursor": {
          "ref": "be8e0f8f-bbf6-4314-9146-e85e0d19840e",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2cb5f83e-b269-485e-91e1-adcdf3886306"
        },
        "item": {
          "id": "00574310-8378-4093-8d8e-8a406997d876",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0302037c-c78f-48c5-8280-4c87a3d092ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1937a332-566a-4990-82c2-f516e243f543",
        "cursor": {
          "ref": "b73cde4d-7661-4fe3-a52e-e0e605c06e08",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "2fd78378-79f2-4748-93f1-8b885517cecf"
        },
        "item": {
          "id": "1937a332-566a-4990-82c2-f516e243f543",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7ba9c56f-526e-4f36-9b0e-007a9ac7d328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6321b31c-837b-46d0-b204-2f099bf85171",
        "cursor": {
          "ref": "c1bb16ed-5aad-4f8a-bc02-2f25950a10ac",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "da57d4b6-0f1f-4c52-9b7c-4dc382d3f727"
        },
        "item": {
          "id": "6321b31c-837b-46d0-b204-2f099bf85171",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f2dbfbba-c284-4a8f-a15e-8f20a3eb4c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9397718-abe1-4828-9ada-94bcc4191fe8",
        "cursor": {
          "ref": "7463c99d-2262-4398-a80f-2eb335be36af",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ff1db0f1-06d6-4a56-af5f-3c77d3ba60fb"
        },
        "item": {
          "id": "a9397718-abe1-4828-9ada-94bcc4191fe8",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "fcea16bf-3131-4d23-858e-1fcda2e284d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a56543-853d-4ce5-a999-1bd5f82e60cf",
        "cursor": {
          "ref": "e1ac2b97-727e-472e-b720-f4138a095bfc",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0b7c56a7-a1ff-4418-9898-55d5569843fb"
        },
        "item": {
          "id": "71a56543-853d-4ce5-a999-1bd5f82e60cf",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "cec6c54d-ee6f-4e29-aa26-175d1973dbbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2185fdc3-b147-4e85-9164-06f868a25a66",
        "cursor": {
          "ref": "7875f9eb-2e74-4675-a0f0-5ca2e378aa57",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "56cc05fb-fe20-4d0f-b7a4-e14535a0602f"
        },
        "item": {
          "id": "2185fdc3-b147-4e85-9164-06f868a25a66",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d5aeead3-4905-4e33-8f6c-4d5daabec610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62df2086-5956-47ff-9cb7-bdd69f927ec5",
        "cursor": {
          "ref": "363ac125-cfdf-432f-89e2-7a2bb7e6baea",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "df569966-b5dc-424a-95f5-4a93ad2fc181"
        },
        "item": {
          "id": "62df2086-5956-47ff-9cb7-bdd69f927ec5",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "72cc1844-313d-4f79-80c8-a1c24cd6c6e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99209a75-cb47-4c26-9b21-7c2bb305df0d",
        "cursor": {
          "ref": "dc36f2a0-8d9f-4c2c-a698-2ac1355d17e5",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7cb133ff-5d1f-43e5-84ed-2b47474edd6f"
        },
        "item": {
          "id": "99209a75-cb47-4c26-9b21-7c2bb305df0d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4d24d432-4e70-47ac-8840-812630438371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a55cd66-afa2-456f-9c36-dd34cd96901a",
        "cursor": {
          "ref": "e73cfff5-32ec-44e4-a8ea-676edb37b07a",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c9f94ba4-1ffa-4c5b-9278-fc419146a81f"
        },
        "item": {
          "id": "7a55cd66-afa2-456f-9c36-dd34cd96901a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "45a877c2-021d-41c4-a330-202b481fdca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f605885-8542-4431-ba92-f4cb658bf9e5",
        "cursor": {
          "ref": "daf3ddf5-3cbe-4681-8d29-a14b33f14d84",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e018e16b-c9b7-476b-b1ce-de73e5e17cc4"
        },
        "item": {
          "id": "5f605885-8542-4431-ba92-f4cb658bf9e5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "38efebe3-3206-4cb2-afa6-07ff58588f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da844205-48d8-4c3e-bd36-3bec091b4143",
        "cursor": {
          "ref": "b6228287-09a6-4c50-bbfe-5d6bc368429a",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3ccb8453-adb2-4100-8231-b98f88fd8d3c"
        },
        "item": {
          "id": "da844205-48d8-4c3e-bd36-3bec091b4143",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "48b7d8e5-7c8d-4fef-9d25-e65f7f38c895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6a154e-4020-44e6-a9d3-9ed2cd8986c3",
        "cursor": {
          "ref": "c813595e-9666-46ce-8cbc-13a3a0a487ba",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1fa0f3ba-6025-4c9d-ae33-a76c9ff4113d"
        },
        "item": {
          "id": "fe6a154e-4020-44e6-a9d3-9ed2cd8986c3",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b9ee8f28-88a1-4faf-9d02-4e4cce8d3cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f153ab14-0f5e-4314-904f-6c36abf2b333",
        "cursor": {
          "ref": "11271b47-8209-40a5-8355-65866bb48218",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "aee33198-05b8-4077-8ef9-b0bf6ebb5008"
        },
        "item": {
          "id": "f153ab14-0f5e-4314-904f-6c36abf2b333",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d4539166-f062-459a-969e-89e8fa932418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ada6cd-aba2-4438-9df6-f71397ef0cbe",
        "cursor": {
          "ref": "781a53e9-61b6-4e1d-b52a-1463c4a2a8df",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1aa9d150-fd71-4b99-ae9f-dcd1e6a3806e"
        },
        "item": {
          "id": "15ada6cd-aba2-4438-9df6-f71397ef0cbe",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "84c3826f-5ba9-4d20-be28-8cdf4482ab5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c24ef2-75e6-46ad-9c2f-372b9007ee60",
        "cursor": {
          "ref": "d0acf0c6-31bf-423b-9d47-3e8e049cc0b9",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e9ef984e-3d01-4925-90d9-2d85a1854f33"
        },
        "item": {
          "id": "35c24ef2-75e6-46ad-9c2f-372b9007ee60",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c8f7e9c0-ff04-465b-9c35-28fb815ef125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2eea71-869e-40fe-8f01-49bd5e5d0aab",
        "cursor": {
          "ref": "230d2324-6bb2-4d5b-ac8c-86c1dbafca78",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "11e3d380-ddd3-4d3f-b5bd-1bb6fdd8d582"
        },
        "item": {
          "id": "ab2eea71-869e-40fe-8f01-49bd5e5d0aab",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "647ac994-df9c-404c-a7c5-7bdda44fba7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0208c6-e2c1-4956-b97e-d32ebf68c636",
        "cursor": {
          "ref": "2d6f5fc7-3d14-40e2-b12e-7ffe6829e497",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "4828eb49-94f9-4c71-94f1-9ec7e314fe3c"
        },
        "item": {
          "id": "ec0208c6-e2c1-4956-b97e-d32ebf68c636",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "55583796-628e-402e-b267-e2834a44ac30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547fcbcb-fb51-4b28-821a-79dbd7ac44a0",
        "cursor": {
          "ref": "c43f1c21-ce44-47f6-a523-180fb23c0779",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a578bf88-46ea-48b0-a8fe-ff409ffca345"
        },
        "item": {
          "id": "547fcbcb-fb51-4b28-821a-79dbd7ac44a0",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "9078fd75-77e0-4859-84cf-19b23b8e0adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c3d8c6-7aae-4e0b-9f3a-3c8835387495",
        "cursor": {
          "ref": "1016ec35-5045-42c4-bbdb-26aa964393d0",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "8a913646-294c-4369-9789-54bfa9592ce5"
        },
        "item": {
          "id": "f9c3d8c6-7aae-4e0b-9f3a-3c8835387495",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "325f9036-ef06-43d2-8273-b5b325700c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d13568d9-756a-4cb9-bcf2-3dd3f02ff957",
        "cursor": {
          "ref": "3304269f-deb4-4641-9423-2f01e1e8d78d",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "83fadc3c-d94c-4576-b5df-d1bd82f8851c"
        },
        "item": {
          "id": "d13568d9-756a-4cb9-bcf2-3dd3f02ff957",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "945c93f8-004a-4a1f-8187-a318a88df8cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc57a9e9-150f-4b7d-b3c4-d82be4738c62",
        "cursor": {
          "ref": "13cb604b-6f95-4f5b-87de-cd1d8005b199",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "620b591c-bb39-44d8-872c-3507701c34ab"
        },
        "item": {
          "id": "dc57a9e9-150f-4b7d-b3c4-d82be4738c62",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "37aac078-172f-4b79-bafe-80208160827c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2c4330-ec26-4bd4-824a-b1ade26d1be7",
        "cursor": {
          "ref": "e4bd62c1-5d51-4f64-a4d9-0b77e3f0a36b",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "382ea78a-26f1-44d0-9d15-08cae9093f18"
        },
        "item": {
          "id": "6f2c4330-ec26-4bd4-824a-b1ade26d1be7",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "dcafeb9e-a221-43a3-ba26-5a6fbe4ee036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8af2a6b-9ea6-496d-b7d5-ab2034615a27",
        "cursor": {
          "ref": "a444781c-afcc-481e-8175-7c45abde3b6a",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "0888f9fe-1f42-450e-8dc9-d1b9ac2861f3"
        },
        "item": {
          "id": "c8af2a6b-9ea6-496d-b7d5-ab2034615a27",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1235b0a4-c999-45ad-be0c-429b48bf1d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101c42f7-c054-47b9-aea3-8bc86be9f6d6",
        "cursor": {
          "ref": "bb2e161a-d93f-4842-b4ce-ffee6f8dcffe",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8627f8f0-2f56-454b-8cca-375be81779e5"
        },
        "item": {
          "id": "101c42f7-c054-47b9-aea3-8bc86be9f6d6",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9065aead-a27d-4fdb-89fb-949f94eef78c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c1a753-54f2-4a6c-8bc4-a9fa6a019641",
        "cursor": {
          "ref": "bf6d2f46-1cbb-489b-9df6-f93376ae2d65",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3374faa1-cde0-400c-828f-72dc4101c3f6"
        },
        "item": {
          "id": "c9c1a753-54f2-4a6c-8bc4-a9fa6a019641",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3b46b7a4-4cb1-4d44-a3e7-10682166d12d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0280f30-be47-43f7-b75d-9829358bf194",
        "cursor": {
          "ref": "66d85c5b-6386-4974-b7a2-29d452b4e0a6",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f0f25b7b-d1f6-4713-aa42-c369951fd38f"
        },
        "item": {
          "id": "e0280f30-be47-43f7-b75d-9829358bf194",
          "name": "credentials_issue"
        },
        "response": {
          "id": "4971e672-7a00-4df5-9119-02ea9fba2c53",
          "status": "Created",
          "code": 201,
          "responseTime": 2108,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c13791-a3d1-416a-b031-07d0f8a455fe",
        "cursor": {
          "ref": "7469d0f0-8d77-4dec-999d-4e452b21231d",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "40549b5e-049b-4731-908a-ab677a2b67c8"
        },
        "item": {
          "id": "76c13791-a3d1-416a-b031-07d0f8a455fe",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6f4b7624-d6f5-4a61-b8c8-4a220c884570",
          "status": "Created",
          "code": 201,
          "responseTime": 2443,
          "responseSize": 985
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a21281-8ca8-4c2e-b592-b090835a5fd2",
        "cursor": {
          "ref": "8fbb0bc3-e58f-4b49-9d3a-5b8b0eb32dd3",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "39d4eb0c-40f2-40f7-b244-343ab485f462"
        },
        "item": {
          "id": "23a21281-8ca8-4c2e-b592-b090835a5fd2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7a221cfc-d025-4df2-a948-a398ef33d3d9",
          "status": "Created",
          "code": 201,
          "responseTime": 2691,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f801d9-6edd-4e8a-95ae-5361cfd2b8de",
        "cursor": {
          "ref": "77497a95-f584-4fdb-a51e-b4fec48259f6",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d9193592-9f15-455d-95a5-3dbbce89fc43"
        },
        "item": {
          "id": "f2f801d9-6edd-4e8a-95ae-5361cfd2b8de",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "26720ca6-5ba8-478f-a552-8be57bbdf48c",
          "status": "Created",
          "code": 201,
          "responseTime": 2541,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd9300f-5a8f-4235-b4fe-e242e91fdcc9",
        "cursor": {
          "ref": "998a91f9-5d3b-4d1e-91ba-f6b483d3a311",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "fda7786d-751c-477d-a69e-850733e6b507"
        },
        "item": {
          "id": "ebd9300f-5a8f-4235-b4fe-e242e91fdcc9",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c429601a-d63e-48b1-92a1-abdf9c4799ad",
          "status": "Created",
          "code": 201,
          "responseTime": 2562,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2023-07-14T00:49:07Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2023-07-14T00:49:07Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "cbee980d-e1a9-4dc3-bc08-263533618db0",
        "cursor": {
          "ref": "1ad12d0e-c95a-47d3-b08b-c08e3f97ff32",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "3f4085c7-2e32-4742-9c68-5a305d9b7cf2"
        },
        "item": {
          "id": "cbee980d-e1a9-4dc3-bc08-263533618db0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "2f08cb8c-c340-4e57-9f56-c3460a6094a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "6f2be719-bdb1-408c-88a9-5107692b18d5",
        "cursor": {
          "ref": "f184d671-db28-4bd6-93e6-c1116cb220e7",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7ca4d398-ac1d-41a6-9253-d0ab3aa0341c"
        },
        "item": {
          "id": "6f2be719-bdb1-408c-88a9-5107692b18d5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f933c30c-bb64-4919-9ae8-4a6d372e13aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 166,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab0df4b-33cf-4f5f-a57f-ce3ea59c8891",
        "cursor": {
          "ref": "3bf45ba6-b3e3-4743-929d-a6c5774db6af",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "89b15927-b4b7-49b2-945e-63b09656989f"
        },
        "item": {
          "id": "aab0df4b-33cf-4f5f-a57f-ce3ea59c8891",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9a148df8-144f-4a9a-86a6-88fe693352e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3041770-daeb-4c69-a71b-03d4869896c8",
        "cursor": {
          "ref": "3626c25d-0ba0-43a1-ae7e-184627f21584",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a36011b9-d3be-41c9-9735-8a6514e4ff58"
        },
        "item": {
          "id": "f3041770-daeb-4c69-a71b-03d4869896c8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "16bdf0c9-7b68-4702-a98b-51d183b87661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f815e670-f5a2-4160-b72e-da66bd52d4da",
        "cursor": {
          "ref": "10ff8590-2367-439d-962f-a606a92b42b6",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a32572aa-1232-432e-8b6b-66d4e5e9d9af"
        },
        "item": {
          "id": "f815e670-f5a2-4160-b72e-da66bd52d4da",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "eb65fbad-363a-4d99-822c-ee9233901580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a1de6f-6c6d-4e20-9d4b-e2b0b0efcfdd",
        "cursor": {
          "ref": "39b522ba-0fdb-40d8-9f19-625cef418726",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "82ff60f2-ee87-424f-b83a-03bad5c2d33a"
        },
        "item": {
          "id": "02a1de6f-6c6d-4e20-9d4b-e2b0b0efcfdd",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "261cde40-dcc6-4f80-be30-76bbed459f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 183,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9811f1-5f63-43bf-90a1-0f9764d6f414",
        "cursor": {
          "ref": "54857625-155d-4fff-a895-e07ad4fc530e",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "17d0f0c1-1075-4b7b-ab8f-2fac62d18bfd"
        },
        "item": {
          "id": "bb9811f1-5f63-43bf-90a1-0f9764d6f414",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "96bc0458-3a3a-4e9f-8840-30636f42f2fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1072f9cd-099b-4152-9407-a4e2aad62d2b",
        "cursor": {
          "ref": "acd86240-c83e-4569-91ef-068c04890a06",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ef0bf22d-819a-4f7d-b044-79402853bbfb"
        },
        "item": {
          "id": "1072f9cd-099b-4152-9407-a4e2aad62d2b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7b4cf82a-b51a-4bca-8f90-e96ee5908528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818120f5-eb83-4329-9a8e-23cac4fef250",
        "cursor": {
          "ref": "2a4912ac-1c3d-451c-9665-a825d0580867",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5382ae2a-85c2-41e7-b46d-19946a1eebe3"
        },
        "item": {
          "id": "818120f5-eb83-4329-9a8e-23cac4fef250",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e67ad993-4b34-42da-8cc6-80415afb1a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f132f3-efb6-43e6-914d-7114adc3b24b",
        "cursor": {
          "ref": "be49dc7a-3b72-4142-9709-c0db11e07b84",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e8caf25b-3682-4503-8b43-7ea276ca2ad5"
        },
        "item": {
          "id": "88f132f3-efb6-43e6-914d-7114adc3b24b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6f80da37-2f73-4e86-a6ed-6abde4de84f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27628f5b-f239-4027-8c37-8e928262e587",
        "cursor": {
          "ref": "74d46704-2928-4d14-9242-a07ad43e26ef",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "bb7292de-b319-4647-a837-fb8b64c90616"
        },
        "item": {
          "id": "27628f5b-f239-4027-8c37-8e928262e587",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2c115d1a-edce-40e3-8c5a-c08e14b488ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c8efac-aba5-4439-b396-fee045ae8f5f",
        "cursor": {
          "ref": "f585995b-6928-4c5d-a3bb-0efd2417aecb",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "4da83ac6-7362-4899-a175-97f3e14e8d83"
        },
        "item": {
          "id": "d9c8efac-aba5-4439-b396-fee045ae8f5f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "96a5ce94-069e-442e-8251-6d2c61c80dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76226d23-96f5-48d6-a703-40222b8dfe3c",
        "cursor": {
          "ref": "a2aa5c31-8bac-4c64-9a9a-710bbbf21a1c",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "2af5be10-1105-4243-8c32-19165c11b4f5"
        },
        "item": {
          "id": "76226d23-96f5-48d6-a703-40222b8dfe3c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "118696c4-af8f-4af9-84e4-56a55ef5326c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc738a8-d57c-4969-a05c-2ccb6955ad3e",
        "cursor": {
          "ref": "1bb382e1-713e-42af-8af6-872e915298a7",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "16f4e24d-2f01-4786-9d18-ae3c6db994d8"
        },
        "item": {
          "id": "7dc738a8-d57c-4969-a05c-2ccb6955ad3e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b227519a-4e31-4126-bb3b-fbc2d3dfba9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d03252c-de2c-4b42-bf41-52583a9c8a0f",
        "cursor": {
          "ref": "1227387b-3eba-4661-96a8-21d8a09265bd",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a5ea8c5c-fcc8-4bd4-9919-a9f8ab1a4b7d"
        },
        "item": {
          "id": "5d03252c-de2c-4b42-bf41-52583a9c8a0f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0c87ef44-6513-484b-83c0-b3a10467296b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67ce36a-223c-4a22-8998-afb89c2cdf54",
        "cursor": {
          "ref": "e7a2914a-371b-4327-a258-a6909a2f2fab",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "adbb25a0-94ba-40e9-9fe9-3e8c310e3ffe"
        },
        "item": {
          "id": "f67ce36a-223c-4a22-8998-afb89c2cdf54",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e206169f-d8c7-498c-8d10-3d130c32027f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619c8cab-34c7-4c98-9223-b51e98a4d751",
        "cursor": {
          "ref": "d3f04943-3d18-4b67-ad24-de0cd14197e6",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "bb8e330d-dca3-4396-b06f-7878496a2f97"
        },
        "item": {
          "id": "619c8cab-34c7-4c98-9223-b51e98a4d751",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1c400613-fdf9-47b6-9587-2ea9b03f6950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7f8998-6401-4886-a02d-096feb191bc7",
        "cursor": {
          "ref": "1a8fef9f-6074-4e9f-af82-b9baad3885f5",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2c61484c-4985-41d5-a56a-0e7cc730bbeb"
        },
        "item": {
          "id": "4d7f8998-6401-4886-a02d-096feb191bc7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8524f0c1-15c9-4a96-a957-393f9ff9f180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895c58f9-5faf-4cec-85d6-b4c763e426a5",
        "cursor": {
          "ref": "d7c54a7f-de17-4230-b643-40430f78fce0",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "87c2ee78-fa32-49e6-82bd-b8878a860e35"
        },
        "item": {
          "id": "895c58f9-5faf-4cec-85d6-b4c763e426a5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "17d85db6-2dc8-4ba0-8c79-524813e11f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67ef9d2-fc7f-4cf4-bb1f-279f6be2a591",
        "cursor": {
          "ref": "32aa7405-c96e-4aa8-a0e1-e91dd077d6e6",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "00f88037-06f2-4424-9f7e-8376b64f4b2c"
        },
        "item": {
          "id": "b67ef9d2-fc7f-4cf4-bb1f-279f6be2a591",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1dc47f1a-6e45-4fc9-95b0-d492a75f6e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e3b6ee-a08f-477b-b747-f65f2c365732",
        "cursor": {
          "ref": "829519b2-32be-4a2a-9591-8438a18b33af",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "235a7990-ff6c-46d5-b2ec-088ff5102cea"
        },
        "item": {
          "id": "92e3b6ee-a08f-477b-b747-f65f2c365732",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f97147a6-4943-4e54-96eb-de03ca3a27c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eed67b1-ab6b-464f-a750-d8cefd256309",
        "cursor": {
          "ref": "7006e65c-02bc-47da-ba05-d4d2962f56c5",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "63f3280e-c3b1-4644-b77d-dcbfd2ce80a1"
        },
        "item": {
          "id": "7eed67b1-ab6b-464f-a750-d8cefd256309",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "765a322e-47d2-46bb-9a92-498802c25227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57f4643e-f141-42c9-a6ed-670348c427d8",
        "cursor": {
          "ref": "259a0203-00dc-46ab-8bf0-6b45ca97f8e9",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b8147069-8a1c-468b-838c-2124681f370b"
        },
        "item": {
          "id": "57f4643e-f141-42c9-a6ed-670348c427d8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ff15316d-6199-497b-a501-c277bfe2a0e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "353d9096-192b-46da-9e32-8be2baa9a3e1",
        "cursor": {
          "ref": "4b733276-63f9-4ab2-b852-350c009f1d5f",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a5eacc8b-316b-43e1-9546-c6fb0d7a92e4"
        },
        "item": {
          "id": "353d9096-192b-46da-9e32-8be2baa9a3e1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8450d80f-7eee-4b5f-9734-62c5b81c2c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d36f4ef-5cf9-40bf-bbb0-df5d1cdd92df",
        "cursor": {
          "ref": "2b15d582-f44a-46b9-b989-178a4dddbdd3",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c2ecd36c-bc07-4332-831e-33e33fb91c54"
        },
        "item": {
          "id": "8d36f4ef-5cf9-40bf-bbb0-df5d1cdd92df",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "75c56b94-f879-40d4-9dd7-7fe001aa4795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b925b7-1525-4dbe-b22b-3913d2cc71b6",
        "cursor": {
          "ref": "2c7900c5-1cf6-47e4-a09a-62e5ce1216b9",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e4a79d24-e04b-4326-8999-218f76225250"
        },
        "item": {
          "id": "e7b925b7-1525-4dbe-b22b-3913d2cc71b6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e5513cb4-8b1a-4208-a65f-4cbe39ae3277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df46c4c-5d14-42d5-9ceb-dba9712c7c59",
        "cursor": {
          "ref": "eec99417-00d2-4b42-9851-a9b91e587244",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4343e9d1-df83-445c-9a99-e51c5e92ad2d"
        },
        "item": {
          "id": "4df46c4c-5d14-42d5-9ceb-dba9712c7c59",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bab90989-dc22-4200-bd82-5f08354376ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcdd6797-afd6-4aff-b7d6-8d7ed7527171",
        "cursor": {
          "ref": "45b12f2b-a5cf-471f-bd6f-231c3c1d5cd3",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "282ef323-5526-4b9a-accb-aec87e364ba6"
        },
        "item": {
          "id": "fcdd6797-afd6-4aff-b7d6-8d7ed7527171",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c7385cbd-2e81-4501-a017-b93278f9d5b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "472779cb-84e9-4de9-baa8-5bccd2e13a25",
        "cursor": {
          "ref": "240c00e4-ec21-4406-b3e0-d2d35c947de1",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "0606f4fc-4d46-4c89-ab33-c6fe0c0abc29"
        },
        "item": {
          "id": "472779cb-84e9-4de9-baa8-5bccd2e13a25",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "424459e5-d5bd-46a5-b4d3-d92b28569ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10679169-aaa6-478f-baa0-3bc8ec8f0f4e",
        "cursor": {
          "ref": "711bfebb-02e7-40ec-80ee-567b219f6e1f",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b89f26ce-fcc2-48b6-bda8-21207ddd61da"
        },
        "item": {
          "id": "10679169-aaa6-478f-baa0-3bc8ec8f0f4e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ef425650-ff24-454a-a75e-3d8052364ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "637ba432-4fc8-4b77-a3af-90d87641597b",
        "cursor": {
          "ref": "5985561a-9cf0-4154-9c02-416b98060470",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f1aabe54-5535-4dbb-bb21-42412f9941c7"
        },
        "item": {
          "id": "637ba432-4fc8-4b77-a3af-90d87641597b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1a480d1f-f9b7-4120-a896-1aaf91a7ac4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba01acf-3fb6-48a0-a46e-fd9508d1736d",
        "cursor": {
          "ref": "e6568971-e542-48d7-a532-059468abcd1a",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9977e3fb-9c58-46fb-8069-5226608be4bc"
        },
        "item": {
          "id": "3ba01acf-3fb6-48a0-a46e-fd9508d1736d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cf9d0d4a-9a2c-4d5d-9a16-86bf98ca65aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2190599e-855a-4309-a65c-9db455454b29",
        "cursor": {
          "ref": "a5153ff5-2199-45da-9414-d3a957dbc4ff",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "07858589-b999-46e3-a602-3fd14b2cd529"
        },
        "item": {
          "id": "2190599e-855a-4309-a65c-9db455454b29",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1b4ed06f-a46c-4c14-b53b-3432119d578a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133e965e-684b-4594-9abd-4089fb925a8a",
        "cursor": {
          "ref": "784d08b5-5784-4f31-8862-50d846a119ca",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e2f6f99a-f872-495a-aaf2-623b49fb7302"
        },
        "item": {
          "id": "133e965e-684b-4594-9abd-4089fb925a8a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b49639dd-a0f9-4cf8-99ab-a06370dbb388",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "987a651d-5fa3-4806-a020-2d9490311d8e",
        "cursor": {
          "ref": "11d72a1e-f324-4e00-a7d4-ad13a041bd45",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f362a423-0b48-434a-a66e-861a49ca56d6"
        },
        "item": {
          "id": "987a651d-5fa3-4806-a020-2d9490311d8e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a06f6a26-b3a2-48f7-a48f-fbca1124a93d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f9b66b-9098-457d-841c-2a71fae1ed52",
        "cursor": {
          "ref": "9b43cbf5-5a6d-42a8-a4e4-11e03ed5a2e9",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "9f586c93-be34-47f4-9a76-edbb476d1f69"
        },
        "item": {
          "id": "b8f9b66b-9098-457d-841c-2a71fae1ed52",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f64fdc5d-1f06-4009-8554-b1f2f5f9faf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "395a531e-ce35-4b61-ba71-47ad1a0325a1",
        "cursor": {
          "ref": "c537370c-a3ed-4a5f-b660-ee9bee0f4f43",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a11d625a-3def-403a-a8b3-9fc66ae2db3f"
        },
        "item": {
          "id": "395a531e-ce35-4b61-ba71-47ad1a0325a1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "292cfbf6-52e5-4056-82e3-caff8a39351c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e664cd-a114-4104-9aa0-c10a1583ee67",
        "cursor": {
          "ref": "c4e53980-235a-4232-b41c-08f3b478a8e2",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "47cc57d6-a3f8-47e7-b296-798c04156fa1"
        },
        "item": {
          "id": "06e664cd-a114-4104-9aa0-c10a1583ee67",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "323a3bdd-0bd0-4968-8e36-da6a71c77c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d021926-e07b-4a02-b528-fe502ab59ce5",
        "cursor": {
          "ref": "7560fe9e-32a3-407f-a480-ec372f43e1fa",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "870b4fb0-b589-46e2-bbf0-57919022a05f"
        },
        "item": {
          "id": "8d021926-e07b-4a02-b528-fe502ab59ce5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "df11e765-055f-4431-b785-24224dca5a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c87563a-8253-4258-b8fd-45ac99e5d653",
        "cursor": {
          "ref": "173a0778-1132-417f-8997-abdf9f557e5e",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9890d021-b193-4319-b9fa-6a39860023bb"
        },
        "item": {
          "id": "0c87563a-8253-4258-b8fd-45ac99e5d653",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0dfd4f51-f704-459e-8564-21d69ff38bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db16c7c6-352b-4e32-94ba-59f7a5073c04",
        "cursor": {
          "ref": "cde37c6d-14d3-4d7b-85a6-3faa49d11a2c",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2dc66bef-6b83-428e-ad56-750be605c67d"
        },
        "item": {
          "id": "db16c7c6-352b-4e32-94ba-59f7a5073c04",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1c3edb4a-d6d2-4a33-a3e8-26e948ad8f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64e34c9-855f-47c0-8cc5-9ac529d93699",
        "cursor": {
          "ref": "836dbc0d-5fc7-4e5b-9e70-c91f65a2102e",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2d7bc4a1-7f9f-4894-8e05-b3b75ebe623b"
        },
        "item": {
          "id": "d64e34c9-855f-47c0-8cc5-9ac529d93699",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8c584527-68ea-43a2-9add-cb36a1c26008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 138,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18cd027-fa37-48ba-a08a-96083b759e6a",
        "cursor": {
          "ref": "b9b363f9-e9a1-4644-88a4-d42eed240113",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "41970384-4513-402d-a199-48ae56b3d89e"
        },
        "item": {
          "id": "e18cd027-fa37-48ba-a08a-96083b759e6a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8153856c-1e35-41a1-88ce-9f391d18317b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "186a958e-0387-42fa-87df-e427ceb79ccc",
        "cursor": {
          "ref": "09fb59ab-bf8c-4314-b5ec-240f25fd2465",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b32706de-bfc2-43c0-9468-3b96544f9ef0"
        },
        "item": {
          "id": "186a958e-0387-42fa-87df-e427ceb79ccc",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "409fcaab-fdf4-43d9-bf26-a1dac10e2001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73577f20-fb71-4554-b244-4669a2703f21",
        "cursor": {
          "ref": "29d6afcf-6571-4493-a162-5ad493aa99b1",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e32b2378-4a7e-4f57-82d6-630af4031380"
        },
        "item": {
          "id": "73577f20-fb71-4554-b244-4669a2703f21",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9e32dd99-2aae-46d7-8487-85bc177c341f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b1ac636-c217-4989-8c28-7102742af185",
        "cursor": {
          "ref": "fb540860-325e-4783-b969-f619e197f767",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "20aa44f1-3638-4d66-97ef-4503d22c15cf"
        },
        "item": {
          "id": "8b1ac636-c217-4989-8c28-7102742af185",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "64e09d5a-bf52-489d-a65a-172092918358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 968,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36725e9b-b8e1-4f3e-a835-ca74f9380c5e",
        "cursor": {
          "ref": "9117193b-d76c-4668-adc0-e042278cb4f0",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9917cd21-bb11-4a88-861d-cbaf5b42ba00"
        },
        "item": {
          "id": "36725e9b-b8e1-4f3e-a835-ca74f9380c5e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c4bd0045-d1c9-4313-9ec2-39571825f02d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd218987-d194-4af9-8324-1132d057c2bc",
        "cursor": {
          "ref": "c74f0380-9084-4a82-9318-f0620a3d616d",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "76bf1db1-2811-46f9-bc32-366c7c20448b"
        },
        "item": {
          "id": "cd218987-d194-4af9-8324-1132d057c2bc",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f08137d2-8114-4cff-b8f7-9bf829154c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f777e016-8d3b-461b-9348-e70254f1b14b",
        "cursor": {
          "ref": "b9ee49a7-ea88-4ed4-8469-8dbf48c0e5d4",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3d1246d8-0051-4d2b-8f0e-89db2b9cbc19"
        },
        "item": {
          "id": "f777e016-8d3b-461b-9348-e70254f1b14b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c830c6c4-334f-4c0a-800b-9d8f3ce5f5ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a89c905-3586-40d3-8737-cb6040996300",
        "cursor": {
          "ref": "55a98e27-2027-4dad-8642-136dd845f74c",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8a6d6165-ca2b-4c73-9efa-6ade1a58d5dc"
        },
        "item": {
          "id": "0a89c905-3586-40d3-8737-cb6040996300",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "39c55e9d-9c37-4c32-b9bc-6d22770465ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13696ec1-a097-479c-8eec-a159c9bb61fe",
        "cursor": {
          "ref": "e1f439c8-ab65-4986-8afb-b2baf38cdcae",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1d144472-756d-4e94-b1b9-747834bddb83"
        },
        "item": {
          "id": "13696ec1-a097-479c-8eec-a159c9bb61fe",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e25af6c9-e6e3-452b-8af7-c7676ad3d5a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d05125-a206-4cad-8608-4419c7997ac1",
        "cursor": {
          "ref": "38c656ae-baae-41ec-b2d0-fabe2372bd34",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "238909fe-df4a-4624-a4d0-79bd10c1f77e"
        },
        "item": {
          "id": "56d05125-a206-4cad-8608-4419c7997ac1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "63844958-b084-476b-b2a5-2019a80ec47c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7894ad0d-ab14-4345-9396-c07d00026986",
        "cursor": {
          "ref": "6d4cd7a2-a85b-42f0-a291-3feb0a4fe8d2",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "041a760b-7fd5-49f0-8a94-5fff14f8e905"
        },
        "item": {
          "id": "7894ad0d-ab14-4345-9396-c07d00026986",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0b48f117-15c2-4798-b1f1-3861d7b7104a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccfaa90c-fc84-4b40-abee-fd8c154220de",
        "cursor": {
          "ref": "1923e931-b1a9-4c8d-93e0-855a71ef5531",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ed6bc566-14f6-40e4-ba5e-81b0de025445"
        },
        "item": {
          "id": "ccfaa90c-fc84-4b40-abee-fd8c154220de",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6fec444e-5aaa-4077-bcdb-5d53bec040ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752e3248-7491-42d1-8372-1bdebe2af4d0",
        "cursor": {
          "ref": "e701e570-312a-43f7-ac32-66a0d076d14d",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "06bc74d0-d804-493b-aac2-1da53a8cd7c7"
        },
        "item": {
          "id": "752e3248-7491-42d1-8372-1bdebe2af4d0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2cd2bd34-4a5a-421e-ae99-280afdcfdc43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59aa7ed0-1dc1-4e9a-8721-36f7c0d2ceec",
        "cursor": {
          "ref": "1db4af99-52e8-41f7-9809-69b5ce8d170f",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "238fd73f-7940-4d56-8937-a5ca184f8b57"
        },
        "item": {
          "id": "59aa7ed0-1dc1-4e9a-8721-36f7c0d2ceec",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f66ca2b0-8803-425a-83df-f18e74a841d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c96faeec-d78d-4265-8aa4-287406eef3a5",
        "cursor": {
          "ref": "2d301391-087b-4a42-8359-4c1266682f86",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "dc6252b0-8933-4a08-b52e-0aced41b2d26"
        },
        "item": {
          "id": "c96faeec-d78d-4265-8aa4-287406eef3a5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "844f5edc-3fd2-463c-8520-7a2dac2a45e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec01d71-bdfa-4a62-b1e5-ca40c3ddf67a",
        "cursor": {
          "ref": "19a4cada-96f7-4ea1-a915-3a9b5b8d8554",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6544bba7-3a4e-4b46-be50-8cf5c75ebf42"
        },
        "item": {
          "id": "9ec01d71-bdfa-4a62-b1e5-ca40c3ddf67a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "661d0f7c-4e58-458e-b408-4fc2acd7c319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ffce767-d8a8-4288-8f93-2902c850e951",
        "cursor": {
          "ref": "fa584a7f-00fc-4bae-82a7-be1128be9180",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f9a6a19d-4736-4fb4-b562-994051e5adc8"
        },
        "item": {
          "id": "2ffce767-d8a8-4288-8f93-2902c850e951",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "11e5ebed-4d7c-4823-abc2-08b5e4c97bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a08892-955b-4c6b-8302-bf7bb9289a02",
        "cursor": {
          "ref": "735a1d5e-f66d-4d5d-bc47-5d6776b16204",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8e5a0204-30a0-4148-b42f-f7533076e961"
        },
        "item": {
          "id": "a8a08892-955b-4c6b-8302-bf7bb9289a02",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f78b931d-6b20-4e9a-908f-8912aaf0ce81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b310e9-3db4-4a4b-a012-54cb65713472",
        "cursor": {
          "ref": "f8c587df-d107-4a01-bcdd-d7b9727e1120",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f4bff74b-adf8-448a-b498-8f77b468a393"
        },
        "item": {
          "id": "66b310e9-3db4-4a4b-a012-54cb65713472",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "708f3f09-c8db-4935-bd72-3fe2485312d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff59625e-101e-4a57-8794-62122ae4b3e2",
        "cursor": {
          "ref": "19e92077-9074-4270-a508-e740363de4af",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "bda3a2c9-3cab-40ed-99cd-d92ec4d17d16"
        },
        "item": {
          "id": "ff59625e-101e-4a57-8794-62122ae4b3e2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "42dbf04a-4121-40df-a008-b7402c08ebf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b77b910-08c4-43b2-852f-6676f3443783",
        "cursor": {
          "ref": "7e2447d9-9556-4048-b9ad-61812ccd9f2f",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "96f31d03-da7b-43db-be3b-1f50f84a4f48"
        },
        "item": {
          "id": "8b77b910-08c4-43b2-852f-6676f3443783",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b829da2d-0a2a-4999-bef7-991b7ca97ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d08416c-a7a2-4531-ba02-357129b5c110",
        "cursor": {
          "ref": "22cd9f99-3d56-42e9-95db-6c84baaa8fb3",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "dbfaa5db-fdfe-4587-b9ac-1326679b8340"
        },
        "item": {
          "id": "7d08416c-a7a2-4531-ba02-357129b5c110",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e93779eb-e85c-4db5-a07c-5558443097d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5bc84fb-68b8-4d77-8508-73cafee7c604",
        "cursor": {
          "ref": "8b3589e1-0cb4-421c-b9a8-6d0305b8e42b",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c09a6cc4-1a48-48ff-9227-20c2bd947121"
        },
        "item": {
          "id": "a5bc84fb-68b8-4d77-8508-73cafee7c604",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2dc996ac-943d-48b7-a0ca-36cfe06dbe27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb87eeae-67a8-4208-8d03-9ac6a6f5991a",
        "cursor": {
          "ref": "8d40fbf0-e252-4f90-9c7f-de21153f9d3d",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "fce7eb25-0aa6-4ec2-a1a6-356017060612"
        },
        "item": {
          "id": "cb87eeae-67a8-4208-8d03-9ac6a6f5991a",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "c532276a-3879-41bc-9023-10ecd168629e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb45c1cf-ecf4-4fa9-a851-2e15273e61fa",
        "cursor": {
          "ref": "2f0e42aa-e28c-493c-9684-c4e009d59400",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "943e4eab-863b-48b1-9fd8-8064c52d81b4"
        },
        "item": {
          "id": "bb45c1cf-ecf4-4fa9-a851-2e15273e61fa",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "da2d65b8-0de9-4ea6-946a-f347755acc6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27cf041e-31a9-4387-9e5c-0f82c6245ba7",
        "cursor": {
          "ref": "ea6557ad-d84f-4e8a-a622-620d330ec32f",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "66c541a2-2bf6-474c-a970-ebc12d43ad16"
        },
        "item": {
          "id": "27cf041e-31a9-4387-9e5c-0f82c6245ba7",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "3c00200a-1da8-408b-a3a1-d699fdf690fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee2e2d7-40e8-4e6c-83ce-4461bba6b83e",
        "cursor": {
          "ref": "4c9508af-bdd7-4e4d-b292-7811ff51bec0",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3701f290-bfb0-4e34-81e8-5352207dcc3b"
        },
        "item": {
          "id": "5ee2e2d7-40e8-4e6c-83ce-4461bba6b83e",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d13d0247-97fa-47b9-a6db-3b289a88b587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8df68d9-1449-40b1-b5b3-89100d912f21",
        "cursor": {
          "ref": "59097d0d-9084-4b5f-8334-c51f067ac3c2",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a10078a1-0eff-4096-a152-a742153640d6"
        },
        "item": {
          "id": "a8df68d9-1449-40b1-b5b3-89100d912f21",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "9601ed16-2485-4576-a9d4-b599467cf7da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0afd3b39-4f3b-4fe7-a30b-2c076faea39d",
        "cursor": {
          "ref": "b58dfab6-1ef5-49d4-9f9c-691252fc1f30",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f0d8924f-ad45-40d3-bb06-053915044dc1"
        },
        "item": {
          "id": "0afd3b39-4f3b-4fe7-a30b-2c076faea39d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "7528766c-6767-4072-a0e8-65c9e867bbaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0c15e1-e2b7-4083-9c3b-bfae0cf85718",
        "cursor": {
          "ref": "8dd41162-9fe3-4b7b-a317-2d236d95bb93",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "caefff81-7f1f-4e00-944e-125482f7f96c"
        },
        "item": {
          "id": "df0c15e1-e2b7-4083-9c3b-bfae0cf85718",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f83f2f03-e956-446a-9385-6a8e1fb1cded",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eec2022-36b4-4137-8647-038638673092",
        "cursor": {
          "ref": "74de06a1-e5a5-4f74-9765-20b0f16cef8c",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "58243f42-b264-4ca7-bbc3-751a75de0716"
        },
        "item": {
          "id": "7eec2022-36b4-4137-8647-038638673092",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f5deeb60-5fd2-4d44-baa1-1b0e62deb481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b4577c-8782-4373-bd24-13364d3551f2",
        "cursor": {
          "ref": "9dc0cf2e-eebb-45b8-a489-809555fb7daa",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "edfb3b42-0385-4071-be70-66ca4e283591"
        },
        "item": {
          "id": "00b4577c-8782-4373-bd24-13364d3551f2",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "bcc43530-7242-4d2b-a841-a8f2cbeb3cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d86eb5c5-1013-446b-ae27-cd1ee4fcab40",
        "cursor": {
          "ref": "acadcab0-5493-4f48-883a-97a17275c1a1",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "75986f70-de1f-487c-9e0f-54430aaadc2d"
        },
        "item": {
          "id": "d86eb5c5-1013-446b-ae27-cd1ee4fcab40",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9a212e46-d919-43fc-8dfc-7986a10f4590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aba83fa-1c42-4890-9771-bbeb0f831032",
        "cursor": {
          "ref": "5d8503c7-18dc-4831-b578-bce96933bde5",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1cba055f-1393-43bc-8ed6-126886a58f33"
        },
        "item": {
          "id": "6aba83fa-1c42-4890-9771-bbeb0f831032",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d67cc263-6ead-4c04-938c-c33d95442d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64fad8a-7d14-4289-881a-4adadf63cfb4",
        "cursor": {
          "ref": "b3436e85-d641-48a2-8e39-d44ce189f108",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "30a28ccb-e9f1-45ee-9174-21f620803457"
        },
        "item": {
          "id": "b64fad8a-7d14-4289-881a-4adadf63cfb4",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "21568145-4ea4-45a1-ab3c-7ec764963917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e01a134c-9c4b-442c-87d3-c6c0b7a3faed",
        "cursor": {
          "ref": "ca6f002e-7863-4c85-a413-150041784cbc",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c845ec40-2f50-4ced-a3ce-1fd8a5041262"
        },
        "item": {
          "id": "e01a134c-9c4b-442c-87d3-c6c0b7a3faed",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ef2d424f-b134-4424-95ea-8897b96c515e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b76ddca-d6c8-4978-a109-00c146786c98",
        "cursor": {
          "ref": "7f4cbc86-6e78-4a87-821c-a8bc79cb0ee9",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4f101ae9-e0eb-4633-ad71-0ff65db6d5b9"
        },
        "item": {
          "id": "9b76ddca-d6c8-4978-a109-00c146786c98",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "916574f8-b8f7-4b88-af13-3f6afa0e638b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1765032-35d1-409a-a090-84e32c4ad8e8",
        "cursor": {
          "ref": "4a879b33-9ed7-44a1-bc94-3d9f656dbcb0",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ad6be1ba-d2ed-47fe-bde7-d1781a549b05"
        },
        "item": {
          "id": "d1765032-35d1-409a-a090-84e32c4ad8e8",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "fab94813-21d7-4847-962c-06fd17809247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efcb7b69-aa71-4cd7-9d80-705e001b496f",
        "cursor": {
          "ref": "c20e672d-e2c7-4114-81fe-ac20c84067b8",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c5282a9c-5263-459a-93ae-a29f96b7c34b"
        },
        "item": {
          "id": "efcb7b69-aa71-4cd7-9d80-705e001b496f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "54d567d6-20ee-4d93-98c3-293220e642ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a391855e-79e5-4ea5-b237-d39cf857cc39",
        "cursor": {
          "ref": "b1ca0c2a-fa5b-4056-bf0e-466015795793",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f9a7c248-89fc-4405-a953-ca54a17a44d8"
        },
        "item": {
          "id": "a391855e-79e5-4ea5-b237-d39cf857cc39",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "62400afc-c113-4c97-9d12-56bc6c9ca903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8754a6e-7a5c-4366-8d40-0e7f05af446d",
        "cursor": {
          "ref": "cc232188-999a-4d52-87c8-f79da3b3f061",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "12cb6218-a9d6-49db-9495-da54b926bc01"
        },
        "item": {
          "id": "d8754a6e-7a5c-4366-8d40-0e7f05af446d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "564c88c2-6ede-4967-b85b-0a5d30750272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c13ef986-fbec-44fd-bf22-84697dafe2ba",
        "cursor": {
          "ref": "a0c70f61-81a0-4267-9ae9-d5235258808c",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "4c2a9c33-5e7b-4f16-8932-0916f44debe5"
        },
        "item": {
          "id": "c13ef986-fbec-44fd-bf22-84697dafe2ba",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "776cd17c-c9d0-4208-b0fe-f3a00c90168a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be769dd-aa0c-4f12-848e-2733e593b5ec",
        "cursor": {
          "ref": "9d4bcf1e-0130-4bdf-bb50-f109d7005d4d",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "262f63d1-d6df-4700-ba83-2b7c9026a494"
        },
        "item": {
          "id": "7be769dd-aa0c-4f12-848e-2733e593b5ec",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c2080cef-2526-44f0-981d-4f86e35221dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e548101-e50b-4940-b0b0-d5945e437f04",
        "cursor": {
          "ref": "5c20a7cb-0c8a-44da-a9a6-85b6f55bc936",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4c7fbacf-c7fd-4a9d-96b7-3b4dfd0be97e"
        },
        "item": {
          "id": "0e548101-e50b-4940-b0b0-d5945e437f04",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "8fcbd01a-480d-45aa-9e19-bbfe118c75a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa939d6-0803-4046-9d98-812e5077d508",
        "cursor": {
          "ref": "1d0de9de-764d-48ed-a214-77877006b9ae",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "dd2c14ce-d003-4180-8b2e-6ca3c14ec100"
        },
        "item": {
          "id": "8aa939d6-0803-4046-9d98-812e5077d508",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "97c914d5-5cbb-47c1-8f96-3d7940cae5f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93089e24-880b-4ec0-a439-6ecb816f44a6",
        "cursor": {
          "ref": "3fb0544f-0846-43f2-8f22-1b9d8c4154cf",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "437cab8b-8127-4652-9079-2f19f2e83e2e"
        },
        "item": {
          "id": "93089e24-880b-4ec0-a439-6ecb816f44a6",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "42369694-04b2-47fb-9d42-f7b37474000f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9873cd86-3b24-479b-9388-2a388e477c87",
        "cursor": {
          "ref": "2c1f47aa-ce80-4202-b121-04cb1992727d",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "05c76b19-8a26-492c-9fdb-0d5a01aa91a2"
        },
        "item": {
          "id": "9873cd86-3b24-479b-9388-2a388e477c87",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "3cb8736a-b30b-4897-b285-848ad2ba56f1",
          "status": "OK",
          "code": 200,
          "responseTime": 422,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "f0dfb228-f167-46bb-a2ba-a6ed3dc49ffe",
        "cursor": {
          "ref": "c59e181d-79f2-4959-afd7-ed043933f0d5",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ae9a52e7-a6a4-408a-bf9f-52f5fa6a3059"
        },
        "item": {
          "id": "f0dfb228-f167-46bb-a2ba-a6ed3dc49ffe",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6b5ddcf4-bb06-4b2c-8a72-9a9544e4d34c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8573012-e0ec-451f-b429-5c60be7e864d",
        "cursor": {
          "ref": "ccc3a511-0e2b-4fcc-b90c-f1f6dbe5c2ad",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b6851242-1f7a-41aa-91fe-5281ffb627a0"
        },
        "item": {
          "id": "f8573012-e0ec-451f-b429-5c60be7e864d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "bf81587c-0ba9-4cfc-a457-f9d0a25c18b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684af5a6-c0ec-4792-88b7-56e4490c99e6",
        "cursor": {
          "ref": "bb9e6969-6c06-477f-bfbe-dadbc38d6766",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "03268d05-1f18-4a63-90f5-1f915fd6809b"
        },
        "item": {
          "id": "684af5a6-c0ec-4792-88b7-56e4490c99e6",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c75735e7-5c54-4fbf-b83e-176ef135c8d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce57eca5-7409-499a-af87-7b9fd325d51e",
        "cursor": {
          "ref": "640f29f3-9e43-4a3d-be88-cb6329ee07d8",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e2fe00f3-a5ef-452b-b87b-4440462174f8"
        },
        "item": {
          "id": "ce57eca5-7409-499a-af87-7b9fd325d51e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "91396ced-57c3-485d-891e-0d7daef73dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3994c7d3-2257-4780-90d6-26d9fea0e2b5",
        "cursor": {
          "ref": "212c888d-58f3-47e6-80df-14d6d3f8978c",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3874356c-d6a2-4762-8f1c-f05bc43cc29c"
        },
        "item": {
          "id": "3994c7d3-2257-4780-90d6-26d9fea0e2b5",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "c98b8f81-944c-4823-af2f-35c5a8ac430e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97221f2-4b4c-498e-aab6-9d7fdc60589b",
        "cursor": {
          "ref": "b3a4ac65-feaf-46b9-b64f-d28530013d2c",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3a78d806-659f-4056-a2ae-d040c9a9e014"
        },
        "item": {
          "id": "f97221f2-4b4c-498e-aab6-9d7fdc60589b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0398572e-f0ff-4c2c-be0d-5b82de361e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a108d2d6-922f-4d8e-b2ab-1b270e665897",
        "cursor": {
          "ref": "8dfa1f9f-f545-4e44-8792-c3367edcc141",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2e634cae-7df0-40c4-bc0b-fa451ef207a2"
        },
        "item": {
          "id": "a108d2d6-922f-4d8e-b2ab-1b270e665897",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e4efd575-60d9-4664-8104-33de4785e698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72326d3a-d418-4d95-bf7e-8e5a7ecd80a1",
        "cursor": {
          "ref": "97642ab5-a4ae-4604-9386-10f19405fb9f",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "00d49872-65ce-400c-b233-4f6a8d0ef5fd"
        },
        "item": {
          "id": "72326d3a-d418-4d95-bf7e-8e5a7ecd80a1",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9f653c79-4566-447b-be91-00669e8ca55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4fe904c-4ad9-4b55-812e-02b2defb15ad",
        "cursor": {
          "ref": "0ebbf863-3004-45ac-a0a6-efa94e448460",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "062a6ea1-165d-4048-a58e-f58fdab904ce"
        },
        "item": {
          "id": "c4fe904c-4ad9-4b55-812e-02b2defb15ad",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b7dd9cb1-674d-4a14-ab83-d84487fc37d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d31eaa5-900d-4682-bdcf-a94023d993c3",
        "cursor": {
          "ref": "7b607ef7-26b1-423d-af15-76b424c47260",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "3997e29b-e199-423e-ade8-1518149e2a4a"
        },
        "item": {
          "id": "0d31eaa5-900d-4682-bdcf-a94023d993c3",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d5338ce0-2a01-4df3-ae53-8eb33b7b3115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0506b98-b1d4-4892-b9c5-8ae28587bd5b",
        "cursor": {
          "ref": "ca79ec45-a8ae-4d55-8f8e-319ce26c8f54",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d6e4ca3b-2d4d-4c5c-bf78-4aedc19fb28b"
        },
        "item": {
          "id": "e0506b98-b1d4-4892-b9c5-8ae28587bd5b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "58f05ae4-75a9-4ccd-bf9d-387d0ecaa0f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d1d85a-f7a6-45d2-b01d-4bb846341a7d",
        "cursor": {
          "ref": "fd5893e2-c4dc-46d2-aa64-32762d42bb89",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "71cb0c79-2361-45d7-9656-0cb00870cf17"
        },
        "item": {
          "id": "12d1d85a-f7a6-45d2-b01d-4bb846341a7d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e7499ace-a6b3-4320-bd97-d56c18103d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c8dda9-97ed-4e37-8afb-94308f824ba1",
        "cursor": {
          "ref": "e6bcffd1-40b7-4657-9742-90083cf32620",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f066fd7f-af74-4692-9c44-345ef5a716da"
        },
        "item": {
          "id": "d0c8dda9-97ed-4e37-8afb-94308f824ba1",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e53ae99a-7e2e-4cf8-8a0e-10a9f0dbaf4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e85fc90-2b95-4fd9-b359-cfa254f993b0",
        "cursor": {
          "ref": "0460a15d-952b-4487-8608-2109584e19fc",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3b80e960-179e-4323-b601-2b6353000505"
        },
        "item": {
          "id": "3e85fc90-2b95-4fd9-b359-cfa254f993b0",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "4e1393a2-cf8f-4e10-afd8-5fafb32486ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602fec53-c7b9-4e14-bb3f-5da6a03511cd",
        "cursor": {
          "ref": "3d3b24d4-896e-4764-9b03-40c28857d190",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e5e36480-68e8-48d7-ad7a-2a8664bb5c86"
        },
        "item": {
          "id": "602fec53-c7b9-4e14-bb3f-5da6a03511cd",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "932b5fcb-1b93-47e9-ab8b-dc57ebdd9991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc48000-1b3b-4100-9c92-3c0ab24f5b97",
        "cursor": {
          "ref": "716cb6e4-f437-4591-af35-d546bd5129cf",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "371c7b10-b0a5-47b2-a56a-b8bcee6e68cc"
        },
        "item": {
          "id": "9dc48000-1b3b-4100-9c92-3c0ab24f5b97",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0cc62963-e6e8-4849-b531-3d623149c997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92657388-add6-4070-b91a-7b21e12937d4",
        "cursor": {
          "ref": "7154a5ee-386d-4fb0-8442-078f2f7aefe0",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5f038272-d56d-4f26-a77a-df84c68bc5e5"
        },
        "item": {
          "id": "92657388-add6-4070-b91a-7b21e12937d4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d8f2718a-a427-487b-a352-702b04de2470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2cfca0f-667f-4723-9a8f-4ae7799f10f9",
        "cursor": {
          "ref": "1d08f121-eb09-498a-a0fb-906288802b41",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "3ac0b890-0d3c-4e82-a7e2-611b2390e72d"
        },
        "item": {
          "id": "e2cfca0f-667f-4723-9a8f-4ae7799f10f9",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "fa82e141-09dc-4e96-9795-aa8a364b9a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b0a6cf-eb9b-4793-af87-ed1ca827c0f9",
        "cursor": {
          "ref": "b73e1d8e-69f4-4e3d-90af-5feb11089d80",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "06572da0-25d3-4526-b63a-d83d88f0925a"
        },
        "item": {
          "id": "90b0a6cf-eb9b-4793-af87-ed1ca827c0f9",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "8fd451ab-5b13-4970-bfcd-77d436e229b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8038c0-3721-4ef4-bdd7-eb85bff19ae9",
        "cursor": {
          "ref": "982d50a9-05dd-4a11-b512-4cff010c825c",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "289d2884-e71f-4089-a254-cd1ac4cfcb60"
        },
        "item": {
          "id": "cb8038c0-3721-4ef4-bdd7-eb85bff19ae9",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e1ecc1ef-010a-4c8e-9383-c9929ee02bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f370a5-30ee-4d63-8be6-cc8cf6b9cff1",
        "cursor": {
          "ref": "c4ad59fc-1a37-44ba-a1da-0fc6648a0fcb",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3001f288-add3-465d-be5f-c81d8d32b4cf"
        },
        "item": {
          "id": "c8f370a5-30ee-4d63-8be6-cc8cf6b9cff1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ef739b84-a131-4cc4-9365-2b0452d10f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ac66b2-7813-44f8-83b7-22e699d9c362",
        "cursor": {
          "ref": "0812f2b8-690f-4235-ab39-4db664103bb8",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "30016fea-f37d-46a4-8713-4007149248b7"
        },
        "item": {
          "id": "23ac66b2-7813-44f8-83b7-22e699d9c362",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f2b1fe0f-cb58-46f3-8e21-c9597a11ced5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6e6db5-a133-4988-9e33-56ebf4ad95d2",
        "cursor": {
          "ref": "6abbd145-283a-41a8-a129-d2675f07d978",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a2508d62-232b-48cf-926e-4de7041842d9"
        },
        "item": {
          "id": "cc6e6db5-a133-4988-9e33-56ebf4ad95d2",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ed069596-f080-4d8d-99d9-7f45f96246a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4947809-8958-4357-9cad-96a2ae237f0a",
        "cursor": {
          "ref": "afb82a58-2a4a-400b-b8cf-5401000412a7",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b2430757-1dfb-4702-bcda-26451a7d16ae"
        },
        "item": {
          "id": "b4947809-8958-4357-9cad-96a2ae237f0a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2d1fbf69-70c1-4738-abe9-a7e79e37555a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74bbe020-b23d-48ed-b5b5-05cf62a755ef",
        "cursor": {
          "ref": "fc5d7908-28eb-47dc-911f-8061b2c9ed5f",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c9564f28-c341-4560-a435-bcb78b854a1e"
        },
        "item": {
          "id": "74bbe020-b23d-48ed-b5b5-05cf62a755ef",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ed7326ff-3ef3-411b-bca0-bf7003ad5aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2a87e5-925d-4af3-8e70-7193de6d1273",
        "cursor": {
          "ref": "1131d121-71b7-420e-afb6-0167775f18a8",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2377dc3b-efaa-400a-b546-b882f17305dd"
        },
        "item": {
          "id": "9c2a87e5-925d-4af3-8e70-7193de6d1273",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "82eb3028-4115-4728-b458-4579e6c788a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9fb5d32-b364-4e57-9b10-9fdadbafe7b4",
        "cursor": {
          "ref": "fd97808a-1ffe-4384-818b-7e37f3de7926",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e81ca0ee-eed2-4e44-b069-7b10639e0146"
        },
        "item": {
          "id": "c9fb5d32-b364-4e57-9b10-9fdadbafe7b4",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "df80493a-0fee-4e0a-8366-05ea9097ac10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7468ede5-4c3e-4d27-8b45-48cea572d069",
        "cursor": {
          "ref": "aabc835e-1974-4b8a-a86f-4fe045de96b6",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9040e8d2-afa5-4fd1-8eda-0e7e43aa69e7"
        },
        "item": {
          "id": "7468ede5-4c3e-4d27-8b45-48cea572d069",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "262b3b05-a78c-4197-8769-dd9a6974e72a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f600729c-efba-46c1-8aa2-0457134f1dea",
        "cursor": {
          "ref": "e236240e-96af-40f1-9481-8a87d0fb10a9",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ce31a108-c015-4e8f-aaa4-7057c47195a7"
        },
        "item": {
          "id": "f600729c-efba-46c1-8aa2-0457134f1dea",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3f0bf5c6-5f03-4471-8e1e-9d845b63fa9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad62620d-661f-4887-abb0-4b99b627bdff",
        "cursor": {
          "ref": "18db6c5a-e101-477d-bb91-29cefd3f1342",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2dc084f6-dcd8-48ba-bb96-62bbaf131613"
        },
        "item": {
          "id": "ad62620d-661f-4887-abb0-4b99b627bdff",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6f38cf85-5c6d-4dc1-acd3-9bf364b69d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f09b8bf-7ab2-4a47-b411-5442b7cf0215",
        "cursor": {
          "ref": "40d4860e-588b-4a92-8310-28c979660588",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "70febf49-f65e-49c7-b0fa-fa22df461461"
        },
        "item": {
          "id": "2f09b8bf-7ab2-4a47-b411-5442b7cf0215",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "10e64c98-1506-4310-ac6d-e7f299ceda23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f17df22-508e-4764-9854-a13b34cd9f83",
        "cursor": {
          "ref": "846c7de9-b45e-4e54-a88a-0cefe3f51784",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ae7f2f29-78c1-4f6c-9ce1-44af76099be4"
        },
        "item": {
          "id": "4f17df22-508e-4764-9854-a13b34cd9f83",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ae468202-0ee5-411a-ad17-59f8d2fb93b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b64344-9ca4-44df-8cb8-5fc15adbda1b",
        "cursor": {
          "ref": "54880460-9c64-4606-ba9c-ce580c317e52",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2c668922-f940-4fde-8df7-7a5298af5573"
        },
        "item": {
          "id": "83b64344-9ca4-44df-8cb8-5fc15adbda1b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9080ef9e-844e-4126-ba29-f3b2c870871a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e9ade6-8102-4204-9084-140f604c8f95",
        "cursor": {
          "ref": "71ab7755-c45c-4d78-a340-1e22fa905b45",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d80524ed-1e09-462b-99a1-9c508b70ae66"
        },
        "item": {
          "id": "07e9ade6-8102-4204-9084-140f604c8f95",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2f0f79f6-e8e9-4220-a192-3a9589d43386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89926a65-ebef-4e59-b207-dc11b17d3213",
        "cursor": {
          "ref": "fb11820b-3cac-40a7-93cb-c80aafac5b0a",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "772b8b5b-0efd-414c-b08c-8e38eea54e99"
        },
        "item": {
          "id": "89926a65-ebef-4e59-b207-dc11b17d3213",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9fbea173-6e63-4f75-bced-31f73c8a8d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda2ed53-1cd6-486b-aaf4-8721fdd3e31a",
        "cursor": {
          "ref": "b1c17cbd-1608-44cf-8306-3d54d1ab21ba",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "829f4c77-48ac-4e74-873e-53b818d609f1"
        },
        "item": {
          "id": "bda2ed53-1cd6-486b-aaf4-8721fdd3e31a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "cb787ab2-8be2-4f1e-a811-66c030479424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fede7459-1f61-4e79-a461-87dffd752b2c",
        "cursor": {
          "ref": "2146bcb4-f88e-4510-9589-59f9eddd736c",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "503fabf4-208a-4b8d-bde1-8e66f42033f6"
        },
        "item": {
          "id": "fede7459-1f61-4e79-a461-87dffd752b2c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5e2f287d-e35e-4608-8da9-bf32371affdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c3dd81-6e79-49f9-af2f-b618a2ba29c9",
        "cursor": {
          "ref": "9b4e4d18-3850-4432-9bdd-994854c0c115",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "399ec9d5-6eb2-48a2-95ec-4d83b4d1dcb7"
        },
        "item": {
          "id": "e6c3dd81-6e79-49f9-af2f-b618a2ba29c9",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d332b9cb-b40f-42a4-851d-4ddca324b68b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0476ce25-9353-4ae1-8be4-bf75afdfa9d7",
        "cursor": {
          "ref": "332eacdf-e259-46e2-a8ac-60295e41a322",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "09d4e008-c24c-4f07-8b29-6c5f829aa8a8"
        },
        "item": {
          "id": "0476ce25-9353-4ae1-8be4-bf75afdfa9d7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b9fcef7c-49c8-4d50-8913-2025c828b40b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59911eff-4c26-4993-999a-948f6b6cde95",
        "cursor": {
          "ref": "b9fc20a5-6859-466a-98fb-0547881b9010",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "05ac71d7-8058-4ae5-8c44-55f6502837a2"
        },
        "item": {
          "id": "59911eff-4c26-4993-999a-948f6b6cde95",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c75f68c8-2d89-4623-9064-29852cc40d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364bd835-3a2b-49b7-93a4-7d31d7585199",
        "cursor": {
          "ref": "06ada78f-10d5-4644-b91d-fdc32263152d",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "97d3d5e7-25aa-4d35-be1a-9ce293ba0c6c"
        },
        "item": {
          "id": "364bd835-3a2b-49b7-93a4-7d31d7585199",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "bba7edc5-0383-4670-87e9-4df087d17f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f718763a-7d9f-43a4-8561-cee7b8e39ca3",
        "cursor": {
          "ref": "bf4c10e3-0133-4d12-97c6-b1cbdd5452d4",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ccaa76c2-b420-49e2-a7b0-c55212966540"
        },
        "item": {
          "id": "f718763a-7d9f-43a4-8561-cee7b8e39ca3",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "3c8662a6-0de7-4368-9e0f-346cf04b24e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 228,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fab42e4-75b5-4d40-b45a-5a05e9acb006",
        "cursor": {
          "ref": "6ce33928-9979-4fda-9312-5c3c34206f03",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ad70c942-00dc-4a9b-8250-0db137ec2e70"
        },
        "item": {
          "id": "5fab42e4-75b5-4d40-b45a-5a05e9acb006",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0d448159-9190-4d17-904c-3b535fc3aa75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 160,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e9cf082-b5c1-495a-bbf2-01f1e10116ef",
        "cursor": {
          "ref": "bdc88fe4-1809-4ebd-8e32-120bbd3adeff",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "fe302f52-a734-4b50-9d24-27a60bcfa5b1"
        },
        "item": {
          "id": "5e9cf082-b5c1-495a-bbf2-01f1e10116ef",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "53aa2a69-2bc0-4d38-8f5c-41d1624c0ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cbaa33f-deb0-4a8b-83a3-8fef53435a2e",
        "cursor": {
          "ref": "8ab4e6a9-7ef1-431d-849f-b6650c5e1c19",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "45d0af6d-5fef-4537-8060-3b971ed537bb"
        },
        "item": {
          "id": "6cbaa33f-deb0-4a8b-83a3-8fef53435a2e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "242841c9-a3ef-4894-b393-4f62fd2fa361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5cbb67-c21a-4a46-aa8e-b5a9c230201e",
        "cursor": {
          "ref": "5c00c65b-802c-4a4e-810b-1c0f98e02b04",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "4d6265a1-0ecb-4411-abcb-47250767cb79"
        },
        "item": {
          "id": "4e5cbb67-c21a-4a46-aa8e-b5a9c230201e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f2d8019e-6469-4d63-8359-ac03d4175608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51cbe502-88f7-44c9-8e46-7527bb58cc58",
        "cursor": {
          "ref": "5a99687e-df96-41e1-957c-dbaea4e6687c",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b91ffa65-a843-48e9-97c3-338fb860690e"
        },
        "item": {
          "id": "51cbe502-88f7-44c9-8e46-7527bb58cc58",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2d33d832-b6c0-4d0c-b4e5-6f804f943a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2d4233-44b5-4dcc-8b64-885cd31c9853",
        "cursor": {
          "ref": "c4ef3f83-f964-49ce-a2e8-2865d6272292",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0c364b20-2e65-40ad-8c74-39ed1c2bb5dd"
        },
        "item": {
          "id": "7c2d4233-44b5-4dcc-8b64-885cd31c9853",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "db3a3981-fa41-42fd-a9a0-6b3230de885d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5804fa5-0acb-44cc-bd3f-c644ba086474",
        "cursor": {
          "ref": "d701b5e6-9522-443f-b1c6-0edd1cfe2a54",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b7e8df9e-5d36-4c56-a77c-788b8bdc32a9"
        },
        "item": {
          "id": "a5804fa5-0acb-44cc-bd3f-c644ba086474",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "cd751585-3eff-4f3d-8c9c-f7ff09dd487e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a47c473-2304-4efc-a44e-d12b640ebf5d",
        "cursor": {
          "ref": "53ce7ece-bd92-4b0c-aabf-f280f2c29624",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "24052c0c-c6d4-4145-8a13-63d3cb33efb0"
        },
        "item": {
          "id": "4a47c473-2304-4efc-a44e-d12b640ebf5d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6b076ecc-ee73-4cfc-8466-95864c710912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d1adc90-7d40-45c4-bc0a-e11189c0f2cd",
        "cursor": {
          "ref": "8f645ff4-fa28-4522-bd1d-a5109cb5a863",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e79c9fd4-c501-44ba-9d27-0b672f3b8359"
        },
        "item": {
          "id": "4d1adc90-7d40-45c4-bc0a-e11189c0f2cd",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "45e3b7ab-f074-4fe0-aa17-09645b876e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4626a8dd-9184-4aa3-875c-55868a5cf7c4",
        "cursor": {
          "ref": "18da48d3-1eb5-48c0-9128-af71cc93d4a9",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "90c22f16-8b99-4418-9cce-c713cf54efbe"
        },
        "item": {
          "id": "4626a8dd-9184-4aa3-875c-55868a5cf7c4",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a9bcab5a-3229-4380-b97d-5968f3b70201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff30b5f-aac1-47aa-9917-c9ad9a57ee96",
        "cursor": {
          "ref": "408a4bbf-1639-408b-8d6b-0a4e2a8d3eb1",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "81afb0d0-02a5-488e-b96a-f6f6cd69e094"
        },
        "item": {
          "id": "3ff30b5f-aac1-47aa-9917-c9ad9a57ee96",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "26577f29-5570-452c-a0e9-c00b86d54cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6ce69c-1d57-4893-b05e-e6294b469baf",
        "cursor": {
          "ref": "0123eb0d-3e5f-4a22-bc6b-e7cf8bc16d3c",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a23b434d-3190-4b82-a8b8-ffbc8fc41277"
        },
        "item": {
          "id": "ac6ce69c-1d57-4893-b05e-e6294b469baf",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a9607274-c270-4054-a93a-34f96c3c5b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6836c07e-86fd-4981-96a8-9b6239a4946c",
        "cursor": {
          "ref": "7a3eb887-21df-44fa-9c09-0d642dfea066",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7a7d6c9f-478f-43a3-8fff-a67d613f3257"
        },
        "item": {
          "id": "6836c07e-86fd-4981-96a8-9b6239a4946c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5cc97a3c-1e93-4f85-8ffa-d230b51da829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e86730-c4f9-4edc-b326-ada93ed2bd4e",
        "cursor": {
          "ref": "05c1ce69-c4be-4c62-a6ab-de598431df08",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "7e414370-112a-41be-8c12-a2710d518c1c"
        },
        "item": {
          "id": "69e86730-c4f9-4edc-b326-ada93ed2bd4e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0faeba05-5064-44f7-a214-405b2f671177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458760fb-9606-4562-bfdf-d9bb381c7957",
        "cursor": {
          "ref": "473bc1ef-080e-4423-aa44-8d604022938b",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "45670070-4ce4-48b1-ade3-530421bc542c"
        },
        "item": {
          "id": "458760fb-9606-4562-bfdf-d9bb381c7957",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "42ee5aa6-de75-4be9-b2c6-352376300cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d1c559e-bdde-449e-a090-0489aa34e493",
        "cursor": {
          "ref": "65bc4dc2-a395-44f9-bd11-e70fdc010111",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "7152d2b8-8798-4a4d-b39b-6dabb721c0c4"
        },
        "item": {
          "id": "4d1c559e-bdde-449e-a090-0489aa34e493",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "17b68e3b-f9aa-4e12-9ec9-2eff95c30af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f6f98e7-a6ca-46a2-94e7-460573f47d8d",
        "cursor": {
          "ref": "096362f9-2f5a-4632-8995-c80fee860c51",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "15535b76-e782-49dd-b44d-6d0fa691210f"
        },
        "item": {
          "id": "0f6f98e7-a6ca-46a2-94e7-460573f47d8d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a3368f1d-6906-4897-80e1-e6ed43c865f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176e4632-5063-4894-be54-a08b255c82d9",
        "cursor": {
          "ref": "bc762437-3191-4014-b363-adb3356b055f",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "b3af0d99-6e41-415b-a8ed-6a53324fe922"
        },
        "item": {
          "id": "176e4632-5063-4894-be54-a08b255c82d9",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9e9efddb-c8a0-47f9-908c-339d1f0944fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b892dca7-b80b-4201-bb51-5db4d2dee3b0",
        "cursor": {
          "ref": "747f8de6-9c59-4de5-a25c-8c6ff93cd49b",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "79f7d70c-bd7c-41c9-8f5c-8535eb87760e"
        },
        "item": {
          "id": "b892dca7-b80b-4201-bb51-5db4d2dee3b0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d520f929-1caa-482f-9176-c977e51c63ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e47a53d-f034-43f8-a74e-ff3b6d47aeca",
        "cursor": {
          "ref": "11008070-0c8f-49ca-ae9c-4ee7b75fafc2",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "fc697314-6321-4452-963e-b363f5502d6e"
        },
        "item": {
          "id": "3e47a53d-f034-43f8-a74e-ff3b6d47aeca",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "3aceb589-3f5a-4724-b48d-63f98e843558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc68b7fe-270a-44c4-bf45-59c8235e5dc8",
        "cursor": {
          "ref": "d4715a89-b273-44d2-80d1-ecf0cb78dacc",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "d0a11d06-5f16-4ce4-89f1-74739f2089ca"
        },
        "item": {
          "id": "bc68b7fe-270a-44c4-bf45-59c8235e5dc8",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "496d138e-3782-487b-bbfd-8fd2802e8149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00202c2-b976-4573-ba3d-b1b03835f4f7",
        "cursor": {
          "ref": "ce65fb47-a2e4-4a56-8374-ec332c2dd043",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "e2fff893-958d-4e21-9122-cf7ec21e8369"
        },
        "item": {
          "id": "b00202c2-b976-4573-ba3d-b1b03835f4f7",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e5f5d787-43d2-4e21-a954-9ba699a0eb6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f38fab-d564-4242-83d4-612b95f345d7",
        "cursor": {
          "ref": "4c65d5ad-d0ea-45df-8464-9649cf24b748",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "afd19da3-1ef3-4067-9b1b-710d000b8b8a"
        },
        "item": {
          "id": "69f38fab-d564-4242-83d4-612b95f345d7",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "df7bd919-7328-4abd-b1ff-0428ab04e4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b051c46b-6349-4612-8775-2348f313cbf8",
        "cursor": {
          "ref": "066f5092-13e8-494b-b1dc-99c9b5fde59d",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "14632588-be98-4545-8bf0-e0005e86c359"
        },
        "item": {
          "id": "b051c46b-6349-4612-8775-2348f313cbf8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "82199eb5-0f28-4de1-9ae2-992b2886ead9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67991c4e-f98a-4efc-bd8d-5f724feb8553",
        "cursor": {
          "ref": "86d9cc61-af98-472a-804e-502aea640543",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "24d15197-368c-4bc0-a4b6-c376082ec336"
        },
        "item": {
          "id": "67991c4e-f98a-4efc-bd8d-5f724feb8553",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "89659891-26c5-4d52-944f-9720ab148779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a008251-0dbe-4524-b07b-6b20cf82ca2f",
        "cursor": {
          "ref": "8b1faef1-9b46-4387-82ff-274479d7403f",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "531c419c-6813-4da0-9e80-865dc1074c29"
        },
        "item": {
          "id": "1a008251-0dbe-4524-b07b-6b20cf82ca2f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b9f4e6a1-4ad1-4a9a-9db5-7848d36f6ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ece8056-7e37-4706-a954-4d733e94c1fa",
        "cursor": {
          "ref": "98fd2137-0024-4ed0-a769-9adf4d6410a8",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "dc5dcd60-1dc0-4b45-ab4b-63a80c4f7e2b"
        },
        "item": {
          "id": "4ece8056-7e37-4706-a954-4d733e94c1fa",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2bbd8ea2-c65a-429e-ac9a-54e2cb6f15fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a92a0be-759e-43bc-9ca2-d29e910170a5",
        "cursor": {
          "ref": "534eefc4-2b81-4f4d-bfc1-8cb3060216e4",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "aac7233b-b6a4-4eae-a61d-0dfe95f9f924"
        },
        "item": {
          "id": "3a92a0be-759e-43bc-9ca2-d29e910170a5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "1d607913-207a-43aa-ad58-451084abb6f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4dcc5af-f59f-41e0-afd5-a9f996b3200e",
        "cursor": {
          "ref": "0eed077e-cc40-4d16-b18d-5cf4cd71ed1b",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "101afb20-42ec-42ce-8198-3e0c338090f2"
        },
        "item": {
          "id": "c4dcc5af-f59f-41e0-afd5-a9f996b3200e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ce03d22b-a2a6-4599-b54e-f4b28144267a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e446c8c-84ab-4c14-a344-1d6b434cdbba",
        "cursor": {
          "ref": "c5719a28-9dce-4e0e-97d7-d5fd79744602",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "be1b6b2a-6f88-453b-a73d-093fe3ed60b8"
        },
        "item": {
          "id": "3e446c8c-84ab-4c14-a344-1d6b434cdbba",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "6ee8eaa3-73da-4b32-9416-0386b5965feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d1cc71-6a41-4a0f-99e1-fe9044a91583",
        "cursor": {
          "ref": "5793ed12-03ff-4a16-a866-b34ddf78a436",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "315f2399-9176-4312-8921-77735415f93d"
        },
        "item": {
          "id": "23d1cc71-6a41-4a0f-99e1-fe9044a91583",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "49e20677-11cb-4d71-9c56-9d28d8ed17f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db23ee4a-f3d1-44ec-8b27-b0b3ccd9e30c",
        "cursor": {
          "ref": "bd90cd4f-422b-45e5-9f20-0ede0a0077a2",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a3968461-d481-41d3-83a3-e505628c23f7"
        },
        "item": {
          "id": "db23ee4a-f3d1-44ec-8b27-b0b3ccd9e30c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d4519923-6c64-426c-af23-1eacb00f68cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd4f5c3-b911-4454-aaaf-deab96602dd1",
        "cursor": {
          "ref": "dc39bdaa-3446-44c6-9fc3-8d0d5e7f8519",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "962ed74d-cb59-42c0-9464-add299dee4b4"
        },
        "item": {
          "id": "0fd4f5c3-b911-4454-aaaf-deab96602dd1",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c570aed0-97a0-4dc6-9c01-372a20d54cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa1c53d-982b-4deb-9035-6df475f4469b",
        "cursor": {
          "ref": "063de24a-52eb-4de5-8335-8d09f7047ff8",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "70e042ba-5ae7-4123-8f88-23f2969ff85d"
        },
        "item": {
          "id": "ffa1c53d-982b-4deb-9035-6df475f4469b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ed9e35b5-0dce-428e-8d81-b9aafd229d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea23962a-9760-4d06-89f8-c437c5d9deb0",
        "cursor": {
          "ref": "0c81f8d8-fc56-4c66-b144-f5917aaa6116",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "c2a73cb1-766a-482f-828e-1a81cb92e244"
        },
        "item": {
          "id": "ea23962a-9760-4d06-89f8-c437c5d9deb0",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "bfe72558-3d0c-4552-b07e-881f79da75fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9e7752-e640-4028-9770-839d6e3c3df6",
        "cursor": {
          "ref": "fc9e1c24-58a9-4eed-83ee-11be4462e5ff",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "475fdcb8-1874-4d13-b66a-c86d7939d1e0"
        },
        "item": {
          "id": "4d9e7752-e640-4028-9770-839d6e3c3df6",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9d7c5766-e43a-4308-b941-05e938dbee3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef08a8ad-d32f-4a43-b652-404a16c18150",
        "cursor": {
          "ref": "7765181b-776c-44b8-beee-245adf62d4ab",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "25043f5d-2e69-4fd3-bb82-fc786aceb2c0"
        },
        "item": {
          "id": "ef08a8ad-d32f-4a43-b652-404a16c18150",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "bb5f966e-f71a-4a74-8360-a304e5e686fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc50d80-ba25-467e-bac5-610d8f3b2c6b",
        "cursor": {
          "ref": "01225ab3-8070-4325-9531-1a07ae845129",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "4677055d-cbf9-4239-9b84-b81277292949"
        },
        "item": {
          "id": "ddc50d80-ba25-467e-bac5-610d8f3b2c6b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ed3e4432-ed41-46cf-85a2-80e746f66cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ea7ea2-6de0-4bdf-bc7d-a39428ff6f11",
        "cursor": {
          "ref": "b12a5823-c564-4469-86aa-dee56a8de736",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "f3a91a39-98ea-4d39-8e0b-7cfaf1c42515"
        },
        "item": {
          "id": "c6ea7ea2-6de0-4bdf-bc7d-a39428ff6f11",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c8eab48a-e791-4893-a7c1-31d2a3ebaebb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cba41ce-6055-4d96-a71e-3715bacb9f3e",
        "cursor": {
          "ref": "851ed669-1a16-4155-94e7-ab586557bc67",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "7114beed-9583-49ac-9597-29d7e02c6d83"
        },
        "item": {
          "id": "0cba41ce-6055-4d96-a71e-3715bacb9f3e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "46ab2c2f-d8d8-4963-8526-fe1b9330ecdc",
          "status": "OK",
          "code": 200,
          "responseTime": 104,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "9471e4e4-e65a-4913-9455-dd9a267d690a",
        "cursor": {
          "ref": "6d8f7b0d-760d-44d3-9717-3c969dc3252b",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "3fbe43cf-a81e-4ddc-a7cc-1feac601dfee"
        },
        "item": {
          "id": "9471e4e4-e65a-4913-9455-dd9a267d690a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "da754e5d-6a97-480b-9187-f2a0220a597f",
          "status": "OK",
          "code": 200,
          "responseTime": 1828,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a45d7a-fcff-46b8-9b40-64abc1d47abf",
        "cursor": {
          "ref": "18dc736f-56fe-4a85-bb3e-250d59f0271f",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "f57aed85-1132-411f-b8e9-b0f98a5aa068"
        },
        "item": {
          "id": "26a45d7a-fcff-46b8-9b40-64abc1d47abf",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "9737fd4e-4729-4065-9c66-4084c87457ab",
          "status": "OK",
          "code": 200,
          "responseTime": 2307,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e9e524-4481-44d9-a5d5-d49440e3f8d5",
        "cursor": {
          "ref": "4871e79e-8e12-49c9-a4d4-d4b954b5e60d",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "c791d979-5ca5-4f9e-8940-8fe881ad1ebf"
        },
        "item": {
          "id": "76e9e524-4481-44d9-a5d5-d49440e3f8d5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "65557046-ea47-48a0-a6c1-9a398fcc8916",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e9e524-4481-44d9-a5d5-d49440e3f8d5",
        "cursor": {
          "ref": "4871e79e-8e12-49c9-a4d4-d4b954b5e60d",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "c791d979-5ca5-4f9e-8940-8fe881ad1ebf"
        },
        "item": {
          "id": "76e9e524-4481-44d9-a5d5-d49440e3f8d5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "65557046-ea47-48a0-a6c1-9a398fcc8916",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9dfda4-1051-4eef-803b-633b5e5425c7",
        "cursor": {
          "ref": "fc7fe464-a209-4598-b810-b9f145b2067c",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "259ed098-8f69-47b5-9619-c130dfa8ada2"
        },
        "item": {
          "id": "ae9dfda4-1051-4eef-803b-633b5e5425c7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "da26dfe3-fc99-4869-bb3a-dacea0939c7c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f11438ad-51b4-49ec-a3be-cea26197b4bc",
        "cursor": {
          "ref": "0fcee97b-6073-4edf-9a32-f6770ec2ac58",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "45721a2b-a291-44b5-856e-4a157589bb80"
        },
        "item": {
          "id": "f11438ad-51b4-49ec-a3be-cea26197b4bc",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ac79ff57-c548-42f8-83e0-a1cf779aeefd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}