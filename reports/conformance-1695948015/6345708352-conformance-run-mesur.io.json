{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6da68491-9aa6-4c9b-8aee-4487be238fa1",
        "name": "Clear Cache",
        "item": [
          {
            "id": "55ed5ffe-9607-48e2-8437-0ac74eac17f4",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0a2190f8-5619-4422-bcef-a948891cd3b2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7e0adb8d-8a4c-4cc5-8396-cd95426d1405"
                }
              }
            ]
          },
          {
            "id": "14f1b35f-635b-41cd-9d6b-186b554d20fe",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e4ad0e0d-2507-4dc8-8dc1-24b7b0060e3a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8104344c-e882-4d9f-9e0d-ea7ad0271817"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "05c6b530-009c-4e04-af15-039a4f5df237",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "be585262-8709-40ab-91bb-b7aa5fe7b1c8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2c128cde-d1ac-4b77-8599-a2bb5a81fdc7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2a996a0-1585-468a-99bd-3be335d71abe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1ed21c54-4226-4235-b595-c9329a5f510d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8d5e531c-1f7c-4929-b282-84a90d3741e6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "62681bb2-654d-451a-bfc0-70d17e9081ce"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1fe35e68-c622-4334-9c5f-55bc26fac296",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cc3208f4-a328-4d5b-8e0d-66fba5326e52"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "11014492-8734-41c1-87ac-60a5fa75af9c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "625757a4-9405-40a1-8e4c-a78415f344fc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7b325bb6-52ac-47f5-b207-37327c2f12c2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c6118b19-5337-4759-8ffb-e3fdad15a67a"
            }
          }
        ]
      },
      {
        "id": "16f66245-7b82-4d85-a2ac-ecb1da1cff71",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "79e0fde1-30de-4fdf-b3a6-db53bfdac03a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "231d181a-ad8b-4a3c-8388-8463b2768b5e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "da499619-d590-419d-92db-7f6b08ad5756",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ded41e0-1cd8-46fb-bbf8-2f5892db2974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6ae5cb4e-73a0-4710-9e88-6d30d68ce1f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed66468-7381-40ca-b5aa-3c34fca2a123",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4cb380-976d-44d8-b191-30916b10f244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6edf8ace-8af7-4484-9357-8bbcdeb13ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb82af3-069a-409e-814e-c568d6e671c0",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df0a62e-c88e-4030-807b-e8503372c001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72bee8f9-4104-4ce9-be2b-d9cc468dc051"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1a9ba5f6-dddc-4b43-af84-ac4203f17155",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "342bc4d3-67f6-4d45-ae70-0c7dbe749f82",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db520430-6b97-430f-a004-473da74784e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ed0550c-a19f-41c2-a59c-f47e85b59300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a7a1cd-acb1-4cbb-b9ca-6364501ee46e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11f874fa-6c20-47b9-b8b0-5d5378666fbe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7423c93d-146f-47c7-b177-6d576026ed93",
            "name": "Positive Testing",
            "item": [
              {
                "id": "52354b3b-a07c-4e0c-b6e6-45954f486f21",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce6fa4f8-862c-421f-b1f6-fd60f3beb43c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "0b7fa5a9-ea78-47a8-b1ab-d68604c99eb7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "067c6325-541d-4ccf-a465-27a1a28bff1d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f6e1288f-81bf-4974-a7a7-e2b6afe5df79"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "829c21ce-f647-46f4-9419-3b1608c11a71",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b75dacca-8cc6-4b82-b142-36c6284b84ba"
            }
          }
        ]
      },
      {
        "id": "712783be-db34-4df0-aba0-b7fe2762dbc5",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c10740b8-1a72-4a54-81a3-e3bb5ace837a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3435e83c-3b4f-43ac-a9cc-00d1846154c0",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5a02e22b-d43a-4fc3-9f7f-e985ff999d18",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a39659fd-8049-4414-974f-4117f242d14a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bec3748f-8541-40c6-baf6-3fb989012d91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0160398-052a-4ee6-b65c-6a572fd50fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "533599e9-96ca-42da-81a2-a253bac8da98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307beb70-feee-445a-abd5-82a9113c5aab",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef0a338-3b61-4bbb-868e-18ee6d4020d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12b46f3c-d60a-432b-931c-b372c5ae73a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f11e34-53b7-4647-b685-9dce670779e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea9945d7-cccd-46a0-be52-df534fbdd444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4045956a-9a1f-457b-bc5c-a76e7d238dff",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff42d5d-a527-463e-a137-2f8e4c9c9fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b2b78a-340d-423f-a1c6-e31d85e09590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b4d91d-9d1f-4bbe-8658-c88faa49a9f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9531c12b-b66c-4e02-8efb-b2b512e89443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729f5afc-49bb-490c-a4f2-389cd69d4f89",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1359f529-28bb-4686-992c-39c678ad78ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74583a34-b4f1-44d9-a89e-88e7b62d98ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56842077-9d79-49e9-ae4a-ddbc22b47f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9330e154-0917-4d85-8dcf-98840df7775f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaebb2fa-57fa-4570-99c6-be8e3f8a8319",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ad1e1f-d35d-4c0b-a8da-a0282b02788a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71a1047a-d7c0-4661-95a6-b231f0243090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7a4cbba-43b2-4727-82f4-0708a973a008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3015e39c-d591-423e-9a08-9fff1395cd54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280d81fb-c6dc-4293-84e3-2478c712adfb",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4faef079-2ffc-428b-bc32-b33b6af97b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f7c71ab-1ebb-4dce-922e-d372f09a39c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce3757c-1de3-4335-9c73-cd2a4285abb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "935256fc-66e5-4d00-8dec-2af0bbc7cda8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a61d1514-e48d-42ab-a201-2d722dd3dedb",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a41ee46d-beeb-4834-b56a-8c45ab3a3861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80a51cb3-0365-46ea-909f-59577c7ba793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6e5af7-82b4-4a4b-8063-3809676dc97d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eeb0f117-917d-41b5-8945-6c2d25f22547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc4abea-dba3-4783-a53b-82b2a8c23695",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6f08f7-1cff-4ddc-bf30-18e92c68e7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5acdfd4-7f49-4680-a7d8-42b935c07cc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e687249-c9cb-49b7-a16f-acaf44ab59a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad5572a5-e5f1-4edf-990a-12bd77daf17b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ace7172-0227-48fe-a0fa-3564d062a54d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a7408b-b0c8-40ff-a935-69b38f343d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5953f59-812a-4c1a-bd39-a30f7f02f3a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3770e58-41eb-4881-b72f-5e6aebd7c949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5a99e9b-8e99-4adc-995f-73727ac0a929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ce3cfd-20e2-4a2d-bfd8-d77e25523d81",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1ea734-a4cb-4159-ba7e-01102f95b1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c81bedf5-fcbb-43c7-a7c3-dbd2aad08093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee8645c-b47a-4c5a-85aa-a29da2836826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1039622-718b-4ffa-ac99-285b165e98a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae37ba8-2a62-4ddf-b235-54e72381b12f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3a990d-b3fa-41e3-928b-b67bf128ce55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92b3438d-3d7c-46ea-9793-6c01c95e3e21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d694a34d-dac3-44a3-b218-b75e7c8eb2ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a4f9ddd-6426-4b40-a5a0-bdbb698d80ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0213ad58-0325-4746-b144-9ab94bc39591",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f349d6c-cc9e-4eae-b8a6-004c6b69b4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ba547c7-12ce-4f5b-a156-a1643382265e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46466a30-18c2-43f9-8e4b-32659da84411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be4c9983-f80a-4ec9-a980-edc069ac34bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f4da9d8-b8a0-487b-a891-df51e66b1e31",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec9f082-cb86-4046-8bc7-f5626bcead75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bb7f942-a273-471c-817b-3483aea8d087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6136dfde-7d22-4257-95dd-f3e37c228df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f957664f-36b0-47e3-9747-c9ee54812f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b6ff97-09af-4be1-8fdf-4a4e15f3d190",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "630598bd-50c9-4a75-805d-04b8f4a0bd73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d80bdb33-0c11-487d-b944-b69ac98273bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adbd8835-b69a-4b10-a841-a757be2fea72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ed20160-0b96-423f-bb09-cf901f5f2de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69bc433-046a-4801-a07c-70c979727953",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e69cb95-8c75-43e5-a4cf-6ea29860942b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bd8cd9a-a7c5-475f-8e09-7cb1524abbb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6de47e-1093-4911-8d8e-a48a598a6620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba7e2425-87dc-4e73-b0f3-aa238d00e14e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a287d57e-4f95-415b-b546-7bceda7fb4c8",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08263064-8da5-417a-9d59-3b4889ff93c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "395d74c6-bac4-4831-bac7-b895f3ba52c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e198a2a-864e-4829-b932-32d8e6bddfe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "040e8dd3-d8f5-46f3-bc42-29622cbe71d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0e7e61-d774-46d3-bdb5-35c849c9664e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9384573c-7c26-4371-8d63-017eb138d536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc12796a-f1ef-4d4f-b461-4c2632e9a94e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53541971-61d4-4721-b1d8-30774114fead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36db0aff-4bc7-47db-ba37-85b146b25d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "075dcbfe-b6fa-4d89-99ef-92d57889badc",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb538c56-efa5-4848-bbf4-d739611f313a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aff96591-a6c9-4914-9563-93fe611513bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de92df9-dfd2-45cb-b638-17f21f93ef36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba18964b-0259-43eb-b0ec-5b952acc76c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67fd98f6-4324-4533-9eab-1d053d5b5bfa",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd20947a-eec5-4352-9243-adbb2a49a67d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06611724-71f4-4484-9571-b7ff050462d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d03a42a-8129-4e65-bd96-344ffa2c96ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "36dbbc7b-a88b-4715-bae1-2d84a34c90ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "742ba5f0-9f0c-4192-848d-fc24fd563d39",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed337436-c88b-49a0-ae35-494a3afb1137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76d4ec02-2beb-4cbc-b88b-f4c76abb19d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcaaf83e-283d-4c1b-814c-931064a96e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b2fe90d-a4b6-4a54-9151-5a4c64b9f459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a0baf2-1757-4bdd-8bcf-646bc9dcd746",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1fd2f99-3def-4675-9d88-69513b7f6a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5714e05d-0576-4bc1-86fa-69cc846c395a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18dbfade-e517-45e7-8463-50f08ddb7137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ee64452-df26-4dfc-9cb0-4ec246b9a478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5595d77b-93c6-42e7-b1e0-da7b2c8c9bcd",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b1dc89-5cfd-4132-9482-1cee38ea0859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d510cd0a-5bcb-4326-8ec1-2a668fe4fffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6dfa53b-ba1f-4722-a20c-f88790e47e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5039ae9-1885-43f1-8d94-c71ec8111552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb42b185-549f-48a1-82d6-9835d3b8d315",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6198295-aa36-4536-8891-28f4438b8e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e8dbb73-197a-4cb6-98d6-7ff972dcca10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78eb9231-6613-4c4a-95b1-dc9bf4c1998f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9fe3f462-cfba-45d7-873b-e0fd5cff25a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c25cdcb4-50d1-4ce2-ae88-3433b28b44f8",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf85c15-0509-49b8-a305-4426f6c4344c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "616bf065-907c-4537-a715-6b1acb308e4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f527ad-f6bb-4987-ab9b-afe3ad854726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d670137-2bec-4286-8f11-c4c2c982c66a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0fc8589-3c95-4eb4-aca6-c8fbee353127",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f755547-bc97-4d90-a712-1855be1ed9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1210ab9a-c84a-4dcf-b564-25398f2d1b28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e77040-bd39-4ff6-9495-b4ddcc970bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1c1cc82-ab8c-4fde-afa2-73f2f72dbcea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49029e3b-0065-4902-a449-7203a25a5c6b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5e8259-9bfb-4cf0-b60d-bcdba94df93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44bbe5c2-42a2-4c7f-8ff4-e43f59c5c90d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b511c3-fbac-4f03-a3ca-2165de131e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a17b360-4c16-4a91-977f-a3087246b547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9579a96-528e-41b7-a196-cf8d3ddf451b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d15c34-7b61-49e3-918a-fb5c13453ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b84e08e1-4446-448b-8b0c-26a7cabcf06f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174e7074-aef7-4b8a-a79b-29b827f75227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f487360-d65f-4db7-b469-86dcddf8a40e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7aa5531-7c29-4fd1-8f77-7f6df6c2e407",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b37e52d-fe3c-452d-a8f0-f9ecce8769cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bac1bcaf-e248-4b28-851b-500d2f9720c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b57d72-58cb-4184-99f8-0a8a037fb0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea8acd01-9803-4aa5-acf4-0914828bbc7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b7d789-05b7-42ee-8a1f-a71cd82066f4",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab897ee0-deb1-471a-b98d-d02affdf6f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01a383f2-1432-4993-afe0-0f2efcfc2a21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de53b67-abb2-4743-a4bd-027f7b2fe348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9796bb82-6297-481a-9273-6f15c95611b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da14e221-d303-4126-8da8-d7e19e9d8bfd",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "342dce92-9586-464e-aba6-00f86168232c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "038f8826-6774-459b-b99b-f6071c54f09e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92803460-1344-4b6d-8420-55ec435fa6bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "eafced84-3203-4a94-9fd0-75bd4cbf2253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab04350f-4e33-4475-a499-2e9db11c85df",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87e4401-63e5-4ee6-a208-9dfd11b585df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5e2aab8-475a-4c1f-ad82-a6b3b6fbe7ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f6f086c-5c32-4ccb-a94d-c0c0680d19b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6719d572-82ef-4edf-b0a3-60afb1ae4ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae16b365-645d-4e55-8e21-a13040f56cb2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee423f2-77b0-4509-8664-57c5c4c0b82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb87dd6c-3ca3-4533-9dff-0fdf3f1e4626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b691b2-17c5-4db7-83e9-e3b201cf60f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c5be09c-930d-44dd-8b56-8faf98953cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8020aa-d6d6-4a29-8e6d-29449320e98b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81be31c8-17b1-47fc-9b6f-6977fa2af22c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e2a83e4-800c-4a0c-b0b9-fd877edf31d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8437b619-5ec1-48ac-8091-08f9467ea87b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "467fc3b3-f636-473a-a73c-6c5dd542ddb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f6646d-671d-4131-86dc-ba8e232ac9fe",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b66d123e-c84d-4033-9d87-bb8ef69dfbf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d5bd26d-b68b-4119-bd7e-642882978d49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "426643c3-b40d-4d1b-8bf2-f6651b99cc7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "627f51cc-3348-4de4-95a7-580960d08925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b3e1d03-0936-4b6c-95a6-d92878b0fd5f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b4fb23-df16-41e7-adeb-d92367f7a785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "761a56c3-70fa-45e2-bb6e-58ff47cffd07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f2ee35-6a20-4c53-ac98-f2e0318da2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e46c3010-4c31-40d5-bbad-8fcf07b5caaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "836aeae0-a10a-4854-9e21-d4b0bed6823b",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "347abef8-359a-449c-9f75-5c316f372b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb9d82bc-0c2a-49e9-8014-e7af6c6375f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0428bd8d-d5df-4b7b-bc4b-8ec6b74532ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "19b53c0e-a72f-49b9-a46d-8914466b2c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1641717-99be-4686-b488-5e021b7ab6bd",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00282fda-4f09-4e8c-83bc-ae7c49791454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c18fa94e-5fe6-42e6-b96b-8df3144df686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ed797a-91ed-4eba-9a27-fd7d66fe5c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a33fdc79-c528-4395-b974-f740fad4fa8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba03faa-7399-43be-8e3b-902295b0a81e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f36bac9-7c7b-46de-b638-28b4f08f6822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c232c9-ce5d-470f-a26a-0ac8a5e4ee6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11149c8a-78db-4f54-97d3-cc93f10ffd78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "95d3a06e-eb49-473f-898c-2bec94d5a8c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c277b5-4e06-487b-aa0c-c2704150292c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "469f0d20-c899-49d6-9f62-a42f0ee6b24b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6101294-c1e2-4661-a7ee-52e966313f35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9895d7e2-d838-467c-ac99-96433f82ebc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "184cc90c-8bdc-4b27-ad68-883427df9c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e376dde8-3d3e-455e-843e-f6228ced8a15",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f432783-da13-4ef5-a2b4-a7ed6948e44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a7aeb33-9cef-4f29-8100-66dff6f8c1a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288e9829-6aaa-4ad6-9250-0ebff7fcde55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f75a1a8e-4139-4435-8394-c54e43d45659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa97e43-e049-403b-adc6-d40285a18d5c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "932ba3ec-a657-4c18-87b4-487706ce1530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e750e1b-48c9-4c00-aa44-84773a1ff9df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695b8e54-89af-44e3-a049-cd5ef2f63d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "152d35c0-e0c5-4792-9920-f5a0292c4cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae7a3e1-d830-4911-a73e-0a4dcb849a38",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a5634b-7f85-411b-b5f9-fd51b7abb56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "722c64c2-b29b-45f3-8294-46f620c3821e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065f88f1-64c5-4d06-88db-0771e3aa7acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "6a48c13f-f30e-4145-8079-6813236a8096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1fa7fd0-76fc-4c5a-b2f1-83950de117de",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd7db7e-20f8-44ab-b0de-b24eb9a9229c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e48b3e5f-fe06-4d88-bd72-3a03d6012d52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c8c0682-7779-4726-88c3-f174cc8963eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "982d189e-249f-442b-a0df-9edfed6b3178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae4d421-ca34-49e9-81dc-9f017d5c2f30",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86985a73-19a7-417a-bda6-b8e2e4ad09cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c2c1d9e-bb78-45cb-aef5-e70b8deb6d3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4540ce9-48a7-454e-b414-9500303cedd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6066231-b499-4c4d-b92e-02f680cc51fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2965bdce-f6ca-4e5b-9cbb-ddc125f685eb",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f9624c6-f386-4835-861d-6bdf67347a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efabc724-b44f-40f4-99fd-d36e7b586fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb86435-f632-499d-8d26-e691731c65c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd56b271-0a85-4efa-b21d-807f4eb98399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2159fccd-1ff2-4655-8e19-9df3b14c5f28",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fae3adf-b689-4a89-b8af-e3a7e6705ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5d0a7a1-17e5-43c9-a02b-6063a21eb52d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4b703c-8cdf-4db4-87ad-d34f6d62e90c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e047f9df-7d78-49e2-b3cb-3ddb74dd7a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a10c7e-8134-485d-9bef-94da937bfea8",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece8423d-9be7-43b6-b330-67df7501dd7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf1e7e49-0b04-43c0-8e57-85d4b5d2da12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63953f3-63c8-40ee-b426-9b3c228defb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e40ab36-bef6-465b-a114-841d59a4aa18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59dd156f-3db8-44a5-b913-97c1b90689d9",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "938a73df-346f-4713-b2ca-cd32a896e157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d973f98a-f98d-4de6-b93f-31ba40435701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8145e82a-5951-4e91-b3df-cc26b78f5817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fbd8121-eb8d-4f07-82a4-be63a1cdf6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e732397d-dbba-4402-99fc-2dcdd33d99f2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde80fba-31fc-4916-b996-d9d1aeb51851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6c1e5aa-e0ac-4f41-946f-354a3ba071f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9990bf-f6b5-4601-a32f-e7fc30815c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "53833898-0376-468a-a8d0-8348fbd581bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d1f4b5c-3406-4acc-bc4c-0d78d55df0c9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "844436f7-5d90-4a7e-826d-a7e13925cc1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f3af224-a242-4e94-abfd-f784b3b097eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad8ba849-edcb-4277-b36f-cec44819750a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cd4d18cd-0665-4560-a04b-2f4543625b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1110aca9-399e-4be2-8f21-5114d591e785",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3769c49-ef9f-41f2-b3e9-67341102e5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e006502-f86c-4eee-9940-99874a052570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ed2833-88c5-44e0-b175-0cd77e7ce504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb4037a6-0009-443d-ad22-fb546d34811c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "756a082e-230a-4f94-b3a9-98b1b9322af7",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f4d910-8e5d-4fce-9348-468aa60bc482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa428119-a473-4505-99d7-f196d4fa3b75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6abc19fd-8404-472a-b6e7-f668059ab7e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c86f7ad1-428d-4334-a3b1-edfc5f19285e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d4cda1-b468-4203-8c83-78477adfd3f5",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf28389-84fa-431f-aee2-fdc6d938825f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bfb4b55-5a0f-43aa-9e82-d87694cb8ed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a149fd18-c704-4200-abbd-72c88743dc63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "224326df-a0f2-468c-82b8-b8655d3fe32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73660038-f1a1-4d36-b950-470eb7311f10",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b345b3-d80e-4fd6-95e1-a7bcba58c8f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29aee4d1-6de0-461f-8c8f-51657b50d1f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1deaa4f9-6b15-483d-9463-0eebe3e89aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "133c207c-3899-4aed-b8b2-9565af3ebb48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea51a6b8-5af9-4412-8773-f0608c6896da",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c5fd48-607c-44bf-9015-d5f006cd7d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e207b8a-fb61-4aa1-acb6-64f2a900911c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41f8de5-965b-4ac0-9003-49af9cf9786f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cedf6dc2-3745-4707-999c-fd8821f625b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4489f2df-65a1-42bf-8ba2-62c84938d20a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7726bfd-b694-43c7-988a-69fb5dada380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "535f0b3f-68d2-4a8d-be6c-0dafeff21950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f8e16a-8c76-4198-9487-289498bcdeb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c2a74986-c213-4832-9ed0-3ce22c8df845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae83380-4236-449a-bf41-803ab4e538ef",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f30fd24-b7e0-4ea5-92ff-eb8e897c5afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37620a6b-cda3-4730-bdb9-104910c5bf6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb5a937-f611-4a8b-aef9-710492488bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9a4b053-684d-46d8-9ffc-4e204b9d8222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "007ab883-b5e9-4345-9ed2-531d322c18d7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb345420-2d8d-45e5-a780-3caa253b90b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f77e992-0456-4494-b698-71381d516f24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46dfed99-9b2b-455d-914a-1b6087bcff77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6838f96e-1c35-4db0-bff8-3c0dfc4cfad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7d5544-1d84-4695-ad43-85b5ebd0088e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1959e35c-3850-4e5a-8d0b-d75845b2d696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03d79304-db4a-4121-9591-a421bafd947a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa128594-9e03-492c-941d-560f69695d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "57a0434a-dd23-4d3a-862b-377cc813a05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "983d87ae-a2a7-4d17-ab8e-ae13b2e58a13",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2812abf-ef25-4c10-9863-d76b049c7bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a03887f0-3bad-4a13-821b-2ca918c629ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7fc1051-a9eb-49bc-bfa3-8e1dfcd3957e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "363c0b26-e4f5-41a9-875c-c2626691b82e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9410abf-13eb-4e5c-8ee7-de7c8a60e5fb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2195c874-4000-4724-8bc7-3d819b7ac947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed2acb9f-c605-4eda-84fd-36e15af8da15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab030ff6-0e7e-47bf-a1d9-3ca8f0a147db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b795a03e-543f-4994-971d-384c92b8b702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51494a96-21db-44d5-8912-9e869531e186",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "657855ac-2cf6-4ec3-b610-67de74b8b5a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a92512b-2bc4-42b4-b1e2-af770fe34330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b2e3b8-fe41-4ccc-94dd-b2bf833c9284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "1be4cc15-593e-4f38-95be-6aa213bc88e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56eaf88c-671e-4a1c-b81d-d9d41e93fabc",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28fc6982-be15-4fcf-90b6-c7e3d96fd7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14694f6c-2a93-4369-b7ca-4c7df35be19f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcaef42b-3da5-4934-b2e0-fe1132a54cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc9e4ff8-1954-4f2f-b26c-06e7e745d1e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "463003e1-5e5f-4404-999c-987b6aa9e5d9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ddb422a-2d77-44b1-81fc-fa0c2e9b8314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e3868e4-3820-4b30-9746-06daf40619b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85986be0-2d20-4cf3-8689-bcdaab7da4f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "458fe053-8a2f-4491-93fc-bf0c60f23f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4715a50c-4051-4900-a6a2-13157e1d75c4",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b2ec5f-f003-41b2-8679-ad10680df169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acfcf90c-9e71-4132-8f03-25490f29dbb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dba1175-140f-4fb1-afef-bdfe37d29073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c43bada8-af99-4726-93fd-8516c49c605c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffaa0c93-e9e2-4b46-915b-fd4466687483",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa86b0c-17a9-4e91-aaaf-771f244c0a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9409591b-6fb5-4f6c-ae40-374f48ebd389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5185f5cf-6b94-4aa5-9c4c-0b8428b7dbc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "719cecb3-4176-4b75-b736-bf14131456df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878cf76c-b55b-4279-8b28-7ec2b1239f4d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f395e1-e5c2-4b23-8169-42926f0bf81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52646d6f-4ad3-4b88-bfd0-f7c9e3be9a2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b460de43-9b93-47cc-8894-814b7e0f876b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a57c7216-7f48-4d3a-8425-3cb93b9a82f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598ce28f-e907-4725-9fce-e81485a9cb8c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd704fdb-88a9-4c13-87d0-f995dbe345f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21541fd6-2b97-46e5-886e-78496e92a8b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0c70cc-78c1-4640-a51b-f84a7b388e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb592e7b-34aa-4c58-bd4d-1b6755e65566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d96ac5d6-84c7-45e3-9bc4-699d7deeea85",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e70f74e-81b8-4c6d-b6fd-25f322d10ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2046472-5f21-406d-b1bb-6fc5aec0aaf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c5f7aa-c31f-4374-8be0-6117ebf949ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e9761f2-b183-4919-8b42-22687d895a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e828102-12eb-49ac-9dd0-12a9985aa120",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c751c1-0718-4c0f-9b58-ffa541dc2c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "008fea5b-bb34-410d-aac2-5a623982c973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "535c2336-ff95-4360-be8d-d44afae6b1d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6cf24a6-1eed-4f89-afcc-25e53223c8b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "548d7a98-d878-4669-8a8e-297d1b1f11cd",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24abf278-1caa-411c-b431-3e3b9ba0825c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "977fb3fb-8781-4610-9c2a-65bf06949f95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52db317-38bc-4251-a1d2-39052930f5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b12f23a6-4308-4f89-bd06-e32c6a475aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be7ee24-a6a7-4165-a0c4-743f45744137",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88487144-d5c9-4ca7-bbed-99d1e3d6be33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a4034b3-4392-4cc6-8ea4-60196edcc748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c39437d-5eb1-470c-91f3-1ff4bf4c6285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "222734ad-1405-49fe-b263-5fe4ccea0fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "960b4b28-6966-4cbb-aa37-24676e2e4be1",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be052761-ba9a-4f37-9fb0-f0fd5d2bc2c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c4c268-8749-4fe0-bcbe-c68b94b92edf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f603c2e-7728-4458-b156-f80149c65aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "205fc7bd-d8f1-4ab7-b745-afd4a6cef621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456175e8-b89f-4e7c-9c50-f8fd8edc43a8",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f2f3642-875c-4fd9-953b-03b871fa83a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f30d2b9d-822e-4a58-9668-083adf3302bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d2fe1a-0b1f-44b4-90d6-9ada24979c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c5c40daf-488e-480c-a952-ec99f7a0ddce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c41634d9-69c3-4dc2-800e-bef4f16bc9ac",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23c07eb-5e58-46b8-bae7-f2326bd831c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aad44f00-6d8d-4a28-97c0-e54db69fd1d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7686897f-9942-4083-91c1-886653f42b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d250261d-3f44-45b3-a571-0f1d7b66e79a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d2eb18-9f01-4600-bafd-053b17184518",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf2acd3c-11c9-4c39-8782-ee978486675b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0cba309-6c26-4423-979c-2aede3102135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f834be3d-1e19-427a-8c85-c6f996e41285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "26a48a16-ef0e-421d-9216-4bac703a3952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7380b0fe-0d9d-4a8e-ab53-1967109817a0",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bfb5043-5a9d-471a-a343-86318a15ff4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a01fd5b9-b50d-4c69-bc8a-8d57de312148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5161bee1-d32d-4e58-b477-e23f6cc9f9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e95e292e-aa43-408c-85c4-18d11e728598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70c645d-608f-44aa-9f15-d81e39de8fee",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24310e70-2448-4d6a-bb0a-7ae89d4c2fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "273914e8-0dfb-45d2-8115-50e0edbd7a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49dc4909-9e23-494f-8aac-38071fcb0ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "daf6948b-1dc6-403e-8cd6-ae38233ebf07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb902c7-7b32-4c35-b38c-edeecd9c4aa9",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33474445-e3aa-4aa4-a0c6-0bd2af1af818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "265652fd-3fec-4fdb-aa7b-a11580f07a7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f25d1f-8270-481d-88ac-b29a2b65ecc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "90ad92d3-9dc6-4803-8372-cd316618d9b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91bce041-bb57-4ca4-887d-3d75afb3780b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13034520-6cd3-4498-a6a9-55e8c4ea3b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a738c859-d5e9-49dd-b14c-277ada634bec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f94e34-d077-467b-b60d-0094ce0f31be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8f023aa1-bf0b-4cf8-ae7b-98f23edd90cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "872f8eee-0abe-42a4-9757-2f8cd3d3222b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c365e3c-401b-472f-9cd7-f0c3935fbaeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f30c18c-b6dd-4798-8153-8e61d6f62366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4d5d32-62f6-4898-975a-76d261ecbb9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8d7c321-c8b7-4e31-aeae-dfb6a6c22fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20cf207-31b9-461b-bd03-dfb01786574c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d124545-0d38-4a3b-971d-c49dce45d073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc590d5a-1b79-4f24-9157-e37a650c3c20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "049e8f10-7391-4148-9e2c-9265bf9c46cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "913b649b-e3e1-4f0b-afa7-4dd29baf1d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d00814ed-7e5f-4700-9751-3456c1e11129",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a842017b-d88c-4969-b032-dd82c5e8ad4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e3b6d54-263f-4106-bef5-71b63d7aec24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30daac3-07b7-410d-9947-3b00493e156a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d26078ea-d163-4363-9cbf-d9405a3fa1c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa510506-bef6-4c7e-80fb-c57fcf00ca01",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ead189e-dc22-463d-bc43-0076ecf93ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f4698b7-9b2e-431c-94a9-64effd601931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2d61da-fe16-40e7-98c4-014d1051520c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "76b1e0c5-5b14-4b95-afa1-124f2eadf58b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c84695b-91bc-45db-9ed6-982bdb6730f4",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6141ae0b-c7c0-4402-b0cc-afaa6173bf6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a28cd0f-0738-41db-9a97-f9d9e79b73ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "006b537a-bfe3-4e37-aa5c-c8578c99c173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "84c940c5-d77e-4523-9fc4-8165e670b3b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f7882d-2091-4637-9cfd-73177fddf804",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d53ae0e-e6c4-40f6-9bdf-ff6eb0feeb47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c15e6d84-baa6-4d28-ab12-3285e02c426f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2574f89d-4bb0-46fd-9d44-d73a553ba7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f1a2a4e-3c9f-4491-9385-ca226efb1741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d13df3c-1978-413e-ac64-93ff3231b4c4",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2fdbec-2433-41ba-b835-af5f064d52c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c56646b-1719-4d62-8bef-f8cbb275414e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a966c6c-41b3-47a2-8cf5-32c6a6e6e598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce29c391-c9e8-49ea-88c2-8e9d43869b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085ec7cd-5795-414b-a588-a1b3a36c20af",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc3e6fc-29b1-4dd4-8909-f251e199de07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc9650a5-dcd1-488e-a409-94cb9d94e6fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52fa38b4-345d-4066-998d-f69a6842b1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f379bd1e-d39a-4168-ab43-c28f1743de60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa1e431-d062-44f0-9c8e-3ea5a6c97f0f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "212a5e9d-b56f-4f03-b620-6b2fc8a787c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf23520a-0798-4fbc-a295-088cc58d828e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be72c0f-3e62-48e5-8b2a-ccdb816b4b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6013d4f-7d27-46a0-9c65-9edaa437d62d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d265871c-7617-49b3-be5b-de3688d2f4d9",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d0e6ca7-4ee7-48f6-816e-0a303fce2355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4692a689-6a4f-4480-8f24-3cb607e1178c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c060461-6793-4e8a-aee9-47ce5a2c6d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "56e71bc1-e99a-4bbf-8e99-f8a925b1c139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b2f236-9f57-4196-b780-57f47944febc",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af8342b-a3a1-4cc4-a837-e608c8ec6667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bead199-7573-4232-ae28-0df2370183aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b529c1-8700-4d5b-b509-88c74a8823a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "14b98e3c-a64d-4e2f-8186-bdec11e922ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "178df5b8-e4f3-4b6d-bad0-c6e2dfe0f51a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f8ce934-dcb3-42a1-8501-f492c7241187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0b51d706-853a-437f-a62f-b7673663d870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a07ded3-83b8-4e6e-ba60-3556fbe1c2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c073cd03-2876-4105-9486-d98891f4af39"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "939f545b-362d-403b-932a-26e2a4aad5fa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c3855d9c-8705-49fb-9a00-0da3d9beda86",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7824a81-eb5c-4fa3-8d08-32db75e0cc8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "12825436-e542-4fc4-ac83-031e93837fc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b915ed-6c0d-4017-9b47-b468b98badb6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3b54094-19df-4168-8749-02b8e94c7da2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff5b9cf5-4f66-47f7-9a1b-fe2157775599",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54a1d3cd-06af-438a-9885-3a8d6eed09aa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "21a47db3-9d5e-4d26-aab2-f28e1a5e6b09",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c35d8d9-ed0e-43b5-aee4-258d5d4ccb9b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e1fe69e9-c2e4-4359-a104-096b7f53e4fa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "98d877bc-eb87-48b2-a780-0e1e504a806c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6408fb10-3771-4955-bd66-00d30191e522",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "164ad503-0818-461a-87d7-b3533b4a01e9"
                }
              }
            ]
          },
          {
            "id": "a292e59a-1096-4773-b70a-b305d6feb45c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a7beb84e-9129-4a07-b0ce-ca5ac1bce158",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f94ff560-ab46-470b-a5fe-7d9f06ab1d24",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "48315ff2-c822-4958-8fbf-56bec65a3fcc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75334b36-41e0-4547-a96a-89d9470ea3a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5462e447-8bd3-4058-90bc-1b79deb69e66"
                    }
                  }
                ]
              },
              {
                "id": "0024a02c-3f02-4b3e-a554-12e98c41533d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5d1d7e7-520f-4b59-9900-2e45ae63f97e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "980af59d-184d-428a-863b-c5726f708efa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5476e1d5-2cf8-4ddd-ab64-97c35f183137",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fb579e95-9409-4688-ae76-dbdbb777f134"
                    }
                  }
                ]
              },
              {
                "id": "30b929d3-04ad-4456-b165-44d74e0484d9",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a290a183-3265-468d-8848-86b451a786e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2572a0cd-afe5-4ecc-90c4-95b798addc7e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b635b874-d8a8-4a4c-be98-047fd4c8cfcd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "12377171-0b77-482e-be36-8c31ae690805"
                    }
                  }
                ]
              },
              {
                "id": "d5be34be-ccdc-4f5c-9fed-6b74d6f432af",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9039734-1fe6-48aa-bff1-8b7447776a1f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "41c407f2-0a4e-46fd-bfd2-8fcec39bbb8c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58c113af-9662-4e5f-b54b-616fb5639ade",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "85d64b2c-d3c7-440f-a33e-9dbf40b9246b"
                    }
                  }
                ]
              },
              {
                "id": "37703adc-b6c1-4214-89b1-2a0abe50b391",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd99ce54-0b3a-4e61-9084-ab267718f1ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "47ad962f-1949-4a6f-bc50-c318ffab4929"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "876ed5f9-7d05-4fa8-bc21-84731ccc226b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "59a8e169-1e5b-4fd5-afe6-ea4be0cde5fe"
                    }
                  }
                ]
              },
              {
                "id": "34ad0314-664c-4734-a0e4-27e398b04d43",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "74d75860-f8f2-46ad-9f66-33a6aabdc8a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b067f4f2-fa89-49dd-90af-0a89af85bf2e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "adbb6fa8-2587-4a00-b6a0-a0ae9690ec15",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d5de85ec-33f9-4e6f-8f95-96bcb80e9fc5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "012bc024-7925-4a55-abec-5dda06c16db1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "84772ad8-fbb9-4595-b57c-4961e45baeb7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e4064d4f-a1d4-47dc-851d-c8d5a5fda506",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bc8957eb-4726-4860-95f3-283a90ed0697"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "99f714a3-fbce-4c27-8a5e-73b2e433ea55",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "2e3ccd5f-c002-4f3f-9eea-c43b926c2b43"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0f32b390-efd9-4d3c-9e0a-5c13679b90d3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f82b75ad-fabc-4c0a-a346-7f59170761d8"
            }
          }
        ]
      },
      {
        "id": "b519eb7f-c51b-42bd-ace5-6dee99337a43",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "030e5d15-3772-409e-a9eb-53daa54bf4c9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3f15b5f5-968c-49ba-953c-700ce7c10f40",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "06802152-0b5c-4660-9c9a-303793e57fb8",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6407e39-3162-49ae-87fc-789116d797ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bba73cb-04e5-47a3-a7d7-2eef0b4fc518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00f6876-99ae-40a1-b9da-a1e3e7937996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "64577ffd-dec4-4b80-b269-f94dcb068c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99474631-3e22-4411-9f95-730e2ec0198f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e3caa28-9184-4d82-b804-62e8a5960973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "711c9295-a68d-49f3-a0c2-ecd55c3427d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9eb5638-f1c7-4f89-82ab-aa7f75393b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c91864c2-de79-4654-81ce-2ed85651f7f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89ec89f-531c-442f-a089-f63853d41fda",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b105a7-cceb-4ea3-93ba-0dad06baf75b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41ecdfd6-0668-4fd4-9c2e-2cde1984feb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e616bdfd-faad-47f4-a8f0-49ca3f92467f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "95ad5b3d-19d0-499f-9250-8cbfce8fd643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba58696-738c-44d3-b099-8c62daf16d3f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec31dea6-7051-4ca5-ab83-e70aafe87005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08115067-7a98-4bbd-a28f-a92c9d2b9a0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44ce3b5-370a-4791-9eee-31b550c43f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b02ff839-7824-4013-9752-1095877cdbe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be3029b-ee61-4710-9ebb-00bbe926b152",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a41859b9-30c6-42d2-8613-66a0a1192664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "342b9785-baa1-4ce0-94c1-260b5e87e9b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd67df7e-2002-4f45-908c-973a1a59ae82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5303d327-f503-4674-9bc9-0e1999568aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d4d45f-1e27-439b-b26a-bc1be2752b04",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d605ac-aa2e-4f3d-a98f-a537a796ccea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e8b4058-3f19-4dd7-b03e-cf705d60bfa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ccda62-dbab-4d6f-97e9-999940644c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ac044e0-1341-491f-9c93-1596b297cafa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99b7f1e-f033-467b-9de6-8b24f1c46313",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1814ca2-17ac-4200-b75e-9b20f4025f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "684f3738-f2c8-47e8-bac3-6b48bf352918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feba23c2-a659-42b5-8367-9e3d1dad28ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8b29412-f59d-49c2-b04d-345966741a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e925f74-e3c7-427f-862b-bbe27eee316f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "390d9163-bb78-435a-923c-61d9c3957f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb252da1-bcf3-4233-92eb-94451559badf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f0007a0-5998-45d3-99da-72da87aac8dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "21c98209-e858-4554-ab63-da6b74945f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c09de27-e657-4f1c-9db0-945d32fbe067",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "028439fa-e396-447b-a8a1-44baa6f6f605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0046dbed-24a1-477f-bd63-2943241e134a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d459ee-ac3f-46d9-b84e-0332b6315ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f39a2397-fd72-434b-b5ec-3200f7c80cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "062adea6-191c-45e2-a5ff-f4068245e82f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7285ad-f9da-42ac-aaca-30c8d1530512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56ae4720-f4b5-42ed-af7c-38b645085b47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174e55f4-efa4-44bc-93a5-249e9bc0a676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "98e86d64-cc86-4ae9-9ad1-65649a139cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c25825-770e-4489-810f-ff039e0b4df3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7bd2e4b-43ab-4529-84a1-7c7bfd80a12f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0601b1e2-5ed2-489c-a2ba-351ba77d44eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58814e86-9945-4734-97d5-8be807e64e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6ccd3f56-05dd-4eaf-beb0-6ee472b906b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74504b55-e0ea-4447-b97d-169bd3e633ca",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed1d764-f96c-4f91-bcb9-a38727fc448e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b879205-eda1-4f01-b932-4ce516c52ead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8874be62-e9db-492a-b19f-0c3117135d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f46bf9e5-a309-40e3-810f-a44dacb1246a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c412b4-39ff-47a3-ba88-8ad7cc0848ce",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01bbdc5e-1297-41de-9011-02776f7efdff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "119bf3bf-9657-44f5-b931-231febadfe5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb54bf1-8d86-4ebe-aadc-02d7d9e0192c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8382b2c-f700-4eb3-8258-7ea897ccf34b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b76700-ecfc-4e8d-9a73-836237f47668",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62555d02-c2e1-405b-8906-49037c2192fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "406ffad5-fca0-4884-9414-eb5718180665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca8d36e-ac64-4a51-aa66-8e05a786297e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6eb18b3f-2563-4f74-b22c-af1b303949a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd04b23-2714-4165-8039-39c7719a0563",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ea1b4f-85b5-4985-b94e-e4fc5af1b67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "535a2d6c-8fca-4219-a890-9296123d749a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa6afe1-b5ab-449c-980f-d2c440df8e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2292910-66f4-4db7-a8f0-ba376086c58c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c93a51fe-56c8-4fd7-839c-82d2176a85c2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1eafafd-83b6-4161-a1c7-a3d7017fdf22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4746c91e-cdae-4bc8-8008-2a262380d2bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0284005-740b-4d66-896f-8bc11c6d396f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5bf1b8e-40a1-4de3-a321-a9151214cd96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae3949a-c0d0-41a4-9684-a4ef6f8e9d0e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "964e5ea1-290a-4800-b3d5-328c9132e579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a29addac-f02e-41ce-a566-08b784323b79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d122091-d169-4031-b985-b686a4a66f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "db05e3da-41a2-4734-abd1-16f287611f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45750f8d-651f-4a77-8180-983c7383da53",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad528a1-13ad-48e1-bc75-470d0ec9501e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eb4e11f-4416-4104-892b-0a81de31595a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7090d98-2848-4b8d-90a9-3b76fd0c7964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "106cb791-dc73-4252-8e45-9c071656e05e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ce9f92-fb3a-4920-8f2c-445b40f61909",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea5ac53-6d28-40d1-8339-1155aaf33a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d655ff-c84f-40fc-b252-0ae40d7b8c66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b4cc6c-c5db-4c08-8895-61c87497bb7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70876903-9c1c-4967-a573-02f874ac8960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381a4407-8ab8-483d-9a8d-9143d73dbb16",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c86a85-6041-46f2-934d-615cbf89eccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9649f5ed-3fd1-413f-a2fd-1ca5ee7b2ced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d6b843a-d339-4998-acb7-0b7d4b3007bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5333e21-5b13-461a-931a-fbb1b6ca2e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f0c5981-c755-466d-8e6d-26fcfbcd4d15",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a23e6ca5-c927-403c-bc63-07fa17011ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67f889dd-1b32-4f25-97e1-ff9a2aed0e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11d1ac8c-bbae-4059-8e4d-b12726ef1b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f657cc42-4842-4c92-a728-abe4d47eca06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b7cad8-c126-4a1e-a7aa-27803c8a7db0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3624281-f64e-438d-bca0-a33b7a2ddff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99aa8c99-6c37-451d-b469-816c5724d476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "915f0278-7e42-460c-ae20-7f69f1136ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "808f5fbd-5f8e-4d41-95a9-e91d78226eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "287928d1-6996-45ea-b0a1-02b0ba702b8b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "012c28c4-897e-4360-9f68-6ae655db6d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dea4b63e-983f-4b6b-bf43-5b51adb4b984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d165bad2-cafc-4d30-9f0c-2d124262784c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f519357e-8886-4457-83c1-9392adf35ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70287d37-b93d-4cea-87c3-dbe4b06586ed",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "529866ea-f4ec-45e1-842e-b109728c65f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee9821a3-3cfd-4b18-9c4b-2f03a4d53a93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5809d68-ecde-4373-a80f-8cf791621c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ac6f4a1-e620-43dc-8d33-2ed144c700f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16acfc9e-a826-46a7-8523-c3acf030109d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "658e7367-196b-405a-a841-1294c5b1a6a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4940dc9-fdc7-4a22-80cf-0e20dbe6492c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6854172-2f78-4e8f-a8f6-567bb8bf270e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb96b1b8-fcb5-413b-a8a5-61aeddd68d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c7fdd7-6690-42f6-8794-7d752cecc576",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "281bbac9-c9d2-4959-8013-cf34979e5c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e912df58-09c4-427d-b1e1-ac069d75bf97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347e00ba-aacc-4a9c-ac6f-1dc966ba17b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42dc51bc-8dff-4d53-98a8-18c673b066b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56993e1e-f227-4ae0-8278-a11b5c078ade",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee625f9-fc14-4d97-b760-867501d5079c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7d3b39d-e046-4e28-aab3-459f84217dd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849cda32-cb36-4c6e-a1d9-ed0dd7bd2ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a01bfbb-f721-40e0-b7cc-a48b6be270e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf8149a-b019-4d11-8dfc-ddecd145ed01",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec710ab-9b00-44ec-8aa6-4f530f7d14ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62f063a5-f742-40a4-81ec-45bc8d49316b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb77aa9-a8fa-4f19-ba56-ea060d52d0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9aedbcd2-e947-4942-bccb-b5337cd563e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c124b824-cf27-4b16-8a0a-81540558f52a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "208d51bf-4277-4c59-bda1-45a743ad5c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a5bce58-3751-40af-82c8-c64a43770940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "214f49ca-590c-4bf9-840c-1621e86bc3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a741e608-89c5-4952-b1ac-b4ec31278241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "691a8037-69ce-4d36-bb4b-90ef4a7eb04b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e304813-41f4-4653-9743-465b1c7d2feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e481bb59-57c6-4d69-aa10-b78ab0fd4b67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63720dfa-be01-4b1b-ac01-282bfaa64d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3683aaa7-7c33-4b66-bf4d-52da0a58c490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d5212cc-7e8c-4268-80d9-d13f85dc8881",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f4e4af3-bdb1-4f28-a7b6-57015e8d334c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66b988af-7cb4-49e8-837c-fb006d804e1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12062513-1373-4b66-8aeb-611a1dd34154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc218e9a-b3fe-459d-acb2-fbdd21a2219b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2475fded-480b-4d84-9b3a-f3e207fbe15c",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71fe9978-fa84-41f7-b71b-0585a6fd1232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "408b5e19-df27-4b5b-bb9c-c06d41b5433c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "574779f1-c75f-4d92-bdad-a06ebb9f8748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fe0bc57-3e66-4b7d-b7b2-65145d5fd64b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "15069e87-c562-4a17-832b-bc686a6df757",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0129a3f8-ff25-4ca9-8268-63ba64ca3252",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33645606-39ef-4b9c-b26b-0351112bc226",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d048d86f-ca9a-479d-80af-8e1eed3308a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c809b4fa-308a-4ef5-bcf0-55789e2838d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de487f74-b8d9-406c-9ceb-21af93dde42a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b89b3f6d-d352-4eae-8299-4acdad21cf2a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65e300e9-0a5f-4f59-bd18-1d3caa8d1dd9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a3121f7-021a-4543-8352-bba4bd7c59e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77f45b6b-c09a-426b-b749-27426be14b34"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "54d40079-bdee-48a6-b90b-105d12edacdf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3b9f3aa4-81b2-46d8-86e7-089c95f585aa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "55f983cb-6159-44e5-9fbf-be631191efa6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "58f84525-2c3c-40f2-9d04-b4f1c75bff4f"
            }
          }
        ]
      },
      {
        "id": "fdebb637-468c-42fd-a458-1894474a79ae",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "e79fa5a2-644c-4d01-bee8-100aefbdb32d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "66cea271-8017-48cc-a6b1-6d49aeed2e6e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e2d28e3b-58f4-402c-b8a0-aad20d85d0c5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d34625-6831-4161-8b6d-30cc8dcb3220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc3dc74f-0b9f-450e-be62-3075fea16476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac56229-53ca-447c-a94a-ecc1ae39ee37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "133ee430-6e4d-4a3c-a353-a5c9f3e9ae21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866116eb-9041-4807-a71f-dfa4a173d3d5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "616688a2-64bc-46ae-b8ae-25b357d24a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80978ab3-09b7-416e-a6f5-e6dd45c39ed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61bc1112-be39-4098-9766-aefe07a5885b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "264f8122-7fac-45b5-a7c1-316dee591000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cba3a79-14ff-4b35-805d-c2f558eb2c10",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1117451e-646e-409a-8fab-77ff23f48cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08a8f9b2-18a8-40c2-a2bc-52c0b0c5fa08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db2c5c31-0067-42a6-a286-a0ea7adb53ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ba258e1-7c16-480f-8ad4-6eac089da799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7063337d-fc29-4d0e-a22c-8d9982bb5578",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b519cef-1888-4ee9-9536-433fd5414563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76a5bdbb-0bfd-40e9-b155-ba877485e107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90189b30-a5bc-4ee7-9b76-7f81e07364f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8050737f-8f38-46b9-9f97-1184622d0587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb60e04-0578-443b-bf09-677402202fbd",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23fbfe6a-1099-459e-918f-ce8b9bbe35c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43d8f2b3-44e9-4f6d-af75-97a3f626967c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f31e0b-c7d1-40aa-bad7-ce9dd9dbd769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "637addf9-e4fd-436d-ac36-c502581cd49f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b4b423-23f9-43f3-82d9-1d17005b08d1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00415d97-375b-4bfb-b821-ee61c1a24ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba8120d0-f8c7-4cce-8268-8d303b27dd05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae747c1d-e99d-4ec0-b24a-ff672d24650f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "91c6e350-e9ba-4c16-a553-16ecc4f9bf47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d037bc-7d01-4141-bb29-616923fd0559",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcae91a3-6c74-49d5-91a4-7b96c31cf18f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4995c87d-8783-414b-8075-005a66312fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e98c5e5-7bf4-446d-b93d-d008c00c48f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5464a9bd-2bda-4b17-bef8-9d50edab8d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b160ab0d-451d-422a-81ed-b603d190e6ab",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "280da599-0cf3-4cbb-8c65-e5c2a0c6230c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deb16a33-b146-4559-88c7-c3c7f65131d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2adf6f44-8b47-4603-ae19-248e2c400c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "084ca1ae-63c5-45a4-bb16-425d00d0a758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c1ee01-6af1-4f5c-9d04-f099efa3a9ef",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae228057-3361-4370-ade8-5a9cc5cf4bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3fd0cf4-f9d7-4c6b-89ef-60b18291cfc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd0465f-3c56-40f3-b4eb-1e0c9d16960a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "92ec36bb-6e22-4650-85ca-bcd3736e666e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea340900-f20d-437e-8f36-bf3dde1aa97a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d2a15a-f593-43ea-88f1-e2eac7ef35eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "643e5c11-36aa-4bc2-8f3b-32cdc0e1a827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0772a751-f889-4912-a1c6-13a065c7051e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bdd2673-4624-44ed-affc-76eabe15d304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2714b652-67c2-4d24-aeca-d0c5ce1ae7e1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a45708-5978-4f8e-9a10-d276f838cd07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c0cf306-1631-4a26-a104-d2e43411c86e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37dfdcb-7c08-41f4-a2ca-6801012e9f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ffc4c736-de7b-42cc-8168-07ed021cb95e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4428b6e9-f04f-4813-86b2-6f8db0bae20d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ab0bd6-f5cc-4ef9-9a24-0bde15f0c492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d896c85-43f2-44d3-a1ce-ad1c2b9b66e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d75143-4554-493d-a3fe-98191520f68c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "22e34620-1667-48eb-9a16-d96d31912f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4afd6ec8-6232-4c15-b8df-7b31867e5516",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "598d6db0-7cf9-49cb-823d-03a1448695d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a5eb017-28d5-48c6-bff3-8e4bc6686494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bf573cc-9444-4ee5-920f-450dd703c86a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "256e68ad-5068-467b-afcf-403e43732961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99cd4293-2267-42a0-81ec-a89eff04ce98",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f71ff63-c62a-43a8-8ad0-970c2a4b604d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3834058-a791-443c-809a-292941b1a009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "665de72a-e34d-4650-8c04-c483b580b272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "82dd9190-b8da-47b3-9057-f805d27981a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6986b07e-1006-4069-8e17-e82221fcbd87",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8dec44-3a4d-4e3f-b8d6-3006bdcd8c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c06173e-bc0b-4005-9112-29abb5d5aa10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acefeab9-5642-4bcd-8135-9bac9c7832f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "041cf48e-7209-494c-8727-5999c4f3e650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ea32a2-4cc2-4255-ac46-0170056d9a08",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "914ea733-3485-4b29-bd2e-161095772a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58af84f8-c5b8-43b8-8aca-7e7aa371adeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1d0a1f8-1d74-4c1a-a92a-5537a93aea28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7254324-95a9-413c-9201-d76925a63a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f0c65a-c2d2-47b6-b03a-04a60a32d2d7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61067d1-b8c3-45b2-a87e-30bb0ee150ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbb03e60-1e54-4560-b7d9-11cd967f971c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0011d09e-9026-4516-a902-b93d40b15d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8829b8e7-b9b9-465d-b7b9-10882c0235c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd5d0df-07e9-46c0-8837-b1a478974bdc",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52970311-dfcd-48c3-a441-3d3cc622a3ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38706d98-e4bf-41a8-9999-39b4c45f7329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f65ae4-aa24-4078-b868-dedc69c64e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "10799e4f-f834-4984-97e9-f12da0bb7d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87503eca-e644-4795-8951-88546730a03a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6639c096-c160-4253-8e31-3fa4eebd3999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33116be4-a4f6-495d-a99a-0424825c5a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8060d938-6ee1-46f3-bdbb-97e78ffc8fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5c4d4d0-a503-48be-8c55-156ff90c382f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf9cc14-abd2-42f2-adb0-af5a12f0b8cb",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "684c6366-a321-4a19-9446-5d8f5a35dc1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28438416-efcb-44ed-b2ae-87b09c19f704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff16606-85e6-40c8-ac9e-696b948db686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c10d9b1d-307f-4c8f-abc8-0573bc4beb19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053ded0f-4678-4041-ab19-ec90de3ec13d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "359b9039-661b-49e9-b639-fd44f8b8eb00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fa16336-8b45-4741-8a4a-96ee99b648ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8960018d-1410-47c1-ac60-f9f3936a70fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "992807da-6791-4922-ae80-714086d04682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98b5c5a-c4ee-4e13-822f-18e459160bbc",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d264b1-c13a-451a-a65a-590c63a00b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d538366-f954-4883-8744-e707e885c044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40fe9e77-1c8c-4891-8a7a-2d77895ab601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1b906aa-66f7-4a30-bfff-6ef6504cd235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2235d263-7c29-4b02-8321-62be8e0d8067",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30405ac-a4b2-4a63-9c8e-7a08a5667a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b5ef0e-528e-4579-aa94-f1d5e9533c64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae4e98e-9587-4a39-ad5f-d94c5189c679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2288e152-d14c-4aa5-9dae-98813d373c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b9b6cc9-3c46-4673-94af-f0be289a4b78",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8278f8a-d143-459e-9c63-ed80c64d3f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b64d816d-818d-4bdf-bb99-03172d51d2ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf0e4a52-6c1b-499c-8a42-9013d124620f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c15134e-3c63-4bc0-b9bf-a31a6a2eef09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10400bdf-e3be-40f0-97ef-f9e9f0f87673",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76036c29-667f-4d4b-ab50-09959e321d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e02026bd-caa9-4474-a0be-222fbc0457a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "165110bc-c9cb-4b84-99b5-63c5f050580b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ddb767b-dd43-4f91-bb0c-b64850670e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06dee530-4dfe-4429-ae56-9b7fe6366f11",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb8d00e-c33c-40ec-a15f-6c8fd263dc84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "515380b9-4127-4638-961f-6d7c78b7c16f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc07e011-a9a2-4edf-85f2-23544a8f2fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0fcf349-3764-4e88-9c59-e643db0df392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48489c0-daa6-40d3-9a6a-8b6d4daae8c1",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae673fe-a5da-42d2-a1e2-f184509596b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3e49f0c-c9bf-4339-8d99-a4dfc5b39b14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c266bea4-3edd-4a44-85b5-3586fbb18f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f62d848-75a2-48ee-9447-9b9ea00ae1ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de85d8c2-e5e4-48de-aa03-539e3bde1993",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa1836e-432d-4be4-bf83-1698933a8219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46e25645-7366-446d-a45c-a574768e60ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af7006b4-5a89-4cdd-b0a5-e4af139acf2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "049fe6dc-710d-4f6c-8ee1-40e999012f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "323660ce-f6f5-4503-b23e-c7e3dd14aabf",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34fe125f-9c50-4f02-961b-2fde00e9bff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9dfcde0-7e2f-4b87-ac2c-176451fe232a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "affc1bd3-1017-4782-b5fb-88e833f14213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2828ee1a-5fd7-4bed-b949-cd5f411e3c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fccb813b-3ca6-4bfe-ab09-a17a67ed622e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e17cdce-d4ed-49a6-8e20-cb43ba5ecd8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e364d47c-1127-472a-a6e4-b8c0216117d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8069f54-6597-4982-9c81-48c672a94c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7deb1281-6f9c-480e-bb06-198e409e0a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d032fb07-18e7-47a8-b8ca-0d663a09f75f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc3d043-0555-47ad-98a0-d3a21cb9ae51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f421fed-a879-44ab-ab4f-693127cf52f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e712f306-7f0b-4f5d-9d63-85f0b19a017c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c6155ba-b366-4fac-aab4-4a69bf5e9a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6c36a9-9f5e-422f-a85a-4cf4816da245",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d4bd7c-b4ad-4eaf-9ddd-edacffb1f5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67b3ae16-64d7-4134-9ef4-8405b15efc5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a27c9d6-b574-4a21-9d4c-517dbc50489e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b075517-0a3d-4381-8e9a-c71ff81c1fb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d45af91-0f61-4d30-b787-68e117f4ace8",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5387665-0756-4e1c-8435-792f148de518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e7cc19f-7201-453a-a515-c579f5f3434b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53202b0b-42c0-4730-8c33-573ed0dffcdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a42c7a9-86a2-451b-beb6-b73d86c143cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce47268-019f-4943-8659-c87174765c7d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "418d0daf-1380-4bf0-8053-c7971b139c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0e07e4e-7625-4f1c-bd98-d6d3206596e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3809fe0e-5da5-4910-8e19-6cbcedcfed31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7057335-70d9-4a7d-a97d-abb2c75e1b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84bbfe2c-7e83-42ea-bb82-5cca77046bbf",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9685c1c1-1d91-4605-8980-0343767278fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9443cba1-e15f-426d-89bd-22255fe900d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a7965f-11ff-4453-b3b9-b043f58c482c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cde9912-7cf2-4ff6-bef5-a779109c0bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc58e24b-bf2c-4cd9-b7dc-5d9ea195fb25",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e35ffa-8f8a-4651-944d-6a7697b46e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8a2c6e6-a3b2-4129-b1f8-9898c65d5671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef40b61e-c95e-41c7-97db-b6c04e08b87e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db645834-7d43-45f3-b236-255c2a15f896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f98e73e8-7ddc-4039-863b-1318f35ff695",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f29f36-10de-49f5-8945-81ae7f7611dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d23fd2e2-726e-4b65-8768-143e7280d919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c7a0cdc-c40f-4293-bed5-963c22ff98e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1e311bb-e374-4f87-a880-c628bcce433c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "712f1dcf-566a-40ba-aac4-03c9de0fad8d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2354253e-a86a-4019-81bd-74dcc59c985a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1018ebf7-eae5-4336-99a2-6211546f7819",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "63fc5959-6788-48e0-ae2b-7653a4ae9c56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c003f59-a3b2-412a-8c70-e3f3003f07a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ae8fa29c-de6f-4474-8421-d2290d6ba557"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e35dd5c-c646-49c0-86c5-6001155e21fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c561db8b-6cf2-4d93-91ed-a3579b478fe3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe8d2c82-a03f-497a-aaef-3dab040ec26d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d85529f2-46f6-49aa-bb55-5399513a23c9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a2ce564-f876-4727-a102-da345ea48a26",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6c5dbd58-8d74-4459-8818-09f03a838565"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8c3c96da-61f2-42b4-8df4-09c35b99b11e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a4ef285c-ab07-4d0a-bda2-e587cdccb1b1"
            }
          }
        ]
      },
      {
        "id": "3eb6c0e6-d0c8-4493-8e72-ca32dac428b0",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8dddb243-23b3-4a40-8e9f-17efad8ba279",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fa95581d-1f09-4baf-bfe7-2d6cc5a70acb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1dc58ec4-d3b2-4df3-804b-3cbdb5ad662b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d78dbe-4c9c-4cbd-a380-ed6ee88b8057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6800eaf1-9f8b-497a-9929-c706bc92399f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de1fdad3-0821-4e55-aa66-a3a4c4fa2081",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55bae48-dfd6-4768-bae1-b7e04b717784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be2becfe-e96c-4a39-b9e8-9b4a15c506a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ab449d-5f9f-4ffb-928f-0dbeb9221c4a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea99b2e-2601-43b0-95ff-0f1e2b7ba360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f3661b0-c752-4345-9404-ff475a0d3ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0145bece-57f8-4581-b054-a1ce5bb453fe",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd29e6db-f23a-4660-b730-4d73ef054618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71986ab0-0025-4900-846d-21ee0e4e65f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9669d431-69a1-4ee4-b673-b5df71b8862e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb59fe04-4708-4760-bc96-aeb9de645fcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed58b6bb-aa09-4810-b9f1-3de47ecac8bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e3be7c-eb66-4f89-9ea9-3ac68c40dd29",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce0d2c93-1035-4c21-91b2-f74dbf09168d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4712863-5a31-4f97-9734-dc7cdf07f663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "837c4a5b-de34-46ee-84df-cb1fa3d34d26",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cfe0e5d-d148-481a-ab4b-c5bb18558254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6656b75-77c5-49f6-962f-98b8f0d4b2a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31fedd00-1f30-43aa-8fd5-d2bbec0ffaed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8b0f5ce-0033-43e7-b76e-09f0541dff50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d88ec8-a032-4d1e-acd0-653e513c570a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93118e79-0b60-4871-9726-419d83954b24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cc6f9e2-dfad-4fac-a326-95dbd8960902"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "334fa343-a18e-471a-8698-b3fce1e3c3c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a9d9837-f471-4c65-a751-04788cdf5a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b7be49-4f62-4f0f-9c5b-92c2c6f469a6",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8459862-31fb-4ac0-9a75-9132a5c53551",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "752e705a-b857-4670-8528-a3921d4198fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a07598fb-bcbf-405c-888e-8f29404352f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98d14dce-0299-45be-9320-54de6cf6369a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db34001-e7d8-4d74-93c4-948a79db4db2",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea9ce120-b9ef-4cfc-9370-556643603d3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35dd6c21-923d-4bec-8b19-0b489bfb589b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "431289cc-148f-4924-aea9-46017432ec8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9c96471-add5-40d2-a58a-520cdb684487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da06796d-1429-4434-b75c-62d113f095cc",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c986f640-9590-4c21-8c35-30286addfe70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1679081-f6a5-4e3d-839d-6d058f1fcf69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7df5f35-88bf-431f-b72a-f178b867523f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef02f00d-a513-47c7-9ed9-4b278f160103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba30838b-c15e-4090-9138-654587cecf77",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "debcc13c-5196-4595-963e-905986da2ea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c01bc891-b796-4d57-89b7-e862f7da207c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da5d6b17-08ad-4c34-b4b5-ebe642336d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16f6f442-7e00-4a4b-9f7f-b6a849ff875e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eee6527-a416-43f9-90bb-ecc5f7b2f8c8",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c94dc980-f789-4e4f-882c-49dce922232e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82c9ba33-16ad-4cde-b622-fe26562bea6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8caae7d4-10ab-49ae-b79e-cc647bc79404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb70b56d-79b3-473d-a95b-bbd555193793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "565c2fc5-39c9-4f6f-abc4-1a9747cbe593",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3892f9e8-2052-4c0f-ab05-c074f71d0528",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9eaf4bf7-5e7c-415a-a303-ed11049b6540"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11b963a-6606-4c5d-8795-e7e3c22ea7ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b1c7e6d-6613-4c9c-8f8e-a6525a9fda8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94cfbb9f-50b5-4ff3-94d4-f63748781dc5",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9badea-1830-4d4f-ac17-01127dc496b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cf60136-d659-4158-9c9b-8a7042ab3dee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8314a4b9-cbd5-4f67-8a42-f12dc109530a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67186e54-3617-4c6e-b5df-d581b1656cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65910e24-af85-4e80-bdf9-c522d78ec11a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d88804-8486-40a1-87d4-2401386a1230",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b0509ab-b1f1-475e-bc74-c52b8524c334"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8388b586-ba61-41af-b0d4-053d334bdfad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daf01a4b-03d3-4ee4-a884-a24aafa911ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3593ef6-d54b-492c-a373-5bf521db4a34",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1866cc4-d455-4c20-b20b-9edbd9d36fd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "017a0639-606f-404f-92cd-04198b6fb456"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "facb6e47-f104-4df9-b072-21e2ea6022b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84e5aa23-014c-44dc-8607-aed6cae49036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adecf3b1-81d8-486c-8083-f52903bddabd",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60939ab0-809a-4d64-b539-8198c64eae83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "971bff7e-0ee8-4fc7-9c98-84232f8bc212"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd74abb-bb91-44c1-9091-6228e4cc2215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59d2fbba-4864-4790-b366-bb8a65b419dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e91e2d26-e679-4775-9a15-f5830dcd0de9",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f222c3-dff4-48e4-8338-6c5c099016ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d8fce4-c653-4cfa-9466-35271ba0f8bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d639d10f-09de-4fca-a833-58f0b0f15b59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7c837cf-f500-44cb-84d4-23fe1ff73e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b78747b-6152-4096-88ed-930bbf5f622e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea9ad45-a9a8-48b7-8d1d-213bb089c16b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92413693-4af2-40e5-b6d8-4bdcab269233"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f6f9c9-4c4e-4ed0-b2da-0bd7cf0704f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5ce9a05-3d00-4229-9dd2-8bf9d9211254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d99ba7-75da-4d5e-9eaa-28b914042193",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179a3a0f-fa38-4d42-909c-c55ff0751219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "646b6da6-deb4-4e28-9ad7-55a6f41632de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e07b3c5f-b265-4feb-8770-6bc6f57424cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b5537e0-27c5-4101-8847-820c3d8eb376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47cb1589-fdf1-48d5-888f-c810e2ce7a40",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a20e67a4-a10e-49b0-a1e9-16cf9dfe4ce8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bebbd66-2191-42d0-9a9f-3b07845af8ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e11d80-51e8-41fd-8661-e1e9f97c25e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bc69e53-c0fe-41ab-9680-1f713a8c0103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45174c62-4f83-4edc-8d52-336df41e0844",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b426dd26-1b5e-46c9-b63d-93271e311489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27a6e1e8-d8d7-485a-9109-59bff84bed48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eba8ca7-f2c4-43e7-aa94-a1a08ea9596e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f9eff18-9353-4e87-9174-c7981382d074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d1732e-4ff9-4af1-ab3a-448199a1b1aa",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f19a28-22fc-4c83-a04d-5ec8d5088db6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7514f129-9f06-4d81-ade6-100bb417c1ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d982b2ca-7740-4d06-8606-422ba901ea37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fd6d1de-1735-4ad4-82fe-769dedd7fe7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2fcbce-f093-4a28-865c-e93e30c38667",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb85bfe-8696-475a-8e8c-3e0f8d02f255",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "222b6a57-657d-4be4-a96b-72a8d26b22de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "499c3241-7c92-48c6-82c7-b5f3fe2e0b27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55f2bbb7-3608-42e3-813a-b1c49221ced5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62b309d-2097-466d-896e-433cc766e0d4",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5bd9f98-3db0-49e6-b7c6-b01f157b6ad2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc671240-17fa-4a40-a178-90f6cf559951"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e476745-ce6a-49df-ad98-388348082073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca7b3a9b-ffba-4b8c-b8df-cf2ff907c6fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "310baa88-ac38-4a11-9544-c18e32a2baa6",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00d59ba-8082-457f-ab79-86aba2a86eea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cb3bd35-1f9e-497b-ac82-1c150d3b3b32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4da52b-92c3-4c6a-ac16-087e4ba2598b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d70a787-9e58-45fe-8070-1d6c76d45d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08209209-ac4a-401c-81ce-e2f54cbb88cc",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9948b17e-4d1f-498a-98f9-6facfb5c1186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4afb00dd-0fce-4432-a534-23e8c9908415"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa860cc0-aab8-4596-a601-8a1f5c27335f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "128234df-afe4-42f4-96ba-5b43f8ad467f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca30a10-d576-4f51-a776-55c147dc029e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f80695-f33f-4a6e-b7fc-fb7277b54169",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbebb212-cf74-4cff-a6ad-e430c5063003"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e0f41f-dfeb-411f-81fe-ba3409bdb996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e184e2ee-be61-404b-9d76-5875fd2b5fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dfe06ee-a8c2-49bc-9141-e89a84c7ea9c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfeff928-4b01-4171-8e5f-c5badf811b84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14ccde24-7115-4151-aa9c-1d30d3f37c96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d4b17b-3b0b-4019-8d4a-4e9cd8395c56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1e85c4b-6c35-4c0e-b8a4-0db7448c353f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef63e20-2af3-4750-8907-6d90e77422b4",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5adec2c3-bcdb-4aa9-a225-d84922464a77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "410a13e0-cdba-4986-a012-2201fec2896f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb3e829-7540-4266-bde9-a12e09a1e011",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad4a01c5-f1e9-406d-9208-031b5292b18a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e4a847-58df-4a98-9a9a-78909d34cd9d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00792498-e092-4f46-9e11-988d3d30f9ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba024c7c-d8fd-4a70-ac3f-08df2aa06eff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2efcfc-8f9a-4a30-828a-ddf6d6245519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f5238a8-dd0e-4b60-92fc-9cdc5403ff36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02763e1a-fa4c-47de-beaf-06a2f19d2c5e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7449f16d-dc31-4ed9-b958-c2f661606b7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b9cbb2f-d047-49de-8c00-d75496d5d4d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0438ddae-6a22-450a-a574-6a7aa275d780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6198e58d-9242-440d-9e25-4700523f236a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e89c2b5-3086-4ea4-8312-622e956290a1",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd338c9f-24ee-499d-a910-9e22409b4d4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b5cec10-ae2b-4440-9520-921dd145aa82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67fc091-8e0b-497c-a01c-4f1e14ee864a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "380b3ef6-f091-4e96-bb9c-f12926ca6f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a116f2-b7a2-495f-b0d0-0b97b0c9b049",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69cb9ffa-1aa8-40c3-9355-3e9036c2311e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa169de9-30eb-4606-a429-aff687606aa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f58273-7261-41ed-bcd5-b869e140b347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b8be2bd-bc29-46fa-bf49-c8f07c029e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed118091-a637-46bd-a8d3-31deb64ded06",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93bb8c13-700d-4340-bbd6-2c803fce4932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6642eb24-c5d5-4d43-8dab-263caafc95fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ac96ab-9ca2-47f9-baec-39c4ef8b2e10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43789fa9-34c6-4b8d-8d55-7c05e87398cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3732570-50ea-4c79-a5a3-6b8f040d4a90",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee257fce-920b-4cd4-8a8c-41f88850e465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d65ab83e-02a9-4ea5-b4bf-abe4fc529cdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3395e0f3-8541-4d3f-9ed3-640314818bbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "896c2921-9f32-4f01-bd13-17df024860e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aabc1b90-8e0f-49c8-b9e9-47fe0281adf0",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8599439d-3043-4505-8bbe-e08cdbc1d8f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3207057-8e11-4715-aadd-da9cc18bd6a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c93f12d-083b-48a4-83b6-7cb6b27fbd81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f9aa4b0-59fc-4621-af49-42707fb5f4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb7a6d9-c4b7-4f09-b382-ba20a6eaaa70",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad8bb91-911e-4516-bdc1-334cf461a413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56f7e087-c615-455d-bc58-17bccce62a58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb4cc30-5791-4651-9fb3-0491fc96e1b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a38302a5-5b50-4122-96f4-a104e08590b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e01baec-8b29-407e-8545-04a91a74dd02",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec05821c-7d84-4612-8eb1-01137241d240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dbc349f-6a80-46d6-b8fc-f3732d6d83b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8389b5-7433-4f02-b73d-1070a9d0a953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a81d678-b346-4efd-a983-6e74d03d2dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0b1659-7673-4ddc-bd4c-0986eeef6fa0",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c067024f-e177-4689-8250-3a8d16fd7a11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "890b778c-5d1d-4d72-b191-f403b9292093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17aba0ae-9df8-4338-b4d9-b9b525c90b9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d674d28-e484-4d75-b937-0b7c7ce906a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38497661-f442-4dab-8685-aa05f8aadda0",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7896a639-db92-45ed-b5b8-4d9b3a84910d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71946602-f36c-4554-8d42-7582d0c5adfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97032b5a-0d20-4a26-8f9e-58533ef2e120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18f9f0e0-b18c-4234-bf21-07bb09d2f2ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f0d162-91dd-46ec-9d08-44c1f0ef7a4b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0c4cb2-212e-4b7b-b8ed-5eecb60d66ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a70139d5-c34a-4687-b841-19daea7d5dd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c430063b-c4f6-4e37-a039-0de392d2348c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47b4cd09-f1ae-4ac5-b016-18d473d6768d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051591a9-ccce-4883-8423-2f8c4c73fb4e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "021bb519-b62b-44bc-9350-5ba782fa4730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4ddf183-4656-4c26-b66e-23cb71f1150c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4a7115-9af2-4edd-9f0b-0874a5e21806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f1fc61f-2700-4e2f-9809-7e7fdeb0aa10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1311fe55-3526-411d-9207-af156719bd80",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31102106-52f5-4b26-92ab-82f2a15cb4ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "315164e6-4b90-4849-8872-fcc95c9e4e1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ea0afa-abcc-4d0e-8260-2ba9ed22ab63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7f96eee-ef5c-4194-9e32-06cfa452124e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44fc3ca3-5826-4a27-a2d5-688377be0790",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252763af-c93a-46ac-956c-fd94b41c9991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1572ca68-f30e-4b05-8793-c586f09c76a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49631a59-3450-4650-9cb4-91d6c8c49511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a8f9aa1-69c7-4a72-beb8-5699bab898e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a620a28-436e-4aa3-a209-4d0a268db174",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11bdb4c3-4f53-493c-a4aa-36ae587084dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1be6fbe0-8f6a-4ac9-844a-a631f9e81870"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9feb0540-8c4c-490f-8327-6078915dc06f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6b12311-20e7-4d09-9af5-b92b3ef82133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af9a4dad-ca14-4c04-b57a-e8a3e7e4bde3",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f20d038-dcf5-47c9-8157-d23ec717bec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8b2547c-89bb-4b0e-a3b3-5063ec519f76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7fdec6-c683-4ff6-a343-30adc6f360da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65a81e63-3c04-4547-b5f7-546297deeae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0802d5c8-4a6a-4acf-9c89-190ef2fc39e9",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd3ce3b-1d09-4be0-ae96-b17e2fca1f2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d74e431d-891b-4102-82c5-c093c67856c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3293c5f3-d3c0-4c04-9919-c0ccbd88b886",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f3a0e5d-06be-4f34-8290-2bbedf264b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627fc35e-1962-438b-9bca-94a4e220abdc",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80de167c-afc8-44cf-a7bf-2cd0aa94bdd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "761c0987-d404-4240-9d66-1d7d56cc0df2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b1f044-a002-4bfd-ade6-6ed574557d15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b52e3fe1-b00e-46f1-9c1f-8f6f8017030b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0127abd5-c015-4dc5-97fa-a3335606b7e3",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10049177-dfac-4c55-a068-46a3e735a436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0e9c389-28c4-4a3b-abe6-19a906c02d63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b78e24-5fb6-406d-a1d1-1f0ad39e1979",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e43ba8b6-8a8a-4784-aa37-aefd03f1e921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a62900be-e782-4f84-8e14-f836b967566d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8255cc07-f021-4c1e-ba75-18c2a0e37043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44379993-b08c-478e-b62d-b326abd54d25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a15c33-e436-4ad1-b6c1-09d33c356954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4dc2417-1ec2-4cc1-8470-19684076bec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5fd6fb-50f9-4dbe-bf11-b977e0f7da86",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b4878d-8a62-494e-b102-ea52e3191b41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a8331b9-6548-4f47-beb5-1401eb2e12a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f791c47-f771-41f9-8592-a0ebe37a5651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdc3cdcd-277b-45f1-b929-a4d173d249c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af6cfb7-b397-4161-8089-134b39de44db",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2a5977-3108-45ad-9c3e-c134120cc254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "310ca636-a168-4c64-8f58-35a28d7f1f93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1547348-1b33-46c2-ad70-8a803c8d5ba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4f21a2d-2a66-4d82-9d19-b09770dd6239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452cd790-4936-4dd2-b1b3-6cd5592ff8cc",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ead99c-5c93-4ac3-9767-7f09b72eac00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "093e0688-6a9d-434c-be4d-3246ede6ea1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d87f7ff-e089-4216-93e8-231d95c26833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "271838e6-91e7-4a93-89d0-992d5854a592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bfc14d6-adf5-4879-a944-3fc6ed5afc82",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70481e2a-b553-4159-ab68-c9a7b47d029e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19a0c21b-1d74-4dd8-bb48-5e728a7fd6ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9f7a31-08c1-4bd8-bb58-608bc99482c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ab4fbdd-37d7-479e-afed-87c0298f1d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17d3dcc-983c-4433-ac5a-3e82620cb393",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3894445-55c7-4f95-b8d1-7e048ace536c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8257a5ed-db41-425c-93ce-4c5372b26e30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e43a91-cea9-44fd-9f6d-188bac7a5f8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0052190-46e2-4fc4-bd6b-3a05cb0f93fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89bd0cfe-4e63-4049-9d08-e8c952c99a5e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4eb4b88-e4e0-421a-9c58-37e28782e81f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b2aa6f3-e31d-4f86-9039-7ffb44d4d08d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d4d9ae-65cf-4c72-9001-f84943709fc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b5c8625-1a01-4580-982c-7242fc8ebfb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1892c302-a579-4425-bfa3-f3548d2936e4",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65317d23-437b-4710-a191-60b76f2fc583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a188355-d189-4107-911d-e01b14f4d482"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49542e70-4351-417b-82cb-32869012b607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f40c357-4e3d-42bc-a0f5-e00fe031801d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bce67fe-7b5e-43f2-bb53-1a8d2de06b82",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f65f26-985f-4953-a6f5-5d63eae2fa82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40d1bf62-2ba9-4165-b841-c398ed2186c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ae6d0c-dd5a-440b-aaf1-14c4d7f4feac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a45a631c-14df-4e91-8fc1-00e1bfe2b154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55cab54-3199-4ed0-8933-8f2b16645fcf",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a8b176-8458-4fd9-b525-b78c37ecde85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f3b4a06-a171-4aeb-abdb-517498ba9cba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ceca7f-53a0-4acc-b469-802b1bdffbd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b0e2068-27cc-40ab-b471-42ca39342dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64d8d0c-0b14-4d65-8e6e-8579d305eb48",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e02891bc-df72-4c35-877d-39cedb4e725b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39e322a8-3d83-4caf-9c64-e6bb1cc45e58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b157bd2a-7254-4407-92ea-89264806350b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0384edd3-019e-4a9d-96d9-9331fa949bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d85adda-26cb-43ab-b082-c02a8b085a6d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d88c3fa-af88-4ad7-8b02-0d208a2e826e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "807d9b3a-1ce4-4db3-9e43-e5dc8c3bf824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88e64dc-6231-4cc0-80c1-11bed33af78c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "801b22a2-40fa-4a94-87b9-2a56f9e24ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d01e741-6564-4866-9a8a-c7c3f8fd7813",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f03966af-542b-4fc4-baae-236c55422d78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39fab290-fa26-45de-b094-b3524c1c1852"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a49e976a-a4de-4ae0-94a1-f1b87ae3d938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4b0a688-6421-404c-91c6-18f63f1d9105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55522ce3-afc5-4636-9960-cb1573344fd6",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39013501-918d-4668-b2f5-5cce6eaf9da8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e33fbb24-3783-48de-8533-92e0e2fda2c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c35dcb3-08b7-4c4e-93c6-babc5a24e82a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3ba08be-e082-4da2-80d4-7772ec6ab13e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021a08d6-61bf-4472-b4c0-c1da7353d798",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e209d92-324a-4893-960c-30c32309656b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29f868cb-a688-4b29-9a0d-f4978cd7ce35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "278bb12b-488a-40fd-a45f-56b8e295cc5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a438c49e-40dd-42cc-a86c-108df03196d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6ab53c-52d8-4d82-bc00-f105b1cb40ac",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60083cfc-1cc7-4f54-985d-c8f8c0787462",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b483d192-91d6-44b2-8db2-c64ed42bc49c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce175e7d-6461-4cbb-a4ac-b44f186934c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81ed09eb-edc2-421f-b3bc-11c3636ba352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b133bc-40eb-493f-a032-b0b0b05486b8",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f70b37e-4674-4132-bd5d-3ebc093f6800",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce9a9f8b-87f2-4829-8f01-b67550cb0276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e630a0e3-f882-4b73-85c5-b1ad4c1b1535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e251c2ef-4f71-4277-a049-b54f36d4d181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7735b98b-cb62-454c-829f-6d10758bdedc",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5e9399f-cec7-4229-907e-5b14d5fcd802",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ca7fadb-da6d-4556-bf4f-311d3da9fb4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e1a254-c05b-468e-97fe-1bc8c558b59f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b576c16d-d4d0-4881-8aa9-2f896c078621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69730f60-74b3-4281-a166-ce36e3962320",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38bd6d82-66b0-4f93-8b35-cebf122d4792",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4e8fdbd-4bb2-4b99-9124-be32ef4aca9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d65a88-fe9b-4a5a-9b54-c79b880ea466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "101eb3e6-d704-41d9-a3b9-8f1190883dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b72b6836-1f6b-47c4-8e3d-fd74d00e18f4",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99bffcde-a76e-4255-80a7-24718af22c85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd8044e7-fea3-474c-96dd-d4ec2783cb3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28860355-d45b-4b2e-bd47-1691997a957b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bdcdc0c-d8ab-41b5-87f1-73a9e075bd74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513e9262-d31c-45ea-8ceb-653b121322c6",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb9652a-17e6-44d5-8f50-4b2388435290",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00d9db6e-65bb-4fe9-bd68-cbb7ab842137"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb4509b-a89b-4df1-bbbe-f932392484f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98b793f8-ea8c-47d6-a1a0-fa46156d4b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c7dcda-b357-419c-8967-c955232651fb",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2840331d-c3fb-4aa8-a0e3-3e62bc6c9eef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a97e023d-fe21-4734-a425-e26832a00531"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7aadb4-a7fe-457b-8b6f-dbe7a4275926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b27abc53-1a52-44c8-8ec4-b3a4945dd3b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3b1838-6a8e-4f25-968d-4ea0bf48a024",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2636f62-5925-44d2-b22f-4671a831dc93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e90ee55-5413-4f5e-97bd-41b0685e118c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "461a4604-03c0-4631-acd2-de8058cfd74b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36490c3c-b9e5-4393-bfb5-e6d75c049f15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855450b0-6435-48fb-b20f-b78e3af0b5a7",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a3fbe8-3b7f-404e-b221-63c897a678f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68f6fd1e-e1ec-4747-92e9-3e20db132620"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e1a3b3-d6c2-450f-b53f-0869f081e63a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f0e8437-4598-41d7-9766-75fb4420132e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c243726-541c-49fe-8e7b-82f305079148",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a97b594-399b-4cde-8994-15d83b4c5869",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9d5d8e5-ad3a-44f1-81bf-5a18f39b5aa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd62bdb-5175-4116-9e8f-1bd33137599f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30cde874-5267-4b6f-b4e8-02dfa824e027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5eb0bfb-e154-4b21-8081-1db5b3313a90",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc44f9a-ea97-48b8-bb9f-e43d96dcbed4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b106b1af-a1ee-4c93-b26b-1a8e1aa9ae22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f721fa8-e13a-4b36-9c3d-c06a240c9cfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb358622-2dbb-4beb-a4e9-563c320a3252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cefb8897-7b88-4704-ade2-b371b28d5fa3",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76cf1e15-f3e8-4ba0-8c36-c247704b56c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91cfbd11-7038-4e57-8046-5d445c55781a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57604f3b-e1e0-4573-8a2a-cf2d8cf7aadf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8df0a189-b4a8-49f4-a904-6c25a502fa2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83257c4c-edd8-4bb2-a2a2-0742caccb9a1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a44359-c761-41c7-95e0-01db3a1e5f14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99114edd-41bc-452a-b637-127f2866012b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e52728ec-9ca1-41d8-9bd9-f6744eca78e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bb847fc-6aa8-4b97-95b6-b94825cb9a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "017ff5f2-8ad1-4209-bc61-9bbbcd94d650",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb8e308c-4a21-431f-86e5-0eff7493b47b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf235fc7-c18d-4b9e-8254-470c0becb4be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7808968-2681-49ff-837a-6dff73afadc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57895620-448c-4e20-a918-2fdf7bdf6cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697d9ce4-678f-43b1-a578-515b7e71619d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873baed5-10b1-4575-bad8-e2ee54018cc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80c31927-1f72-41bb-973c-658164eb33c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8963d123-7ad5-4753-9c9b-950f28ebe8ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d53e9eb1-adcb-44f8-b873-2a0237e093c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f7899f2-7bd7-4617-88ac-4fa93213c49a",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24504c22-24d8-41be-a587-a8b1cc4fe061",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f50afc7e-704c-4826-87e7-cf55ab6e1678"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd604d9-457d-4a7c-83ec-3719925723cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55faf585-9c6c-455c-b3dc-d3478af7394f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd0b7e8-c1de-463d-b917-e069039d0aa2",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b440c54f-7ef7-4422-8bc5-0361d77d5873",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30e1d8c8-241d-45a0-89d6-c9195be5ef50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "490f137b-afa7-4358-a817-3ec79da5da16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f7c136c-1b52-4a8b-ab97-2e65ba225226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f3a71b-532d-4c52-9e48-cbafe03dd8a1",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e27c4ec-a518-46ce-9bbf-d64c9b29a553",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9157e303-049e-49d8-9ba2-b78347abb77a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "417aa6b8-39c3-49a4-b89e-9b7d82bb8ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "977ef5ee-b2a1-499d-a713-1f31b2825ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e28897-3782-4f5b-8c23-be237688f0ef",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959f3345-453b-49cd-8c27-7189d571c96a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1e09faa-3be1-4ce2-9d24-4f13e3d69e69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7afd054e-8d50-435e-9fcb-e8de09acf0f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f686bb87-8ba5-417f-9f76-e293ca4eed16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00e3720-f2be-429f-b792-2f1ab4a0cf22",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d1b73d-0245-43ce-b498-f90765ec8992",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7db5b282-c6fa-489f-af59-a2c07b63f806"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9975467e-98e2-47af-a25b-a31b4040dd3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c24ba86f-44bf-437e-b516-741b818296cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7291f6d6-2fad-4fff-8629-4e40293d3311",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc575cd-537c-46b8-93d5-2bd22e8965c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75924dd2-a359-4b16-a0e6-35760994906b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aea8322-1a3c-48ae-acc0-80709bad69dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d36bac4e-d217-4899-9d63-b631c81dc141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933464ea-ae57-4137-ac17-2f0bc30f5215",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb5c19e6-6ed4-4ac4-95d9-1330a361c5de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c079f2b-40b9-4588-ad4e-b9ac22a98fbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9251e74b-99b6-40ea-9ed1-3e872fd7f866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d837ff3-f352-4747-bbbf-2ab0c8acc414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d501b88a-55df-44da-bac1-e0f78fd8f251",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e131f6-e00e-45b6-8230-ef16fcc6a9da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0cb3f65-2af6-469d-b233-a15fa0cfc855"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb2be1e-f196-4772-b9dc-9bbd5c36fe71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f0b6bae-f502-47ae-a0ce-fb91c0122953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c6470b-f61c-4b4d-bdfa-3e50bd4fa341",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdfe26d3-8eeb-445b-aa8f-e52e8f41f88a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34ae1b15-44bd-4684-af28-c86a937a8f5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "795cb147-8679-4205-9f9b-f95137571050",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0d396ef-7605-498a-a44a-0c9134c1719f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e35993f0-05bc-4271-a540-f26dc984a2dd",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163660de-4ee5-4367-8b5e-58c54c6beb53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae230f76-d37b-4e27-a940-395544b6a348"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b78df7c-e40f-41bf-a8bb-0e625b376321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0157619c-71d7-4f0c-85a6-05d3be71e27b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2386a29c-dba7-49b6-a48f-99ba2f19b3f1",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c990d638-8258-486d-9001-c6d2d924662c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80cfb6fe-3a45-4bc0-858f-3e1ce567bf65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18932f65-0f0b-4674-919c-a331c8087d31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ba368cc-e6f6-41d3-9967-079d6eb2a096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d2d704-f908-4dee-84b7-6a0fa2aee29a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a530b84d-66f8-429d-8e48-234cd3a6194b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a500d28-0b8e-4306-b05e-9ccb91f026e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42b515e-7c3a-45bd-a0ac-9a09e689fc70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "827955ce-9f16-4d2f-a6d8-1631b01d147f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b5808a9-19f3-40a9-b287-a7f892b3a29a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9157129-bca4-4a8e-bb30-f6dcd213a11a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5ccd78a-f934-46dd-974d-4d4798644412"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7c7115-77db-49aa-9e09-eb340b3ab3bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0378a8fd-e147-4ae0-bd28-b36d6aa84133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64dafd87-cd5b-4f50-9379-6d0e0bd859cd",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e334e34d-c87c-4ad5-87da-8e676f4b8445",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf5ffb16-3728-46e1-b74d-e03deeb6ce26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ffda1c-7d8a-473e-ad15-7bafa9965b24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4687eca1-2565-482c-b012-6af1c44c086a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f99459d-6056-4fc7-9a8b-dc6af62e83f9",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2056ea51-7905-4099-9111-19803373189a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "158d3906-83e6-4257-9700-13460aae39d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30e14a8-a2cb-47e2-ab21-dde793fa7f5a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d01f3fc4-1145-4a95-8528-633fc664cdcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04304108-e489-4296-9369-e69ce2f238f3",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61744ce0-62a1-47ba-88e3-7ded0a71d9cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "413c2366-2f4d-454c-8697-f3c7dda7af1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f741cc9c-7219-457c-b0dd-88c33dc258b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e27a4044-e0a9-4f9b-89eb-8a30bc87ce7b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aed38d0e-632d-4728-a637-0c71ba4148b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a7f54d7-8ddc-42e2-a70b-fea300159492"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1004be89-1454-4bcb-b92b-8f9558d44ddc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "72ccfe49-6dbf-46be-8375-da7f7115a894"
                    }
                  }
                ]
              },
              {
                "id": "e470f56e-c4db-4c12-94aa-57464419c3a1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9fdd4813-2a67-48ad-b3e9-65bfc1e2b100",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a077499-cdda-45f5-a085-5d1d6885bea0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4a6a9aef-501e-411e-9aa2-5fe6d8a82c31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83bfc9c9-bbfb-438e-91eb-ada49db33392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "369834bc-78ad-4e78-a8c2-5b2391022701"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08fc9655-38e4-48fa-ab7d-290b9481c7f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0fdb4759-25f9-4a63-979c-8bc74482ea61"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "76af1dda-7cf5-412d-afad-3ea264a70255",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "476ebfb2-4b78-4305-8f59-cc867a853092"
                    }
                  }
                ]
              },
              {
                "id": "c0ba4443-70f6-45ee-8c7c-f7a288b304df",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "dc91f62d-d6c6-40de-8145-56e43a45e1ff",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e59cdb-4408-43fd-9fa3-b261dac1d164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7231acbe-eeb0-41e1-9847-edc996f3644d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f3f9f33-3329-4712-9a69-21600e632c29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81ab3f9c-3813-4d0a-bbf3-1523a06c5795"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "518a4bed-14d1-4462-8a47-65a42d1fbb3b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "43ade20b-1780-43f7-a697-554f9bb3facc",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "231d0de7-844e-4d7e-8bd9-68fb83dae6e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "64d621e2-ed51-46a5-9a93-e947315cb899"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "285043d4-fa06-4b46-8a6c-e980ef4baece",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2717d85-d7e4-4842-b878-a909501d948b"
                    }
                  }
                ]
              },
              {
                "id": "2fb2e0e8-5cb1-477c-8aa7-bf9b084b65fc",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "60293101-9587-4d20-b212-060b5d4c0c44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "de9d3778-f7b4-4c98-be67-caa374a5bc18"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d810a0bc-d56c-4b7b-9754-d714b7ea990e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e326ef3-51f7-4d05-b5fb-1d7b0434d7fe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cea1fe77-3398-4abc-b051-dfd10d01fce5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9003585c-7444-4da2-838e-92300e3dd058"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cf9ab64f-a004-424f-86dc-768218b075fa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7f247452-185b-424f-a597-29f6182c158e"
            }
          }
        ]
      },
      {
        "id": "7bf90f99-bea4-440e-92a8-9659a72158cd",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "fca59e25-29df-4ed0-9c0d-e502d4cff495",
            "name": "Negative Testing",
            "item": [
              {
                "id": "130d762a-7eb6-4506-adde-a6c4db83cc3f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "46a04061-062e-4f48-8b9e-b3753e03a749",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0fd0db-2cfd-4aa3-a5a3-0162e6eb0f6f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "727f1971-8ed9-4b06-a5ed-3c4d68906b1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb302a5-0a6f-4930-a66d-ba4805898711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "870dbb26-d7de-4dc8-bfb2-2414faff7857"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa8251e2-556f-4808-8c07-42d7afad0b33",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18410df8-daa6-4b19-aa08-852df50ecbc5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f896abe-c49c-423b-9ccd-376a9a030c9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5cdae59-88ad-4d49-bd58-141baad0b19c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ea9a0719-7ea3-45ed-a92c-9b0747f47a56",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c6bcccf3-68e7-4e1c-ab57-1db8cba8634e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fc5e916a-0a87-4331-b12b-fe5fa9f213f0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0a26b517-2fc5-4ff5-bdfe-bcf2896eeb67"
            }
          }
        ]
      },
      {
        "id": "78d08525-57e3-4e72-8b1f-eefe32ff1e05",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "65965350-366d-4858-a276-03572fe7ae69",
            "name": "Negative Testing",
            "item": [
              {
                "id": "de8f7bef-58eb-4f8d-8684-920352f74115",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f8d22e39-5135-4f36-ab88-71b837c0d409",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35624343-723a-4e3e-8367-866971fd7262",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ebcd42c2-bf6a-4cc5-89d8-a7e943071076"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fcc3aed-e996-4953-9dd7-c198484dd32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "27116e6a-51c5-4057-bb3f-2f2da4a11057"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92410e11-6850-4bca-b86c-82877c5abb36",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "230ece6a-5826-44b4-a9a2-a18470961cb9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9d65015-275e-45a0-9ad2-3323bb01144f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5cf68b3a-73f5-4d7e-99b6-62f6bef9593f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da9915f6-b14b-4471-9703-8f97ab0ff0dd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e5ca4112-4444-46d6-8024-ffc25badb115"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "003a8468-7131-4f1a-953a-d67f2853ffa2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f0430480-f771-4192-9d83-b0ba701c44bd"
            }
          }
        ]
      },
      {
        "id": "d886d209-a11e-4448-93d2-18afd29ac687",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4776c8c9-7814-4714-903e-efb32cf4b8c4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4cfa2e08-7636-4565-9fec-ea429db825b3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "15c5ab6a-4a79-4655-b33f-ee244ebb6925",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eab7d47-0362-4e86-85f1-9b90f997c83f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d20678c-7d7c-4044-bb87-5d259995706c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1051fd90-4843-4393-a510-63a62a6e6f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "41c6522b-ddd5-4d7d-8c40-247d89717b31"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84e8ab7d-3ce8-43e3-8956-bd1645a05c01",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0676b227-79d8-4d1d-9391-0f94551fcdd4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a43a6d9-049b-4ec5-b859-4ca1822c9258",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "036c3407-b2a5-4be4-9af1-cc705500d135"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "433d5fcd-9471-44d7-b6ff-8e6b2848ff18",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b203e4e8-61e6-49e6-91e0-704dc80eee53"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f9d92d62-d75c-4f41-af07-a46d5b1540f8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a28b8198-7045-40e0-9336-8f77b9c40f59"
            }
          }
        ]
      },
      {
        "id": "c05e8dcf-46d7-4819-b5bd-fce28bdf9a26",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c5380f34-20c8-4ccb-ac7c-04a6ccb45488",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "877e1e5d-9637-4994-837a-70d0f04cda4b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4b2379a9-576a-4ee1-ab3d-a7d12336d720",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dd0ea586-5f44-486a-a0af-0f21b357f6a0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "26602a8e-3be8-4023-8505-cd93aa1e3baa",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 8.510563380281695,
      "responseMin": 3,
      "responseMax": 298,
      "responseSd": 25.091730885643056,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1695947597146,
      "completed": 1695947611115
    },
    "executions": [
      {
        "id": "55ed5ffe-9607-48e2-8437-0ac74eac17f4",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "dae475a7-c69a-4e7a-909e-f74e0a16c1ec",
          "httpRequestId": "86c0ac5e-12ee-48a0-8ed6-6a43b7257ea9"
        },
        "item": {
          "id": "55ed5ffe-9607-48e2-8437-0ac74eac17f4",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "40c4f4ed-6fd6-4aba-8dbc-64f2abc6a408",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 0
        }
      },
      {
        "id": "14f1b35f-635b-41cd-9d6b-186b554d20fe",
        "cursor": {
          "ref": "e372b28f-0b87-46b6-b808-c829102fe3da",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e9b64737-f0fa-4ded-99f6-0e9e04d37579"
        },
        "item": {
          "id": "14f1b35f-635b-41cd-9d6b-186b554d20fe",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "cac22bc4-f940-48a0-891d-8cfa0087ed1a",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "2c128cde-d1ac-4b77-8599-a2bb5a81fdc7",
        "cursor": {
          "ref": "2a9868ef-c8d0-458c-9b94-95fdce933da6",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0e964794-19e5-488c-8080-ba04fa146b0b"
        },
        "item": {
          "id": "2c128cde-d1ac-4b77-8599-a2bb5a81fdc7",
          "name": "did_json"
        },
        "response": {
          "id": "93ff39da-2138-4ccd-b3bf-3c2ad4ae16b8",
          "status": "OK",
          "code": 200,
          "responseTime": 154,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da499619-d590-419d-92db-7f6b08ad5756",
        "cursor": {
          "ref": "5c76f459-be2f-4410-8667-54acd4ff2b62",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "09dfa066-71e1-45f1-b143-615e45fd6e5c"
        },
        "item": {
          "id": "da499619-d590-419d-92db-7f6b08ad5756",
          "name": "did:invalid"
        },
        "response": {
          "id": "750d4d7b-25ab-4a53-8788-ba58e667c2e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da499619-d590-419d-92db-7f6b08ad5756",
        "cursor": {
          "ref": "5c76f459-be2f-4410-8667-54acd4ff2b62",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "09dfa066-71e1-45f1-b143-615e45fd6e5c"
        },
        "item": {
          "id": "da499619-d590-419d-92db-7f6b08ad5756",
          "name": "did:invalid"
        },
        "response": {
          "id": "750d4d7b-25ab-4a53-8788-ba58e667c2e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed66468-7381-40ca-b5aa-3c34fca2a123",
        "cursor": {
          "ref": "6caeb468-124f-43c0-8209-1f1b4ff0a16e",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "965e987f-53cc-4f74-8d28-28bb8cea6f23"
        },
        "item": {
          "id": "2ed66468-7381-40ca-b5aa-3c34fca2a123",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c7de60bc-ce51-4c9f-b558-4dd6430cf4ad",
          "status": "Not Found",
          "code": 404,
          "responseTime": 117,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb82af3-069a-409e-814e-c568d6e671c0",
        "cursor": {
          "ref": "8b48c74f-dd34-422d-82f0-86d182625e69",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8eb93519-bf97-4153-b953-4baaee0f76e1"
        },
        "item": {
          "id": "cfb82af3-069a-409e-814e-c568d6e671c0",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "50795d3d-c93d-41eb-976d-b777b9260ee8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342bc4d3-67f6-4d45-ae70-0c7dbe749f82",
        "cursor": {
          "ref": "f5d846f7-a5ff-41b2-b697-e03542e4ac38",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "90aae2c0-c576-4d58-8616-a2062f430635"
        },
        "item": {
          "id": "342bc4d3-67f6-4d45-ae70-0c7dbe749f82",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "cc6980c6-4b73-4760-84f8-fa8eace3624e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52354b3b-a07c-4e0c-b6e6-45954f486f21",
        "cursor": {
          "ref": "58b9d47e-e8ca-4f2e-9d9d-2724084d56a3",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c4a9363d-ca7c-4e3d-8027-03b267216d68"
        },
        "item": {
          "id": "52354b3b-a07c-4e0c-b6e6-45954f486f21",
          "name": "identifiers"
        },
        "response": {
          "id": "f5544d50-ad71-4441-a59d-2cc42903adc2",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a02e22b-d43a-4fc3-9f7f-e985ff999d18",
        "cursor": {
          "ref": "0d4c9957-9a84-47a1-9ccb-4317407d1f1c",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8a260bab-8312-441f-b3a9-c932bef38edd"
        },
        "item": {
          "id": "5a02e22b-d43a-4fc3-9f7f-e985ff999d18",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f67c3ced-87bd-4e07-b132-6552ba3e2898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307beb70-feee-445a-abd5-82a9113c5aab",
        "cursor": {
          "ref": "bdf43a28-1dee-4196-8492-69e007d3cdfc",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "32e36762-23b1-411c-9e8f-92ea52b88568"
        },
        "item": {
          "id": "307beb70-feee-445a-abd5-82a9113c5aab",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "70343429-e0b2-4876-afb7-bd9477306646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4045956a-9a1f-457b-bc5c-a76e7d238dff",
        "cursor": {
          "ref": "0c9a4dd2-bd8d-41af-8380-2607d01fd31e",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ee0c4ec9-6c2e-46d2-af9b-0aafb819d0b1"
        },
        "item": {
          "id": "4045956a-9a1f-457b-bc5c-a76e7d238dff",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "681ff84a-8658-4925-9fc3-87621ffc0de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729f5afc-49bb-490c-a4f2-389cd69d4f89",
        "cursor": {
          "ref": "ea0aec91-c692-4ee1-bd5e-36ff8d00ac1d",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "91f83994-b705-433b-8623-20c28722f066"
        },
        "item": {
          "id": "729f5afc-49bb-490c-a4f2-389cd69d4f89",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b8ee9fd5-7296-49e1-b994-f58e3ca097b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaebb2fa-57fa-4570-99c6-be8e3f8a8319",
        "cursor": {
          "ref": "3afd7e50-78bd-497c-828a-2d0041af4134",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "99ba4baa-cf21-4198-b748-1659e107d198"
        },
        "item": {
          "id": "aaebb2fa-57fa-4570-99c6-be8e3f8a8319",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7f18150a-3e19-4345-b2ce-0f7a87516ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280d81fb-c6dc-4293-84e3-2478c712adfb",
        "cursor": {
          "ref": "ad3b9e25-9d22-4438-bf6c-1250e56e0501",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "38f19e58-a0b8-4576-8498-2b5b7c5741b9"
        },
        "item": {
          "id": "280d81fb-c6dc-4293-84e3-2478c712adfb",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f3006e86-2e20-4b3b-906c-e7b861228ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a61d1514-e48d-42ab-a201-2d722dd3dedb",
        "cursor": {
          "ref": "86cce6e2-fc44-4e85-8652-e30127405acc",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ee59774c-2035-48a4-a4aa-ec65f05275ce"
        },
        "item": {
          "id": "a61d1514-e48d-42ab-a201-2d722dd3dedb",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "14696157-f27c-4e8b-9179-e665220554b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc4abea-dba3-4783-a53b-82b2a8c23695",
        "cursor": {
          "ref": "32baa994-e9ec-4b73-a4a2-8a24dc8d8dc0",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4e294e0a-ffb7-4036-958c-8c268ede802e"
        },
        "item": {
          "id": "6bc4abea-dba3-4783-a53b-82b2a8c23695",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1f8fef7a-9459-446f-837c-c03fc51b0a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ace7172-0227-48fe-a0fa-3564d062a54d",
        "cursor": {
          "ref": "c4fbc3da-89f6-4899-9921-ba3a126d65b7",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6d852c77-5ab3-4aea-a5cb-26fba2b8149c"
        },
        "item": {
          "id": "8ace7172-0227-48fe-a0fa-3564d062a54d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7d35a732-aa8c-44dc-be6e-23f99e56c384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ce3cfd-20e2-4a2d-bfd8-d77e25523d81",
        "cursor": {
          "ref": "48459291-37fb-4555-9c86-98b55f8666d5",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c470200c-687c-4084-8d86-38c1d2d19ef7"
        },
        "item": {
          "id": "b8ce3cfd-20e2-4a2d-bfd8-d77e25523d81",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "67dde483-7762-42ae-b730-1580250d779b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae37ba8-2a62-4ddf-b235-54e72381b12f",
        "cursor": {
          "ref": "0c1f1f27-bef5-4d55-bfad-e207e8fdc1c5",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "da78b3f3-6ff8-43e4-ab03-ec1ae1880aec"
        },
        "item": {
          "id": "2ae37ba8-2a62-4ddf-b235-54e72381b12f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "84a046b4-478a-4d5c-9829-14409e3b6175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0213ad58-0325-4746-b144-9ab94bc39591",
        "cursor": {
          "ref": "3619f37d-d33e-472f-bccc-1b39ece5b070",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "80df7c83-f1c7-4607-8550-7fd28c186771"
        },
        "item": {
          "id": "0213ad58-0325-4746-b144-9ab94bc39591",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "fbea28ed-9a9a-43aa-8b8f-9f0e20816367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4da9d8-b8a0-487b-a891-df51e66b1e31",
        "cursor": {
          "ref": "36cfe5fc-3a78-4530-9eb0-670bdbb0cfe8",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "45b69281-d2ca-42a3-b2ea-b4f250047773"
        },
        "item": {
          "id": "1f4da9d8-b8a0-487b-a891-df51e66b1e31",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e7c51438-631e-4361-b010-d93b86cbf5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b6ff97-09af-4be1-8fdf-4a4e15f3d190",
        "cursor": {
          "ref": "471bd3de-7a47-4fc1-94ef-72dca392376d",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "daf3c3b9-09c2-454a-aa65-292a06d5d6f1"
        },
        "item": {
          "id": "61b6ff97-09af-4be1-8fdf-4a4e15f3d190",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "6314e57e-32cf-4add-aefb-c6b75e2f92b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69bc433-046a-4801-a07c-70c979727953",
        "cursor": {
          "ref": "b3d4c590-6a86-47a8-bdc1-7fae9d8a8878",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b19f2386-53f6-4ca2-9356-b821b7bc3281"
        },
        "item": {
          "id": "c69bc433-046a-4801-a07c-70c979727953",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b405c71d-0b13-4dec-9c6e-8911265121ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a287d57e-4f95-415b-b546-7bceda7fb4c8",
        "cursor": {
          "ref": "2cd678fe-7f21-4f9a-82ad-5ff97af27d0a",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f5a496f8-e3ea-4ef8-8dd0-0fabdd70d17f"
        },
        "item": {
          "id": "a287d57e-4f95-415b-b546-7bceda7fb4c8",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "218920f3-717f-44fe-b6a1-74ee2cb32429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0e7e61-d774-46d3-bdb5-35c849c9664e",
        "cursor": {
          "ref": "f5940ad7-fc6b-4063-8525-9104c001fe62",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2ebe1fbb-816d-4888-9111-2401f70d2281"
        },
        "item": {
          "id": "2e0e7e61-d774-46d3-bdb5-35c849c9664e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "0e9f66de-8b19-4627-99dd-1ef65b23379e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "075dcbfe-b6fa-4d89-99ef-92d57889badc",
        "cursor": {
          "ref": "3a5f2d5f-72eb-45c3-b5cc-3f74141ba660",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ba8ad4bf-7c45-467b-b933-96caab43db1e"
        },
        "item": {
          "id": "075dcbfe-b6fa-4d89-99ef-92d57889badc",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "850c2af0-15b0-46e1-b706-745ae3995063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67fd98f6-4324-4533-9eab-1d053d5b5bfa",
        "cursor": {
          "ref": "20c815ff-87a9-4e95-bef8-2cdb031e6e92",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b0ed45ba-3e5a-48ac-84fc-52b32c82f05d"
        },
        "item": {
          "id": "67fd98f6-4324-4533-9eab-1d053d5b5bfa",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "cae2e770-6b51-4597-9cbb-3b2629469755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "742ba5f0-9f0c-4192-848d-fc24fd563d39",
        "cursor": {
          "ref": "63c22a41-1c79-42a9-bbbc-ccc747af462b",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "95e38cbf-0498-4491-823b-0cb2fbfd4166"
        },
        "item": {
          "id": "742ba5f0-9f0c-4192-848d-fc24fd563d39",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5a7d064e-a44c-477f-b32d-d6cd1c0bae79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a0baf2-1757-4bdd-8bcf-646bc9dcd746",
        "cursor": {
          "ref": "da01b49b-246b-42b3-b28d-c83e334c0265",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c4bdc797-beec-48eb-bb7d-67a2439bcba7"
        },
        "item": {
          "id": "35a0baf2-1757-4bdd-8bcf-646bc9dcd746",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d2b42522-e72f-4c63-8ee0-fc73447465a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5595d77b-93c6-42e7-b1e0-da7b2c8c9bcd",
        "cursor": {
          "ref": "6aaf2b4f-f6c0-4943-b1a3-217c8e0bc709",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e1aa44b6-60fc-4b85-8dee-b1923ddaecb3"
        },
        "item": {
          "id": "5595d77b-93c6-42e7-b1e0-da7b2c8c9bcd",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "2f30a06b-3168-4727-847b-a20f0200e9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb42b185-549f-48a1-82d6-9835d3b8d315",
        "cursor": {
          "ref": "65b29dda-03ae-4080-9b78-2f6ee9b95e73",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "024fa7de-a982-4453-8766-29cba6181bb6"
        },
        "item": {
          "id": "eb42b185-549f-48a1-82d6-9835d3b8d315",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2b4a0223-afb7-486f-930d-3ae0e558686e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c25cdcb4-50d1-4ce2-ae88-3433b28b44f8",
        "cursor": {
          "ref": "83da72d3-dc99-4758-9234-e2c703ecd0a1",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "224bf0b4-2fd2-46e3-b32c-372dbece6ef6"
        },
        "item": {
          "id": "c25cdcb4-50d1-4ce2-ae88-3433b28b44f8",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5049f11b-0b7a-4ba0-bf5e-48606b7ae42d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0fc8589-3c95-4eb4-aca6-c8fbee353127",
        "cursor": {
          "ref": "3ea4af6b-acb4-48fa-b375-5156bb571f66",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6bd42afb-992c-4dc2-89d4-90db61eb7cc6"
        },
        "item": {
          "id": "b0fc8589-3c95-4eb4-aca6-c8fbee353127",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ec0cddad-6c50-4eee-af21-131390167452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49029e3b-0065-4902-a449-7203a25a5c6b",
        "cursor": {
          "ref": "d95e9ff7-3a10-46c9-942e-792e6d063bba",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "af99f05f-27e9-43be-873d-b8c7ba4606d9"
        },
        "item": {
          "id": "49029e3b-0065-4902-a449-7203a25a5c6b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "63e5c20a-5689-4404-b6b6-b3f126c4f9a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9579a96-528e-41b7-a196-cf8d3ddf451b",
        "cursor": {
          "ref": "394b23b7-5b82-4bb3-9359-d8d4cf4a7b73",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ed956442-ead8-4f18-9760-521856fdd0df"
        },
        "item": {
          "id": "f9579a96-528e-41b7-a196-cf8d3ddf451b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "52bda215-d5db-4bae-b3cd-fbf1786df14b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7aa5531-7c29-4fd1-8f77-7f6df6c2e407",
        "cursor": {
          "ref": "c2717c0a-60f0-4a6e-81b0-abc090054ba6",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "901def45-9ec7-45cd-a38d-0a9b66102390"
        },
        "item": {
          "id": "b7aa5531-7c29-4fd1-8f77-7f6df6c2e407",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9e14708b-4f24-4d53-8669-a4a8370c0a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b7d789-05b7-42ee-8a1f-a71cd82066f4",
        "cursor": {
          "ref": "ec358510-ac97-47b0-a11b-aca4e5d66d63",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6b9ee942-3b51-42a3-a5e8-486419fa0244"
        },
        "item": {
          "id": "a8b7d789-05b7-42ee-8a1f-a71cd82066f4",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "62143322-8038-4bcb-bb93-6794993be0dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da14e221-d303-4126-8da8-d7e19e9d8bfd",
        "cursor": {
          "ref": "8cd5c0b3-8c0c-4d25-bc43-6222c3c03449",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "074f5fe3-6784-495d-8f1b-292d24f0c574"
        },
        "item": {
          "id": "da14e221-d303-4126-8da8-d7e19e9d8bfd",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ca71b447-2b07-40fc-aca6-5860f108f881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab04350f-4e33-4475-a499-2e9db11c85df",
        "cursor": {
          "ref": "5b35b4a7-f24d-49ac-8d78-f61c12f9d77c",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "787a3313-404b-4bb0-b1d4-74e4fbc8db2a"
        },
        "item": {
          "id": "ab04350f-4e33-4475-a499-2e9db11c85df",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "0d5d1ff2-4e1e-48fa-8a4e-c4130025bd07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae16b365-645d-4e55-8e21-a13040f56cb2",
        "cursor": {
          "ref": "f431fa2e-cb1f-4609-b9df-39586f49cbc6",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ba2e2e37-d357-4e62-843e-cad1649e7527"
        },
        "item": {
          "id": "ae16b365-645d-4e55-8e21-a13040f56cb2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ee4ab158-c072-4433-9652-2218ab0971e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8020aa-d6d6-4a29-8e6d-29449320e98b",
        "cursor": {
          "ref": "d0fa0e9a-f327-4d71-884f-e3796974a7ce",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "25c2ec8d-61e8-4cd9-9aa5-19262f19ebf2"
        },
        "item": {
          "id": "8c8020aa-d6d6-4a29-8e6d-29449320e98b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d92b526e-6249-4cfc-b15f-3d7d5cb44416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f6646d-671d-4131-86dc-ba8e232ac9fe",
        "cursor": {
          "ref": "9901f0bb-64b3-4d6a-a0f0-4d0c98282047",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c85459e3-4a84-45d2-a775-67d01b97bc9d"
        },
        "item": {
          "id": "53f6646d-671d-4131-86dc-ba8e232ac9fe",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "af7722c3-2b51-42d1-a367-a81e62510c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3e1d03-0936-4b6c-95a6-d92878b0fd5f",
        "cursor": {
          "ref": "eb7062b8-821c-483e-9b2a-bdd179b5d214",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8e66beb0-635f-4835-833f-af318c5aaa9a"
        },
        "item": {
          "id": "0b3e1d03-0936-4b6c-95a6-d92878b0fd5f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0e6c6537-b78e-42fd-b060-653ce215a755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836aeae0-a10a-4854-9e21-d4b0bed6823b",
        "cursor": {
          "ref": "6ff2b71f-510d-4fa1-9bf0-ef0d522753a3",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5a13d51e-7fec-43d5-a80e-d21cbd5a26bb"
        },
        "item": {
          "id": "836aeae0-a10a-4854-9e21-d4b0bed6823b",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "05452632-d545-4e5a-b360-4ff48a19b92b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 31,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1641717-99be-4686-b488-5e021b7ab6bd",
        "cursor": {
          "ref": "a28e038e-99fc-454b-b66c-3df2c07519be",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "98c0ff7a-20c6-4fac-967c-e515dcc3674b"
        },
        "item": {
          "id": "e1641717-99be-4686-b488-5e021b7ab6bd",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5207aaf3-7b16-447f-8515-659d577e29ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba03faa-7399-43be-8e3b-902295b0a81e",
        "cursor": {
          "ref": "588fb99e-b9f8-414c-b1ec-2dde0ea18bbf",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "98c0db23-9473-4cd9-9b2d-e7bc826dc4e1"
        },
        "item": {
          "id": "cba03faa-7399-43be-8e3b-902295b0a81e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d64c258d-e7e1-43d9-ab1c-6a7a997d35b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c277b5-4e06-487b-aa0c-c2704150292c",
        "cursor": {
          "ref": "eb59236d-4067-44ea-b23e-fcf5c004e591",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "55c0348b-ce2d-4fa2-b863-aab5cc5171d1"
        },
        "item": {
          "id": "70c277b5-4e06-487b-aa0c-c2704150292c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e8ce02cd-b329-4749-8aa4-2cbac7806da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e376dde8-3d3e-455e-843e-f6228ced8a15",
        "cursor": {
          "ref": "3ab48a63-08c1-4482-b84b-7210f7399f7a",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c4d0e1a2-809d-4c79-9acb-3ff77a0ffa1b"
        },
        "item": {
          "id": "e376dde8-3d3e-455e-843e-f6228ced8a15",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "db965e8a-bf61-4c4c-a041-c463d6b7ad6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa97e43-e049-403b-adc6-d40285a18d5c",
        "cursor": {
          "ref": "e38206e8-5e83-48d9-835c-46cdf9b7ac25",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1b64eff0-c8d9-4035-be96-17980f35eff8"
        },
        "item": {
          "id": "1fa97e43-e049-403b-adc6-d40285a18d5c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "9c01932e-39c9-48b0-801b-de2d07e557f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae7a3e1-d830-4911-a73e-0a4dcb849a38",
        "cursor": {
          "ref": "17523871-c522-4ee4-8aa6-5deba0422587",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a63afb9f-f206-431b-b24d-5337a62dc735"
        },
        "item": {
          "id": "8ae7a3e1-d830-4911-a73e-0a4dcb849a38",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "20ab158b-903c-42be-9dd7-ae8a96057eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1fa7fd0-76fc-4c5a-b2f1-83950de117de",
        "cursor": {
          "ref": "c02dd523-e2a3-4860-b1f9-31fb52a2c1d4",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3e2e8892-b874-42b1-8144-6511448a3276"
        },
        "item": {
          "id": "d1fa7fd0-76fc-4c5a-b2f1-83950de117de",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9e3e4345-a88b-42f1-9678-ed378d66ed9d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 19,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae4d421-ca34-49e9-81dc-9f017d5c2f30",
        "cursor": {
          "ref": "187b9245-5e20-4afa-b846-147622d8ba17",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5a01dfaa-73fa-4273-a556-bb49a07589a8"
        },
        "item": {
          "id": "4ae4d421-ca34-49e9-81dc-9f017d5c2f30",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "55cbf69f-c101-47fb-9ebd-a60535c61f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2965bdce-f6ca-4e5b-9cbb-ddc125f685eb",
        "cursor": {
          "ref": "5202133b-c769-42e6-94db-f3a0a1d9461a",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "27c7028e-7bed-42fc-a4e0-90d3198cd876"
        },
        "item": {
          "id": "2965bdce-f6ca-4e5b-9cbb-ddc125f685eb",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "cb8a9e05-e436-4efa-8f98-ed584a363287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2159fccd-1ff2-4655-8e19-9df3b14c5f28",
        "cursor": {
          "ref": "22f8cd63-8137-4c6b-85f0-8e7401706fbc",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6d1d22e8-840b-4fb7-86df-0cde1b063331"
        },
        "item": {
          "id": "2159fccd-1ff2-4655-8e19-9df3b14c5f28",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "87f37c5b-0291-4188-b007-707a1ff89cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a10c7e-8134-485d-9bef-94da937bfea8",
        "cursor": {
          "ref": "f00a1e8d-1ecc-4774-9691-26e22667f342",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "028c5d7b-e80d-46a5-9a59-44beb647939d"
        },
        "item": {
          "id": "b4a10c7e-8134-485d-9bef-94da937bfea8",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2669a001-2ec7-4aad-b88b-4cc6c37d3878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59dd156f-3db8-44a5-b913-97c1b90689d9",
        "cursor": {
          "ref": "b0739e68-8dc6-4036-ab64-ae7c6a406da3",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "947ac49d-4c88-43e5-bb1e-763a6f76785c"
        },
        "item": {
          "id": "59dd156f-3db8-44a5-b913-97c1b90689d9",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "dd0e1190-4810-4093-a5fe-a6703a18ab2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e732397d-dbba-4402-99fc-2dcdd33d99f2",
        "cursor": {
          "ref": "7c46197e-4e86-45af-be7b-eb8ab67c35f3",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c45ce89c-e60e-4175-a6ab-ee12b9adedaf"
        },
        "item": {
          "id": "e732397d-dbba-4402-99fc-2dcdd33d99f2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "dff7b7a4-7d10-4672-9318-38b89bef9fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d1f4b5c-3406-4acc-bc4c-0d78d55df0c9",
        "cursor": {
          "ref": "a146bc30-7cc3-48e1-9e07-07def494d4a3",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0a1b05b4-77aa-4c94-a536-41b8d3af3c64"
        },
        "item": {
          "id": "4d1f4b5c-3406-4acc-bc4c-0d78d55df0c9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "432612bd-67f8-403f-9f1c-937f7fc86a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1110aca9-399e-4be2-8f21-5114d591e785",
        "cursor": {
          "ref": "1836cd09-b387-4921-9c5f-a2330c0ccefb",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "bf4b14d1-12d4-42a9-961d-b163526c1a1f"
        },
        "item": {
          "id": "1110aca9-399e-4be2-8f21-5114d591e785",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "24af53f9-27fe-405e-b146-62beea85d37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "756a082e-230a-4f94-b3a9-98b1b9322af7",
        "cursor": {
          "ref": "d9c61031-4f6c-46cf-a244-e02e90b2ae39",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "115f2a48-090e-4099-b941-b56266e9aeb3"
        },
        "item": {
          "id": "756a082e-230a-4f94-b3a9-98b1b9322af7",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8d67a2c6-5e3e-4308-8c4f-893b8ebcd5f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d4cda1-b468-4203-8c83-78477adfd3f5",
        "cursor": {
          "ref": "e29168d8-d009-4617-a95d-833f7eb56e09",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f630d498-c28b-4fb6-8087-914e69818406"
        },
        "item": {
          "id": "50d4cda1-b468-4203-8c83-78477adfd3f5",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b305cac3-490b-4298-a206-af235b0d56ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73660038-f1a1-4d36-b950-470eb7311f10",
        "cursor": {
          "ref": "e366d005-ab1e-4b4b-8d24-c83e4e84103a",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "4bf0d914-4123-4e34-82d0-26b5e227c26a"
        },
        "item": {
          "id": "73660038-f1a1-4d36-b950-470eb7311f10",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e9bc310e-c5e4-4ed8-bab8-3744a92222cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea51a6b8-5af9-4412-8773-f0608c6896da",
        "cursor": {
          "ref": "60364ebd-b6af-42e0-ba5f-daee3c769aa0",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "8305fdbe-99bd-44be-be99-f58f9d197f34"
        },
        "item": {
          "id": "ea51a6b8-5af9-4412-8773-f0608c6896da",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "317e427c-7827-407c-b4d2-6e7d50cf6083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4489f2df-65a1-42bf-8ba2-62c84938d20a",
        "cursor": {
          "ref": "54d827e1-1ac2-4d7f-bcf5-4cf1137a3c3d",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "351f0365-ae88-4668-ae04-67792f517245"
        },
        "item": {
          "id": "4489f2df-65a1-42bf-8ba2-62c84938d20a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "97ed6ae5-5a2a-4bbc-b0b9-60e24380fb3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae83380-4236-449a-bf41-803ab4e538ef",
        "cursor": {
          "ref": "bf40e939-675a-48eb-a9a3-c794c7a099eb",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e35fe594-f793-4b5a-82ff-6aa40bd96971"
        },
        "item": {
          "id": "7ae83380-4236-449a-bf41-803ab4e538ef",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4fe2cbb1-144e-4ea9-b60a-aa94a3d94fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "007ab883-b5e9-4345-9ed2-531d322c18d7",
        "cursor": {
          "ref": "6211c26c-365f-49ae-a993-18867cf06f80",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "0dd37b2e-0672-48c6-a9dd-e640377e8247"
        },
        "item": {
          "id": "007ab883-b5e9-4345-9ed2-531d322c18d7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0542b088-cf34-423e-9270-b26ca29f72d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7d5544-1d84-4695-ad43-85b5ebd0088e",
        "cursor": {
          "ref": "cac0178f-67ec-4a95-97d7-73dfcfdfbca3",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a950c697-d33a-41be-abd3-2dbf3fe75f2a"
        },
        "item": {
          "id": "ae7d5544-1d84-4695-ad43-85b5ebd0088e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6891d0ee-c718-4eb8-943e-7d923a9e94d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "983d87ae-a2a7-4d17-ab8e-ae13b2e58a13",
        "cursor": {
          "ref": "7b5dc998-73c1-43df-96f8-b726263b2e67",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "2d4e3b39-63c7-4f77-931d-b84e2d788993"
        },
        "item": {
          "id": "983d87ae-a2a7-4d17-ab8e-ae13b2e58a13",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d3f2629a-d850-4926-96cf-0f1492dcfd3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9410abf-13eb-4e5c-8ee7-de7c8a60e5fb",
        "cursor": {
          "ref": "10759914-7358-4693-a557-04b83fc57ee2",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "dbce575b-2edf-40a1-b41c-c617ab5e777a"
        },
        "item": {
          "id": "e9410abf-13eb-4e5c-8ee7-de7c8a60e5fb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "75fccea9-f564-422b-a0f8-16d0c16a8a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51494a96-21db-44d5-8912-9e869531e186",
        "cursor": {
          "ref": "4e6edf88-5b9a-4d43-89ac-6f9970354335",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "efbb4061-9f94-4908-9917-fece2f8a475e"
        },
        "item": {
          "id": "51494a96-21db-44d5-8912-9e869531e186",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "96fbf634-6048-40c4-b965-f8010cc28370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56eaf88c-671e-4a1c-b81d-d9d41e93fabc",
        "cursor": {
          "ref": "81f62c3d-98e1-4f22-a16b-4a25f6d9cbaf",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "545736e5-2aa8-4893-b22e-abe77b064786"
        },
        "item": {
          "id": "56eaf88c-671e-4a1c-b81d-d9d41e93fabc",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "77b04367-4733-40f3-be32-00092d4573e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "463003e1-5e5f-4404-999c-987b6aa9e5d9",
        "cursor": {
          "ref": "d232b58d-7296-4f0a-b4af-a80613bfaef4",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e8544282-e7bf-4570-bfe8-45248d7ae388"
        },
        "item": {
          "id": "463003e1-5e5f-4404-999c-987b6aa9e5d9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "83828ccf-6473-4fd4-9125-28f687b38b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4715a50c-4051-4900-a6a2-13157e1d75c4",
        "cursor": {
          "ref": "9994e419-a4ca-44c7-8285-911e6fa4148c",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "75f96d4b-fe3b-49fc-8228-a5df80cff4ae"
        },
        "item": {
          "id": "4715a50c-4051-4900-a6a2-13157e1d75c4",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "68ae0018-adb5-464a-abf5-3bbc2e46ff6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffaa0c93-e9e2-4b46-915b-fd4466687483",
        "cursor": {
          "ref": "c8e9782b-d5fa-439d-9044-3e8fb4067dc9",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "cf1035f1-4ddc-4f16-86f5-078e63e42a69"
        },
        "item": {
          "id": "ffaa0c93-e9e2-4b46-915b-fd4466687483",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "fe950120-4993-481b-8585-b87ae9431407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878cf76c-b55b-4279-8b28-7ec2b1239f4d",
        "cursor": {
          "ref": "d2d47bd8-efce-4534-b924-b2525b5abcaa",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c6f24bcd-d0e8-414f-b9b7-965db0d5ccb3"
        },
        "item": {
          "id": "878cf76c-b55b-4279-8b28-7ec2b1239f4d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "465f4428-9f44-408d-8d80-bdf774e4a9a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598ce28f-e907-4725-9fce-e81485a9cb8c",
        "cursor": {
          "ref": "ddfe30c3-bf07-47d1-bbcf-da621d68fa75",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "54ae3f59-d4a4-42ca-91ab-ec236aa369df"
        },
        "item": {
          "id": "598ce28f-e907-4725-9fce-e81485a9cb8c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b7ef7da7-29e3-444b-a45c-343839860b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d96ac5d6-84c7-45e3-9bc4-699d7deeea85",
        "cursor": {
          "ref": "e78bb0fc-f227-4c82-8d77-c467ec5b341b",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "48662ff0-e860-41cb-a394-5b866a0dca80"
        },
        "item": {
          "id": "d96ac5d6-84c7-45e3-9bc4-699d7deeea85",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "6c55d8f5-4329-4a46-bcca-8bfced34f01e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e828102-12eb-49ac-9dd0-12a9985aa120",
        "cursor": {
          "ref": "5d6afc1a-6714-4a81-b866-b647c9a8c0f8",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "58d30af5-0fe6-4754-bcb8-204494812020"
        },
        "item": {
          "id": "1e828102-12eb-49ac-9dd0-12a9985aa120",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "55f03b99-c0f3-4f90-99fc-0185bef717b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "548d7a98-d878-4669-8a8e-297d1b1f11cd",
        "cursor": {
          "ref": "b1e59412-483d-4dbe-8156-d99388a5de39",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f9d2de5b-7d1b-4449-9e99-17b1e1a6c79c"
        },
        "item": {
          "id": "548d7a98-d878-4669-8a8e-297d1b1f11cd",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "7956e8f6-7b9e-4031-a165-7ae88126ed8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be7ee24-a6a7-4165-a0c4-743f45744137",
        "cursor": {
          "ref": "088b4a15-54af-446b-ad2b-ed2a9839507a",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2664af7c-4afd-497d-840f-385f0b1c9c51"
        },
        "item": {
          "id": "6be7ee24-a6a7-4165-a0c4-743f45744137",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1630b23b-2f75-4a06-a8a2-3b981ffd5439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960b4b28-6966-4cbb-aa37-24676e2e4be1",
        "cursor": {
          "ref": "14f9f691-fd75-438c-8b70-c9182bfc526e",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "43bd1fe0-c567-47ca-977b-0c4ba9c050a6"
        },
        "item": {
          "id": "960b4b28-6966-4cbb-aa37-24676e2e4be1",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "2c0465b7-947e-4441-92de-87b0ec1e6873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456175e8-b89f-4e7c-9c50-f8fd8edc43a8",
        "cursor": {
          "ref": "3e6a1d4d-5b61-4fae-8a9a-391af039b08c",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0bddc8cd-01d5-425b-9eb9-222863c2f0e9"
        },
        "item": {
          "id": "456175e8-b89f-4e7c-9c50-f8fd8edc43a8",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "04da2968-96a7-44b7-8180-8ac3f19fd97f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41634d9-69c3-4dc2-800e-bef4f16bc9ac",
        "cursor": {
          "ref": "2576c876-511e-4122-912c-c8a05a5292e0",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "253aae5c-094e-4a4a-b683-8da2fb1a9a3a"
        },
        "item": {
          "id": "c41634d9-69c3-4dc2-800e-bef4f16bc9ac",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1f177e60-8c9c-4de4-bf9d-b4bfcfd88651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d2eb18-9f01-4600-bafd-053b17184518",
        "cursor": {
          "ref": "97b51e4e-3768-4d90-b44f-773e21c57461",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1a4ca74f-87ae-4687-9ea5-18959d839739"
        },
        "item": {
          "id": "34d2eb18-9f01-4600-bafd-053b17184518",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "084c8b18-5b97-4908-9af0-28d3d9c139db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7380b0fe-0d9d-4a8e-ab53-1967109817a0",
        "cursor": {
          "ref": "810541ea-a805-472d-a4ab-963b4952cc79",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "58fdd134-db6d-4713-98dc-76e6f54dbc29"
        },
        "item": {
          "id": "7380b0fe-0d9d-4a8e-ab53-1967109817a0",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "113f089b-c806-46da-bb4b-20b9c5da91bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70c645d-608f-44aa-9f15-d81e39de8fee",
        "cursor": {
          "ref": "ebac3045-dfdb-4c63-b9d7-17204d6c411b",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "65ea641e-134f-4175-8ce1-1b9ad869c3d5"
        },
        "item": {
          "id": "e70c645d-608f-44aa-9f15-d81e39de8fee",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "aeb9b1ed-35d5-4b7e-8af0-26c97c37df4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb902c7-7b32-4c35-b38c-edeecd9c4aa9",
        "cursor": {
          "ref": "26b64a92-a1a2-418a-bab1-d403d3cf0db4",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e0f8a821-9e8e-4960-bbfe-2f3d89e731b9"
        },
        "item": {
          "id": "efb902c7-7b32-4c35-b38c-edeecd9c4aa9",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b3f30936-9a0e-4cfd-8fb1-1bd8f30a482f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91bce041-bb57-4ca4-887d-3d75afb3780b",
        "cursor": {
          "ref": "14a3d51c-3e42-49a1-a507-419ebe306722",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3a33e466-04a1-438d-9754-09f99728d0c6"
        },
        "item": {
          "id": "91bce041-bb57-4ca4-887d-3d75afb3780b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1d9107fe-4e16-4031-a8c2-99681141dff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872f8eee-0abe-42a4-9757-2f8cd3d3222b",
        "cursor": {
          "ref": "a8ecde20-bb4d-46df-bb19-d03ee88c1bd0",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "964daced-fe0b-43a7-806e-e7df4822b6dd"
        },
        "item": {
          "id": "872f8eee-0abe-42a4-9757-2f8cd3d3222b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "65f84a1a-eb08-425f-b6d8-b2500f818563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20cf207-31b9-461b-bd03-dfb01786574c",
        "cursor": {
          "ref": "d737686c-b02d-495c-9bb9-5d2d4a42c582",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "91b86808-72aa-4a11-9252-babc4a3ae7f7"
        },
        "item": {
          "id": "c20cf207-31b9-461b-bd03-dfb01786574c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a9cd81a9-1c41-4bf6-acc8-988bf5e5e266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00814ed-7e5f-4700-9751-3456c1e11129",
        "cursor": {
          "ref": "15a53936-171f-4e5d-9907-112f4a14c267",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "508a06e6-9301-4a27-8330-72b629b271bc"
        },
        "item": {
          "id": "d00814ed-7e5f-4700-9751-3456c1e11129",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d9801ff1-db5b-472c-8cee-8fac467db229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa510506-bef6-4c7e-80fb-c57fcf00ca01",
        "cursor": {
          "ref": "3b296b37-833a-4cca-a503-6fea60dac524",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2cfec6f6-6542-427d-9628-ee5dd62991ff"
        },
        "item": {
          "id": "aa510506-bef6-4c7e-80fb-c57fcf00ca01",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a2890c8f-b972-4390-9dac-5a458cd9fa41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c84695b-91bc-45db-9ed6-982bdb6730f4",
        "cursor": {
          "ref": "900d95ba-4551-4821-9b0c-620dfb1595bd",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "cb536e1c-3343-4310-993f-a7c30925ad6f"
        },
        "item": {
          "id": "8c84695b-91bc-45db-9ed6-982bdb6730f4",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "04db6440-fde0-4e74-97a6-58a38065dd31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f7882d-2091-4637-9cfd-73177fddf804",
        "cursor": {
          "ref": "2eab9610-90c0-40ef-8d4d-1dc7e44ccf33",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8db19a79-7823-4202-b037-127db975e176"
        },
        "item": {
          "id": "65f7882d-2091-4637-9cfd-73177fddf804",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e4e58b9c-69ed-40a2-afbe-8952a3eeac33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d13df3c-1978-413e-ac64-93ff3231b4c4",
        "cursor": {
          "ref": "40a4b6a3-3cb0-444f-bbcc-a88f8b810990",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9c163ea2-1b79-4b38-b349-7c44c5e55d95"
        },
        "item": {
          "id": "4d13df3c-1978-413e-ac64-93ff3231b4c4",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "57921c2b-4fe9-4ac4-a8e5-cde1e2a6886f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085ec7cd-5795-414b-a588-a1b3a36c20af",
        "cursor": {
          "ref": "f3bb6d4f-1b2c-4d15-9f4b-6e2f3013a654",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e009e234-0413-492f-a606-58b208f908b1"
        },
        "item": {
          "id": "085ec7cd-5795-414b-a588-a1b3a36c20af",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5d4bd4bc-29cc-45af-86ee-fa1dcf57e033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa1e431-d062-44f0-9c8e-3ea5a6c97f0f",
        "cursor": {
          "ref": "54e8cbcd-35b6-44ea-aba2-9a21f22bad51",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b858c7c1-dfac-483b-b326-088d049b2e1b"
        },
        "item": {
          "id": "6fa1e431-d062-44f0-9c8e-3ea5a6c97f0f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2ef691e1-8660-43ac-93fa-5afc9f58cd4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d265871c-7617-49b3-be5b-de3688d2f4d9",
        "cursor": {
          "ref": "9a5395f8-24d7-4a61-9712-1a926ca3a8aa",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "eb087029-2313-4270-bc95-1f1f9950cb96"
        },
        "item": {
          "id": "d265871c-7617-49b3-be5b-de3688d2f4d9",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5f4f6fb3-6606-4df1-9839-5e387046a062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b2f236-9f57-4196-b780-57f47944febc",
        "cursor": {
          "ref": "9dd3e578-4e5c-4c9f-8467-237b99b97b06",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e80143cd-4c7a-4c25-9bb3-41bb5ae8671d"
        },
        "item": {
          "id": "c4b2f236-9f57-4196-b780-57f47944febc",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "93a380b1-03b9-457a-a778-eda2c25a4ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178df5b8-e4f3-4b6d-bad0-c6e2dfe0f51a",
        "cursor": {
          "ref": "98d3d7a0-10ba-4ac5-a93c-dc532744c32a",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f9ff8442-c55b-4e70-91d4-9518cc795ca3"
        },
        "item": {
          "id": "178df5b8-e4f3-4b6d-bad0-c6e2dfe0f51a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d631fcab-805d-404d-ac07-e0351a779a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3855d9c-8705-49fb-9a00-0da3d9beda86",
        "cursor": {
          "ref": "97a8b33e-1275-467e-8c9e-436eac8ac9f1",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9436c951-8fcd-41ee-b38f-1ed41a569109"
        },
        "item": {
          "id": "c3855d9c-8705-49fb-9a00-0da3d9beda86",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ff269cee-c5db-4962-8ee5-fd25d1ceeaff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7beb84e-9129-4a07-b0ce-ca5ac1bce158",
        "cursor": {
          "ref": "0984405a-606d-410a-9641-e24a2ddbdc4c",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0443a3bc-3c1a-4257-8204-be320464f98b"
        },
        "item": {
          "id": "a7beb84e-9129-4a07-b0ce-ca5ac1bce158",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b800c38d-a5b4-4688-9ad8-22db09105f8d",
          "status": "Created",
          "code": 201,
          "responseTime": 42,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "0024a02c-3f02-4b3e-a554-12e98c41533d",
        "cursor": {
          "ref": "0b57ff6b-188c-44ee-b1d3-5d5f33383439",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "89b5ce6a-da7b-4649-b83c-11fbc037c894"
        },
        "item": {
          "id": "0024a02c-3f02-4b3e-a554-12e98c41533d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "368d7308-fa90-4b9c-bb5c-83a5e9e5fb0a",
          "status": "Created",
          "code": 201,
          "responseTime": 223,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b929d3-04ad-4456-b165-44d74e0484d9",
        "cursor": {
          "ref": "bdf05305-4fc7-49fd-b407-c55705a3a037",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d4ef369e-bb77-4cc4-9e99-b30c50d83045"
        },
        "item": {
          "id": "30b929d3-04ad-4456-b165-44d74e0484d9",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9838edd3-02de-4425-a856-6715e86bde5b",
          "status": "Created",
          "code": 201,
          "responseTime": 31,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5be34be-ccdc-4f5c-9fed-6b74d6f432af",
        "cursor": {
          "ref": "faf814ff-237a-4242-9dde-5578af0683a7",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e678fe2f-dd58-4862-a10b-21680286b8eb"
        },
        "item": {
          "id": "d5be34be-ccdc-4f5c-9fed-6b74d6f432af",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3534ec83-7602-43b6-9ef2-7495489bbed0",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "37703adc-b6c1-4214-89b1-2a0abe50b391",
        "cursor": {
          "ref": "b7e5f9fc-adea-4d7e-9a7f-0711c188ae8c",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "1b4a43e2-2caf-4b89-b58b-839935928d48"
        },
        "item": {
          "id": "37703adc-b6c1-4214-89b1-2a0abe50b391",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e66c32ab-e77c-4aea-bcd1-683a7242af4d",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ad0314-664c-4734-a0e4-27e398b04d43",
        "cursor": {
          "ref": "fde5e84d-3057-4a7a-af51-4df63b46f6d7",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "aa5dc210-2713-4cbb-ae3f-cd99c8fadb5e"
        },
        "item": {
          "id": "34ad0314-664c-4734-a0e4-27e398b04d43",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "98d3a91c-1661-470c-8fd0-cbc241ea583b",
          "status": "Created",
          "code": 201,
          "responseTime": 33,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06802152-0b5c-4660-9c9a-303793e57fb8",
        "cursor": {
          "ref": "3d2dccdc-bb49-414d-9efb-53058f025e8a",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a8b98565-b477-4bbd-92e2-e60c39bb496b"
        },
        "item": {
          "id": "06802152-0b5c-4660-9c9a-303793e57fb8",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0851b047-49ae-4508-8ca7-1b3d4ba9a6b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99474631-3e22-4411-9f95-730e2ec0198f",
        "cursor": {
          "ref": "6d6a306d-22c0-4ed8-a6f1-c915424f64b0",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "752f5bde-d39a-4948-b02a-b89241ec809e"
        },
        "item": {
          "id": "99474631-3e22-4411-9f95-730e2ec0198f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4da154ae-ba34-41e6-a057-0922f51e8c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89ec89f-531c-442f-a089-f63853d41fda",
        "cursor": {
          "ref": "82eb9bcb-16b9-4c11-b654-5c3f7d2cabba",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9142a945-3194-4516-83d9-4f34a9a5e061"
        },
        "item": {
          "id": "f89ec89f-531c-442f-a089-f63853d41fda",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a8aa0d87-4263-495c-8b44-dbae28881a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba58696-738c-44d3-b099-8c62daf16d3f",
        "cursor": {
          "ref": "bfb5e0b3-5ced-4d12-90ab-116ca3ccf3c9",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a696a981-00b6-475d-8b82-1b54a98c4b07"
        },
        "item": {
          "id": "cba58696-738c-44d3-b099-8c62daf16d3f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1ab33f56-a916-4352-bb63-1e9c3f6390a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be3029b-ee61-4710-9ebb-00bbe926b152",
        "cursor": {
          "ref": "cab39b5c-866b-48ba-9e75-3cd1ee817d33",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f5c30576-70fe-4a4f-b3ad-58966fa0f0c3"
        },
        "item": {
          "id": "0be3029b-ee61-4710-9ebb-00bbe926b152",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5a9d907f-1d1e-400d-9bac-3bcd1386a633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d4d45f-1e27-439b-b26a-bc1be2752b04",
        "cursor": {
          "ref": "af1a9782-19e0-4ed9-b5a7-047b3abd4d9a",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e7c57f8e-04ad-4a64-8dc5-dafce216c977"
        },
        "item": {
          "id": "b7d4d45f-1e27-439b-b26a-bc1be2752b04",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "66db5149-9148-4dc4-a42c-f42651517b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99b7f1e-f033-467b-9de6-8b24f1c46313",
        "cursor": {
          "ref": "cd2c9eb7-8536-434d-bc7c-2130b18c8cc0",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "bea5135b-b1da-4103-8206-74c68bd10944"
        },
        "item": {
          "id": "f99b7f1e-f033-467b-9de6-8b24f1c46313",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "de109061-5d47-4247-b5e6-1a40c9ef2a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e925f74-e3c7-427f-862b-bbe27eee316f",
        "cursor": {
          "ref": "daca4bad-4162-49e0-9e94-99323b9f26a8",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "bc0ddded-f7cf-4d6f-8749-753af5d8828c"
        },
        "item": {
          "id": "8e925f74-e3c7-427f-862b-bbe27eee316f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "33ee0f24-0f2e-4805-8807-59e621900f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c09de27-e657-4f1c-9db0-945d32fbe067",
        "cursor": {
          "ref": "f61a60f3-c31b-49fa-8a3f-efc6a87d125e",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "11e82ff6-7531-4308-a822-18dfc935153f"
        },
        "item": {
          "id": "0c09de27-e657-4f1c-9db0-945d32fbe067",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fe037c98-5479-450e-ba05-3e872121db3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "062adea6-191c-45e2-a5ff-f4068245e82f",
        "cursor": {
          "ref": "29bf2f06-1ffb-424f-9fa2-95d4170becdb",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2c9b14f8-7a4d-4bc0-8b06-42a04e0b80da"
        },
        "item": {
          "id": "062adea6-191c-45e2-a5ff-f4068245e82f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "747ab2be-bbbd-41cd-a641-17059e6329b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c25825-770e-4489-810f-ff039e0b4df3",
        "cursor": {
          "ref": "614e524c-1485-4220-a6f7-f1cce5d426e8",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0443af54-fa35-4fdf-8ec1-5da39a9a014c"
        },
        "item": {
          "id": "24c25825-770e-4489-810f-ff039e0b4df3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2e90f657-74ae-48d1-a8b4-21ffaecda705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74504b55-e0ea-4447-b97d-169bd3e633ca",
        "cursor": {
          "ref": "03a5f477-6531-4b7e-8dd9-118cc90d974d",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d2a14a35-1a8f-44fc-af9a-ec05e85b67d6"
        },
        "item": {
          "id": "74504b55-e0ea-4447-b97d-169bd3e633ca",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6dd592f2-6a6f-42e0-a669-ffb607aaa667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c412b4-39ff-47a3-ba88-8ad7cc0848ce",
        "cursor": {
          "ref": "8c731a8e-c428-4696-bc56-ba4324c8104f",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f6062b55-3492-4151-bfad-b67ba82b042a"
        },
        "item": {
          "id": "b2c412b4-39ff-47a3-ba88-8ad7cc0848ce",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "55150418-df67-4e74-8252-b23002a1b128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b76700-ecfc-4e8d-9a73-836237f47668",
        "cursor": {
          "ref": "11a90d6d-475f-4857-8a4e-810a2db417fc",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b1fe8c1e-4aff-4b30-b90f-269877bfd73b"
        },
        "item": {
          "id": "18b76700-ecfc-4e8d-9a73-836237f47668",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "34c5ecba-9697-497b-be40-4a860350d600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd04b23-2714-4165-8039-39c7719a0563",
        "cursor": {
          "ref": "ba7f21f8-e9f5-4507-a06c-ef3cd3fae08d",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "640b5be0-fedb-444e-ae1a-660a29e590c6"
        },
        "item": {
          "id": "6cd04b23-2714-4165-8039-39c7719a0563",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5d1da956-c0eb-43c8-9aff-bfc42084db0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93a51fe-56c8-4fd7-839c-82d2176a85c2",
        "cursor": {
          "ref": "feaf04b2-5890-45dc-9aa5-7b2c11d4a89d",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "12564ec5-3242-496d-a607-a6816bd86b89"
        },
        "item": {
          "id": "c93a51fe-56c8-4fd7-839c-82d2176a85c2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "68367e3f-a3aa-4551-938a-4edcbc7a724f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae3949a-c0d0-41a4-9684-a4ef6f8e9d0e",
        "cursor": {
          "ref": "6dab0146-2c27-4b40-900b-cb92b8a78da7",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5d29ef52-ee05-4d2e-95d8-1cc7caa4409b"
        },
        "item": {
          "id": "aae3949a-c0d0-41a4-9684-a4ef6f8e9d0e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8cdc8e67-edad-43d4-a523-d4fc422eebf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45750f8d-651f-4a77-8180-983c7383da53",
        "cursor": {
          "ref": "70a55a0e-c274-4836-8a31-b5b24718569b",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "47538870-28bb-4270-a1f7-5775077a6d45"
        },
        "item": {
          "id": "45750f8d-651f-4a77-8180-983c7383da53",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "13bf617c-1cde-4293-bb0b-bcd18bac29bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ce9f92-fb3a-4920-8f2c-445b40f61909",
        "cursor": {
          "ref": "efe35fd2-bcf0-4d35-876c-297a459cc66b",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6b05d979-29e0-498a-8cef-ea4744c56601"
        },
        "item": {
          "id": "d7ce9f92-fb3a-4920-8f2c-445b40f61909",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5428d402-61d3-42de-80c0-2015642c07a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381a4407-8ab8-483d-9a8d-9143d73dbb16",
        "cursor": {
          "ref": "31768a38-1ad9-4f29-b11c-960086c42f1b",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3179c759-3acb-45d8-b6c6-6433dc727907"
        },
        "item": {
          "id": "381a4407-8ab8-483d-9a8d-9143d73dbb16",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "cde82dbd-d5fd-46b4-becd-227e06e76054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f0c5981-c755-466d-8e6d-26fcfbcd4d15",
        "cursor": {
          "ref": "7a7254be-3ba7-44b4-8263-57ac54d082d8",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "382da052-f39b-4dae-8a6a-a44afe4559b7"
        },
        "item": {
          "id": "6f0c5981-c755-466d-8e6d-26fcfbcd4d15",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6dac8565-9a9b-4fb1-a11a-20c6da8bd401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b7cad8-c126-4a1e-a7aa-27803c8a7db0",
        "cursor": {
          "ref": "c5df27e2-ccb2-46e4-9397-61942e6dade6",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d1c08aa0-f8e0-4176-9bdd-9257469b474f"
        },
        "item": {
          "id": "03b7cad8-c126-4a1e-a7aa-27803c8a7db0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3d328a47-ef7d-4e03-9965-ba3c4a5e733d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "287928d1-6996-45ea-b0a1-02b0ba702b8b",
        "cursor": {
          "ref": "f995f9e2-4220-4116-a489-420adfc4583e",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0aee6651-7bb9-4d36-9af3-d5bf4839c58f"
        },
        "item": {
          "id": "287928d1-6996-45ea-b0a1-02b0ba702b8b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6bc85a0f-48fa-427a-b373-b74ec2623600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70287d37-b93d-4cea-87c3-dbe4b06586ed",
        "cursor": {
          "ref": "0a107fe2-d6c6-4fa0-9b02-24310e991157",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "42bb167b-5539-4038-be74-aa6a4a961a9e"
        },
        "item": {
          "id": "70287d37-b93d-4cea-87c3-dbe4b06586ed",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "235d758c-473c-47ef-a44d-953101d97b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16acfc9e-a826-46a7-8523-c3acf030109d",
        "cursor": {
          "ref": "8fbb6eed-3272-4266-85bd-e7445be6a451",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "82400ef9-97b6-4e4c-9b07-ea1995b447eb"
        },
        "item": {
          "id": "16acfc9e-a826-46a7-8523-c3acf030109d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e156fe92-7a5c-405e-8155-370a584f98a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c7fdd7-6690-42f6-8794-7d752cecc576",
        "cursor": {
          "ref": "477d39cf-a6c3-4e3d-8edd-9211a466cd81",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a06cd74b-f82e-42c3-90ce-83990c910682"
        },
        "item": {
          "id": "d2c7fdd7-6690-42f6-8794-7d752cecc576",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5f680036-5176-4688-84d2-e44c4bbc0867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56993e1e-f227-4ae0-8278-a11b5c078ade",
        "cursor": {
          "ref": "1c7db1c4-1842-441b-9d74-55d774a780f7",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "73ec7af2-f5c5-4bb4-b23c-12593d585f73"
        },
        "item": {
          "id": "56993e1e-f227-4ae0-8278-a11b5c078ade",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b7361595-9fda-4594-b284-773f53584d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf8149a-b019-4d11-8dfc-ddecd145ed01",
        "cursor": {
          "ref": "9ef2ba49-d4f7-44c7-83e1-f280d37f04c9",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "62d4758a-6d18-4bd8-851b-e40bdc956b5c"
        },
        "item": {
          "id": "dcf8149a-b019-4d11-8dfc-ddecd145ed01",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d5c6135f-2a45-4d25-9ddf-8c9d2b132ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c124b824-cf27-4b16-8a0a-81540558f52a",
        "cursor": {
          "ref": "1c8c421e-8f2a-4048-82b5-a2bfa1c969dd",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "762e6a50-bcfc-4962-a031-93bece9fd763"
        },
        "item": {
          "id": "c124b824-cf27-4b16-8a0a-81540558f52a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "20be9dcb-e151-4635-9fe5-e465d9b29426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "691a8037-69ce-4d36-bb4b-90ef4a7eb04b",
        "cursor": {
          "ref": "24e51cf4-a296-4397-9242-3775f8ea8360",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b6f7d6d9-1a6f-4474-baee-cc23e3f3537b"
        },
        "item": {
          "id": "691a8037-69ce-4d36-bb4b-90ef4a7eb04b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "19d2227c-b0ee-45a7-bc86-98291ea4d894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5212cc-7e8c-4268-80d9-d13f85dc8881",
        "cursor": {
          "ref": "7e0daf87-6dff-4700-9cf1-0bf82088eae7",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "fb37dc43-cf9d-4389-b87b-5c756f537c18"
        },
        "item": {
          "id": "0d5212cc-7e8c-4268-80d9-d13f85dc8881",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "de6a401b-f5a5-439a-a9bf-806befca92e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2475fded-480b-4d84-9b3a-f3e207fbe15c",
        "cursor": {
          "ref": "fab1b52d-badb-450d-b695-c78d03bb7f9b",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a79b99be-d63c-4a80-9d17-1faf6fe3b452"
        },
        "item": {
          "id": "2475fded-480b-4d84-9b3a-f3e207fbe15c",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "83ea41db-e7e2-4dc4-b316-dff4bd694ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0129a3f8-ff25-4ca9-8268-63ba64ca3252",
        "cursor": {
          "ref": "2611d4f9-7089-4f77-9f77-7ba17a028cfa",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7f25e977-3532-4dac-b857-8ca719dc2999"
        },
        "item": {
          "id": "0129a3f8-ff25-4ca9-8268-63ba64ca3252",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b5f6849e-5e07-451a-a3de-3b0e80783b59",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d28e3b-58f4-402c-b8a0-aad20d85d0c5",
        "cursor": {
          "ref": "ca1bbead-2828-4421-963b-223cd9a5caea",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2b830028-0048-4bb2-bc11-15845e02117a"
        },
        "item": {
          "id": "e2d28e3b-58f4-402c-b8a0-aad20d85d0c5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "00aaf951-00b4-4623-a5bd-e474fd1c589e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866116eb-9041-4807-a71f-dfa4a173d3d5",
        "cursor": {
          "ref": "31c4e09f-93c0-48d1-8d71-06edc9077fc1",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "396186ae-3c68-4cbc-a3da-f8dda92e5aa9"
        },
        "item": {
          "id": "866116eb-9041-4807-a71f-dfa4a173d3d5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9b51328b-f68a-43b0-8649-812230ec398c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cba3a79-14ff-4b35-805d-c2f558eb2c10",
        "cursor": {
          "ref": "2e8e4a7c-a1ca-459c-a542-74ec883e2ef6",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c95eddcd-730e-48fe-90c1-939c1a324ee5"
        },
        "item": {
          "id": "9cba3a79-14ff-4b35-805d-c2f558eb2c10",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "09e8ca12-3d85-4cfb-baac-1386f3d3c4eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7063337d-fc29-4d0e-a22c-8d9982bb5578",
        "cursor": {
          "ref": "9559c906-954b-4d9f-ac9f-e16f01a50c0d",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "95b043e2-452e-4d09-beff-9346130456a4"
        },
        "item": {
          "id": "7063337d-fc29-4d0e-a22c-8d9982bb5578",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1df4217d-1dc0-40b0-9845-f3cd92c1a647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb60e04-0578-443b-bf09-677402202fbd",
        "cursor": {
          "ref": "165c16ba-5bfe-44d9-a174-1b156e7b6520",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "69faa372-516b-4d65-936d-452977027e10"
        },
        "item": {
          "id": "2bb60e04-0578-443b-bf09-677402202fbd",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "cacb29b1-d373-48ab-8e07-9681f068d90f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b4b423-23f9-43f3-82d9-1d17005b08d1",
        "cursor": {
          "ref": "e2328dd9-fa63-48a9-8acc-64ee4c376e01",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7a0b03da-301a-4a8e-8282-7e1fd4cdca74"
        },
        "item": {
          "id": "35b4b423-23f9-43f3-82d9-1d17005b08d1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ac4d19da-cef5-4069-8b0b-6c9f9fb5d83c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d037bc-7d01-4141-bb29-616923fd0559",
        "cursor": {
          "ref": "05b062d0-20ee-4703-8952-7d666bff9a29",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "1f20d2e0-6cc3-4907-aa22-a983dc47fd7f"
        },
        "item": {
          "id": "e6d037bc-7d01-4141-bb29-616923fd0559",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d59aca99-2d5a-4e1d-aefe-0dd536fd26c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b160ab0d-451d-422a-81ed-b603d190e6ab",
        "cursor": {
          "ref": "f201c187-27fa-44b2-ad9e-cfaf815b19f6",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5cb5938e-5074-4a3d-9f09-f6674d202e65"
        },
        "item": {
          "id": "b160ab0d-451d-422a-81ed-b603d190e6ab",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6ce280bd-af8a-4914-ab87-557c484524a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c1ee01-6af1-4f5c-9d04-f099efa3a9ef",
        "cursor": {
          "ref": "ee7dc2f9-b137-4682-abbd-85bd08874c68",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b5c6f07f-36ca-4891-afd2-fca17c1fcc26"
        },
        "item": {
          "id": "d9c1ee01-6af1-4f5c-9d04-f099efa3a9ef",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "579bc117-9f8f-47ec-a310-ca18bf65846f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea340900-f20d-437e-8f36-bf3dde1aa97a",
        "cursor": {
          "ref": "6f203b7d-07af-4d80-ac0e-ef4be22e8ea4",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6d6ab828-386b-45c3-99a0-5cf9475dafe1"
        },
        "item": {
          "id": "ea340900-f20d-437e-8f36-bf3dde1aa97a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a3ef6edc-8555-4da5-a4b1-52641385138c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2714b652-67c2-4d24-aeca-d0c5ce1ae7e1",
        "cursor": {
          "ref": "c6ee3038-66ba-4b08-bcaf-e06700e240c6",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "dc29d6bc-acc3-40fd-bff5-87c0ea9339ff"
        },
        "item": {
          "id": "2714b652-67c2-4d24-aeca-d0c5ce1ae7e1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f63fafd4-8816-403b-b9d0-5858ab061aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4428b6e9-f04f-4813-86b2-6f8db0bae20d",
        "cursor": {
          "ref": "896e85ad-c6ab-4f8f-947d-617b3be2f6c9",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f1024e3a-67ff-4b32-9fa9-18daad67bb7c"
        },
        "item": {
          "id": "4428b6e9-f04f-4813-86b2-6f8db0bae20d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c45fa6ce-2258-40b8-98fc-53d10485d746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4afd6ec8-6232-4c15-b8df-7b31867e5516",
        "cursor": {
          "ref": "7a1a939a-dfb5-4ed4-b4bb-17f172ffce73",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "3b34b1fe-cb5f-4730-aace-d63d8b813dd0"
        },
        "item": {
          "id": "4afd6ec8-6232-4c15-b8df-7b31867e5516",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "32c00667-3f52-4d16-9d41-d78aa4f88435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99cd4293-2267-42a0-81ec-a89eff04ce98",
        "cursor": {
          "ref": "acd2bf5c-d8f5-444e-9e18-ebc4fe7253f0",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "00ce2969-7955-4349-80bb-5dbe93be6c06"
        },
        "item": {
          "id": "99cd4293-2267-42a0-81ec-a89eff04ce98",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "792e65f9-2978-4144-98f6-d993d9e2fda0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6986b07e-1006-4069-8e17-e82221fcbd87",
        "cursor": {
          "ref": "00b9a7a1-22a7-41aa-8069-cce2ec8fb817",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "18f293b0-2569-4d01-8804-513428f2ddb9"
        },
        "item": {
          "id": "6986b07e-1006-4069-8e17-e82221fcbd87",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c6df6e25-a0ea-4cfe-959d-7fbb8328adde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ea32a2-4cc2-4255-ac46-0170056d9a08",
        "cursor": {
          "ref": "61465b42-cf78-4cb8-ab9a-9c934e174a8d",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "55d1daa9-3e75-4e37-881b-5d0f036396a1"
        },
        "item": {
          "id": "79ea32a2-4cc2-4255-ac46-0170056d9a08",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "001ebb01-4a82-4278-99b6-845b43a4f4ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f0c65a-c2d2-47b6-b03a-04a60a32d2d7",
        "cursor": {
          "ref": "338268b0-5452-4fb1-8aac-0a922efb53e4",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "cfcfebca-0eb3-4bdc-8ea9-7fc9f08e9ab4"
        },
        "item": {
          "id": "a3f0c65a-c2d2-47b6-b03a-04a60a32d2d7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a5da414c-71a1-41be-9a8c-e46c4fcf0222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd5d0df-07e9-46c0-8837-b1a478974bdc",
        "cursor": {
          "ref": "85a377ae-b50e-40ce-a95e-6124108d6c70",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "58af8ce3-ee4f-418f-ab86-e685b716c7a0"
        },
        "item": {
          "id": "acd5d0df-07e9-46c0-8837-b1a478974bdc",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "55e2a79e-b9bc-4dfa-ac16-01565cfe8023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87503eca-e644-4795-8951-88546730a03a",
        "cursor": {
          "ref": "d9ab660a-6526-4352-a06a-74a8ce973c31",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "27288634-6fd2-4844-97cf-11c80f01cbfb"
        },
        "item": {
          "id": "87503eca-e644-4795-8951-88546730a03a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3f85d717-dfa1-462e-a355-8a26804ff49e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf9cc14-abd2-42f2-adb0-af5a12f0b8cb",
        "cursor": {
          "ref": "cde824cb-bc2d-4dfb-b59d-bd5438f93386",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8858dc54-96b8-473f-bd69-e4530161ae9b"
        },
        "item": {
          "id": "bdf9cc14-abd2-42f2-adb0-af5a12f0b8cb",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "cc54bd09-8b42-4dd9-bea3-5db14b631142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053ded0f-4678-4041-ab19-ec90de3ec13d",
        "cursor": {
          "ref": "284197a3-9499-4212-99ed-e771e014a185",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "0abbd623-47c5-43de-8e3f-96379f1027e5"
        },
        "item": {
          "id": "053ded0f-4678-4041-ab19-ec90de3ec13d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "220019c2-0c03-4c07-b072-c4e0d376dd07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98b5c5a-c4ee-4e13-822f-18e459160bbc",
        "cursor": {
          "ref": "29fa804f-3194-476e-a2f2-f42b5bb88071",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d1d9ad6c-f612-476b-a6e2-e3910688a08c"
        },
        "item": {
          "id": "c98b5c5a-c4ee-4e13-822f-18e459160bbc",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4ac42331-2c71-415f-8ad2-868854de2907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2235d263-7c29-4b02-8321-62be8e0d8067",
        "cursor": {
          "ref": "b0bd7eac-ca51-42cf-830a-af4504045580",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e6305eca-8187-4930-8787-f2f56ef32e16"
        },
        "item": {
          "id": "2235d263-7c29-4b02-8321-62be8e0d8067",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c5fb8eb4-7e72-494b-b6b9-3ac49b8a3073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9b6cc9-3c46-4673-94af-f0be289a4b78",
        "cursor": {
          "ref": "32ef976f-df16-44f2-9b8e-872141d860fa",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e2c85f57-ab0c-47b1-aef3-e409b7953f1b"
        },
        "item": {
          "id": "1b9b6cc9-3c46-4673-94af-f0be289a4b78",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "410e6cce-d083-48de-8d5e-e0602e8ea541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10400bdf-e3be-40f0-97ef-f9e9f0f87673",
        "cursor": {
          "ref": "29293f3f-a4d1-4de3-a380-fb220c3ab638",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a9f7459f-d03f-485a-bc00-e256e365bf60"
        },
        "item": {
          "id": "10400bdf-e3be-40f0-97ef-f9e9f0f87673",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4cb4596f-8017-4d7a-8c8f-2f21e2e7812d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06dee530-4dfe-4429-ae56-9b7fe6366f11",
        "cursor": {
          "ref": "284a333a-5e10-4915-ab33-7947af72327a",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6aeda354-4af2-477c-9538-820f461c9db6"
        },
        "item": {
          "id": "06dee530-4dfe-4429-ae56-9b7fe6366f11",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5cf763b9-513c-4f63-b7f1-9e657b532977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48489c0-daa6-40d3-9a6a-8b6d4daae8c1",
        "cursor": {
          "ref": "68ee0514-cdb8-44ad-a7d6-3b7c31fe50e9",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "bb072c6c-86fa-426e-b418-504a1ff8da45"
        },
        "item": {
          "id": "f48489c0-daa6-40d3-9a6a-8b6d4daae8c1",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ffd36da0-2b9d-4ede-b397-599393e665e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de85d8c2-e5e4-48de-aa03-539e3bde1993",
        "cursor": {
          "ref": "267cf7e7-2506-4c5b-ba96-e3aadb16d823",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d0ea9184-cae1-417c-a9a1-35d8cf367e8d"
        },
        "item": {
          "id": "de85d8c2-e5e4-48de-aa03-539e3bde1993",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "203bd10c-371a-4f2f-a53b-5d9dcc85da15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "323660ce-f6f5-4503-b23e-c7e3dd14aabf",
        "cursor": {
          "ref": "4b7383ae-3aa0-4ace-8204-261a7c93ae52",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a7c52551-cf9a-43f2-a387-e1ff13e0f90b"
        },
        "item": {
          "id": "323660ce-f6f5-4503-b23e-c7e3dd14aabf",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "029905bd-474c-4521-8c86-eb073db92331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fccb813b-3ca6-4bfe-ab09-a17a67ed622e",
        "cursor": {
          "ref": "e3d59166-f329-47d4-ac94-b19290c75e24",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d5be6ccf-cbb5-4cb8-9fb9-a83eadc72b39"
        },
        "item": {
          "id": "fccb813b-3ca6-4bfe-ab09-a17a67ed622e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6881332e-fc40-4382-9c2d-bdf5bb3d5434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d032fb07-18e7-47a8-b8ca-0d663a09f75f",
        "cursor": {
          "ref": "ad754904-2f6f-455f-a4b6-381e64febccb",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5434af0c-0b2a-47d2-bd36-2f8194f49203"
        },
        "item": {
          "id": "d032fb07-18e7-47a8-b8ca-0d663a09f75f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a8283695-a1b8-459a-a057-657b4b348fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6c36a9-9f5e-422f-a85a-4cf4816da245",
        "cursor": {
          "ref": "405bd51d-06c0-4283-8eee-89ffc2aceaab",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7ade13e3-76c8-48b1-b9c1-8ea8f83b8431"
        },
        "item": {
          "id": "6b6c36a9-9f5e-422f-a85a-4cf4816da245",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "77e7f3f6-9b02-46b5-895e-cf5cb1eb644e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d45af91-0f61-4d30-b787-68e117f4ace8",
        "cursor": {
          "ref": "deeeecaa-fb4e-4397-b1cb-a6e4c038f42b",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0d80e027-80de-45d1-95f1-b151a423a2d3"
        },
        "item": {
          "id": "2d45af91-0f61-4d30-b787-68e117f4ace8",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "cfafcfbd-066a-45de-8dc9-83e5f9776236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce47268-019f-4943-8659-c87174765c7d",
        "cursor": {
          "ref": "b648a9c3-5b0d-452f-9c9a-15324cd6e072",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2122f84f-ec3c-49d2-ba76-dc7013502285"
        },
        "item": {
          "id": "8ce47268-019f-4943-8659-c87174765c7d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "5dd61f1d-1233-46d9-987e-03f369a83f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84bbfe2c-7e83-42ea-bb82-5cca77046bbf",
        "cursor": {
          "ref": "fe29cf7b-5933-41db-9b04-7ad9103756fa",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "838db585-bae5-4321-aa79-9648601dcddf"
        },
        "item": {
          "id": "84bbfe2c-7e83-42ea-bb82-5cca77046bbf",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "7a1426d9-e963-4167-917a-8b6beb7b0970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc58e24b-bf2c-4cd9-b7dc-5d9ea195fb25",
        "cursor": {
          "ref": "853d347c-cf99-462c-9700-73461469ce43",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ea30ae2a-fb54-4a9c-a734-0e82905392ec"
        },
        "item": {
          "id": "fc58e24b-bf2c-4cd9-b7dc-5d9ea195fb25",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "30294664-5e11-4ddb-b5b9-067abbcbb043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f98e73e8-7ddc-4039-863b-1318f35ff695",
        "cursor": {
          "ref": "235d4e06-7ec7-4598-a436-599895965d2e",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "56c416b2-e217-4bde-97a7-7f01075ca023"
        },
        "item": {
          "id": "f98e73e8-7ddc-4039-863b-1318f35ff695",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "74917d04-bd59-4025-9489-52dbe8b430db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2354253e-a86a-4019-81bd-74dcc59c985a",
        "cursor": {
          "ref": "cfb30d88-2d88-4845-a0ba-620ae9df0954",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "53b9a9fe-22c6-4e33-98f9-615b9ec3b3f4"
        },
        "item": {
          "id": "2354253e-a86a-4019-81bd-74dcc59c985a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3ab2bb4c-792c-47c5-b616-fe41696edd8d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc58ec4-d3b2-4df3-804b-3cbdb5ad662b",
        "cursor": {
          "ref": "780c243f-5a93-48f9-a558-5ef681f2d71e",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4d976731-9f2b-4131-af36-49fa61100bdd"
        },
        "item": {
          "id": "1dc58ec4-d3b2-4df3-804b-3cbdb5ad662b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2635a618-90e7-4aeb-bd70-cb752d6a0c57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de1fdad3-0821-4e55-aa66-a3a4c4fa2081",
        "cursor": {
          "ref": "81a9f3a2-46e9-47f5-83cb-88b8c1fe1c44",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0b35a721-332a-4a67-bf5c-3086dbbfa2b7"
        },
        "item": {
          "id": "de1fdad3-0821-4e55-aa66-a3a4c4fa2081",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "769e82df-628b-4bbc-a3dd-d51ca775136c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ab449d-5f9f-4ffb-928f-0dbeb9221c4a",
        "cursor": {
          "ref": "f761173e-3cd3-4a15-998d-6f99c25e1f15",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7c9f3684-6c54-4a3b-9c19-91d9d15666ad"
        },
        "item": {
          "id": "c3ab449d-5f9f-4ffb-928f-0dbeb9221c4a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "95325d03-50bf-4ff6-852d-5f21c5d081c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0145bece-57f8-4581-b054-a1ce5bb453fe",
        "cursor": {
          "ref": "44def60e-5673-4322-b308-a371eaeec2cc",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b28075ce-dd35-4c9a-b2c1-01c33b95a7aa"
        },
        "item": {
          "id": "0145bece-57f8-4581-b054-a1ce5bb453fe",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "31db45f9-d873-4663-9026-4d7f0470f647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9669d431-69a1-4ee4-b673-b5df71b8862e",
        "cursor": {
          "ref": "5f52dbff-b5eb-4127-ab5f-af5f3afd2c87",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d8f2fcd6-d7c7-4f47-8682-2be5d1e8b74a"
        },
        "item": {
          "id": "9669d431-69a1-4ee4-b673-b5df71b8862e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "da65719d-7a8b-4c73-bf09-c1b730798aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e3be7c-eb66-4f89-9ea9-3ac68c40dd29",
        "cursor": {
          "ref": "986cd80d-561c-449a-8d2b-ee547d05a3ac",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "db8097c3-cf81-4e31-9828-c01a5425fb68"
        },
        "item": {
          "id": "47e3be7c-eb66-4f89-9ea9-3ac68c40dd29",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "30e79b74-907b-4732-b50a-8958cecac782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837c4a5b-de34-46ee-84df-cb1fa3d34d26",
        "cursor": {
          "ref": "506d5cbc-7ae2-4b6e-a9c2-e63d020b432c",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ef2c19d5-3c12-4548-86d1-22c9ae0a3bee"
        },
        "item": {
          "id": "837c4a5b-de34-46ee-84df-cb1fa3d34d26",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3d5e8c6c-f64c-469f-a492-9c0608be3a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d88ec8-a032-4d1e-acd0-653e513c570a",
        "cursor": {
          "ref": "67a0ca2b-0af1-4238-a531-423e4c73fdef",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e61a97b9-5de6-40d0-9ab2-253430e7308c"
        },
        "item": {
          "id": "36d88ec8-a032-4d1e-acd0-653e513c570a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "eb4ca60c-b06d-42b7-bf0f-6a1fbebde50e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b7be49-4f62-4f0f-9c5b-92c2c6f469a6",
        "cursor": {
          "ref": "56a1574f-276c-4cd0-8658-a58e192d1a73",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "4e18600d-33ba-464d-9211-6c6d998714e0"
        },
        "item": {
          "id": "29b7be49-4f62-4f0f-9c5b-92c2c6f469a6",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "7ab5179d-0b21-4951-84f1-1dec83c2675f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db34001-e7d8-4d74-93c4-948a79db4db2",
        "cursor": {
          "ref": "a5b787d2-4900-471c-b798-359a4fec5475",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ac0dc7a8-7896-4f01-a513-5c4efc24308f"
        },
        "item": {
          "id": "8db34001-e7d8-4d74-93c4-948a79db4db2",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1d5d92ee-300f-4db2-9fe8-15aada34fb45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da06796d-1429-4434-b75c-62d113f095cc",
        "cursor": {
          "ref": "36f352b7-39cf-4763-926b-bd9d4dc06bca",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "18969d66-5447-4f7f-9a7c-ed5fe8734b98"
        },
        "item": {
          "id": "da06796d-1429-4434-b75c-62d113f095cc",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0291be05-a027-48c1-9579-b4f94b1e0f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba30838b-c15e-4090-9138-654587cecf77",
        "cursor": {
          "ref": "add03b99-dc0d-43df-82d2-fad20b2f818d",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c90fd8a9-58ab-40cf-bbc1-13d6d58e1198"
        },
        "item": {
          "id": "ba30838b-c15e-4090-9138-654587cecf77",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8b3f847e-ae0a-4b89-b27b-261548568321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eee6527-a416-43f9-90bb-ecc5f7b2f8c8",
        "cursor": {
          "ref": "6adcc62b-f7cd-49cf-8e7a-12947cb87d5a",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "bcc4411d-c2e8-47fa-b438-2e6ebd087479"
        },
        "item": {
          "id": "8eee6527-a416-43f9-90bb-ecc5f7b2f8c8",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "52bfb5cc-151f-464b-90ac-6157b5acaa3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565c2fc5-39c9-4f6f-abc4-1a9747cbe593",
        "cursor": {
          "ref": "27880cde-e7eb-4703-9e68-3fc5f97b5fd6",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7dd9a985-4dd8-4fa9-89ea-2a6afdcc3126"
        },
        "item": {
          "id": "565c2fc5-39c9-4f6f-abc4-1a9747cbe593",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7be368cd-b3d5-48be-a6ee-c51ea4d47d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94cfbb9f-50b5-4ff3-94d4-f63748781dc5",
        "cursor": {
          "ref": "879ffe67-766f-4d04-909c-48f0013d1d27",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f73906d9-340d-4f8e-879e-e5e8c0188932"
        },
        "item": {
          "id": "94cfbb9f-50b5-4ff3-94d4-f63748781dc5",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "12b6f56a-bf7b-4484-a946-6c8ae4cc90f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65910e24-af85-4e80-bdf9-c522d78ec11a",
        "cursor": {
          "ref": "382f9dbc-ec72-49fc-a606-777119648456",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a1ab578a-0f9a-48c5-a128-51ac1b77d728"
        },
        "item": {
          "id": "65910e24-af85-4e80-bdf9-c522d78ec11a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "29290ce3-01df-4517-92d7-6630ecc3a0a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3593ef6-d54b-492c-a373-5bf521db4a34",
        "cursor": {
          "ref": "5211aa0b-5812-4b9d-9073-b2113c0f2298",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "5a4e9700-52ea-482d-9978-ebbe03c6c44b"
        },
        "item": {
          "id": "a3593ef6-d54b-492c-a373-5bf521db4a34",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a6a62a5e-f64a-4b71-ac01-7b7b7419fa00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adecf3b1-81d8-486c-8083-f52903bddabd",
        "cursor": {
          "ref": "1a86a98c-6c9d-4841-bce7-98bedaead25e",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "63c9d694-9c8b-4db1-8c96-2caf518c6696"
        },
        "item": {
          "id": "adecf3b1-81d8-486c-8083-f52903bddabd",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0e158171-5b1d-4527-9cae-db315f1631e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e91e2d26-e679-4775-9a15-f5830dcd0de9",
        "cursor": {
          "ref": "184ed2b7-fba8-4d90-af87-dcc2186810b4",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d2ad71fb-f5f4-48c1-aced-515c6eb74002"
        },
        "item": {
          "id": "e91e2d26-e679-4775-9a15-f5830dcd0de9",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "47d2efd5-f5e9-411e-8131-e90e270eefb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b78747b-6152-4096-88ed-930bbf5f622e",
        "cursor": {
          "ref": "29092f00-7257-4b1f-b601-b2f9c19c8392",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b4a1dbc8-b486-4563-ac7b-ecb002bc1d4f"
        },
        "item": {
          "id": "0b78747b-6152-4096-88ed-930bbf5f622e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "6a7240e6-421b-4445-8e6d-54f89e5a76ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d99ba7-75da-4d5e-9eaa-28b914042193",
        "cursor": {
          "ref": "415edeb5-babc-4b26-835b-ff8a0889164c",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ef21291b-4da7-40c2-bbcb-42edb155259e"
        },
        "item": {
          "id": "47d99ba7-75da-4d5e-9eaa-28b914042193",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e3dc6ffb-b511-478b-8e65-a461f1de3082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47cb1589-fdf1-48d5-888f-c810e2ce7a40",
        "cursor": {
          "ref": "f9a74805-43bb-4751-9b53-7be39d5a5fbf",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "87491f3b-decd-4d50-90cb-52fa2a26f499"
        },
        "item": {
          "id": "47cb1589-fdf1-48d5-888f-c810e2ce7a40",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "85f99c99-df16-4c70-894c-ec4778f8d752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45174c62-4f83-4edc-8d52-336df41e0844",
        "cursor": {
          "ref": "c5910316-dca9-477c-ae72-04dbfbf9627b",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d039f008-c345-48cd-851f-bdecbe77efe9"
        },
        "item": {
          "id": "45174c62-4f83-4edc-8d52-336df41e0844",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ff5df1cc-a9b8-4e78-854a-bdb683b1e6bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d1732e-4ff9-4af1-ab3a-448199a1b1aa",
        "cursor": {
          "ref": "a1dc17bf-13c7-444f-82ab-56d3d0a45065",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ad4c9c85-1e1b-4534-8218-ec9fc6fa4171"
        },
        "item": {
          "id": "87d1732e-4ff9-4af1-ab3a-448199a1b1aa",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f1990328-8467-4d26-88f5-a19af83c033a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2fcbce-f093-4a28-865c-e93e30c38667",
        "cursor": {
          "ref": "ce14daf0-157c-44e5-88b4-51bc19db3ee9",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "bcdaab41-edf1-42aa-aff8-faa636d325b7"
        },
        "item": {
          "id": "3a2fcbce-f093-4a28-865c-e93e30c38667",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1e060f44-56bc-4759-81ad-705b4c2b2d2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62b309d-2097-466d-896e-433cc766e0d4",
        "cursor": {
          "ref": "26e724eb-ad2d-4c61-9a87-c16793e3f3ec",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9e2297fa-d545-4009-828f-1c4a1c2be1f2"
        },
        "item": {
          "id": "b62b309d-2097-466d-896e-433cc766e0d4",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e567b371-480d-4aba-99c3-f5f466dd4789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310baa88-ac38-4a11-9544-c18e32a2baa6",
        "cursor": {
          "ref": "cb5bc028-b508-4972-bfb9-6aa25b74aeda",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "87881552-1fa1-41ee-a2f9-8085d5c8a511"
        },
        "item": {
          "id": "310baa88-ac38-4a11-9544-c18e32a2baa6",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d5ba7089-c949-49f2-a67b-1a8f0cef5a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08209209-ac4a-401c-81ce-e2f54cbb88cc",
        "cursor": {
          "ref": "e1ec7823-2fa0-4ead-97c0-965def933d9d",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0745723d-5d39-4252-834b-440eaac3614e"
        },
        "item": {
          "id": "08209209-ac4a-401c-81ce-e2f54cbb88cc",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "cd2b6bb9-e796-4ce0-bf5f-c8a15b86d81d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca30a10-d576-4f51-a776-55c147dc029e",
        "cursor": {
          "ref": "d413d2f9-d0d0-4979-870c-d4016e8f7259",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5f3aa3fd-384b-485d-904c-cc1a04e977b4"
        },
        "item": {
          "id": "dca30a10-d576-4f51-a776-55c147dc029e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f331843d-165b-4fcf-b3e1-66ec3c398d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dfe06ee-a8c2-49bc-9141-e89a84c7ea9c",
        "cursor": {
          "ref": "ca80e676-fe19-4e25-851f-900d8c25bb3d",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2d02b3ca-520c-4c4c-b90b-c6a1254a47b0"
        },
        "item": {
          "id": "7dfe06ee-a8c2-49bc-9141-e89a84c7ea9c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d4c8f496-493f-4d64-95fa-a5f84f32b36c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef63e20-2af3-4750-8907-6d90e77422b4",
        "cursor": {
          "ref": "141ef419-c921-4d7f-a8fd-1eda5d3615ab",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a4aebb20-0eec-4e28-b739-067c3819c019"
        },
        "item": {
          "id": "aef63e20-2af3-4750-8907-6d90e77422b4",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "069da470-f60c-48b5-a6ac-d695e3313b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e4a847-58df-4a98-9a9a-78909d34cd9d",
        "cursor": {
          "ref": "fb2b4613-f438-4d2c-8347-663a0c87c164",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b4546c41-d569-43ec-b39a-a5bf7e679471"
        },
        "item": {
          "id": "62e4a847-58df-4a98-9a9a-78909d34cd9d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "316bcc18-a600-4278-8582-514409e5de4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02763e1a-fa4c-47de-beaf-06a2f19d2c5e",
        "cursor": {
          "ref": "a1e521a8-f020-4e30-afc1-8dfb96c199c1",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "022d934c-e7e1-479a-9085-e1ea1dcba62b"
        },
        "item": {
          "id": "02763e1a-fa4c-47de-beaf-06a2f19d2c5e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "95835624-fec0-4485-85cc-ab46092879e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e89c2b5-3086-4ea4-8312-622e956290a1",
        "cursor": {
          "ref": "c6ee71ff-3c65-42c9-881d-812c9d3461eb",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "67358911-4ea4-4e7a-acd1-86e643747351"
        },
        "item": {
          "id": "6e89c2b5-3086-4ea4-8312-622e956290a1",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "cedc7ff4-1413-4993-b6d8-d3c51bc4dd6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a116f2-b7a2-495f-b0d0-0b97b0c9b049",
        "cursor": {
          "ref": "55128e4f-6e5a-439b-b843-a56963f3105b",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f786013d-cc71-4645-af26-aa9325786f01"
        },
        "item": {
          "id": "39a116f2-b7a2-495f-b0d0-0b97b0c9b049",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e7748086-971b-40c5-90a5-66fa8b95af5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed118091-a637-46bd-a8d3-31deb64ded06",
        "cursor": {
          "ref": "01439251-3590-48b1-8ac4-915482168b0d",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "25552079-4dd2-4fd4-a9a5-4ef39101565d"
        },
        "item": {
          "id": "ed118091-a637-46bd-a8d3-31deb64ded06",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3430eaee-28b0-4385-9253-9d393a008db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3732570-50ea-4c79-a5a3-6b8f040d4a90",
        "cursor": {
          "ref": "324623ba-597e-4fff-bfe6-9360a0cdd5a8",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "13f4b5f2-bc59-4644-8523-e4b0d3d78afb"
        },
        "item": {
          "id": "d3732570-50ea-4c79-a5a3-6b8f040d4a90",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e10788b3-e294-45c6-8f6f-9e2ec3bc6a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aabc1b90-8e0f-49c8-b9e9-47fe0281adf0",
        "cursor": {
          "ref": "19a7bb5c-0f8a-4d85-94a7-8011500554dd",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "4b1e06b1-f105-473d-b711-04e869648baa"
        },
        "item": {
          "id": "aabc1b90-8e0f-49c8-b9e9-47fe0281adf0",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "170778d5-fb9e-46e2-9d8d-d561bf43a261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb7a6d9-c4b7-4f09-b382-ba20a6eaaa70",
        "cursor": {
          "ref": "3bdd02e0-0fa5-4522-b849-983a540edfba",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7e36ef3e-0606-4768-96f4-5899fe661b23"
        },
        "item": {
          "id": "3bb7a6d9-c4b7-4f09-b382-ba20a6eaaa70",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "44ddbbdd-6f64-4c58-a91f-ea33e0dc4cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e01baec-8b29-407e-8545-04a91a74dd02",
        "cursor": {
          "ref": "13b10b79-9f54-41dc-8484-bb2e802934da",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5adece5f-c5ed-4a7f-9764-0a9ff117c89c"
        },
        "item": {
          "id": "9e01baec-8b29-407e-8545-04a91a74dd02",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "16147414-29fe-43cf-813b-9b5055c06873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0b1659-7673-4ddc-bd4c-0986eeef6fa0",
        "cursor": {
          "ref": "7b3f2a98-5092-4fcf-9b11-c2023df9337c",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "299f19e5-1505-44b0-af66-d88cbaad9c93"
        },
        "item": {
          "id": "4f0b1659-7673-4ddc-bd4c-0986eeef6fa0",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "3434a843-bd78-4dfc-a095-1bf47c9103ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38497661-f442-4dab-8685-aa05f8aadda0",
        "cursor": {
          "ref": "bfcd7939-e92d-4f9d-aff6-8fff653cedb4",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "17768758-94d3-4ce5-bc68-8c7f2cc16982"
        },
        "item": {
          "id": "38497661-f442-4dab-8685-aa05f8aadda0",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "4b5f6eee-21af-407d-b36e-83f2b224ebfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f0d162-91dd-46ec-9d08-44c1f0ef7a4b",
        "cursor": {
          "ref": "89481e52-2d52-4262-b3e0-318cc3355b60",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7d909cc8-ef7a-4bbc-8857-751dad5f9b2d"
        },
        "item": {
          "id": "98f0d162-91dd-46ec-9d08-44c1f0ef7a4b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5ae3de3e-c912-48c0-aead-b6655af53e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051591a9-ccce-4883-8423-2f8c4c73fb4e",
        "cursor": {
          "ref": "c1dde1be-8cc8-44a5-832a-76e4c7f82b31",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "76ad1f82-7e8b-4167-bc1b-d792a0218704"
        },
        "item": {
          "id": "051591a9-ccce-4883-8423-2f8c4c73fb4e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "68856e53-c24d-4f5c-b406-bfc0f53b9a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1311fe55-3526-411d-9207-af156719bd80",
        "cursor": {
          "ref": "86d10f68-ba92-4fda-867f-6340022c8f34",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "89afe1df-9ebf-4ebc-a293-3d0bcabc20ec"
        },
        "item": {
          "id": "1311fe55-3526-411d-9207-af156719bd80",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "27b661c4-aadf-4863-8920-f0fcb3524c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44fc3ca3-5826-4a27-a2d5-688377be0790",
        "cursor": {
          "ref": "ee31a150-df90-4a82-b946-c705c8c0c558",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2743e48c-abec-4c57-88f4-f37a61b79c9d"
        },
        "item": {
          "id": "44fc3ca3-5826-4a27-a2d5-688377be0790",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "11d34ab7-44d6-4ec0-942d-aed3c743deaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a620a28-436e-4aa3-a209-4d0a268db174",
        "cursor": {
          "ref": "ee4599c3-bf93-4652-b932-194dc9366eb8",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "14194f74-17b5-46a9-a2bc-d4b89817e235"
        },
        "item": {
          "id": "8a620a28-436e-4aa3-a209-4d0a268db174",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "bd9f7898-3c59-47fa-85c0-1a7b5e5ff9b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9a4dad-ca14-4c04-b57a-e8a3e7e4bde3",
        "cursor": {
          "ref": "0645f787-2a9d-494f-8773-cefd8e3bfb95",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4d999ab0-badb-44f4-b53d-8c2bbe5d0111"
        },
        "item": {
          "id": "af9a4dad-ca14-4c04-b57a-e8a3e7e4bde3",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ebbb4c0b-5097-4bf9-9780-d1a96dda39ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0802d5c8-4a6a-4acf-9c89-190ef2fc39e9",
        "cursor": {
          "ref": "9ad2f13e-e920-4cf9-9a6e-a168bc5ec0bb",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4265e32e-a614-43e9-ab76-53f552cc065e"
        },
        "item": {
          "id": "0802d5c8-4a6a-4acf-9c89-190ef2fc39e9",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6d00cb06-bfce-45fe-9268-a3e729c48fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627fc35e-1962-438b-9bca-94a4e220abdc",
        "cursor": {
          "ref": "97c38e2d-8c40-48d8-b85d-7643ec21babc",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "bf98c4dd-3dd0-41fb-b312-c10cb5a23554"
        },
        "item": {
          "id": "627fc35e-1962-438b-9bca-94a4e220abdc",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "fe0dd907-c01f-450b-ba7e-882fdc0c5c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0127abd5-c015-4dc5-97fa-a3335606b7e3",
        "cursor": {
          "ref": "e507b8fb-608d-44bc-89af-9107b1e44eee",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "0a2beab9-9992-4281-830d-2d83631f2d0b"
        },
        "item": {
          "id": "0127abd5-c015-4dc5-97fa-a3335606b7e3",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2a864fe5-19e7-4d2c-bfd9-2c9b144627d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a62900be-e782-4f84-8e14-f836b967566d",
        "cursor": {
          "ref": "7425044b-e4cf-481a-a2ca-8d259ac161e7",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "16560af3-a385-470d-b084-e278940066d0"
        },
        "item": {
          "id": "a62900be-e782-4f84-8e14-f836b967566d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a53465a1-a35a-4069-ac38-0d32a8e0d573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5fd6fb-50f9-4dbe-bf11-b977e0f7da86",
        "cursor": {
          "ref": "7eb796f6-03c8-46e9-a1b9-cfa9291dd3d7",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "95945a68-2d5c-47b8-aa89-0b1a35e71060"
        },
        "item": {
          "id": "2e5fd6fb-50f9-4dbe-bf11-b977e0f7da86",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f7fd7c18-70ca-4c6e-8f78-c5b0e9d7a959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af6cfb7-b397-4161-8089-134b39de44db",
        "cursor": {
          "ref": "59a16482-dbee-495f-aa13-ee650371a3df",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7939f33e-fc4a-4122-8bb9-5bc53bd58a2e"
        },
        "item": {
          "id": "6af6cfb7-b397-4161-8089-134b39de44db",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "67e01935-9dae-4370-82d9-4a522a21cf19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452cd790-4936-4dd2-b1b3-6cd5592ff8cc",
        "cursor": {
          "ref": "74f610b5-189a-4128-91b1-8bb66b1bc7a8",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "fc893bb0-1f70-4dcb-8ae6-f7f9811ffc64"
        },
        "item": {
          "id": "452cd790-4936-4dd2-b1b3-6cd5592ff8cc",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "38c01004-c14e-42a6-b049-4d7ee9400293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bfc14d6-adf5-4879-a944-3fc6ed5afc82",
        "cursor": {
          "ref": "b4ca40d1-0ea4-4a78-af8d-bbea1446fb13",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "909033c1-a610-47df-8dd1-669419a163c3"
        },
        "item": {
          "id": "3bfc14d6-adf5-4879-a944-3fc6ed5afc82",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "bc2128e1-64d9-4798-8671-100d8dfe84d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17d3dcc-983c-4433-ac5a-3e82620cb393",
        "cursor": {
          "ref": "15075324-a210-43af-8dcd-0f3b12fec761",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "2f557f74-41d7-4818-8a66-3f9d24d879a2"
        },
        "item": {
          "id": "f17d3dcc-983c-4433-ac5a-3e82620cb393",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "4a7e35ea-f273-4742-a3bc-1d426c189996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89bd0cfe-4e63-4049-9d08-e8c952c99a5e",
        "cursor": {
          "ref": "3b689962-c9ce-4ad7-83c5-d9b908e4903b",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "fc5e086b-1524-4bf6-95fb-83e98c04170f"
        },
        "item": {
          "id": "89bd0cfe-4e63-4049-9d08-e8c952c99a5e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "27e92eb9-210c-4c47-91d6-f097bcc7a34e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1892c302-a579-4425-bfa3-f3548d2936e4",
        "cursor": {
          "ref": "c6e45016-c694-4385-b708-aee697dadb4e",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "5d841032-c87a-4e58-b11c-5f31ce8694b9"
        },
        "item": {
          "id": "1892c302-a579-4425-bfa3-f3548d2936e4",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e5fab2e3-2c9e-47cb-ab16-f0ad2f156ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bce67fe-7b5e-43f2-bb53-1a8d2de06b82",
        "cursor": {
          "ref": "852b0385-e808-4153-9ce1-c4b92c9957c1",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f2db8f0c-4deb-41ec-a505-dd7a75ed81f6"
        },
        "item": {
          "id": "7bce67fe-7b5e-43f2-bb53-1a8d2de06b82",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "762cc027-f6f3-47f4-85fe-14639038aa2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55cab54-3199-4ed0-8933-8f2b16645fcf",
        "cursor": {
          "ref": "650b28ce-9a69-477c-998c-6e6bf54d5507",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "9dcba0dc-7eea-411b-981c-e6299319b631"
        },
        "item": {
          "id": "f55cab54-3199-4ed0-8933-8f2b16645fcf",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "deba70d3-e328-4825-ab94-f9198634e277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64d8d0c-0b14-4d65-8e6e-8579d305eb48",
        "cursor": {
          "ref": "ad6bf83e-90b7-4a55-802b-837838057eb6",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "faf92bd2-fafb-4b25-9217-7270b7c0ff05"
        },
        "item": {
          "id": "b64d8d0c-0b14-4d65-8e6e-8579d305eb48",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "54f1fd11-90f8-499d-9054-b59d84829166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d85adda-26cb-43ab-b082-c02a8b085a6d",
        "cursor": {
          "ref": "d873ab0f-120c-4646-a0d2-589d7dd917f6",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "de4aa985-7bc3-4dfb-855b-0c037d4cb276"
        },
        "item": {
          "id": "6d85adda-26cb-43ab-b082-c02a8b085a6d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c63d6ca1-58c8-453f-a987-ac4088faecbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d01e741-6564-4866-9a8a-c7c3f8fd7813",
        "cursor": {
          "ref": "e499fb55-0536-46fa-b267-e3d2c6d4a178",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "af3a1e66-d89e-4966-a0b4-a290d8b7a18e"
        },
        "item": {
          "id": "3d01e741-6564-4866-9a8a-c7c3f8fd7813",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e9bfb80a-9ef3-4a3a-bae0-cb364c0134c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55522ce3-afc5-4636-9960-cb1573344fd6",
        "cursor": {
          "ref": "e4fbfc8c-9e5f-4878-a9a6-ec90c612a450",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a12cbbc0-d85e-4857-98c0-ba0cc16a78f6"
        },
        "item": {
          "id": "55522ce3-afc5-4636-9960-cb1573344fd6",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d5377311-d83e-4ccb-9eab-98698e7c2b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021a08d6-61bf-4472-b4c0-c1da7353d798",
        "cursor": {
          "ref": "64c26783-96a2-46ff-9730-baee261e44e4",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "7b80adeb-16fd-4e9d-a417-e4df2518ed73"
        },
        "item": {
          "id": "021a08d6-61bf-4472-b4c0-c1da7353d798",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f88a56f5-1310-4e2c-a5a9-08681d56097f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6ab53c-52d8-4d82-bc00-f105b1cb40ac",
        "cursor": {
          "ref": "55d10be2-f2f8-4cf9-8c8e-246e6159a994",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "220d05c8-9942-4a50-bc40-337f269ae3d7"
        },
        "item": {
          "id": "ff6ab53c-52d8-4d82-bc00-f105b1cb40ac",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e62394a1-2148-49d1-b14f-677a553df264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b133bc-40eb-493f-a032-b0b0b05486b8",
        "cursor": {
          "ref": "efd10487-4264-477b-917d-b2509ce4d7aa",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "58901389-a026-4f78-b51b-a6fb36c41a1e"
        },
        "item": {
          "id": "e9b133bc-40eb-493f-a032-b0b0b05486b8",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "43748805-27e6-4fad-8ac6-7b9f979f64a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7735b98b-cb62-454c-829f-6d10758bdedc",
        "cursor": {
          "ref": "098c6ff5-a9e3-41de-a26e-6f705a2f2879",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "91bd2dba-35b3-4165-9575-34f7ddeac3c0"
        },
        "item": {
          "id": "7735b98b-cb62-454c-829f-6d10758bdedc",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "528c2856-d0c2-48d8-be4c-03838acdecbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69730f60-74b3-4281-a166-ce36e3962320",
        "cursor": {
          "ref": "4cb7d70e-dfd7-4ccc-80ba-7f91e0858f13",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e0ab634d-f512-48ff-990f-1f314feec644"
        },
        "item": {
          "id": "69730f60-74b3-4281-a166-ce36e3962320",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "49d93952-b037-465b-a588-023452690165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72b6836-1f6b-47c4-8e3d-fd74d00e18f4",
        "cursor": {
          "ref": "c4aff6ae-acc1-42be-923b-9db425b8303a",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ecece520-5e61-4581-8a49-bf756180e816"
        },
        "item": {
          "id": "b72b6836-1f6b-47c4-8e3d-fd74d00e18f4",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ace51474-7195-4384-9556-5a728101d383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513e9262-d31c-45ea-8ceb-653b121322c6",
        "cursor": {
          "ref": "0a24ebd4-81dd-4efb-a083-b4d75ed24b54",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "fc8d010a-615e-431c-8916-e735481bb4a7"
        },
        "item": {
          "id": "513e9262-d31c-45ea-8ceb-653b121322c6",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "41e45728-5482-43de-81d0-51a8f8d7b418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c7dcda-b357-419c-8967-c955232651fb",
        "cursor": {
          "ref": "36db9ee6-f2ae-413e-8d05-0f487c953828",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "0f08474f-c81e-457e-a8e8-305dd6a52921"
        },
        "item": {
          "id": "75c7dcda-b357-419c-8967-c955232651fb",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "74786f6a-6e97-40d4-88a3-1548bf31ae39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3b1838-6a8e-4f25-968d-4ea0bf48a024",
        "cursor": {
          "ref": "9d7cf741-2b66-4ee2-9472-fc993d9d1254",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "e32f83fd-51de-4f5c-94f2-84e4b48ecd77"
        },
        "item": {
          "id": "0e3b1838-6a8e-4f25-968d-4ea0bf48a024",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "861d8ab2-a5fa-4318-b0cf-254267c93612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855450b0-6435-48fb-b20f-b78e3af0b5a7",
        "cursor": {
          "ref": "b927bf10-2f02-45a7-a842-4d95ccae8c36",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "24f3a0db-af5f-4c29-8e40-459f74bf9f68"
        },
        "item": {
          "id": "855450b0-6435-48fb-b20f-b78e3af0b5a7",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "bd21b9d3-b8d1-4611-8e98-2051a2b0c812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c243726-541c-49fe-8e7b-82f305079148",
        "cursor": {
          "ref": "b8f9501f-aaaa-447f-bf32-faa9fac04255",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "c3b33119-4db7-4fe1-848b-391302a49732"
        },
        "item": {
          "id": "0c243726-541c-49fe-8e7b-82f305079148",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d9c98998-b5c3-4cef-abd6-fce8232da4c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5eb0bfb-e154-4b21-8081-1db5b3313a90",
        "cursor": {
          "ref": "5246fbbf-abd2-4041-834a-290105ae88f7",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "ba681166-b1a2-4824-8315-429eb44318ae"
        },
        "item": {
          "id": "e5eb0bfb-e154-4b21-8081-1db5b3313a90",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4d94c3be-97c1-43b0-a299-6d49131670a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cefb8897-7b88-4704-ade2-b371b28d5fa3",
        "cursor": {
          "ref": "3ea491b2-32ea-46b6-8b57-41caae8d6a96",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "0b2cffcb-9d84-477c-bc6a-a3746f3d0427"
        },
        "item": {
          "id": "cefb8897-7b88-4704-ade2-b371b28d5fa3",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "2b0ea17f-7882-45ca-92dc-ba72698e2f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83257c4c-edd8-4bb2-a2a2-0742caccb9a1",
        "cursor": {
          "ref": "8529c826-e4be-4b78-95a9-917900cf3fc9",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "c3b28c64-f6f1-41f4-b4f8-cd181109da6a"
        },
        "item": {
          "id": "83257c4c-edd8-4bb2-a2a2-0742caccb9a1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "35107ea8-e7ee-4aa6-ac9b-317a8bbe6e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017ff5f2-8ad1-4209-bc61-9bbbcd94d650",
        "cursor": {
          "ref": "31a8593a-1131-4f17-99d8-bcbb15835bf2",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "9b22b57b-0083-4903-bbe1-be8f9673ede9"
        },
        "item": {
          "id": "017ff5f2-8ad1-4209-bc61-9bbbcd94d650",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "5b74c4f3-6e0b-4676-9834-484d82ef39af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697d9ce4-678f-43b1-a578-515b7e71619d",
        "cursor": {
          "ref": "01d2e19e-ff9b-43fe-95b2-9227bc6c21a9",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "cd747f16-76b4-4e29-a9c3-0599bb278754"
        },
        "item": {
          "id": "697d9ce4-678f-43b1-a578-515b7e71619d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6589724b-7553-45b2-9754-b225dd3375be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f7899f2-7bd7-4617-88ac-4fa93213c49a",
        "cursor": {
          "ref": "5c10e62a-65f8-422a-9e35-c64afc106e11",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "cedc8d90-b266-4fdb-a5c6-ff211caae814"
        },
        "item": {
          "id": "5f7899f2-7bd7-4617-88ac-4fa93213c49a",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "65d19611-261d-42a2-a733-b5f64e597ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd0b7e8-c1de-463d-b917-e069039d0aa2",
        "cursor": {
          "ref": "2722b5dd-e107-4105-8c61-f9932c1c1424",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "721eaeab-1521-4959-a13d-1afaed89867a"
        },
        "item": {
          "id": "1bd0b7e8-c1de-463d-b917-e069039d0aa2",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "049c22b0-bcc0-49a9-b8de-99231889c686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f3a71b-532d-4c52-9e48-cbafe03dd8a1",
        "cursor": {
          "ref": "2c42529d-422e-493e-8575-1ff1a6710837",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "ac45e26e-969f-4e61-90dd-2523934073c0"
        },
        "item": {
          "id": "76f3a71b-532d-4c52-9e48-cbafe03dd8a1",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "1982a249-7f67-47e8-a85c-5053f934d6a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e28897-3782-4f5b-8c23-be237688f0ef",
        "cursor": {
          "ref": "68049818-3857-4681-a122-a15a293b9510",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "8fd74292-4c2f-4db9-a8cd-ade591446799"
        },
        "item": {
          "id": "80e28897-3782-4f5b-8c23-be237688f0ef",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a537b4be-748f-463a-879e-d8406cb9971e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00e3720-f2be-429f-b792-2f1ab4a0cf22",
        "cursor": {
          "ref": "c6c7122d-4f05-4110-b590-1370964d939e",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "51fb7a06-e410-473d-b2f2-a2d36097e8d5"
        },
        "item": {
          "id": "e00e3720-f2be-429f-b792-2f1ab4a0cf22",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "147ddab8-dbfb-414c-8ead-4e1aa95439fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7291f6d6-2fad-4fff-8629-4e40293d3311",
        "cursor": {
          "ref": "60899768-07cf-473e-908b-f8542b88f3c7",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "970a0456-df90-44ec-af86-401d0dac8ea5"
        },
        "item": {
          "id": "7291f6d6-2fad-4fff-8629-4e40293d3311",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "48e2f26b-7721-43d2-b261-0d1bfbb10aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933464ea-ae57-4137-ac17-2f0bc30f5215",
        "cursor": {
          "ref": "ec9e4591-f879-4538-92e5-087ed8a0f37c",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "3d98bace-25b2-43ab-b01a-9d4f27e7d68e"
        },
        "item": {
          "id": "933464ea-ae57-4137-ac17-2f0bc30f5215",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "70d34d5c-d43c-4e73-8ba4-216ef37f9479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d501b88a-55df-44da-bac1-e0f78fd8f251",
        "cursor": {
          "ref": "69560a6c-ba46-4711-bad6-7686a47df859",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "675a8e14-63e5-4aa5-afaf-c35ebedb6ef8"
        },
        "item": {
          "id": "d501b88a-55df-44da-bac1-e0f78fd8f251",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7ee29391-ec5b-41e0-8b72-6bae80686891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c6470b-f61c-4b4d-bdfa-3e50bd4fa341",
        "cursor": {
          "ref": "8bb6aeb9-ccaa-451b-9ba9-2fa2ebd6a880",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "7fe4d778-4a99-4190-97c9-e4e0778f6346"
        },
        "item": {
          "id": "39c6470b-f61c-4b4d-bdfa-3e50bd4fa341",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f48ab0e7-6262-4686-9cf0-95d6764f1a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e35993f0-05bc-4271-a540-f26dc984a2dd",
        "cursor": {
          "ref": "6ee0de13-4bc6-4d16-ae15-6f05221d8b25",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "16f2836a-6fa0-4054-8c4e-635cc2391ad2"
        },
        "item": {
          "id": "e35993f0-05bc-4271-a540-f26dc984a2dd",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4df0f779-7272-4091-ac6c-f6244ffbf93c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2386a29c-dba7-49b6-a48f-99ba2f19b3f1",
        "cursor": {
          "ref": "1e5d4347-5663-4dc1-89aa-b30737631cff",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "432e52ff-2ba5-40a7-aa8a-94f1d3db85e4"
        },
        "item": {
          "id": "2386a29c-dba7-49b6-a48f-99ba2f19b3f1",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "da89e4d3-73f9-4d5e-a61c-ad54c59e1174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d2d704-f908-4dee-84b7-6a0fa2aee29a",
        "cursor": {
          "ref": "e800dacf-3733-4579-90c3-e7fd7220561e",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "9e489d0b-ca41-4ee7-9182-e093bcd3dbbc"
        },
        "item": {
          "id": "72d2d704-f908-4dee-84b7-6a0fa2aee29a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "88882b77-7df5-48c4-9bce-983899b4c4fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5808a9-19f3-40a9-b287-a7f892b3a29a",
        "cursor": {
          "ref": "53e8f372-a45b-4b8e-9022-165542f26833",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "fd9919fd-63c0-4350-858f-1824850388c2"
        },
        "item": {
          "id": "4b5808a9-19f3-40a9-b287-a7f892b3a29a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "04ac251e-5607-494b-ab31-db5895ac21c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64dafd87-cd5b-4f50-9379-6d0e0bd859cd",
        "cursor": {
          "ref": "a86ade5f-382c-4c6c-b584-952039c344aa",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "b646cd4e-c2bd-4ec9-94dc-bf7aa7feea80"
        },
        "item": {
          "id": "64dafd87-cd5b-4f50-9379-6d0e0bd859cd",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "890f4688-5762-484c-989b-dfc2edfdd0b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f99459d-6056-4fc7-9a8b-dc6af62e83f9",
        "cursor": {
          "ref": "8eccb4e5-6449-41ed-a5f8-dd7e19dc1533",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "98f48aa4-abc3-4798-b90a-efd43d26a277"
        },
        "item": {
          "id": "9f99459d-6056-4fc7-9a8b-dc6af62e83f9",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d022649f-9e4a-4ad3-b748-e027dde6c36f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04304108-e489-4296-9369-e69ce2f238f3",
        "cursor": {
          "ref": "ceedc799-0cfa-4b95-8ca4-f45f6b4a8778",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "4f2a9560-c860-44b1-a825-e49d814fd643"
        },
        "item": {
          "id": "04304108-e489-4296-9369-e69ce2f238f3",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a7faf740-8e74-4129-8341-589354b90032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fdd4813-2a67-48ad-b3e9-65bfc1e2b100",
        "cursor": {
          "ref": "ef946069-6be2-4211-8683-f07653aaf658",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "5a549b9e-f05f-4928-965d-1bec9d8d1a40"
        },
        "item": {
          "id": "9fdd4813-2a67-48ad-b3e9-65bfc1e2b100",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "17adac93-e53d-4048-a855-a8096d2a213c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc91f62d-d6c6-40de-8145-56e43a45e1ff",
        "cursor": {
          "ref": "1ceeb3ae-66d2-4d20-940d-878c959622dc",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "e9089a12-ec54-4065-9da9-38977c9a8a78"
        },
        "item": {
          "id": "dc91f62d-d6c6-40de-8145-56e43a45e1ff",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6582ff78-c7e3-43dd-8d0b-4297ee36430f",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ade20b-1780-43f7-a697-554f9bb3facc",
        "cursor": {
          "ref": "b258367f-d702-4f71-a329-c7704dca9176",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "2ade53ab-f994-4665-b11d-03d4c63cbba1"
        },
        "item": {
          "id": "43ade20b-1780-43f7-a697-554f9bb3facc",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6d3a3095-0f55-464e-979b-f4f9edec2a27",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb2e0e8-5cb1-477c-8aa7-bf9b084b65fc",
        "cursor": {
          "ref": "112fbcf4-fd4b-4c6b-aef9-ddd99d31356c",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "77ec5cfb-716a-4d3e-b9cb-2f3569b8a89f"
        },
        "item": {
          "id": "2fb2e0e8-5cb1-477c-8aa7-bf9b084b65fc",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "42100cbb-7a50-4043-b751-85488188de2c",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a04061-062e-4f48-8b9e-b3753e03a749",
        "cursor": {
          "ref": "2d6ceb83-5975-494d-b7bb-31d3ccaf6dd8",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "a63df69a-3f76-4b1e-9059-e54b92830eb4"
        },
        "item": {
          "id": "46a04061-062e-4f48-8b9e-b3753e03a749",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fff49a50-d497-4828-8132-2d5e926642ec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a04061-062e-4f48-8b9e-b3753e03a749",
        "cursor": {
          "ref": "2d6ceb83-5975-494d-b7bb-31d3ccaf6dd8",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "a63df69a-3f76-4b1e-9059-e54b92830eb4"
        },
        "item": {
          "id": "46a04061-062e-4f48-8b9e-b3753e03a749",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fff49a50-d497-4828-8132-2d5e926642ec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d22e39-5135-4f36-ab88-71b837c0d409",
        "cursor": {
          "ref": "eb918978-50cb-4467-9b08-2bee30fcbd21",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "95ada2e7-ee42-4b5a-9f78-d51a40e6c5aa"
        },
        "item": {
          "id": "f8d22e39-5135-4f36-ab88-71b837c0d409",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9bec9d43-480e-4d3a-8c1a-41d34c824bb4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c5ab6a-4a79-4655-b33f-ee244ebb6925",
        "cursor": {
          "ref": "745a0387-ee34-4f28-930a-63de60bff35d",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "53225c1c-cafd-4282-9c55-7743f0713c70"
        },
        "item": {
          "id": "15c5ab6a-4a79-4655-b33f-ee244ebb6925",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3f2ab2ed-7941-4ba8-90ea-34b08faf5aaa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}