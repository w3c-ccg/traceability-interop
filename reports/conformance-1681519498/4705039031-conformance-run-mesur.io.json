{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b1c05240-411c-479c-9639-dc0aa6c570c4",
        "name": "Clear Cache",
        "item": [
          {
            "id": "92c329c4-1896-41a3-8ee0-a9aa9600e62a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "db012a08-4e21-422b-981f-0979e2c989dc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "082e7160-370d-4c51-aa47-245f805e98a0"
                }
              }
            ]
          },
          {
            "id": "eb1ad122-fc23-47f5-b7d1-290f82648511",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "90e01181-1ec3-4dbb-b9f3-0629c6fe9a95",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d36ec955-5a93-4d2a-a876-3ea638314617"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6b98fa34-de55-4acc-81ea-2059e7c9d9e9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "64fe3ec7-8642-4688-8b85-8089fd6bc9d9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "127157e8-b3ea-4d69-b92b-20010436c9b8",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "52b20fab-3496-4f80-a10a-18fed58c8994",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d53f1d6b-68cc-48af-82ca-85117ce8bba9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0e2fdd8f-8b7b-4aa8-be63-57d1aec90260",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7f9b41b6-806b-42fe-a553-534014decf25"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1de53a44-a1d0-463d-889b-69fd61984252",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "990b52a2-0b62-4162-a5c0-a8bb04789e91"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "adfed0c4-b1c7-4e30-bfde-26383382a1cc",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e5f2a6ff-ffe9-4b67-8953-04747a58e8af"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "14802cb3-16d7-4375-ae54-872ebedc91fe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d7bc0f40-d16c-423f-acf9-0cc8d1c9be81"
            }
          }
        ]
      },
      {
        "id": "7a6a4094-e5fa-4401-be7e-e2ed48a3fb83",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ae902371-948e-4bc4-8860-61ccc08cd92c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "527c31ea-2f85-48ed-928c-5748f1d2a185",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9c5db9f4-a45d-4ea9-ae0b-615a8b2da8d8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de8af547-1593-4139-ade7-9c5a92538471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "69bfb5f9-eb74-430b-b89e-0dc21709d797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d963d1-0278-47e3-a9c5-585bf9d2bef0",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b019f5e-acd2-4b2c-9ba2-b1226d7d072e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "68ed6744-7cc7-423e-a23d-e90ce11acad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5c10ef-d30b-4180-b8e8-5f0d08208278",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f389625-6c46-48e7-96f2-ea5382b559f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a6cd2590-a6bf-4c97-8601-b6816aa0fee5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c629ed51-052d-40b3-8d72-a2468cc2febb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "80761a29-1af8-4fec-921b-0744bf0a8e0c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0e3548-b6dc-48a4-862e-d4313bd79957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "330a1f88-b712-4006-8c60-792140046d45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7488ff30-b317-4094-a87b-2995ad59ae31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b17fc14a-c712-46d7-a372-6a37bbf5b047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8c0bad-acd9-4c42-b4d9-1b97360b7c04",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf988051-cbdb-45c7-a202-9746e254fa43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cd27daca-a8a0-45f3-ba81-bb536c95f278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1a6ded-38c5-4096-a95d-c6c348f9ad4f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "e2819dbb-6de7-4673-a5f5-668c350a1fdd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bb0b85a7-531a-4b0b-8ce7-4e8114b8c3a6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e6e4011c-aeb1-4fd4-8086-011583ae899a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1becd3b1-4364-4eb6-abad-c431f05be28f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "3e82ea10-f358-4691-93b3-fd53549e2ac3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1fd3781d-ca96-4bc4-9d8b-0d3efc1df125",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "5238c72d-ebc3-4806-a576-7983671cf560"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1ccc2aba-a95b-460b-8ad2-eca3fa6ca3a8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1b4859c7-7d1b-49a7-a1b2-49e35b133408"
            }
          }
        ]
      },
      {
        "id": "723e4a5d-f62f-418e-ba10-9f066174c432",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "58f69854-efe1-46cb-8276-d52a0662c212",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6653ec6b-377d-41e2-96b1-384d43fce378",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "95a5f1a4-40e0-4503-a260-9241585a20c0",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d07e936-dcf6-4f8e-86b8-021b32840be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb689773-4c2a-4e55-8b43-d702013ab6f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ba66e9-a7ec-4fc1-bb56-669d0eace49b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35ba4574-659c-45ed-b853-3e5f73346d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cba5bd5-afa6-491d-9e85-8a0c1f3558e1",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c5b1fb-5275-4ad6-b9e3-e8351e3fe66f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6f92df1-9c16-4105-a1da-1d7d859e53d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a88f7bd3-9a1f-4934-922f-5d5ad8e7f8f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03344154-099e-4d0e-b59b-0fc356077968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0248bd6f-7cc9-4836-aa8b-26b3525f1366",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "301a81db-93fd-4b52-a543-d848db6f4cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e1f9174-2c1b-408e-be4b-f20af5be1b96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ab65d3-c1db-48df-8270-3215639f6818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4892d07e-9464-41c5-bd6f-9e4fcaa07a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e3fae29-096e-4419-bc0b-528efab79330",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc46904-0b41-4b66-b865-b60ec0e0ccf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4431ba4-21e5-4de7-882d-59427aaa8a45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a20248-17f7-4fcf-b57a-335cc101dd0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c7694d1a-2c83-4d4c-811d-d1b432b10ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0d35c2-cee4-4a7b-a75a-6d9d573123f8",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc237fe1-3b3c-4dfc-b2f4-fc291b398b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ae82f68-d95c-4216-8a44-7574dc177c9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62c4640-be64-49f7-a832-2859a038bc8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da971ac9-c970-405d-b5a1-407aadfc31e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9bcbc0-2d0b-41e5-826c-df1cf7e3d77a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2304ec-3ddd-4d86-b511-a81180dd7fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f110817-64c7-413a-b663-4288be4e2142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f72c64e-0056-4b97-9d70-8b90ab103171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9d07e77-52b0-4b01-9a96-88c7f260963b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ed3b8d-c122-407e-be08-b2d922a793db",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "664050e0-1917-4313-942d-5f257e475006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb30f07e-f892-40b9-ae73-8abedc7f2bda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95acec9c-912a-468a-95e5-5dc7558893bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d4b4501-b0f8-48bd-8d62-641ebe20fb8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4357cc9f-305f-4bb6-8091-c16fa7b84913",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0b5cbd-74e1-43e0-b0c3-aec354037949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e658885-4890-40ba-a223-d49ccac256df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d36de313-7f89-4d05-8043-a01e26f8c3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "886d9761-04be-4f36-a976-2c58a9ff3453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c279d381-2b56-41a6-b328-7cd9ed5b6a55",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e0becb-95ff-4839-8d72-9752f43dda2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27ef5b7e-dbd8-4f96-b637-1a7d08d0b9ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9855626d-c2c1-4b89-98eb-30fc9c66938c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c10e311c-1e79-40ba-a98f-b1e3c870dd23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a20eae8-9fc2-4cf1-9465-5b0fd6bde26d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb7412d8-65a9-4183-aa3b-bca4b3441157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf67e41d-ab99-47aa-8527-32c18a7c59f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22593861-f74f-492c-96d2-1115128a1fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67484c2b-b0f0-4789-849c-f4b1f1af49b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb2b68a6-8ab1-43d4-9490-4b1355ecdb40",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e959b17c-8a37-445b-8350-24907d7b0cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c7c0128-a032-4c29-b22a-26e94a0779ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e294edc-751e-4f45-8f16-000e687f2abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8908ec9-2c5f-4937-9c68-6858fbb1b241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b2ac55-763f-4fc3-b017-2dad4738d74d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be50a675-cedb-4338-a797-9780ff44a03f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc0e373f-e38e-4ca1-ae75-851e43ccd232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d48a2cd-7908-4d95-9aa8-69ebdda0661c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78c786aa-9e89-4a2e-8e93-c535b154d869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f6e0873-c47f-4898-8bdb-fbc5fd54b46a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "659434a3-b891-4f04-8b96-a6797451b4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a39992a-494d-4fd7-bda3-14ed4691ddc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9e3f09-8cf2-4a35-8075-bb79ae4a951f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5209ea3-ac1a-434a-b9d6-5344d9cb824d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abbb079a-ee83-45f1-b587-1ea39a892fb2",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab70845-3c75-4efe-9448-54d193a0b9a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57e588ad-7e16-4a58-a97b-23ebf74ab60b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d7e0455-5649-432f-a637-46fda090f80f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df27f1f9-2b9e-469b-bafe-81478f0cd871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf27955-d66a-416c-8b89-1d6de1d7675b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "988ccbf3-3b5e-48d7-a0b2-a89583362608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5cd1ea0-4031-41e4-bbcb-6150f40a0f95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdea6fc9-fb94-422b-b8aa-7aefa0ab3551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d39153da-de36-4738-b33e-1209ca5230c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f68c7c72-6e54-49f2-be2d-fb332b0ee6f0",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "546c839b-9020-4625-81c2-5669272fb7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "318dddef-379d-4416-9c2d-00a99dd346a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faead031-dd03-4bb9-9e46-d300cc8e0a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4ede6e7-13cf-4137-8047-4940e232edf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f42ee8f-7c2e-4801-a1a7-86e075ee3f08",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f37389b2-a97e-42e7-bede-a4ec40bb862e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82eaf2c6-326d-4c7a-97e4-70e883997519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f99a29-2da8-44e5-a02d-99fc5756dbd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4836d698-4d89-43fb-aeeb-55383f6f0544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b8340e3-fce2-49eb-a0e9-7dfa23298901",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa86b8e-2239-44ab-9b5e-85db2b13fac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e39bcac8-7fab-4e87-b8e1-a68ccf78d8d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78eca807-1454-43cc-aa0f-e5574b036ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac61e92e-3556-409c-8912-7ebb2e78bac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb976409-e759-42fa-a311-843be9df5323",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db0c04d7-6d67-44b9-a709-edaf441b1395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93ac3b0b-b945-4086-bd39-de63285ee904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f16c024-633c-460a-90a9-3ce7cd334d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a6601dc-97ed-481d-9531-a33cacd7831d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cee7f99-aac1-4507-8939-eb2c48e3f653",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17f4678-d1f6-455d-81b1-43e3dd1c631a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c91fedd-725d-42ae-863c-90973416a495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69705c8-fe6b-4af5-88e7-4a6a7f2187db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0d0695e-7eb9-4c06-81ae-aee1e081125e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c789bcff-6061-466c-800a-5fd0a2ca635b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55aebb62-bfcb-47d8-a97e-79cfa3dd6d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "550d7293-3e63-41aa-960b-c9c6d3889a71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c909a53b-2086-4016-87ed-1022e94db970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6328bb4-fcbb-4d37-bfe0-857e65e22afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e7cb06-81e2-4856-8f8c-0eede44327f6",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa8fc73-0d8b-4c79-8442-52384b87e72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b0f9084-80ba-47d9-bc85-c7ff396ee531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c9af64-750f-4990-b5d8-af5f751f50ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b568da1-981e-460e-b244-9ce9195ae04a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f01280c-9c63-4b6b-8ea4-31f784ab5ed5",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e843465-87f5-42be-bf69-21755ada66d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9f17f4d-4adf-4174-b5a1-7f7a036fca69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b644d621-c6e7-47d6-aa29-f9b1aa4c88a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "181a4f00-153f-4271-84ce-17c0f6d322f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150cb74c-b86e-4363-83e9-163c32507aa7",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd91b264-2d8d-468f-b962-21b2496ab149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84c9690a-f2e8-4bbe-85f3-bbbcb278746b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a6f011-60b9-45a6-b4b1-d3a6b5fffe45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a9111d0-1d25-4ce4-b9e0-c6250aefc6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30ce344d-12e0-4b6d-9034-0bc441feefe0",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67b1de9-b40e-4c66-9ad3-3637289d3204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92a33695-1050-430b-a227-84eb6b3bfc28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3ac7a1-2492-42fc-ae3f-bb0e0c14aa0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b52253f1-e090-49f9-979c-f0318294902a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3dd7808-d505-4c39-baa1-6dec9cc7edc4",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d414681b-0be9-4505-91af-053f8d334c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7441c21-c486-4f0c-b582-396e5f8b02d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa952ae-10db-4840-8b84-ffd4b8bf44da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d68aed3-de17-4a35-bb42-ad3520fbdf3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf4968b5-0205-4042-9afb-a26ad6b57cff",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17e49ef-0ae8-4e7e-abac-cf29e2b27786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf2f5f1f-e27b-4316-8fd3-70b2c9f17986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4139f3fa-e44a-4373-987a-6536ec8a23ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d67c245c-8466-4e36-aedf-6836c59749e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e4cd3bc-e5e3-4a49-bb71-e79a256f4ba1",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea2dbb4-90f7-4690-8753-cc8460d7d79d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d043c15-9a7a-4e7e-81f8-5b1b9e94dec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9d9302-20cb-4e77-a2d6-43827ae9c06d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c50a4aae-7181-4c50-b2fc-638269276a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f2b8a2-c518-4c7e-9987-cb5562988956",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5035a3e-ea2d-4198-ada7-f184bb23ae25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99883d3c-a1a3-48a4-84c4-2cae88bc3382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7be051f5-bfde-42b7-bcc2-cd5d511c8e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "42c1152c-4aaf-4cc5-81ca-9e1fb6a1214b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1350ba5-6a64-473b-a45a-b42dffe41f87",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e17e630d-beca-4f20-ab11-819dcaaf244c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7162bd76-a3ca-43a7-b914-ae72c41321d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb826c6-7bbe-4a56-9d15-7a8933abf9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1e1d755-8d9a-4d5e-9fa9-b2fae3decd37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91ce7a5-d83e-4a9b-983f-69433ba05f38",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8ddbae-773c-4683-ab09-9234c15d97e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a11e2533-7315-4852-8620-7f8b07fa5d02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac272c6-b770-45b6-ab3f-7008c059de43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "602c1fa0-fd0d-418c-9e14-3757f08b40e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc5bd894-57bb-4afa-a8db-5d43039c60c0",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a58c29df-f4f6-4b99-b3e0-09544d876765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88fc1bbc-02f5-464b-b014-71a8f5f2552b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e4fbe1-f8f3-4237-9179-b33054dfd0db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0dd01c3-d86b-4637-a81d-43dcb0401662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c85be4c1-b57c-42e6-a3dd-ece13f033034",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "350e59e1-4310-4cb7-8996-3a23d329cb57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12bc01ab-3ae5-4a92-86f9-b21d78520e5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d5b877-f849-4b35-a27b-2ee7c578d0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "da9278d3-42a8-4469-ac28-814012eb7ce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e315600-f22f-41e2-8a2b-39cea278f57b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "622ad974-eaa1-42c9-bc88-c1e9682814d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04ab65a2-7a94-4b0d-b9a7-bf3cbf44db3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51b491c-0e45-4370-a9fc-dc26a419ae62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8fafdbb-15d4-4ee6-87a4-ca59d8a283d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1519eb2-4ba7-459f-9e00-2d7b28e0eb62",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca94d43a-1ab0-47b6-9672-437387aa6410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "230ba35e-d062-48bb-884b-7eda8aa076e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e901970-b776-4ab5-845e-6d5ce81f8f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "38fbd22a-f6d3-4da0-8673-3d3c54d40958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe33117-cb52-4690-a60e-1b1ca5ce2636",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "292b23ec-66b2-4b48-8eb2-a061da5fd85d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ecd395e6-ed16-44dc-8647-bab13a75e341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f331667d-3595-4c00-83eb-894218a60a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7bde0391-e49c-49bd-b7d0-81a881858f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae6e1278-2de1-471d-8111-971c3301d151",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea489de7-157f-4f07-8c3a-0a5726716396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fee51cb-1f30-40f4-91fa-31980f901450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619b098b-5cb3-4e81-b0b0-df66dd89eb6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd500190-bbd8-43a5-b8ac-4ab00d0bc437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847a6eec-8572-445e-a2f6-3c2e030220a1",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf31cf20-7ce7-4d46-b858-df3ff0481928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06995c1c-cc6e-45a1-a956-f7ce20533ebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47cff8f0-07ad-4474-8df0-9196f772b5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5447d7cc-3b8d-4e17-a37d-ac61f08fa6c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d83ed093-0cb6-4539-a058-e184d842caf8",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f93426-6d88-4cb6-94af-daeb19011662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdb11877-012c-45d8-9966-f61048685753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad5db241-678e-4451-b73d-e8340ef1917e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2318e32-adcb-4776-9704-eb4158751611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647b772d-9a13-4411-baae-ce09fac70379",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3907ea3-bebf-40d5-b09a-7a3fc761c08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6e2d80e-6051-4ddf-8f3f-6291614f3d0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda09e5e-d6cc-4ddf-9562-1225e76a7e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "09f63ba5-6fb0-4960-a6f3-8360ae90ed41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7965273f-9e47-4b13-8e59-6d2c6871e897",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2742d46-cbd1-4b7e-834a-db740410716a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c291d47-3344-4d98-aa51-a5aa40baf200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71199949-7a8b-4f08-bb9e-4309e928d9f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf03752c-7b52-4b30-a662-ae40042b4e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f1be692-50e0-4471-a36d-90b2f24cc547",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c791fa1b-010b-4b70-a1c2-7144ecf88f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "147d3105-227e-4507-bc26-9355ad5f5aa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f02958-cd0a-412d-ae15-f830140d18c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "98edc860-3bd9-4cee-921f-a95844dec9f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91342943-b18d-4035-a20c-0eae63c9637d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9add9806-fb1c-441a-abc7-c4e305343cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7cb6001-9b74-4747-a8f4-6c23a57dff35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e883f4be-13fd-43f1-be78-267467b52a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a72cf852-c7bc-4f94-875f-4b67905a94e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bce4a2f-ba1f-406a-b93d-3864454f9658",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc57e86c-5396-4e4d-a87c-5e1c8b8424c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99d5bbac-609e-40a9-be3d-80f74f87549c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d54fcc-caee-4485-9a4f-52239859ee8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "355d541a-b42e-4cc6-9e17-d949e02fc29b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f284933-92e0-4dbe-b6ed-fe331492fcd6",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae1c8d3f-98c8-4161-89bc-6698daed1fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06a4d723-5cf6-46aa-8944-ffb010352e51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b8dbaf-0979-4417-9825-899a36a0b312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c7adfea-a6a5-49e8-8bb5-99e2d2a3cfc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9ee878-b532-4a32-80db-77a8e648d7f0",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "000e16c3-ff21-4494-9d41-a7c97ff2b2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e9a2953-2b38-47d1-be09-bc18bd7d2bb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a6c4c4-0ac7-4cd4-a4d2-50e0dcb2e5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b62327c-5267-4bef-8632-d3205bbc42b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ce6920-8c41-4aaf-a806-df6030b92138",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1df56b5-6f10-4a38-8e54-2467e014b7ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78409059-4c11-4ce0-be75-4d53ad605e72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a953bebc-b443-4af7-ba27-3f4640865a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec4853ac-799c-42fe-8b7d-c89a41046f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4a72fd-ddbb-49e7-9cb9-d4a684329374",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f1854cd-5e8d-4f88-955d-83033f747dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7762ae0a-2e35-4684-9a58-2d985796ff35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "defabd36-c5f6-490e-946d-c2fc50d9b3f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbe778f5-c79f-4cb3-8787-f7e0088d2324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b39c6ae-5571-48a2-a966-0e00f597ee70",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c689e44-8737-44d3-994c-35f64056b875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38b517f1-1c22-4098-8d26-1bca280b1cc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc399a9-c607-486b-99dd-10afa84a6ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b43fd121-d2cd-4b07-8fc2-b593e686977d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4029f33d-4577-4568-8c88-3b643f9bbf76",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34efeaae-588e-4ba0-9a70-988030a2630c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7011d6f3-f6df-4669-a964-42d5455ce86b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2355f748-bf21-4bcf-b08a-d0150f3a16de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4750324b-8f93-4e7e-9da8-c400bcf5bf9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311ea93e-3abd-4027-9db6-a55abf430277",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "910e6ed7-bc81-4ba9-83e5-d79dd0590aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eccf0ab9-368e-4728-ad26-2d99b4959b8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb6b9a8-4663-440f-858c-df33a9fb7155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "4540ac3d-d762-4fd4-8583-749d0f256441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d196547-2db6-4881-a832-7e9460c0e2e9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce6db46-4040-4587-8d70-32ba135ebeed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "155df0d2-6736-491b-89f2-9a5fc6b925e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0178daa0-cf3e-4069-a79e-51d4bea37778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "43ba1261-afc7-4cde-b5ef-f8a7ccdb151d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b947b2-e88e-49d8-945a-8716050bf281",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec47015-33cc-4b27-bdb5-c9ccfd3118eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c288e0eb-a2d7-4ebd-9603-9da4db215382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3cc6b7-3967-438f-afbb-ccdad5c71221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "51986d74-efa6-458e-a0d3-4ab75b4a1b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac9bfd58-fd24-42ff-97ca-42cde7e85c49",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f1a52f4-3935-4878-b05d-6d536b4efad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d607c786-bcf4-4279-b77f-d6e7b0b0bbb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0cb825-a994-4a00-a48c-d76f2b4477d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "053c0587-076f-4bb5-9e20-067e79882914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38fda584-3405-4a3f-8944-5397cca467b0",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11c5825-fa94-4d29-8b1a-ba0fe98b3d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9642a0d0-2e9b-4fea-a5e2-70709fef4697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "108fe1c5-7a86-47a1-b815-21bb5acdc88a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b80294d-a10b-4b42-b725-aab67c121092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d5bf0d-8aea-40e3-8cf7-3ddea0b93549",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b613caf9-ace0-4533-9208-5c35c595fbef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aded4f3-9b0e-490b-b242-e2f7db532381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704dc2ed-b7d8-4ec1-bd5f-16054aedbb1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ba7bb655-4260-449f-91cd-490ef32ac92a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a510a568-b3c0-4817-bc71-888ed1d0ca59",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b5833a-aed1-4083-901a-e3e25ebbdd6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "985500c6-b4a5-442f-9fcc-fbaf9b335f24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d625e39-8a4a-4e09-a1f7-7489e99a8ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff8d3848-7f05-4d47-b623-9a96fc9246b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede4d828-5abd-4bc1-ad77-b2834302bfc8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f7d803-7ccd-40e9-9b07-7850e242e1c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c983526-1803-4aa4-9953-9a70bdd48db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dad1f57-7602-46cc-86ae-9ae94bab2900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b6471db-6a3f-41e6-b525-5e6019bcaea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21c6cf3-d230-4b03-b9e7-a115f1cf7c89",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0134478f-0893-48d3-a251-854d6c53103b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9be920a1-18e1-43c0-8be0-4db45d268414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad3e5bd-54d1-4dd3-92d5-62c9c7aff7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "01e3f7e1-68fd-4a34-91b9-3d1c44dcbde0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc0a83f-56ed-4540-8b18-e4b25fd99de4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e98a13-3025-4963-b5c5-b9159b76b7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e4507ee-2d01-4ce6-824e-dbad6410ad05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ca0a1b-ecdd-4b61-90af-cc43c1c73581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "68b6ead1-672a-4c60-90bb-d20eb9684320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "245955cf-4e66-4967-815d-407760a11601",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "885547f0-0506-4302-874f-91403d7c32ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b5cfdc4-7072-4640-9506-d657d67e938a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec57be8b-dbef-494e-bc45-520c9237a166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4df88f8-62d4-4fc8-a897-cf9ce5ffc945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f96ea50-8cba-4d35-aed0-1bcab422188c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d56bca33-3599-45f5-a15b-2f841860b8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dc36695-02de-42d0-a559-1a3e457572cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85454e9f-d4c2-4112-8c56-5a6e8cebc1d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "14a6475a-bf64-4b09-bc72-c215b5f81442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e3ab8db-e273-486b-8f50-0dba05a31f7d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80906977-1320-437a-a18e-94dc1aa0d130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91755376-399c-4f0e-9204-494006c61609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f392be7e-9dc7-4379-a64f-ef6f3469a459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1f73bac-d9ef-4a18-8aae-dfa20f36d619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "225f8dd5-c5ca-49e4-a379-72844593c194",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb61dabf-a114-4e4b-8510-edcc871d78f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "040edd18-7bd7-4716-9918-241f6e46285b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e787ec-643b-4a35-8fd0-73eb868fa6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "040ca0c7-1e13-40e3-9681-a6111fc6c535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "770061ed-9b64-4adb-b163-2133208c88d9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82c303f-2957-4d58-a02a-4f2ce932abca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e89efc2-8117-4b35-8fc7-40ce0e2e878e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895c456d-2891-46ab-bb8e-adc2a9a0d3dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "37effdac-3bf4-4531-a37f-7be5d496a818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a9f09c-b042-4d10-80cf-60540b324d4f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e0e202-35cf-43c8-b4c6-08e380975abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "105a4ecd-de76-423a-949f-cebe22c905d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19bfe688-6e3e-4108-ace3-deae846b8bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "41e47a7d-7e3e-43b1-8248-9e3dfc97e7ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa8ef9e0-153f-4fc3-98d6-2af00127ca11",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80eda69-ae4f-4a8e-b6cd-f0f1a193cc02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b792625-c85f-4320-9011-5cca7e6650cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb36ac9-3cb4-4f75-980d-4dfac2adf01b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1f468d66-9769-4b39-b490-3da398f99cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d27f9b5b-3385-4bab-b338-9b48a79f420e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2aa118-de90-4562-8ecc-719dccbecfb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70d48414-c85b-4214-9dc9-55fdc5553f34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c074124-3c13-430d-84d9-bdaded43fece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "88413baa-6266-48ed-88be-b0321260aef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69804cf7-cda7-4e07-9989-e8c6a70aea72",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a026342-89d0-475b-8c98-473b108890c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af9f8492-a192-4f36-96a6-0e59c3ce2bec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7726eae6-c718-43d9-ac91-b8035479d8f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcadd7ec-132c-4ef7-be2f-fb36fdd71ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da45eff-a79e-44c0-bfa5-a576954c595c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c5fac4-ed24-47cd-bb19-ff86afd20208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92f3825b-dfe4-4386-a3dc-d7113b2ceedc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "034ac274-59f1-4ab6-af1e-f15d8e6f0876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0ea39bf-6fef-4786-8356-b598793a247d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab8d6b0-f34d-4a04-8da7-f241e73d728a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f661a1c6-ea22-4247-8da5-e64adde467ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "763aed66-9f8e-4f52-b413-ac0ce3dd1454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d6b1208-3f7a-4a1b-a4c5-b1821cafd7c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "805a8816-cf1a-4eeb-9229-6702b4cfe4ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a501a1cf-ddc9-4541-a730-4b841cdda569",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5568cea0-02dc-4ebd-a693-9c555fa6b6fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c562a3da-515a-4d58-b477-10db207d29a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b1e3f4-5b56-461a-b860-e218183c25ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "af7782cd-cd6f-4af3-99ec-20a1f5160b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f794f75-5c69-4ba5-bf5a-13fe907cdaea",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb5e281-ef93-4bf1-9608-c1b8987f06ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e1f6707-a650-4772-8b0d-7e3c64e52b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad42a91c-91af-4fa9-a9ba-12fe46ee6ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ae82c1f-9e8e-4519-b0a2-86e5bea44f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "667933d7-63ee-4132-b1b9-76b1c9974034",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47778559-4c9f-47b3-8c1b-bf56cfd3dd89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "335e2c79-acaf-4645-b507-ff98aa78d9a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3eb604-6146-4b07-bf68-7f256010f28b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "402b8edc-d648-4632-8c2a-349668561b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cefa1b1-bd7d-4e11-8dfe-bf31ef34346a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dace7830-0b03-400b-8575-67760f57b75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc808c4c-39af-453b-908a-db4b375e63d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1697a2cb-03c6-41e4-bfca-034689f91165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d58bd3a2-2900-4cde-b297-fb895dcea1d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08aafc4-f9f5-472e-a677-358119ad65c1",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e6e9fb-0b59-4399-b7c4-b0b60d71c8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c741c66-1186-49c7-bd3d-61a8d47078a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f695069d-5677-4c93-b23f-24639f19b805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c5a407e-fc88-461a-af7d-9634e652033f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2725d458-ff98-47f4-9a61-08cd73bba228",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc1671a-0836-4fc2-9b16-b1896740bf38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94dc51ea-4835-4dba-875a-6d106f552c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad8ad979-ff57-4035-939f-e2a752cad125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0eb5aa24-1cc7-4c45-954f-519086072070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d48e239-2ec4-4ed5-80d3-9a98de9c5a1c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fca72a6-e4d7-441f-8f07-6bc915f5454a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7bc461c-05e3-40f3-b5dc-3f3da9eda123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "988891b4-c417-4c33-bc8e-fd029ec8d5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "12fed590-9f03-414a-9602-436f76db9740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4abc872-6ca0-4c1d-91dc-25997cda4cd1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa9b9c2d-4f1e-40d7-bd80-d8d36d47e341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "345ccbb2-5ef5-4ebf-9528-e58d8c09f0f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46963f7-2fbc-460b-8276-c7fb2e7cedd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f9a271f-354c-4e1c-81db-74852c06f846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf87362-27eb-42bd-9e3c-ff3ea34b8cc3",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f08145-3a87-4a18-8afc-5a93f9acbc3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c105bbb8-2ea3-4c25-8370-b8fc01452def"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104252c6-61aa-4a39-80d1-79645121e9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a506a2d8-faf0-4cbb-8031-c7ca3b4c3dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761a8132-0861-449d-961d-34cfe06b81f5",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b842f7c-4fab-4f2a-88f7-337af58be315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c47bbb89-0b1b-4362-af8c-46e1044d8da9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "493f7e2e-2044-4a01-a7ae-6df9306b87d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e7653fb-59b0-4f3e-91bc-6f33c0c383c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e34a8408-8bf5-4231-86d9-5aac5335e139",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f603369b-1344-4433-811f-6f508b1644bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd47299e-22b5-4044-93e9-04aa7e1330b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88838b4e-9746-4410-9771-c5dd49dd6443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c31b7ab8-bbd0-4c9f-b2c6-c365ae6dc5eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03728453-629a-49a5-b9f3-44a889f46aeb",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae4b7023-72ad-4c62-b6c9-1864c8f508b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9c92122-af1e-4520-a1cd-a2c7c8c5b293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28c95dc-d0e6-41aa-9de8-5d0f179c9441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b04f9b9-4a32-405e-a550-6d8d8fd3c9ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bec1049-4e44-45b7-8277-dab058fd2733",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78720b23-cc76-4fb0-9993-d35d733ba250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69a4495e-4918-4a96-ba4b-6b543b75c413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf828d30-419b-4885-a7a1-126c9cd0aa09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "97d2537e-b437-447d-8296-8ec33e967e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04a7352-aae8-4c08-b015-c885ddb10fe8",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe22820-12ab-4f0e-9327-7cf2b4cc15a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f53eb5f-fcb1-4f71-b82a-1b8b91d3ca79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a33537a-a989-4e65-b00c-3b26c15b7b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "af65ac6b-2a2b-41ed-8e35-654adca755c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a65dc5a-a2fd-4fe6-b905-623f81367286",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e39960-0f28-4aa6-b7d0-c8a858cfb326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "691c947b-842c-427b-863b-f22d8676cea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebcd96e3-3436-426a-806d-05ded65e0df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d246b0a9-d96d-4524-9688-771527e82351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5318dc-18d1-47e0-a904-1ab5fed73ddb",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6284af0-0249-4824-846b-2e1419c45217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66091d13-1441-41d9-a0a8-a94c5a107819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08daa750-cd31-4aee-98f9-b85cd1051210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f283c8b8-c6c9-4108-9f3d-0e89c7ae8d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845dc6d6-9a4c-4f24-aa93-b10617f011ec",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e3d2ed-82cd-4e82-9a37-107aa08daf43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41bd47d1-a888-4441-88b8-0d9be41693f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd46d0fb-0000-40ba-b455-a3ce4c611ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "64c4295f-822f-4bcd-bc6c-dec3263ebe4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1cc7442-f477-4587-9d24-bc6b05c79e59",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2622a0e0-ddb8-4786-a75b-bdb69730667c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5703791a-0036-46d9-85fc-51a4f057e394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307c31e1-62a5-4933-bbe5-2a6f077be42c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3424dad6-46fe-4674-9a50-6694bbeafb63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ad989d-8e27-4905-a8d9-14577ac7501f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04fef816-ceb3-4979-941d-7ec1b2410cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2a24879-6812-4789-b9a0-7e1eca68d415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf90b95-0505-4121-ae6c-c7b4330da7b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "16e0a104-13fb-42c9-8382-9e7fd9f4fc1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ae7d61-ef4b-4331-84b1-59f3c7f080ed",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3163b32b-d128-4d1f-9ebd-734cf2442b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56bde5cf-f631-4986-9c69-6d775b23a9e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81fa671d-1b17-4e50-9ee2-d73454b10429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6defb62-2fbf-48b1-8e07-faa787bf53c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da990381-2545-47e0-8bf4-2f90b5b158f3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2185163f-18d6-4b9d-bcd0-315b5c61335a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7880b18c-068e-4cf4-a97b-7dd4f120720a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf6fbaa-c27c-4c19-9b48-14dfcbfc63b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd353566-36b9-4c57-8a7a-3eda3d47e620"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d1b6a2e3-37de-4225-88f8-b8d6c3cea1a7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8ec63d52-c318-47e1-97d7-09794b2e97a9",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc53361-88e1-44e4-b5fb-247525874b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7a8731a-f797-4d4c-a30b-61c2b7f790f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f09e4d8d-8a83-45b5-ac0c-b40797ea0c36",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d5ff09e-a0a0-42ae-a434-e1f2aea47f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62131eb0-785c-4ba6-911b-0acd5a03327b",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd5ac23-24ec-41d3-aa50-9949de8b4ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5fdf217b-f403-46a9-bb9c-8c4bba247d7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08856f2e-a6d7-45b1-a9da-c7d9198712c5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6eca9ffd-f5b5-4cff-963f-fd9d1ce8ac62"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97b79e39-dca2-470c-8f71-a5729c622b44",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "329390d6-5955-4edb-9e7b-161aea4fee00"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "77679db2-5644-4be6-9e9d-547326cffd21",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9997e210-84bc-4b36-b3f6-1b99e06af7e5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4bca1721-1085-41d3-9c61-b1fb4e54a31d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "590b4c8e-5ac1-4099-840f-2c97d01c40d5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3c793734-9df0-4374-83fd-26d3907e1fa0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "01ae39e5-db8a-4f01-bcd4-1c1197a7e34a"
                }
              }
            ]
          },
          {
            "id": "c0978514-9884-4c1f-9efa-ed083f28dd58",
            "name": "Positive Testing",
            "item": [
              {
                "id": "20404292-9390-4870-a54a-aa66a32bf73a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf6adc5d-6ab6-44de-9163-adcd0c62b1ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "64d000db-9265-4a24-82f4-545164448332"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24111991-0858-4ae3-9435-588e1c1deb54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "874a8f47-a6a1-4e4f-ad99-6b8ba6100e31"
                    }
                  }
                ]
              },
              {
                "id": "5678c94f-4cff-424d-a088-6a61981ff290",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b2734d5-88bc-4170-a033-6ab538ab541b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "314537f5-ee9e-4996-a454-ebcfcc53b0f2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df6fb5f9-21f3-4729-a287-a5ec633d9c7f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5bc6a433-5224-4713-9848-5e1fc625ecca"
                    }
                  }
                ]
              },
              {
                "id": "72d285e3-72af-4f62-a4f1-efe6d662281f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1fe82bc2-e68e-4683-9f56-646df9cac246",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b6e4c063-f49c-47d3-b283-2a718f20d4d8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fab6bc97-d091-4b51-9e97-02db793145af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0e2e1e76-22d7-4c96-9740-48a8a2ba874b"
                    }
                  }
                ]
              },
              {
                "id": "c5f21ddb-9446-4963-89e8-3d56f173e274",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7693ba83-4e48-4338-aa06-3500bbeeed7d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "87c6bf45-c491-4bc3-8fcc-053130001b55"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b90a39d0-3668-45bf-8b27-14a31d108137",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "fad30bf3-2803-4cd7-8e88-1dfcc28add87"
                    }
                  }
                ]
              },
              {
                "id": "e58dc317-86f6-40db-82d9-7b358991ef55",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8078ab30-1405-42cb-a6a9-ebaf593c087f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bd588e05-ed94-4975-b8a7-a5363647d3c7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a14e2a9-5a40-4dcb-83e4-82aa0cc720b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "36cce37e-fd93-442a-af68-05911f7ba3f3"
                    }
                  }
                ]
              },
              {
                "id": "95b7dcf0-46ad-4410-a1d1-d35565433f65",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a73c1d6f-89ae-47da-862a-713911820aac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bc8a7981-9fef-4755-bdcc-f19df5cc10b7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4ab2a4e-4029-485f-b2cc-f93d677b2000",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "79e7f307-1036-4f91-a0c6-c6e263e2a710"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "331aeef9-0395-4701-bcd5-2b7056d451f3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f50a246a-5a7a-4cca-ac56-fcb9441bc436"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1ce4d7f7-dfbf-4a6a-9d5e-c1ff58e7fe98",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f4501761-6621-4ca7-a9ac-1b76148cb35b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29e00856-b5db-4259-9d94-0547d8515b72",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b145e9bc-d714-4fa1-bc86-a6f8b4db3a06"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4757bb57-470a-4a92-be71-ba6e71da1fa8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "30163bbc-f3c5-4476-8c34-3b1536ff0379"
            }
          }
        ]
      },
      {
        "id": "51708ee6-051e-4b41-94a0-26fe39843fe6",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9de37060-c701-4441-b6d9-362882408c19",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d2bf7f19-20b6-4cd6-9bc6-7f576bc55ac0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7bb74e3a-6904-48c7-ac37-72c6ed9ae326",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b23d51-444c-4c6d-9d01-94639e9f8bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f053adf-9081-4d4f-927b-df075b876469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be0632f3-aeb3-47d4-9e08-7041950cd576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "875c2c33-597f-4f6f-9de7-c7900a114ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36729db9-d195-4fb1-9f0f-de2d7cef0f06",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7861bde4-948d-4509-b526-22bbef2187c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cbedbfa-e0ee-4c0c-a4a5-90461e649b80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a76b87-0ab3-4578-8aaa-b2b787017161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b34f40f3-7b4a-4ff6-b381-4365edac77b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f72b5b6-af8d-4619-9a1b-c6660b3e1687",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59143026-8596-453b-aa4c-0bb2b9ccb489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb6153da-c85c-43b7-9fd7-6d0239fcad92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603a4e41-3b95-4f35-8df0-713fd1f65450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "526bc947-3fdc-421c-aeef-0cc2d9c1ef99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06725670-02df-45d3-99c8-0f476f93d191",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2203aa93-538f-414d-abca-5fc3cf946794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "626fc778-2d62-4993-b61e-5b3c8041f363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45607e6-0d9c-4940-a3f2-5dd448e1247b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb1de848-3095-4cc0-b51e-8e1db4f519df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9121f973-9315-47cc-81cf-ec2009ca4d21",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa2a21c-e9d7-48eb-af32-f02f0b63530a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dece657-51c6-46f4-bff8-4c7bc33a6e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f6a4686-bc3e-4bc5-bb0f-6e4fa7d1abf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ff93597-2aab-4a66-99f6-f9e24e93caf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4fb7454-9287-43ca-9812-cbd50a9ddcb9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48067a47-e53b-469c-b8dd-747b2791eaaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "458c4485-6ff9-4ff0-977f-f1c9317cfe31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94883835-aa8a-422a-90c6-993febb6ab42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bde8064e-91e2-4415-9200-d7dcbc1dd9df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0b0bce-89a7-402e-a032-317c8173d697",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5aa1642-be9e-46ad-95c1-ab02c294139a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "660e0b73-00c4-42f7-b338-c6d959480d5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf9d3514-0fbc-4877-a71b-baae4d43e598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "eda9cfa6-21d8-409c-82b9-24e2c0649608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c95f8e9-be09-4834-b306-839283de01fb",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3b8af3-af60-498c-a3af-87c6b27650dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb73913f-b652-4597-935e-424c945593b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc67639f-613b-416e-adac-cdd2c391fc1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f90a8a04-1a73-430d-bc54-6d9ec0dd5a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c52a0ec-9394-4d36-9d8d-b33dbdff4613",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd0bf72-880b-42dc-baf6-253cb75817f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fee822db-4df5-4de4-9c03-b3fa86720a1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8bd6e6-f7be-4c35-83f1-ceff9b984723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "15f6a428-8708-4b5a-9a6f-bf26d882f42d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41d8ab3-1db1-4283-94d8-c217ec8e5c72",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a98f751-f64b-4c5d-89fd-29a845389a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12630d94-c2cd-4596-9845-d4b7d832ab06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d35231-ac40-42a1-9707-cee923144a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2c80211-c495-4930-9fa8-40825f19aedc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5c2bb7-d9b5-414a-8185-80039eb102ed",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdacc0a5-52c5-4aef-b7a8-c0f83458c283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17d125f3-9271-409b-b827-b65897389edf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744beec9-fc8e-4522-a2d8-e3ea8f0347e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "dc1ef883-be6e-4204-b58b-fedd4026bc5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f783bb4e-dd6f-4a5d-bf4c-b397c682f203",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3781188-a220-4398-9f0e-a93ce1a4f57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97483152-6ac0-4dc2-a821-a562b4b2042e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82619f75-35a5-4fc3-a9c7-ea9a68974817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "965a0530-a26c-4a41-ba2c-5560bb5d8da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270737c3-e191-403e-acee-f3cdedd2fbee",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c160c10c-5be6-4d6c-b9af-8950962ee5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "565778fb-e240-4671-9c9c-0c0b8e36c91c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d477470-7c0e-4a21-8ca9-3e643e2951b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "af2e62f5-6d19-402a-ac6b-bf77916184dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41905bbc-29f4-43da-b5ab-f1ff25718b76",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feeaf07c-aa68-4761-a9cd-8d98d1475a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc6340a6-2d4f-438f-bee8-f31362fceb89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f34806a9-9b53-4e70-b6d5-69b5a26e767a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "be34ff7e-e1b2-4f86-afa6-ae02f7037bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7463917-6811-4ae8-8824-e95a3325dad0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f4ec3c-013a-48bf-a542-bb4d3dcac5ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84884662-ae42-4741-a4d7-58a818227543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8889a2-c9f9-4441-851e-de8021799ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "57c08295-320c-4d6b-9553-02b0587151af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd769ce-f591-4590-a93c-10a062375f92",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c0d530-e726-41b0-9a94-bc2ba1dc3984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a18b6161-5cf6-4454-acdf-8e1323391fdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9abcd5-c596-4563-9b7b-c1f21157c907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6443a14-65b0-4286-9db7-bae324e56e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a6bfc8-fd50-4698-a152-29df7a7c8d1f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff202fe-4646-4899-9b4d-f6a622788b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab80fa0-34af-4651-8064-61f7eaab7125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64cf0d1b-7895-433d-80df-aab8a3f2bd5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "26f357ac-4ec0-456c-acef-d4e83ea1d458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b13807-811f-41a3-a536-20f7c1a07f49",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "548cea92-7b0f-4096-9526-4baa4e01266b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f5b8728-09bb-4a8d-9de5-6bd852b6d84b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af27eb9-87e4-41fa-aa06-a2b92d14f0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "403d4430-2282-43b4-ac9d-4b3113550101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "457a7589-0da9-4e48-80c4-7cc14ef909c0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a33f49f-ed7e-45d7-8d59-1ddc97e8c500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55309cbd-b7ae-42fd-b580-c1dd03fa02cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31102557-1f87-47b0-9198-f0c599fd7911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb200182-68f0-476e-befc-786575489425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed5cb35-40f2-494f-8f3d-c1eb0484325c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec139114-621a-41e3-9042-9826c8ef00f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2917235e-f547-4fcf-8411-e82ccee4d190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19798ace-606b-4851-a0db-50a6ca4d73b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87c76684-ca7c-4080-bead-73b4f941a412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c07b4ac-7feb-47aa-9581-c44690f5cddd",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2086b4-aa55-4147-8453-469263eaf115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65f6e629-ce5c-457b-b472-8a0ead107050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864092b3-d379-45fc-8b80-04eb4218f890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7a4483c-6aed-4a98-a04e-29bd9966b425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d07f44-1bc9-4a7e-a830-26aad115402b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ac46a4-4ef2-457f-ada6-c65eb6adb2d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de89d70c-c343-4226-89fe-8fae1df676ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59303859-a35f-4365-9ded-a54183b64613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8206c1f-dc66-4a38-8e1b-464ba5105647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a692b5-097d-49ed-bac0-22e609d89749",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e39563-ddeb-4c11-b046-888c4c0a52d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d06f5808-70af-49cc-bd1d-e9c63ad7cd4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40832442-2a1f-4ee0-ada3-250ba0a1ad16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0450bb08-6964-41a1-ba09-a84934ae374a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1481189b-fe45-4727-82bd-64ba1e9ea4e9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1fa93e7-1f25-4dc9-9043-37300b4ab832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b46a70a-8107-448c-8f9f-e6f83db703c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248593f9-4cab-4758-a351-4f766969c73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21084024-0335-49ba-a988-b8d3bf416a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a72978f-01a2-4549-9308-f14e0bc1dba1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "715471bc-575e-4996-833b-c163b712547e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e5311ea-5e7d-46e2-9cb0-166c3adc297f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb36faa3-a553-44ee-b85c-2421c28f06d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4ecd05b-aa1e-45ed-8f44-510f8f504dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a062ac07-f36b-45cd-bce7-6d637d28b434",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0690c9e6-f19f-419f-a9f2-3b7c3081586a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f80bb903-f3d8-4471-8750-bc21cd8554e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d5083a-1f7a-4240-9db3-4c90279bc910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72677df8-fd95-4f8f-920a-dd766100d60f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ecf7ef-c384-426e-bc82-b50ac0156bf2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c31be8a-e600-4d26-a7c1-fd109a02e2a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "231dd520-b3b3-4788-bd1c-798bc22c8a82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7902abd3-19ea-4464-9e10-bd175df5b4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68316efe-e5f3-4e59-8092-1110466643ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db609d2-d014-4eae-8608-14a2d965f0c0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b36a82-1c88-4532-8f71-620f38b30b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94eafb16-2aa7-4701-9803-39404dc13400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45052047-eeff-443c-a32a-5c11dc9f9da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1402df1-39b1-4b28-b234-e191df7a71f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a540a43-6691-4d37-999a-f890c3a3d79c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e3bf6a-02e9-4d87-bdf9-336ea2639676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c13590de-65cf-4ba7-a38f-70392742cbbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "079a132b-424e-4bb0-a87c-9b1410178611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8828d8f-cb75-4d8b-b599-98c993b83b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66cb9c56-fc1d-4549-8c0c-4851451e71a5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5391facb-3646-47df-9d53-c5d506fe9d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d95031b-cfe7-45dd-b1b8-288b888742d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62fbadf-8136-4c53-a2c9-c1b98af0425b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "172da2fc-7a54-47e6-b98f-6a307e12ba89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e76258-1c32-4932-8774-363d8a70372c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "784e3148-fb79-47ad-b76a-d64c8ddb1480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31723a1b-a72d-4c02-aac4-221161983a3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4abc04f0-ffb2-4479-ac78-7ca15190ff5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65f9e07d-0d34-4d8a-9e84-9e883d4c1cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a4059e-e68b-44cb-adee-05e27eb81891",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e1d017-3c5a-40a9-aa46-ae8c895fd010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c60d8b91-edb4-4d3d-a5d0-387cb07cbc7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc61d176-5d00-427e-9372-93c256864856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "081a4e83-b069-4882-89c3-7555e299ca97"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e08d7aae-38c7-4f11-b0ad-50550724e0ed",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0c3571b0-de26-4e2b-8019-b1977f437a18",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79df116a-2c11-40ba-a5d0-ec6284ebcdc0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "44238ce8-a7ba-4e05-8e42-8b9fae17c257"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b07964f3-2ee5-4a13-ad28-7300b1ad880b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3125fc0-dba4-49c7-ba7a-a0fdaf67c3f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e4fdb0-a0f3-4a01-b621-0ec9be96402c",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f32e60-0006-4911-be71-aca8eeb56e00",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "be1f4312-0680-4c55-a6d0-06dd03501ca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82baa7ad-7113-4c8f-bab7-c836cecd5c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "668d9603-960e-4dc6-97c3-b0a8d413567c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa14dcda-ffd2-4e8a-8802-c6349bacd1d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5645b589-22d3-435e-8d96-38f1974528ec"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8efa098c-8649-496c-ab40-f3716758a4a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45b259ca-41f3-458f-bb4e-4d99b13a68fe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2c7aedad-e043-4d1b-975b-603e45d318f4",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "59743d3a-b332-4ed6-bf49-c9d94ea5f95f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "653dbf75-b33a-453d-9b28-617fe3922d07",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0ae51d06-b99f-4b87-91bd-efca3c3eacc4"
            }
          }
        ]
      },
      {
        "id": "29205b57-02ca-4df7-bdf4-bdc380b1d837",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "523d38e2-0196-4cfc-a12a-fcfded0c5e28",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9aea48cc-a6f4-4701-8ca4-c8945d7a4b76",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7218d42e-f083-4362-acfd-537d144a81fb",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a08c505f-9a27-4845-8e31-e86d340be47f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49d85d6d-b05e-460e-a14d-637a639e0dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f68ed076-a26b-4231-b9ce-2d5324b3d5a9",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c9886e-fdb5-4de0-b71c-e8c1b8d169e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c86c3e15-2320-460f-90e1-2b779baaac45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28f8f84-50b6-4373-b542-502776b1fc19",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d22140a-c6d1-4a16-a1b2-501f5cf195f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40a9bcc9-eae7-4a54-b733-afd2667eeb6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b472313c-cf62-4a94-8baa-dcb6b2f86182",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c48402c-f342-492f-9af8-d5e8fbd2c593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb5308a2-351c-4d00-9e76-e2fa243f8c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf47c74b-da33-4934-9704-bdfc25650573",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cbbf60a-bb68-4ea2-af79-ecbda43af8d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfc25998-444a-4254-88ce-91b6acd7ef52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f585fe9c-c93b-4744-940f-f03c8058438f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "313e3d40-1120-4397-ae50-aab2316d874e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ae047b9-caa5-4a0c-8a1d-333423a284de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77aadd4f-02c5-4e9c-9f05-bd3e583cded1",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a807bce-573f-4595-9ea7-3c5a464c44e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7908ec3d-e397-4db3-b870-ddacd3419df8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be46f847-6db2-4f36-9b56-d7b13670677c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b05f371b-7444-49e3-b9a7-70c5e216ed6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d83454f6-a564-4d34-b1b9-70bc92a07d85",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1127326b-be80-4851-995b-4332b9a8dd90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "047966d1-41bc-46eb-b8db-30b2b59ba5fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d046ed8-479f-420e-893d-417d64f8ade2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1285b368-d492-4e26-8e5a-754e099ad158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f99d130-5076-452a-a805-5ef76ef5abf1",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1daf1d6b-550b-4ceb-8c14-ea1e06086366",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e54df158-3281-4ff4-99d2-bc705901db42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df49644e-4a2f-48a9-a51b-c6b94da4dbfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b5b04c7-5b52-4ebe-a101-17d0113d9ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1b6651-4159-403f-bb74-1f68fb62f567",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53bab1ad-b844-47ba-b0e0-0798cf096414",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f15877d-265f-467c-8bea-9e3089bfbe1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e308bd7-c61f-40a8-90b6-f975319d3759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8601f95a-48ea-4c04-90f3-378de87274e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb43ea37-687f-4326-bcb0-b9f25124e63b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4203ed-6a5c-4d1a-b66c-2499e8b8ac42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58a6b708-ea58-4ded-a366-4f99f9cb40c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "143324cd-5564-400a-9553-1a7a6053e1b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecbd283a-af83-4e6c-aaf6-47e8ba2c65d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afdffd28-51bc-4284-b50a-cd40f3bfbbfc",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf74990-13cb-425d-af66-5650776f8d7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e71531fd-936f-450e-ab74-54298fdc0fb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a36b8a-4817-4f7e-b7cc-2a54840547d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb6f3e70-4e6e-4e12-abd7-1e8fc81cd402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995597f6-3ace-4379-9c57-89edbca4f501",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b81c6b3-41df-4734-9b65-60495474bf68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "055e0713-ce83-4b17-8647-8077be24ec99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2803642b-751f-417f-a5e7-eafbfb559c27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd16b735-a0fb-4e91-ba1c-9559a1fc8061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5056d769-e4df-4a8b-83e4-f02279aad58c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec4537f-5272-4f8b-aa98-006c2e02871b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04600416-f8bc-48b9-b911-cc2ab5d352ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b44650e4-89dc-41cb-a661-6ff22a582a79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8908f2df-5b1a-4824-b872-4ab3746a955a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a83a607-6f59-4b33-9de4-7e584fc428d3",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b3c262-5de6-4015-8b99-3e5a0b23da41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "738f4204-7494-4376-b2eb-6919f765881d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91011c66-936c-458b-9e0c-73db207a5773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b8fbc96-4133-465a-9d0b-7d786772318c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a7fd4e-754a-429c-a28b-6794081fe96c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b47e868-4598-4b41-92ff-b31ac618571d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b04caa91-6753-4849-a36e-735bdcb6ba66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef3b2c2-0ab0-4326-910b-be5160c7e46a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bda51ae5-eb8d-4800-a267-bcc92b90d939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "544ca295-8c42-4c05-8a54-72ced4efa8cf",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a803e75-4c32-42aa-b60f-51e6069640f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dce23054-787c-4ff4-ae9a-a9e2aebe1378"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f954eeb3-009e-485b-aa78-85f6f63e38a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62104b1b-ef70-46c5-bba9-32f113d7c719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b2d7db3-6e39-48af-a604-fa72564da489",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb4cf98-b681-4742-b42d-a3a7f81b4816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d86f040c-bfb3-4380-b5fb-3810e64066f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2725601c-1344-4549-ac9e-3e180c983379",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1530eaad-4600-49fd-9b10-4ad34bcc6ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e5ab3d-04fa-4db7-a7a2-31547fa96b4c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9bf81b0-7863-4b75-a1b7-502e9d809cce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c38ec680-bd74-405e-9cde-785366e7c387"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "737ef9a3-e7f9-44dc-a3f7-f481e4f8eebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f4ad7ff-c26e-457e-94e4-0ee3f3707173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2064162c-d30c-4b1d-820c-3ec6c72c6eb9",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9cde4b2-c874-4927-9bfd-6ec48eb889bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7d85d51-9545-452e-88b2-cef87486f476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1263894-4372-4c81-b3e7-b100e1f752f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1297f339-ae36-48ca-b86c-0e225dbdaacb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0feaa12c-0e64-4068-9e7d-30c407c7a64f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0170eb0e-308f-4d59-bc2d-fd374be05688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dc9ea2d-9b40-493f-949f-c5f4819b53c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06527169-465a-442f-b555-d7c52dc4be67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "312385f3-44bb-49f9-ac48-3af9610575fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f1e3703-9fa8-4eef-ae9f-ed784927a63d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac58ce07-af5c-45e0-816f-6a6e7e9384f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "522d18b1-fa7e-4ba5-aff5-5f382d23b4e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6523c12e-2785-4718-81f4-c42942dfc6c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "246c330b-1788-4cd0-82a2-55cb5e81d449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0863354f-7ab0-4394-ae5e-7c86f76f864e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50fc429d-d24f-46f8-a666-f442b92e1158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dffa1f0b-8acc-45c0-b1c8-48a9268a43b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef41a72-dbc3-4a13-8c3e-039f2354434d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19987d58-148e-4b32-adea-af8852ff23d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e47f30d-91fd-4ceb-a247-c30b0a81d3ae",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e402d76-696c-40f9-826d-c455d8858932",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54295bfe-cf4c-4468-abd6-1ec4f6a63e42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d5e74a-6691-40cb-ab3a-f34548584e91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5f996ab-3e04-4745-85fd-0c5945d59052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b256e3-3315-4c3c-964f-8ae2c7a42730",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253aad5e-2e0f-460f-845d-a2403fb7cb79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e8eb15e-4d38-4d81-be60-382f081f9e0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d284dbac-40e7-468f-8feb-ec2d90c2bb68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4fd0ebc-2366-4a63-a7bf-d0f309e1f0f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb890088-8c56-472b-be5d-1161f804b01f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9a2bcf-817f-4b26-bb99-3d0ccee79d98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4173e021-53d4-44e7-8eba-3e6b96437342"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "096b0fa8-438e-4651-a13e-2b58e9568c6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "993244ca-02d9-4f95-8ce8-cd6c08cc965f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8393384a-696c-4b58-90b2-24d75cbac8d0",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148f8e1b-8c7d-4cd9-afd6-bcb1dbe32940",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1503d943-b0c8-4ac7-b36d-ca9da9ad4fa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "946579be-f866-4777-b2e8-5a32574c3058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "991cadf0-4a47-4849-b892-1e5b03c7ed75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9a7e65-2e56-4730-9928-5c1367c3372d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb89790-485c-4478-a8d4-00a4fa32a1cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b970c5f2-9ab1-4bb1-aa9b-5792e9736ac3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6bfcae0-9be7-4866-9ce7-01d12d591c64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed420163-5baa-4d0b-ba9e-d7e33c88cf22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b1b64ec-d440-45b7-aa7b-9b4489873c02",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba20e2c-30a9-4ada-8ffd-263d9277bf25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c332e889-46ac-48b0-86d1-feedb54c8c34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a1c774-2a0f-4bab-984d-a071eea32c78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8337d59e-6000-439c-bc6d-402476453450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7667974-35fb-4e45-92db-47f33dcfcfdb",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7534e8-3c29-4865-b4a1-b3d6c338a456",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db926d94-58fa-4919-a163-046d9b898783"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b661333-aaed-4d56-b16a-39740dad1f9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72e32b17-5836-45ad-bf72-cf8209d203b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a0af5ea-1968-43b3-9ad2-a25c99221b3b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd85c329-3091-4541-b8e5-56f4017d95ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6d951f6-4074-4131-8fdf-f3a3e22842a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "963c65c6-0638-420c-a194-2a3727d30d27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f39002d-b0db-4ca0-8011-430f811cc890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886b9859-dba2-4b66-b4c4-73bf7d3d0e99",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee408e1-46b4-4a00-b4f5-f2e18c8d8013",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e78beb57-637a-4001-a5ba-e0a4adacdc87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa9b8f3-2c33-4fc6-9469-eefe866fb13f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd4312a9-cb93-4c74-b01d-b9704309e874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a456649-8e38-49ce-b8f7-a2799a0f6775",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce03b311-f507-47ce-a618-d3c339374305",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e013c3bf-be51-4c94-9fd2-e83077842095"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "567cb6c1-bbf8-4a96-a32b-69088262df5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62d00617-0590-4fb3-9b14-38e1d463f768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7fd2243-390d-4cae-889f-65d31f2d1541",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a92ff02-63e5-4425-b099-278e039f5ae2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e997d7a-15a4-42bd-98c3-4467644cef5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc047e33-ca93-4b32-8e0d-afc79d23e90d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "044183a9-c86d-4c29-8e45-08cf0ebcdcc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a57922-6427-43c5-92f1-1e69d16265fe",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a822726-6fbc-4369-afc8-f38a9fc67409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8424d35-9859-49ab-93a2-cd7dd822e98c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ddc147-06b6-43f5-9a03-b6e0d34b4409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "977ac3f2-cc07-40da-8a84-54498b60e362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8594ef-50ba-4795-9dda-3f5d112c4bf7",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd885a4a-2fd7-4255-bf16-4128bb81a5ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2595afb-2a6d-4808-85cf-3be43b0f7786"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b68f25d-ebc9-4d07-b393-7dba380c668a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96e3784e-89c5-4b45-9d73-8f50fdbd8847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b298da-6330-4bcd-b0ec-6da3b040cc57",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f50ab9fe-2b3f-4968-beda-9ab0e8105ea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f27f23b3-8d2d-4437-bb0e-536aabe5575e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dfc37ce-e231-4733-bb00-9a160030393f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89f18d11-80d3-4c0e-b721-72fe298063d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c888234-5ae8-4f39-a622-b81975ec8705",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f19029-c39e-499d-b034-04f313e142b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d2abbcd-532a-4167-97e2-7634d9bca813"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d2c88d-9a85-4ac8-b5da-fc2813b860e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c0db0ab-ad4c-429c-bcd6-2a7208aef6da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55cd3d9b-25e7-4153-92d4-a48221af81b7",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a5e3276-24ae-4ddf-b4cf-5f55e1a12a7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f11623ab-7ca2-4522-847d-882a41674598"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa91c6b-628e-4d63-af0f-28a8e1f45351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8580f483-9587-437d-84d2-79dcb1c6254a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0996b6d1-1803-47a2-9316-0a5c89444ab2",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e0f735e-f6ac-4590-970e-91bdb039954d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aef36909-928a-4aeb-8156-0e81572b3cce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec16691-414a-4c14-b362-270cc3a37157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4fdfd38-310d-47c1-8849-68a64f1b3818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "366ad4bb-cb3e-4001-867c-c3bfb2071f3f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dadd84a-af9b-4f85-9f47-3ecb4a4f984c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09869bee-2d4b-439c-87d4-f76839d65778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b34882a3-bf4d-4e0b-a8ce-21e33d4595ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f233b366-fe90-4346-bb80-d37fce7a0c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7c07c0-1d24-479c-b80c-16f183485af4",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425a2f04-fce7-4bc4-b527-29ee3e986512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "026ed65f-2c7c-4cc3-a13a-bda197261eb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81849f5b-c59b-49f6-9631-b4e4e17dc545",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fdbc164-56e1-4325-8f27-869273ba9d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb823e5a-6d3d-486e-9fe7-abaa86f6ac7c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6ed966-4244-4160-a8e6-44a01194a28f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4f42492-f4ca-4703-bffd-14ce68ca66c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa93fd99-4c2f-49af-8f2f-033de2fbc967",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f8d362c-cd7d-4785-979a-8425a73fcfe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc33109-9eb6-4bdb-bf0a-f34f483e3090",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a30e9f-2f65-4de5-aaf9-c5af54f575b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4be68f5-bcb7-45b6-bff8-9e1d549ad624"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "637944f4-9c3f-4299-9ca0-ac4e0cb43a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73ed670a-c5c5-465e-bb5f-26870227f439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f02c52d-e88d-43ea-a842-d58ee5b7bba4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa3cd629-62cf-47b1-b983-0e22698b5e23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ff59a43-0aab-4072-948d-533722501901"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de535b3e-ffb0-4096-836b-b36ce5b1b1fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7263cf84-b220-4ca6-b556-bb64f6ec142f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b77eb3d-c213-459e-9787-6f5adb7728ce",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893c9db4-c344-4f7a-8126-bf758c6097ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "365a04fb-7000-406f-94fc-27b2b37019e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be9cf82-86b5-468f-ad56-a458238df0be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6cda925-7ef2-441c-a87d-6c4c04b32a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0668888b-3472-4b62-ba86-9e4e6af6d8dc",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53e9abc-ddbb-4dc8-85ba-7a5e3a4365da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f5ef480-2825-4125-9c99-d5ca1989cdc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb01fed3-cc34-47c7-8ddc-3a15b7019671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68392dd3-fd07-4fe1-8a4b-acb47e05f587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc62cd3-00bd-4011-b50e-dfc28930570b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b202ffb8-7833-4360-aa2b-55b4aa7b05dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6ba705b-81f1-434e-83cf-e2d5b748d462"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d33de6b-8a4d-4505-8a54-96fd40115067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a23fa3a-fc6e-4043-8f5f-525899423481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3665ff72-ddc5-4418-9b79-47778ed95c63",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c61429-6722-4887-b80b-5bc68f0b8871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1a3d13a-954a-46a1-98a6-6fba346541d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de09f302-66d4-45c2-9502-99a18d8436a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "167f131c-cbaf-475a-ad5b-24903dc0c2c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6946f1a-5a03-439a-a669-c1f1b64f5703",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323f49e4-0233-4754-933e-8b58889d3aad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfaa1418-ae8e-49c6-bca8-1c50177fccef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b6dd34-356d-4396-b2bd-4038b9ee1926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "591e48a9-660a-463d-ba8a-29f85720df55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403e2c9e-a23c-4090-89e7-6840b23d28a6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b07f151-b6c3-45cb-85f4-d3ac04d88b32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1031d88b-73ee-4d51-84a7-44b32f9e9880"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3ed18a-5c4c-4119-8939-c9d1284c239f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0b40a23-1fe2-47e8-9f1f-f680ee72a4d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06d2c76-09f2-4d25-8a07-152bbb5e3b35",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a2099e-54eb-4cce-82d4-97c1e76e0f68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36942c07-5bd5-48bd-9693-0949be1c75d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b96b80b6-a901-42bb-912a-218a6a7007df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21495cc7-8164-433b-9a61-4fea504c5003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b6e86c9-c35b-4720-82e2-59ffcf4fe550",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee54b5ce-1af1-4a3e-b8c2-b3ea98333744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a143aeb6-b6f0-4a78-ab41-f8fe95bdafc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef2a7772-8dd6-41ff-a7ee-cfb24055527e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88666b9b-b5e9-4bbc-a797-1c3fb5babb23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba9edb2-a264-4ba1-9b74-2a2137e3f2da",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6211247-8435-49b9-9867-13d92762e0ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df05c997-785e-4886-908a-9c0c7b2478b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ae0b88-ecd2-479f-8b45-dadea895511e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38cb95ca-8e35-4622-8a59-073dbe4c78ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d8d842-b0eb-44da-81d5-4e034fac3e7d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75bbac97-7eba-461b-bf52-110800ad3a35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd978e62-7466-4684-aba6-79394722aafd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "866e1f8e-8f50-4e5a-a947-75398e5e6a62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02433c14-2554-4cef-96ad-9de2baed04b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb9b5348-46c3-4e33-9833-1bc72b5d93f6",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e66af3d-e44d-4779-bbc6-ed9110e6ede6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "896e1aae-e4df-4288-a75c-3b414397c60f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3e1af0-8f97-4c2e-b0a4-23e7606b4cb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59e2678a-9d8b-4477-a226-356fed19dec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e03e1420-40df-4080-8654-d74a95639b6a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd1a341-fd49-49c3-b2ec-a6a82d98e088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "560c1154-1fbb-4911-9a20-5469f1c10eac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b58f0a-1edc-4a65-b898-3187d9fe3b2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d573454-5e98-44ce-bf4b-11505800bb40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085aa62d-1d20-4f19-b8bc-caeb6c856031",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc97d8b9-dbdd-48cb-b3d4-f346515bb4a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc0c53bc-3d73-48da-a207-26588c190662"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "151702de-93da-4ad4-afdc-f1ff1e6b27a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "498e98b7-08b9-4510-bccb-ea7267db6e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db4fb01-8d1c-41e2-8909-bb3b4ef346c4",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f4bb10-b1b0-41cc-8cdf-56aa4bfcc251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38a7c5c5-fc14-45ae-b38d-86e469c3d6a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7211f4a4-5b09-49e4-a0e7-a3d0259ffc10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8f837f4-c1e1-4781-9cf3-ad0571b0d665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d32d230a-b423-451f-b31c-1328dba5f5b4",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dbefdbb-91f0-4821-afd5-769e7c4e3ef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d523b5a5-7ce0-4ba6-913b-79c8f49663d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ccba20-ac78-4b83-a096-d44fc2bf5f49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b65f421a-c580-4966-ad18-a2295182d5d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1471e25-ceb0-477c-948b-aa824272ac47",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e6be36-0daf-40fe-9ae5-92c9bfce5028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcf8b762-c795-4cbb-b7e9-e7bbb52db0d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd9d5ea-0b4e-4774-9973-02da753bb33a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8f5f487-d5af-4e95-8e60-815f9a8f6e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "928cdd77-8168-4ad7-9a4c-3ee1d4f9598d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a7de09-0efb-4a61-82d6-c213d85685c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "223e8dc6-ac13-40b8-9172-53fe90335031"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee4b4e3-77a2-4b09-a5af-2b23102b912d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a804d9f0-0cf9-45ea-9e07-bbdeb8cac97c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cbf1ef0-60c0-43b5-a3dc-29a676d694fc",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1479e1-d57c-44f2-8964-5d35c3e58def",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c97b0156-11e0-4868-a6b1-c7f42236faf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c334328-4874-4ecf-81ec-d7847973385e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13284da5-3843-49e8-a61d-f457bd764d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff110334-1781-4886-8884-39eed8c23531",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf4e2b4-f24d-4d74-b8d4-f1ec71e56053",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ae0c458-1f9b-4d88-b198-c4e1f94be944"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c538d5f-dd61-4b00-a615-408c16be4fef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e3677ae-0451-4748-8a4c-42bf13e2cf2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "395abcc7-beff-4082-aaab-08bb62687154",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6087a33-0c9a-4e0b-8146-1866c5e81ecc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06707219-81c1-4665-88a6-3b0798e238c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb8da6c9-3b98-4b5a-b0dd-46ac338d8ef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a364b809-1cb5-400e-96ea-6d6d3a25186f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c79caad-2a2d-4f14-a452-c0c3b9be486a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e561b9fe-0e36-4cf8-a7b9-f564de00b0a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7a9aafc-366b-4cc4-b56b-eeb0735d5380"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98db4484-b593-4ab4-9184-446480eb3950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72babcbe-f5bf-4199-96b7-139582149884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705adeaa-f558-4c3d-9827-a1218c6f476a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce91bff0-e092-4044-acc1-9249adcc6ce8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1352ba25-a9b7-4b50-8393-972f666533fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba1f398e-8d15-418f-92f9-54c50ef64d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b36ad884-7340-49a0-b99f-2ccab9ab988a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c0d34f-f547-4291-968c-77f6c9f2dd30",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e29f53-cdca-453e-83f5-224a1f3fdee6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5609027-15bb-4770-aa6d-ab5caac3dc0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e497d33a-30e9-40ee-aafd-c2205529eba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e897262b-2968-48f0-ba8e-92f192d91fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6304163d-59d3-45d0-96dd-a5ce7784e0d0",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4265914d-0ac1-493b-a555-141ff5807a02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f99a1661-bc15-427f-8d70-b46c44afdbbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db00c51-7014-47e9-9c48-a394005a357c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "283ed9ed-d8ba-4650-b974-6fa921e0f8aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3e83d9-8295-4867-8f31-3e1df1ab2bad",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868cfc31-e5c7-4e6f-bdb8-16693375a93c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0ec3e56-9377-4835-8b1d-be8692d06732"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4646d3a6-0cdf-47fb-bc87-ccfcd66c0684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "994cb1d3-b8ec-4cb9-8ab2-a6135d5f0c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc35afc-e61a-4211-a581-085e78789e6f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61048928-bd94-46ec-a0e1-227081484be6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8c97995-23fc-4b44-8eac-4c8a937dbe84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70e8eecb-4790-48bd-94ef-01c0f80cca3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "313c0205-ae32-4d1f-81b5-0a5c1e14f089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc3f138-68b2-4135-9993-cbbda364d729",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b03fcf5-3784-4d46-8211-3b578b8c2910",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecf30706-03dd-4d76-8631-fc599a8899fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19c891e-d6e1-4dfa-9744-cbb4b756f596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6880c23b-d13c-4958-9132-d818e412d72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc391530-58f5-4353-a8d8-170849951a94",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e743f228-b6f7-49f3-882d-9a33b98800d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8adfc7b5-6b11-441f-8d2d-d5a12c9e2331"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "036ab6fa-4cad-4f55-8d3c-50d4f9161b6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37a90f0f-0c55-4bfc-9753-ca9c50722e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1944a2be-2017-4aed-a6d8-3cea53587a3c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8162d2b6-40b0-46cd-9faa-6b2762d2eaa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f484908-f511-4bbb-8cde-a9c386a9a345"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac52e52-ec66-410f-a8b6-781f796f29c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3cc8fc2-33d5-4d2a-8e2b-4a2d4d0640db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "359d56a0-daf7-491c-99e7-f71387e4df89",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68dc60ea-315b-4286-86e3-e4beb0a7aa65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a6930ee-c2e4-442b-8a03-cfd957b8c85e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f604845a-39e8-45d8-8b51-a0a77bce821e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4234a3cc-cdd8-4df9-b936-e081473f0818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c545a427-0609-490d-b560-15ea5ca64a73",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8256c7ac-1569-4b2c-9a71-73212dbc8e86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b559d7a3-ae7f-4e85-aebd-0f339eed434c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58421719-8ddd-4456-b9ab-3acae37ec682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "697a2d37-c2ef-4ffc-91cd-8bc3d3db2f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4914946f-60fb-495a-b8c7-95c34362d200",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29344010-2486-46ce-8a0f-b64cebd4ada1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42d50f1e-4dff-4601-a7f4-23d8aa595f9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f022b48c-ba5b-422c-9e84-ac34f7f0aab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9bfe8d7-ccd7-4775-8603-54a65d37c8ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d068ef89-5392-496f-9f65-afa36968f7c0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7bde855-27d8-431c-a4a2-a3b0b274a025",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "843c750f-69e5-4dcd-8df5-f2dd550718ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79a2ae6-07f4-4ed2-ae67-03d6539f64a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64b5574e-1291-4b0a-8859-1b841f6b1360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fda12f7-6c62-4833-8b83-1bd5cdf5a20a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ee223a-4caf-424d-b2b7-5eb6abc2ea9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84b3e0c7-08ab-43c8-8d9c-1991f25cf3e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84667848-80f6-4ac0-a550-6222f5c043b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5788d217-f8e0-413b-8caf-086a7ab2e2c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "094fbf15-4b8b-458e-a618-e8dd93577a3c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eff5605-0c77-491d-8152-c872edfd8f94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc3bb3a3-7266-4c2a-9c69-331398cb439a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b80c0b-85e0-4b23-b9e2-ff14e7ba365d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f90a14e-5b79-4c0f-910d-c444251e02a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2a1a35-0fa4-4618-ae5e-f27e006c5b9f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941e6930-4d50-493f-8a6e-a7e28ed3175c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92a4c1c9-e957-4770-afa4-a822bbb58489"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4765ae26-6acf-4e10-81ab-a1152a3f1015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "433a61f0-3b93-4e6b-b6df-718a82f0aa1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "262d8374-2550-4aeb-90d8-37bd060a1b07",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d68419-29f1-4539-aac5-23f3e337f304",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a6784c9-0a04-4a64-8f77-5f6b7c60f14b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aed0fe8-07d6-40a5-9744-288448f6eb10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a416fd6d-2e1d-43fe-ba3e-8f239566b917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d92fdf16-ebbf-4b6b-b2a3-b02bb8254fb1",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c215da13-72dd-45e1-986b-d2b760e20e46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19b97e25-e6a5-486a-a6e8-c81582601d37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b29a84-be07-4ab0-9645-78e581146200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c074c989-28be-4bc9-a5ed-9a69cfa9c23a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7622a059-76d2-43da-8205-b9a838d9fbef",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a406c7b-a3c4-4e49-bde0-867534911bf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "597bc1ba-bb12-473e-a200-eef92a0beb4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "877714ac-30ea-479f-9fd4-f5acac41e8f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffbe3e4f-fdd6-4564-b628-d9af14c379a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c85717-123f-4e8e-83f7-9e77f1032b61",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e363cb7d-13a8-4701-9cbc-f199f0c78a50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3e06927-951c-4b8a-9cba-7710ea63dc1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92041b5f-c50d-4e02-974e-90f3055caf54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "806e80a4-aa61-4bbd-95c1-43c75089caea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9729cb0e-7530-40f3-b15b-da7cf9f2b1e2",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b14217-3701-4899-aa7f-064dcb8b17fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dd558be-15ec-4f21-9a9d-9035a8ef2358"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb37966c-79b5-49f7-9950-843b7e2194a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6c11661-5890-4190-8df7-707e136a0e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074bf396-197c-4204-9570-f24a73b5f364",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b1084b-9e6b-4466-8700-90074c10d71a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5b15483-a33f-4a77-80e0-78ab8f4f8d88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92aa61cd-6e00-4346-9df5-47ff0d397e9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "869a9760-a7e5-44e5-8929-8e42cec0eb76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c14533-9495-4d2a-a032-9281e954bc67",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30692624-b09f-4e4e-8d69-25ba3ff82b22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60325b07-df6e-4745-aa73-9a8d80e1a816"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be54708-319a-4a12-b841-76b991482acf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbd82988-6714-4459-9a10-6235cfe74872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b285e18-3fb5-4488-bc04-d75e58cc7187",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69508593-8c08-4f2e-b0a6-a14cdaa7a630",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9e023c4-f51f-4728-b6d9-68f744c68ef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d25728-514e-44fe-8c4b-adc7bdb6ba5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85e2faff-19db-45bb-a00f-2bdff6c79be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced8d278-99f5-4d80-b7b4-fbd76302853c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb891e8c-d652-4ec2-a465-e7cedc150cdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e45aaf32-98c3-4ac1-85c5-b75dab814fea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4890cfe2-979a-4974-9f51-36ccf73946bb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7303f722-0143-4138-9b92-da9b622aff66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6debf5f0-dd82-4d25-bb45-7b8a3c05c0f5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2dbe216-3594-4b66-b011-04d3c07e722f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1ef4911-a8f2-4a15-b398-f21771d720df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6a6a13-de70-482a-8f7d-549e8b5e5dce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ed144fe-df3f-49c4-8b8c-c6ec292f50ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08727c71-ced2-46bf-a5b7-2f1b5f2b720e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373c98bf-fb1a-4f34-b58a-992b1f255a5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "956d7c57-432e-4d4f-b34f-63e245fe0a19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b316e53a-df3a-49ed-ac05-75b1a5178759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b13bd71b-2fd1-4ef4-99a8-572dad1af0ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "985683b4-0348-4e03-b3e0-8d920f757c30",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4729ba1-d82f-4fd6-a09a-b5197e530aa6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ef46a83-6e49-47d9-80a9-f4a60edf82ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34929bd8-e990-4e84-be87-4c38b498b238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b37cfa25-3731-49d0-8757-1b65ddc83e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e347b1c7-90b0-470f-9b8b-00b3b1437e11",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f92c7f-25ba-48a3-9d7b-21cd10b58f18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f71667a4-50b8-4276-9a1e-ea2ff7cec9be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee0d338-846e-434d-a035-a8d517c6b190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0861e294-e108-4a4a-81d8-6233a8bb2810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78f0c2f-e6d8-4146-a370-4d9c4f32fa5f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ad8fa7-259f-4846-8ed8-20d7713da509",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16018025-95e9-4a3b-b4de-1a9ac61b2eb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b20afe-39af-4c03-bda4-b898d6443730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e62edabf-8567-432b-bd7a-f12713255fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "911c55c0-73e1-4896-a9dc-5d4e99fe12f4",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cee2115-3995-425f-8f9d-5f01c929c0f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e299df23-ef70-429f-a032-cfb03ae4f4dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9584f0-bbf9-4d00-a8f9-ca42ff88b745",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef01fb2e-4ea6-4544-9d63-b34b3eb3fa48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb010f5c-7fb8-419f-861a-a95c80deda06",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f36a8b1-a535-4010-b30a-7c54cb6e0406",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "551410ce-214e-494d-b1dc-2f29c1ca7596"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08862703-361e-47aa-b6ac-2299a719f04a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb812d76-9744-4f94-8a64-d4346b33b4f3"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc1fe0a8-0250-4d7d-bc17-d2bc81317332",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8d03f5f-7554-4fc8-8b1c-6ae0fa7f3f79"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee2b1f00-b80e-4b31-bee8-3da9ca35b57a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c88799d2-219c-4db0-ba5e-83daac53512e"
                    }
                  }
                ]
              },
              {
                "id": "d3925685-be2c-4677-b4ab-b1c0d0c7a596",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8a658561-d46e-498b-aa02-f0231882c8e1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ccd979-a735-4cdc-8466-c52deca55d1b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5327f6ab-91b1-487e-9726-4ba834af2408"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e605afc2-72ff-4606-b6bc-2530b71317e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "09ae6865-1b38-42aa-8db7-4731d4db2858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49556629-495c-4c75-8ddb-4dc5527c81c1",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23291271-c404-47f8-ae2f-7a412b402b0a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f23b346d-4e73-4d17-ae0c-55b0ea197526"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00462c8a-88f7-43fb-b843-649fcbd2becc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c343b33a-027b-494e-bde8-767f4d449b47"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "211a5064-4c72-4e8f-9e37-226ca79b9882",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2512405d-d754-43cd-93e5-73ce99c5700d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7649d0a8-cfc3-4f82-8110-88e7e50ac24a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ededccc6-fb95-493c-bfee-111790ca98e4"
                    }
                  }
                ]
              },
              {
                "id": "8d44a3be-4c36-49cf-a2d4-d42941a3499b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "fdac7432-f9ba-46e0-9144-4a6330d615fb",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf2fd045-fc40-4d4a-ab03-d8a7d9fc0416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "932f5707-79ca-4ebf-ae55-ac53b904a978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c57855e-7d15-47b0-bf67-131673263a89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05b671ba-9ca5-4e6c-9e00-ffe6004fb90f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "133a8a4a-8284-4639-a1f7-11e0114b5789",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9c5cde7c-38e4-494b-b5e2-6c778a727eea",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef4f7edd-5362-4c03-a6eb-2976749f172b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cfdc7e0b-7f53-421e-84a0-e13702b0f754"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a5c7dcf-7b77-42fa-af2d-b61f982cc5dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "984f540e-d37c-4f57-aec4-c14a943a31c7"
                    }
                  }
                ]
              },
              {
                "id": "019c3bd8-b0a2-4685-a92b-30bd7e6ea77f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2ede03e-34ce-4743-82bb-be9978189ff1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "55306ca1-7350-45ea-8242-5d63c61ef4c1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e618514b-079a-43c8-ad1c-6b20ff195d4e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b081c078-6169-4f84-ae3f-e266b48a2733"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c96d0baf-b11b-4840-9fdc-b7a2a126d67d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "4a10258f-c91e-451c-b65e-1531bd929d5c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2b5220fc-2316-4500-a1a5-b85f40707b21",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e499b1f3-7c6b-4dbe-bac9-8cc01a353937"
            }
          }
        ]
      },
      {
        "id": "f0f0010c-83b3-4ac0-801e-b0329f21d721",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "5ae50d75-9b34-4e67-bfc2-8033063468a8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c21b071e-d0a7-4e0f-9ff3-7c81f2775b41",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e706f910-6855-43aa-a520-0fd39558e6a5",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b94dce3-92ef-4792-a86f-57150fbd8031",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e12cd553-5a3f-48bc-bfa3-9773f35ba8a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a24c4c73-7411-4987-a314-92dc8b501a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a31acdc5-cda3-45e6-867d-170ce472bd61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a5f976-75c5-414f-ab6b-30eac32b2823",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958db990-40bf-413c-a982-7fdee2fb342e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d70d6934-9ecd-4317-8359-87383f818490"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a56798-b172-4cfe-8977-d1e3b5396fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86a842d6-c5a7-49fa-9e80-8d2dd93c9267"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31f3229a-b867-4cb7-abbf-3b40eb3eced3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a92836f-d4d1-4185-8cd3-d30764b4e8ea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2cee24b8-bd8c-482e-ae97-7030f2a8d6f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee1736d6-34ab-4d3e-ba7b-49c3fa68d101"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0bc19d0a-e1a7-44a9-9113-ad8364f38361",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8baae3d9-7483-4e03-be7d-447c09c05cf9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b2f87d53-670b-4e92-89f2-d9a211bc5de0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f60bfef3-573c-4b84-b823-34481cf01761"
            }
          }
        ]
      },
      {
        "id": "e71b3414-5dbd-4d84-bccc-109c4ea0ac41",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "29940238-e1b2-4a4c-948f-0e30b539a9ba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f72bfd04-d580-4623-bd82-6a1db4d0e8a4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9c2b8718-b5e2-46a2-91f5-506b820bb648",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47fedf7b-71cf-463a-8bde-c8d570e11dab",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "227cb074-932b-4630-a6ec-01f298eaafdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d42c256-faf2-4ef1-aa81-010990e763f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "88aae53b-cacb-4c4d-bea6-d126b2d3d728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ad985b-7fea-486f-bc5b-4c33a360dd6f",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79831edd-92df-458d-a386-d798531e5170",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4c5edc19-18e3-41ce-9646-d53ff1926895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc248dad-d393-4aa3-9e28-e98693fc7c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5262efea-bfbb-40af-b110-4c1e5380a7a3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "122dc3e1-8e00-480e-b42c-668823c561a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d28fbdba-e150-4bb3-a10f-af88ac66da93"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "158af19f-71c7-49fe-881b-5620e3199f4d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05800c5d-50d7-4fc8-8a2f-25ebb51608fd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b3ca33ce-9b5d-42c7-b1dd-297db21d2909",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "94051e33-1cba-4e16-9628-2958affa3ea7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "37b21e30-cff6-4bb1-b34d-bb4f13dde491",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f55ead21-c9cc-4f7d-9db0-971d8f4deea8"
            }
          }
        ]
      },
      {
        "id": "519c8b42-79c8-4ea6-8642-bea0fd2d6605",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "76ea49dc-e800-4d14-96d5-9e6f73100f33",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0d96bd7a-fc7f-4c0a-b228-620f81f6259f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4ea9a1ff-652c-45e6-9c04-57bc3beab061",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f75360-1d00-4c23-962b-14a382c6832c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a01b07d6-ca34-4d9d-8b58-794faee5ca41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe0abcd8-df93-4e3a-a656-80d64237da38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "990fea90-f9b4-454c-9cf8-2296deab0594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8e26c5-3434-4d84-beb1-62195d74233d",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6abcb7d2-d5cb-4f1a-98d7-c096a4418d57",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9ee45e2e-aaeb-479b-8420-4c9e7af69dc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0a5e47-c902-4ca4-9e38-f29e3e8fdb29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5597abe4-e88e-44b2-910a-14d8ad76480c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a63fa6c3-b33e-4c73-9672-8b0152a02300",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ada225a8-bd34-4526-bf6d-c4c23418a529"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "adfee76f-2e1c-4b15-bde6-86d59a869333",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7835625c-2237-4d41-9a6e-d8746123530c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3a24e283-06aa-4c99-a938-c0a94bcbb05e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "24e47ca0-033e-4c24-b260-49e7eb77baa1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f90496c1-0da6-4986-8290-6dc16c307937",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9309fb0c-fcdc-42d9-b664-a606e78a7917"
            }
          }
        ]
      },
      {
        "id": "43a3775e-9f0b-49a4-a44d-ce60c137da3e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a36dbcb-49e8-444e-b3c2-6088abc61432",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d042fcaf-1a3b-4aa3-ade0-9cae76e8e253",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "793ec727-6b69-479f-b390-27c2d0706509",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e6cbdf5a-1039-433f-a526-d27b75661c08",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5fad2342-fece-403e-8775-4e3f4c6c2adc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 13.157692307692315,
      "responseMin": 3,
      "responseMax": 293,
      "responseSd": 38.23683959700207,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1681519112807,
      "completed": 1681519126604
    },
    "executions": [
      {
        "id": "92c329c4-1896-41a3-8ee0-a9aa9600e62a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a23c171d-5532-4228-9d4b-29a4f07c95de",
          "httpRequestId": "08817453-0481-478e-8912-277820b7b2a6"
        },
        "item": {
          "id": "92c329c4-1896-41a3-8ee0-a9aa9600e62a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "34f14c15-fe7b-4c57-8d10-5b37374bcf28",
          "status": "OK",
          "code": 200,
          "responseTime": 71,
          "responseSize": 0
        }
      },
      {
        "id": "eb1ad122-fc23-47f5-b7d1-290f82648511",
        "cursor": {
          "ref": "5e3df0c3-666d-471a-9e77-7ba3a59f5526",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1d32fbd5-7d8a-43a4-b1a2-94d5e807367e"
        },
        "item": {
          "id": "eb1ad122-fc23-47f5-b7d1-290f82648511",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "66677632-4c3b-4ea6-bc77-83e4eabd5739",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "127157e8-b3ea-4d69-b92b-20010436c9b8",
        "cursor": {
          "ref": "4ff23e86-0339-4742-bf41-81d3ddd9a787",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "cb7c0802-f14b-4ee9-9a66-5cca89ee56ff"
        },
        "item": {
          "id": "127157e8-b3ea-4d69-b92b-20010436c9b8",
          "name": "did_json"
        },
        "response": {
          "id": "425fe83b-b75a-4d5e-ae99-bda3f25f9b84",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5db9f4-a45d-4ea9-ae0b-615a8b2da8d8",
        "cursor": {
          "ref": "5858c9d2-dce6-4357-a0be-612e5c421955",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2baf2e82-a7df-4cad-9179-94611c205aa3"
        },
        "item": {
          "id": "9c5db9f4-a45d-4ea9-ae0b-615a8b2da8d8",
          "name": "did:invalid"
        },
        "response": {
          "id": "a371f416-3b51-4693-8b09-68cae2111131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5db9f4-a45d-4ea9-ae0b-615a8b2da8d8",
        "cursor": {
          "ref": "5858c9d2-dce6-4357-a0be-612e5c421955",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2baf2e82-a7df-4cad-9179-94611c205aa3"
        },
        "item": {
          "id": "9c5db9f4-a45d-4ea9-ae0b-615a8b2da8d8",
          "name": "did:invalid"
        },
        "response": {
          "id": "a371f416-3b51-4693-8b09-68cae2111131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d963d1-0278-47e3-a9c5-585bf9d2bef0",
        "cursor": {
          "ref": "55976777-b039-4bff-914c-971501b7a3e0",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9258b574-46ca-4aa9-8338-d3440d00171b"
        },
        "item": {
          "id": "92d963d1-0278-47e3-a9c5-585bf9d2bef0",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "aeaac104-dc4c-40f7-8030-19dea2ea4183",
          "status": "Not Found",
          "code": 404,
          "responseTime": 55,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5c10ef-d30b-4180-b8e8-5f0d08208278",
        "cursor": {
          "ref": "39060ad0-4a2e-4d70-b169-0daadd644975",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4b43d3db-2ad0-4646-affc-0e56924d5ea1"
        },
        "item": {
          "id": "ce5c10ef-d30b-4180-b8e8-5f0d08208278",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6329bf2c-1b61-4cd8-9bde-6095b8b91765",
          "status": "Not Found",
          "code": 404,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80761a29-1af8-4fec-921b-0744bf0a8e0c",
        "cursor": {
          "ref": "88fcd59e-c376-4523-bc76-ca443aa5ec2b",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ea904718-8afc-4907-9622-7d3d974951e6"
        },
        "item": {
          "id": "80761a29-1af8-4fec-921b-0744bf0a8e0c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e54e5804-094e-412e-8364-92567308f4d3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8c0bad-acd9-4c42-b4d9-1b97360b7c04",
        "cursor": {
          "ref": "27b4ebc7-eb58-46a4-88fc-452895c27e22",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5d1bf2df-c2a8-4cf8-b392-389fecb7ccd0"
        },
        "item": {
          "id": "fc8c0bad-acd9-4c42-b4d9-1b97360b7c04",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "49c9068e-4ebd-40c8-8075-c7d4229b964b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8c0bad-acd9-4c42-b4d9-1b97360b7c04",
        "cursor": {
          "ref": "27b4ebc7-eb58-46a4-88fc-452895c27e22",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5d1bf2df-c2a8-4cf8-b392-389fecb7ccd0"
        },
        "item": {
          "id": "fc8c0bad-acd9-4c42-b4d9-1b97360b7c04",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "49c9068e-4ebd-40c8-8075-c7d4229b964b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e4011c-aeb1-4fd4-8086-011583ae899a",
        "cursor": {
          "ref": "c0f05b34-8800-4f82-a4ea-73a8b52a2c7a",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "e476e272-9699-4fa9-8bdb-640d1a65da76"
        },
        "item": {
          "id": "e6e4011c-aeb1-4fd4-8086-011583ae899a",
          "name": "identifiers"
        },
        "response": {
          "id": "4b169c37-ea9e-41c3-9b4f-9a8e1c17b77d",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a5f1a4-40e0-4503-a260-9241585a20c0",
        "cursor": {
          "ref": "45eb1c9f-f1a0-498c-86e0-baed31f6e7ee",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "38ef12b3-83f6-4dfb-8b68-bd99520e1c26"
        },
        "item": {
          "id": "95a5f1a4-40e0-4503-a260-9241585a20c0",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9bd82fed-e676-4ba2-a97f-a05b468bbb28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a5f1a4-40e0-4503-a260-9241585a20c0",
        "cursor": {
          "ref": "45eb1c9f-f1a0-498c-86e0-baed31f6e7ee",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "38ef12b3-83f6-4dfb-8b68-bd99520e1c26"
        },
        "item": {
          "id": "95a5f1a4-40e0-4503-a260-9241585a20c0",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9bd82fed-e676-4ba2-a97f-a05b468bbb28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cba5bd5-afa6-491d-9e85-8a0c1f3558e1",
        "cursor": {
          "ref": "f176f352-ced6-4abf-b2e3-5f737c87d7ee",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ac1059ae-99b3-4254-b8f2-f03f896e76ea"
        },
        "item": {
          "id": "9cba5bd5-afa6-491d-9e85-8a0c1f3558e1",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "9fed94a9-0665-4e58-b68f-5f9723674b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0248bd6f-7cc9-4836-aa8b-26b3525f1366",
        "cursor": {
          "ref": "77394bf7-50a0-48a2-9fa7-736b418861ad",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c2933a97-0d48-4a5f-ac03-8ab582c3d549"
        },
        "item": {
          "id": "0248bd6f-7cc9-4836-aa8b-26b3525f1366",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "0af0ec9b-4e58-4678-8838-4f7ec0afd741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e3fae29-096e-4419-bc0b-528efab79330",
        "cursor": {
          "ref": "2d59c35b-52ce-4967-8e24-2c8767277bfb",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f0715bb2-0f4d-4609-bb2d-7fe214fb58fd"
        },
        "item": {
          "id": "9e3fae29-096e-4419-bc0b-528efab79330",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5283e803-4433-4ecb-9004-17d2f5f92f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0d35c2-cee4-4a7b-a75a-6d9d573123f8",
        "cursor": {
          "ref": "446d50b1-588c-431c-9be6-ebf1819c55d7",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9b05d8de-5ac5-41b5-9260-fe761a217c8f"
        },
        "item": {
          "id": "3f0d35c2-cee4-4a7b-a75a-6d9d573123f8",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5d96992c-dc43-483a-8361-d48b2ad88daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9bcbc0-2d0b-41e5-826c-df1cf7e3d77a",
        "cursor": {
          "ref": "df935ff9-a3d5-41ac-9245-d037eb216775",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7074e4d7-6712-4bf8-8bf3-f22990476137"
        },
        "item": {
          "id": "ed9bcbc0-2d0b-41e5-826c-df1cf7e3d77a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "594297d4-a6a0-401d-bc4c-498e1c23b010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ed3b8d-c122-407e-be08-b2d922a793db",
        "cursor": {
          "ref": "b158be41-3bee-442b-b8a7-2a2e5b5522ec",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "69896aee-a168-438f-b1d0-264f7583b8cb"
        },
        "item": {
          "id": "12ed3b8d-c122-407e-be08-b2d922a793db",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c279aab8-7d29-4d3b-8b96-ee1657788752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4357cc9f-305f-4bb6-8091-c16fa7b84913",
        "cursor": {
          "ref": "47c20404-9c8a-479b-bae2-9a42be581f2c",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "aa75cdd6-85cf-48d2-8bf5-18b11a7b04f5"
        },
        "item": {
          "id": "4357cc9f-305f-4bb6-8091-c16fa7b84913",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "60d85bee-28e0-4bb8-83c9-5d67c2049906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c279d381-2b56-41a6-b328-7cd9ed5b6a55",
        "cursor": {
          "ref": "f6b74462-4d00-444e-b695-9e37c2837893",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4f0c93bb-2f95-4ade-b631-d104149f708f"
        },
        "item": {
          "id": "c279d381-2b56-41a6-b328-7cd9ed5b6a55",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "701ea99e-c05f-4f10-bc92-f69064dcdc0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a20eae8-9fc2-4cf1-9465-5b0fd6bde26d",
        "cursor": {
          "ref": "b00cc224-9c95-4e1b-86d0-cb3a0167c713",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "691d36ce-7c43-4c71-8175-f9d467a8d0cb"
        },
        "item": {
          "id": "7a20eae8-9fc2-4cf1-9465-5b0fd6bde26d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "df29c7de-6e35-4aa1-917f-76304051bb94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb2b68a6-8ab1-43d4-9490-4b1355ecdb40",
        "cursor": {
          "ref": "59a9da45-17e0-45c4-a5ac-83040b8c6953",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "92ee4bfc-534e-462d-9933-dac2b897eba2"
        },
        "item": {
          "id": "fb2b68a6-8ab1-43d4-9490-4b1355ecdb40",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "efeca6f8-4d38-4bbd-abfc-3a185a466ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b2ac55-763f-4fc3-b017-2dad4738d74d",
        "cursor": {
          "ref": "65c5ff03-a986-415d-91b1-f4a9c5a05a53",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "616b67be-3676-40df-b079-fcbeba1143f0"
        },
        "item": {
          "id": "d8b2ac55-763f-4fc3-b017-2dad4738d74d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "59a1a5b4-e7b9-47b3-8f0d-32fee9ff931d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f6e0873-c47f-4898-8bdb-fbc5fd54b46a",
        "cursor": {
          "ref": "51a9630b-d473-4704-840f-74a40cf6490a",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "881476a9-999f-4302-b36a-0dbd3201ed08"
        },
        "item": {
          "id": "2f6e0873-c47f-4898-8bdb-fbc5fd54b46a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "57094c23-26b6-4778-b98c-557f70035c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abbb079a-ee83-45f1-b587-1ea39a892fb2",
        "cursor": {
          "ref": "135f13fd-6906-4d89-8e8f-2b4707912cf1",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e4667115-eb2e-4835-b40b-3865e37e364c"
        },
        "item": {
          "id": "abbb079a-ee83-45f1-b587-1ea39a892fb2",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "75d61d35-a122-4886-855e-ea5a6f7549d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf27955-d66a-416c-8b89-1d6de1d7675b",
        "cursor": {
          "ref": "ec54d20e-e4a9-4bdf-9307-74ffbfd18be1",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "660532da-8f31-4dda-8edb-48f54ab0dd47"
        },
        "item": {
          "id": "faf27955-d66a-416c-8b89-1d6de1d7675b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b6c8dc66-a0bc-47eb-a5ef-4d34be3c321f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f68c7c72-6e54-49f2-be2d-fb332b0ee6f0",
        "cursor": {
          "ref": "e23b3028-85ae-44c0-8aa3-28a97d0ec41f",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "bd973c1e-eecc-4ba1-a0c8-b43cfdb000b8"
        },
        "item": {
          "id": "f68c7c72-6e54-49f2-be2d-fb332b0ee6f0",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2bf939db-ebf1-438a-8337-d9de1ade7951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f42ee8f-7c2e-4801-a1a7-86e075ee3f08",
        "cursor": {
          "ref": "e9f209d6-75db-4f09-8723-bd1188918b50",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0994caf0-a16e-4d91-9d54-db18bd174a3e"
        },
        "item": {
          "id": "5f42ee8f-7c2e-4801-a1a7-86e075ee3f08",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "70c85931-7751-4d5d-b4c4-113bc07571f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b8340e3-fce2-49eb-a0e9-7dfa23298901",
        "cursor": {
          "ref": "41055753-222b-4567-9e1a-55bfe1825b2a",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "bb00397d-840c-4d11-a605-3341fe363e9e"
        },
        "item": {
          "id": "7b8340e3-fce2-49eb-a0e9-7dfa23298901",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b7a7c367-3c5b-42ad-9b04-b066b63e2018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb976409-e759-42fa-a311-843be9df5323",
        "cursor": {
          "ref": "0eaa44c2-5a7b-48df-998a-6aff13ba634d",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0017da1f-ce6e-422c-b950-124a38506487"
        },
        "item": {
          "id": "cb976409-e759-42fa-a311-843be9df5323",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "12c39d6f-dd54-418c-bb94-1c2933c9aed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cee7f99-aac1-4507-8939-eb2c48e3f653",
        "cursor": {
          "ref": "ecdef577-3150-4b02-8937-fec0368aaab4",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "884d279a-220c-4c0a-821e-d301365cf80e"
        },
        "item": {
          "id": "6cee7f99-aac1-4507-8939-eb2c48e3f653",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e2ebc867-a0ad-410f-bfc4-6fd9edaba31f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c789bcff-6061-466c-800a-5fd0a2ca635b",
        "cursor": {
          "ref": "d3207b52-3cfe-47ad-af15-44bf14f203eb",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5e6e5161-3244-47fe-a558-a6b594918b69"
        },
        "item": {
          "id": "c789bcff-6061-466c-800a-5fd0a2ca635b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "da649f65-4aaf-4dca-bc76-e79d8a01bd70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e7cb06-81e2-4856-8f8c-0eede44327f6",
        "cursor": {
          "ref": "d689e714-2b77-45de-98e0-44735e71c085",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "407edd70-ad4e-4fe8-8ac9-8d0c0195a964"
        },
        "item": {
          "id": "95e7cb06-81e2-4856-8f8c-0eede44327f6",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4d6e7321-67ed-4cb3-a24f-09b3195de96b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f01280c-9c63-4b6b-8ea4-31f784ab5ed5",
        "cursor": {
          "ref": "d5a464ac-7b80-4fc7-bbbd-7fee21592259",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a37e16ff-eefd-4494-9635-1ae5a7018de4"
        },
        "item": {
          "id": "6f01280c-9c63-4b6b-8ea4-31f784ab5ed5",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "88202d98-7181-4ee4-b43b-6f3f947d93ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150cb74c-b86e-4363-83e9-163c32507aa7",
        "cursor": {
          "ref": "ee5fa1d6-2b55-41b6-92ff-8d89a465e3e7",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "27b56ad4-43e8-49c5-a78e-7e1839fc62a9"
        },
        "item": {
          "id": "150cb74c-b86e-4363-83e9-163c32507aa7",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "aa47e818-cf92-4917-9458-de7fe2984ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30ce344d-12e0-4b6d-9034-0bc441feefe0",
        "cursor": {
          "ref": "07adc570-92f3-43fb-ad58-691a2c05977a",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d8b434cd-00b1-4841-bd8d-2cb35a7c5c71"
        },
        "item": {
          "id": "30ce344d-12e0-4b6d-9034-0bc441feefe0",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1039183c-c92e-4e36-9724-f1585861949f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3dd7808-d505-4c39-baa1-6dec9cc7edc4",
        "cursor": {
          "ref": "276dd070-c8e8-4e1a-b53f-9584a74a2a0c",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "7626a5de-c418-4c25-967c-195f350b168d"
        },
        "item": {
          "id": "b3dd7808-d505-4c39-baa1-6dec9cc7edc4",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "9591796e-cc08-47b5-bdcf-e1a0e7052531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf4968b5-0205-4042-9afb-a26ad6b57cff",
        "cursor": {
          "ref": "f6a4234d-8df6-49b5-8437-114465eae937",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2d84792e-c7ef-49ee-8f52-c7c11917ce7a"
        },
        "item": {
          "id": "cf4968b5-0205-4042-9afb-a26ad6b57cff",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f6216292-1be4-48a8-b5ec-6b531696df3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4cd3bc-e5e3-4a49-bb71-e79a256f4ba1",
        "cursor": {
          "ref": "ebd3f0dc-e588-4504-8489-c683a6472546",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "53e1df6a-2554-4f94-9fa2-b4ef0785a187"
        },
        "item": {
          "id": "8e4cd3bc-e5e3-4a49-bb71-e79a256f4ba1",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "52f129f1-b750-4edc-b256-d922e204080a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f2b8a2-c518-4c7e-9987-cb5562988956",
        "cursor": {
          "ref": "c84a2b59-2e8e-4764-ab39-ec0b8cee21da",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "708d5f30-4d30-467c-919a-cdb8534b8566"
        },
        "item": {
          "id": "a6f2b8a2-c518-4c7e-9987-cb5562988956",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "99a70647-bf70-4b2a-aaab-e58e8875cafe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1350ba5-6a64-473b-a45a-b42dffe41f87",
        "cursor": {
          "ref": "db6b232d-c4d6-4e63-b98d-71a1c062a907",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6d0b1fd2-4fd2-4124-b3b9-b8954fdd79b7"
        },
        "item": {
          "id": "f1350ba5-6a64-473b-a45a-b42dffe41f87",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a99eb8c2-0a59-4fdc-89c4-c26c1d358346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91ce7a5-d83e-4a9b-983f-69433ba05f38",
        "cursor": {
          "ref": "a52ce8b7-d6cc-4876-ada3-007ab695ad58",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "0966a465-8dcd-4c38-ad8b-dd13e81816ad"
        },
        "item": {
          "id": "a91ce7a5-d83e-4a9b-983f-69433ba05f38",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "48fcae57-9825-4f3f-a073-ec16a11f7ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc5bd894-57bb-4afa-a8db-5d43039c60c0",
        "cursor": {
          "ref": "1c249cab-7c5f-4537-a056-7428f09e1cff",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5cbf348b-cbed-4aa6-b8a5-fa3b88a30471"
        },
        "item": {
          "id": "cc5bd894-57bb-4afa-a8db-5d43039c60c0",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0d18b082-976b-4831-a460-017ca3572f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c85be4c1-b57c-42e6-a3dd-ece13f033034",
        "cursor": {
          "ref": "71ca768d-9be5-4669-8288-42e037c9a0c1",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "bd140d23-e95e-468a-ad1f-38f15b546c27"
        },
        "item": {
          "id": "c85be4c1-b57c-42e6-a3dd-ece13f033034",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a49acdf8-620a-40c6-87f9-a685962b1ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e315600-f22f-41e2-8a2b-39cea278f57b",
        "cursor": {
          "ref": "cf792dbd-fbd2-49ef-a7ea-246c215badb0",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7850ae44-7c18-487f-ad30-b8ddb46744f5"
        },
        "item": {
          "id": "6e315600-f22f-41e2-8a2b-39cea278f57b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e1f21267-c219-42ac-af6e-b7b27a012225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1519eb2-4ba7-459f-9e00-2d7b28e0eb62",
        "cursor": {
          "ref": "044b24e1-2781-49c4-a6e5-23450385f0c2",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a3174fba-cc7c-4775-abfa-33552bfa6ef7"
        },
        "item": {
          "id": "c1519eb2-4ba7-459f-9e00-2d7b28e0eb62",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "11ee12fb-de9c-46b9-afb0-0b0e6c6363ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe33117-cb52-4690-a60e-1b1ca5ce2636",
        "cursor": {
          "ref": "9b9cbb03-34c8-439b-9b1a-d4a6f981f61f",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6dc9ee1f-00af-407b-ae55-f4c5df787026"
        },
        "item": {
          "id": "dbe33117-cb52-4690-a60e-1b1ca5ce2636",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2d3d5781-e9ab-42ec-b860-0bba8a11189d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 13,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6e1278-2de1-471d-8111-971c3301d151",
        "cursor": {
          "ref": "d645c182-13f7-462d-862e-e87b74f68095",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "fc045dc1-a9d5-4bef-b684-12d4465bd47a"
        },
        "item": {
          "id": "ae6e1278-2de1-471d-8111-971c3301d151",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "02d2bcd1-d975-4576-84d9-e2d182cb46cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847a6eec-8572-445e-a2f6-3c2e030220a1",
        "cursor": {
          "ref": "b49a6c3a-6f9d-4ebf-9be5-c1def296b1b9",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "238d2ac9-212b-4f71-a823-d032aa6658a2"
        },
        "item": {
          "id": "847a6eec-8572-445e-a2f6-3c2e030220a1",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "cf15310d-288a-4d7a-a448-6b7e930c3642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d83ed093-0cb6-4539-a058-e184d842caf8",
        "cursor": {
          "ref": "43849241-e430-468c-ad8a-96d70f8af0df",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4319635e-9941-4046-b6e1-730df5cd7799"
        },
        "item": {
          "id": "d83ed093-0cb6-4539-a058-e184d842caf8",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2a2c9f24-bf34-4ba5-8aad-a65c39f15c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647b772d-9a13-4411-baae-ce09fac70379",
        "cursor": {
          "ref": "1c004fbc-aad1-4f13-be41-e5f485c93602",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "be479512-84d3-4b15-9aeb-541b80f7d527"
        },
        "item": {
          "id": "647b772d-9a13-4411-baae-ce09fac70379",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "93cf5469-962a-4455-bfb0-f5868b6bb452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7965273f-9e47-4b13-8e59-6d2c6871e897",
        "cursor": {
          "ref": "5dd364a0-97ac-4215-8d8c-a71d0fc351b2",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3a4e1a73-9dbf-438d-bbba-3d3604cea8e6"
        },
        "item": {
          "id": "7965273f-9e47-4b13-8e59-6d2c6871e897",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3b32d310-0834-4f6d-adfe-4154fd108573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f1be692-50e0-4471-a36d-90b2f24cc547",
        "cursor": {
          "ref": "3942b8fe-57f3-4610-8804-164f120e8aa6",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b51a33e7-2cd2-41dc-be0b-d1312dc63d56"
        },
        "item": {
          "id": "2f1be692-50e0-4471-a36d-90b2f24cc547",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9853c36a-bb41-4cce-9188-d0b383860f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91342943-b18d-4035-a20c-0eae63c9637d",
        "cursor": {
          "ref": "82e8ca3e-e487-47d2-8698-aa21c41d83a9",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "cd1a5071-b67c-41aa-856f-ca590dd352fc"
        },
        "item": {
          "id": "91342943-b18d-4035-a20c-0eae63c9637d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8cc4ec59-43a0-40d3-9969-a8329d5c7787",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 15,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bce4a2f-ba1f-406a-b93d-3864454f9658",
        "cursor": {
          "ref": "35d2445d-6e6b-49d4-8fa5-e603b3c6ade0",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "895240ef-80ec-4bdd-ba6b-ff55df18a5c3"
        },
        "item": {
          "id": "3bce4a2f-ba1f-406a-b93d-3864454f9658",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "91f7f98d-cf09-4d32-b91c-dbe4d4b48473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f284933-92e0-4dbe-b6ed-fe331492fcd6",
        "cursor": {
          "ref": "f4b3f785-e85a-4621-ae1d-293202471496",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "fd9836a7-706b-4462-8fcc-d5c7a8c2d55f"
        },
        "item": {
          "id": "9f284933-92e0-4dbe-b6ed-fe331492fcd6",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "3c78afd7-2a11-4ef2-940c-39277d92074c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9ee878-b532-4a32-80db-77a8e648d7f0",
        "cursor": {
          "ref": "646da526-7143-4815-900e-398bf5a3c621",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "09f43887-798b-4d2f-a3cb-42c84113ee8f"
        },
        "item": {
          "id": "fc9ee878-b532-4a32-80db-77a8e648d7f0",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "83b435b1-a779-48d5-bd8a-15ba2aae114d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ce6920-8c41-4aaf-a806-df6030b92138",
        "cursor": {
          "ref": "e19e8982-e4ea-460c-92a7-3f0086dc1501",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "87c9bcab-65e1-4417-9381-6616cc72a2c1"
        },
        "item": {
          "id": "d6ce6920-8c41-4aaf-a806-df6030b92138",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9c1dd859-0722-4c03-8dfd-4f58008aa59b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4a72fd-ddbb-49e7-9cb9-d4a684329374",
        "cursor": {
          "ref": "e680b4f1-85d8-415e-b2af-c40628a3f6a5",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "fc87aa9a-de91-4fb8-aa04-5f88f06fce13"
        },
        "item": {
          "id": "6b4a72fd-ddbb-49e7-9cb9-d4a684329374",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6bda4885-2645-4a7d-9594-2fcdcf4b40a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b39c6ae-5571-48a2-a966-0e00f597ee70",
        "cursor": {
          "ref": "84e8b3ec-7776-49ae-9bb2-1a81b7b4c935",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "57159843-e4df-4592-a27f-750c48bcd9e0"
        },
        "item": {
          "id": "9b39c6ae-5571-48a2-a966-0e00f597ee70",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "bebb01a9-5684-4e3f-ac81-501f5d4e5a06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4029f33d-4577-4568-8c88-3b643f9bbf76",
        "cursor": {
          "ref": "a75f3bdd-765b-4973-8207-930cdd004b3a",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "58a2ff5a-f655-4d96-91f1-bba103c80539"
        },
        "item": {
          "id": "4029f33d-4577-4568-8c88-3b643f9bbf76",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4e3b98a8-0287-464f-9b55-4b1ce3efd5b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311ea93e-3abd-4027-9db6-a55abf430277",
        "cursor": {
          "ref": "87fe04d5-eae9-43d2-aa04-bc1c95cae8b6",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e72b5017-f294-43f3-8b70-3bdcef7a316c"
        },
        "item": {
          "id": "311ea93e-3abd-4027-9db6-a55abf430277",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9e8891d1-5203-4893-a85a-ca3518b5186d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d196547-2db6-4881-a832-7e9460c0e2e9",
        "cursor": {
          "ref": "bc8d1784-92c5-47d7-97f0-6d4bb75a73f4",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a1a4640b-53cc-4a5c-b237-383202633758"
        },
        "item": {
          "id": "9d196547-2db6-4881-a832-7e9460c0e2e9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e544f427-355f-4127-95ed-3c6fcac0aee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b947b2-e88e-49d8-945a-8716050bf281",
        "cursor": {
          "ref": "3c01ab9a-e691-4f03-b72c-fb4b4a87e673",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e767a7e6-c27a-4cc0-b414-58c5a0ac4d31"
        },
        "item": {
          "id": "73b947b2-e88e-49d8-945a-8716050bf281",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "beeaf148-a254-4214-a844-dd2a16bdc701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac9bfd58-fd24-42ff-97ca-42cde7e85c49",
        "cursor": {
          "ref": "03971247-8876-4fc5-b5ac-70b5f846b9ce",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c3d2bdae-1c15-4084-a1e2-bacf8130682b"
        },
        "item": {
          "id": "ac9bfd58-fd24-42ff-97ca-42cde7e85c49",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6f3ae455-12bb-4dfb-9ff6-ef30ef0ea22d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38fda584-3405-4a3f-8944-5397cca467b0",
        "cursor": {
          "ref": "2e7a9a06-07b2-4ec0-b612-c99cb3da4c89",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2c3713b8-2cb4-483a-9c44-62c9420f4cd1"
        },
        "item": {
          "id": "38fda584-3405-4a3f-8944-5397cca467b0",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "cd98d482-9e73-4ead-bc3b-74968227894f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d5bf0d-8aea-40e3-8cf7-3ddea0b93549",
        "cursor": {
          "ref": "37b2d72f-152c-4e5a-90aa-717246430565",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "89ae2817-bf82-4947-be5d-c18563e29e2a"
        },
        "item": {
          "id": "26d5bf0d-8aea-40e3-8cf7-3ddea0b93549",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1d2d8935-deb5-442a-82ab-79be9c5f7820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a510a568-b3c0-4817-bc71-888ed1d0ca59",
        "cursor": {
          "ref": "3314fe60-edd8-4528-9d35-e1ec6ba3e3f1",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "0f457e42-400a-47a3-92a9-b967e778c69f"
        },
        "item": {
          "id": "a510a568-b3c0-4817-bc71-888ed1d0ca59",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "dabdd880-a03a-48c4-9be2-c03ad7d84300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede4d828-5abd-4bc1-ad77-b2834302bfc8",
        "cursor": {
          "ref": "2df1b51a-9c72-440e-86d8-e170a84734ab",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b91e776b-5773-46ea-899f-47d6ecad1c19"
        },
        "item": {
          "id": "ede4d828-5abd-4bc1-ad77-b2834302bfc8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "53abbe36-0611-4d6f-9829-902382caf5cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21c6cf3-d230-4b03-b9e7-a115f1cf7c89",
        "cursor": {
          "ref": "198809dd-f77f-44be-ae19-6f2b1eee5ae7",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d0caa573-3a17-43b8-beb6-049a65429d7a"
        },
        "item": {
          "id": "a21c6cf3-d230-4b03-b9e7-a115f1cf7c89",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "bc7310af-5373-49b3-80a8-eef65c3023bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc0a83f-56ed-4540-8b18-e4b25fd99de4",
        "cursor": {
          "ref": "dca9d3cd-f41d-4f06-affe-80a6fce2d451",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7a691d8b-18d1-4adb-b023-6808acbbf65c"
        },
        "item": {
          "id": "9fc0a83f-56ed-4540-8b18-e4b25fd99de4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8192f585-6861-4298-bf53-1113d2b49cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "245955cf-4e66-4967-815d-407760a11601",
        "cursor": {
          "ref": "2f6c5258-edfa-4479-8096-80745ee9e6af",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "295f16ae-1336-484a-990a-1458a0d3a4e9"
        },
        "item": {
          "id": "245955cf-4e66-4967-815d-407760a11601",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f17b3175-aa92-442b-aaf9-dcadc348165e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f96ea50-8cba-4d35-aed0-1bcab422188c",
        "cursor": {
          "ref": "21e4d1ef-9034-4e9f-8f87-344eda6b9f8a",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "957c799f-6703-46c4-b8e5-01bb9e5e5050"
        },
        "item": {
          "id": "3f96ea50-8cba-4d35-aed0-1bcab422188c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "99947ef8-9f45-4acc-870c-ec4bee7a8e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e3ab8db-e273-486b-8f50-0dba05a31f7d",
        "cursor": {
          "ref": "028ad24e-93a4-4d28-9e17-8173b3a0eed5",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "fde06965-fb80-4dff-9747-f1a28bd2a304"
        },
        "item": {
          "id": "2e3ab8db-e273-486b-8f50-0dba05a31f7d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1e028ccb-ac2b-4bdc-a2bc-34d889d07f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "225f8dd5-c5ca-49e4-a379-72844593c194",
        "cursor": {
          "ref": "f63027bc-3c6c-4458-81e4-ac2a59c42953",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0ca062cc-01f0-41c9-bcef-db0a05cec467"
        },
        "item": {
          "id": "225f8dd5-c5ca-49e4-a379-72844593c194",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "27212f07-b02d-42a5-8345-65b29bef8395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "770061ed-9b64-4adb-b163-2133208c88d9",
        "cursor": {
          "ref": "4eebb312-3dfa-44ac-b919-e16b078a3cba",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8f5b0602-e4ca-42e2-bb26-e16479315a82"
        },
        "item": {
          "id": "770061ed-9b64-4adb-b163-2133208c88d9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3cb21faf-9808-4709-b5ab-a757ed701f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a9f09c-b042-4d10-80cf-60540b324d4f",
        "cursor": {
          "ref": "0f4c46c7-3e4d-4ebf-9b10-f6122f2d25f9",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "08a27970-6282-4ea4-9fac-d165da69c6ad"
        },
        "item": {
          "id": "65a9f09c-b042-4d10-80cf-60540b324d4f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "fb7f24ba-67e2-46d9-a798-7d44c0263278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8ef9e0-153f-4fc3-98d6-2af00127ca11",
        "cursor": {
          "ref": "6528e522-9b1a-40a7-b720-62e1f42fe2c1",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9993c59b-34c8-4129-a369-57dab47d32d6"
        },
        "item": {
          "id": "fa8ef9e0-153f-4fc3-98d6-2af00127ca11",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "af8d0d1d-c8ba-4b9b-8f7d-a99af5d3559b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d27f9b5b-3385-4bab-b338-9b48a79f420e",
        "cursor": {
          "ref": "c529840b-3ecc-4d3c-abe4-16c875f07e8f",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "af884c41-f349-4634-a5a2-9612fa0fcc0f"
        },
        "item": {
          "id": "d27f9b5b-3385-4bab-b338-9b48a79f420e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "6d09d69a-c739-485d-9419-ade5f0ccf0b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69804cf7-cda7-4e07-9989-e8c6a70aea72",
        "cursor": {
          "ref": "41e45f27-ffaf-4d82-b591-78c48a57b566",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "50d0d6cf-3d69-4c0e-9e2f-56a9008b9b65"
        },
        "item": {
          "id": "69804cf7-cda7-4e07-9989-e8c6a70aea72",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8ddcb37c-899d-4988-8e91-23d27fdbbb06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da45eff-a79e-44c0-bfa5-a576954c595c",
        "cursor": {
          "ref": "25f471b4-b79d-4148-a772-83a2bd2e12db",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1e761c71-00e9-4228-a66f-cd89d35611af"
        },
        "item": {
          "id": "5da45eff-a79e-44c0-bfa5-a576954c595c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "0adc9adf-9e5d-423e-8ca3-6e2dac9b19ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab8d6b0-f34d-4a04-8da7-f241e73d728a",
        "cursor": {
          "ref": "5f2592b0-ae1c-422f-bd8f-f45a643c945f",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1fd0fc9c-4c1f-43d9-a30d-4dba8fb60bd6"
        },
        "item": {
          "id": "eab8d6b0-f34d-4a04-8da7-f241e73d728a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "99e9d45f-e0e7-446e-afe0-056af95be056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a501a1cf-ddc9-4541-a730-4b841cdda569",
        "cursor": {
          "ref": "2024e162-23cf-44ef-9cde-4ca37d2f9549",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f3a28549-e025-456c-8e7e-de092812d6c4"
        },
        "item": {
          "id": "a501a1cf-ddc9-4541-a730-4b841cdda569",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d87220ef-2021-49b4-89b5-f150cf80105f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f794f75-5c69-4ba5-bf5a-13fe907cdaea",
        "cursor": {
          "ref": "52cfd845-d407-4f13-8b6d-017d3d8b8e73",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7e5f4cba-2043-457f-badd-f3cef92bafef"
        },
        "item": {
          "id": "9f794f75-5c69-4ba5-bf5a-13fe907cdaea",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6470da5a-49ee-40c1-9290-eb73112db023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "667933d7-63ee-4132-b1b9-76b1c9974034",
        "cursor": {
          "ref": "ddae3094-8920-4463-b159-c10731ed73f4",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d2437760-43b5-48d0-a4a8-12ea54e4cd72"
        },
        "item": {
          "id": "667933d7-63ee-4132-b1b9-76b1c9974034",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "04afcbdc-5a8e-45e0-aa3d-bc4fd009d1d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cefa1b1-bd7d-4e11-8dfe-bf31ef34346a",
        "cursor": {
          "ref": "6c05370d-24db-495f-a9b5-4a4b78990645",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "65bcecd1-8d00-4c14-9e5d-53b4de0cc9d3"
        },
        "item": {
          "id": "9cefa1b1-bd7d-4e11-8dfe-bf31ef34346a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6571017f-da4f-47d1-9e02-56907fd0ac0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08aafc4-f9f5-472e-a677-358119ad65c1",
        "cursor": {
          "ref": "f0119f96-b3d9-484b-9c74-f6ff217043a6",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1f1748cf-452c-4409-86d1-c30dce44c41a"
        },
        "item": {
          "id": "a08aafc4-f9f5-472e-a677-358119ad65c1",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "750f0be2-e140-4c61-b894-2476a437cb27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2725d458-ff98-47f4-9a61-08cd73bba228",
        "cursor": {
          "ref": "110956cd-7c6d-45a3-af96-da98f47ed2c8",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3f2f2445-9575-47cd-88cd-4189af106e42"
        },
        "item": {
          "id": "2725d458-ff98-47f4-9a61-08cd73bba228",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "927760ab-ebc4-4efe-847f-2fc1800ced37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d48e239-2ec4-4ed5-80d3-9a98de9c5a1c",
        "cursor": {
          "ref": "af94275e-2bb6-40e3-970d-f31534635dc6",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6db9b366-a39e-46c2-88c3-1e3c197350c8"
        },
        "item": {
          "id": "3d48e239-2ec4-4ed5-80d3-9a98de9c5a1c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4a05413b-404a-4362-9fba-4cb97f865c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4abc872-6ca0-4c1d-91dc-25997cda4cd1",
        "cursor": {
          "ref": "921b6bf6-0772-4451-b303-7d75f3d53ad8",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "70b8e5df-8cc6-40f9-98df-9da7c3db18fe"
        },
        "item": {
          "id": "d4abc872-6ca0-4c1d-91dc-25997cda4cd1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f411b7d0-4d1a-4911-bd24-bc752783595d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf87362-27eb-42bd-9e3c-ff3ea34b8cc3",
        "cursor": {
          "ref": "56ca5908-853b-4794-8e07-92a91301451e",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5aacd6ff-578e-4e3e-896f-bbe082d5d73a"
        },
        "item": {
          "id": "caf87362-27eb-42bd-9e3c-ff3ea34b8cc3",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a81b45e1-2b98-4b67-8d76-3c007fffd67c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761a8132-0861-449d-961d-34cfe06b81f5",
        "cursor": {
          "ref": "7c1e0530-47b2-4934-850e-01daf621edef",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2139522a-f279-4a16-88e2-515b9c673898"
        },
        "item": {
          "id": "761a8132-0861-449d-961d-34cfe06b81f5",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "07b092a6-b332-456f-bc48-0e36902a9994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34a8408-8bf5-4231-86d9-5aac5335e139",
        "cursor": {
          "ref": "d5e0b04d-56c9-4e15-802d-71a0f031ac4c",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "643df6fc-4cda-4c4d-bb9d-2467a20c3caa"
        },
        "item": {
          "id": "e34a8408-8bf5-4231-86d9-5aac5335e139",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f2ea778f-6e7c-4319-bd10-f0fc2fd4b424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03728453-629a-49a5-b9f3-44a889f46aeb",
        "cursor": {
          "ref": "c71d27de-7857-4ba6-bdad-684dec177245",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "68f502fa-8112-4088-a0f1-6f292473def2"
        },
        "item": {
          "id": "03728453-629a-49a5-b9f3-44a889f46aeb",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4635c5a4-93c4-43c7-85a7-d935c130aa92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bec1049-4e44-45b7-8277-dab058fd2733",
        "cursor": {
          "ref": "59ebdc68-dc5a-4df3-82e1-f4079ad68e15",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3ad20db8-4772-45a8-b0cd-457ab13f5bd6"
        },
        "item": {
          "id": "3bec1049-4e44-45b7-8277-dab058fd2733",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e072faa4-05b3-4f24-abf8-cb1e8c4f593f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04a7352-aae8-4c08-b015-c885ddb10fe8",
        "cursor": {
          "ref": "5193a892-69f0-4e82-aa00-ff9fef969475",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d5c897e9-d5d4-4240-87e5-2479ef9e0daf"
        },
        "item": {
          "id": "d04a7352-aae8-4c08-b015-c885ddb10fe8",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "56b04cc2-2d58-41e5-9393-fc82cbdb8617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a65dc5a-a2fd-4fe6-b905-623f81367286",
        "cursor": {
          "ref": "c2a07fa6-1125-476f-b82f-526eb6844481",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "537f9a19-a1f5-4ad7-963a-f41f85bb43a8"
        },
        "item": {
          "id": "2a65dc5a-a2fd-4fe6-b905-623f81367286",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "31d719e1-6c0b-424e-b6be-495c2e2bb177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5318dc-18d1-47e0-a904-1ab5fed73ddb",
        "cursor": {
          "ref": "c8987abb-6ec2-4fc8-a945-dc872c204d88",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "66eccdc4-08ec-4dc7-b744-e3b446e84c8d"
        },
        "item": {
          "id": "2e5318dc-18d1-47e0-a904-1ab5fed73ddb",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4e2299bb-71bf-43b3-9edd-960a682afe8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845dc6d6-9a4c-4f24-aa93-b10617f011ec",
        "cursor": {
          "ref": "fdb688b0-3ed0-4548-96a1-65befea01caa",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "bb7d0e18-7a2a-4b15-ae38-b49417b7a863"
        },
        "item": {
          "id": "845dc6d6-9a4c-4f24-aa93-b10617f011ec",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c1f14e96-fad4-4b6d-8b7a-764355117141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1cc7442-f477-4587-9d24-bc6b05c79e59",
        "cursor": {
          "ref": "9dea0297-23b5-42fa-91be-ef196201bb10",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f62f9abd-cc91-4787-98c3-0fe33de4226d"
        },
        "item": {
          "id": "e1cc7442-f477-4587-9d24-bc6b05c79e59",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a6b2dbec-2c3c-4fef-beea-b6b6eaa73610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ad989d-8e27-4905-a8d9-14577ac7501f",
        "cursor": {
          "ref": "92e2d906-e751-4499-9bd2-4b93f146a0c7",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8327308d-3428-4886-8262-e5e7bcaa3a08"
        },
        "item": {
          "id": "87ad989d-8e27-4905-a8d9-14577ac7501f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9ad8306b-7f32-438e-bdea-4fb7271f16cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ae7d61-ef4b-4331-84b1-59f3c7f080ed",
        "cursor": {
          "ref": "91935835-0c04-4e6b-98c8-770f2d8165ba",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f4af9369-06d7-456c-b956-009279630cec"
        },
        "item": {
          "id": "a4ae7d61-ef4b-4331-84b1-59f3c7f080ed",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8492b45a-17c3-4178-b2c4-5d9a19f2621d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da990381-2545-47e0-8bf4-2f90b5b158f3",
        "cursor": {
          "ref": "aed3ef54-868a-40e8-9125-d2d5e50a01be",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "564021e6-f459-45c3-bbba-acfc478b133b"
        },
        "item": {
          "id": "da990381-2545-47e0-8bf4-2f90b5b158f3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "812c48a1-8471-4cda-bf9c-b794fed9c1fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec63d52-c318-47e1-97d7-09794b2e97a9",
        "cursor": {
          "ref": "6b0e59e1-8cc7-4d23-be20-3fbe749f83a0",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d5d18012-93c7-4173-91c3-0a7c1b7451a2"
        },
        "item": {
          "id": "8ec63d52-c318-47e1-97d7-09794b2e97a9",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "09d3651a-1d99-4a64-88b1-03286d6aa323",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62131eb0-785c-4ba6-911b-0acd5a03327b",
        "cursor": {
          "ref": "364b1810-798a-4c81-826f-484fb8d58923",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3c89bde9-b138-44cd-9352-56264323cbc4"
        },
        "item": {
          "id": "62131eb0-785c-4ba6-911b-0acd5a03327b",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "ae667c4b-6471-4f26-91eb-fdd9571ff38c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 42,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20404292-9390-4870-a54a-aa66a32bf73a",
        "cursor": {
          "ref": "78351f50-0381-4f36-bf2b-1242ef616093",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b72c5829-4b6a-4617-8292-18b8a3d8e462"
        },
        "item": {
          "id": "20404292-9390-4870-a54a-aa66a32bf73a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a2ffbcc9-3a48-4679-8423-26f3b7ecdb6b",
          "status": "Created",
          "code": 201,
          "responseTime": 26,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "5678c94f-4cff-424d-a088-6a61981ff290",
        "cursor": {
          "ref": "1d40b62c-06f3-4e11-8cb6-3a0e2fce5ab7",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e4208f0b-8179-4ccc-872f-6b2a2799b797"
        },
        "item": {
          "id": "5678c94f-4cff-424d-a088-6a61981ff290",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5ff77e19-abde-4be5-8ded-c73135d4638f",
          "status": "Created",
          "code": 201,
          "responseTime": 73,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d285e3-72af-4f62-a4f1-efe6d662281f",
        "cursor": {
          "ref": "13762c19-951c-49d6-b77d-8ddf61c9b463",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a2c1ce4b-9081-45c9-aa1d-ad3fd0c258b0"
        },
        "item": {
          "id": "72d285e3-72af-4f62-a4f1-efe6d662281f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1e0ebb76-cb5f-40dc-965a-2b4ea9cdbfc1",
          "status": "Created",
          "code": 201,
          "responseTime": 27,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f21ddb-9446-4963-89e8-3d56f173e274",
        "cursor": {
          "ref": "0c3f5383-7dbd-4104-b9d8-c445f2b18546",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "0d99b960-19b5-425f-92ad-6025d6500428"
        },
        "item": {
          "id": "c5f21ddb-9446-4963-89e8-3d56f173e274",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "dcdc6d98-c48d-4c8d-9956-b83013087d6c",
          "status": "Created",
          "code": 201,
          "responseTime": 36,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e58dc317-86f6-40db-82d9-7b358991ef55",
        "cursor": {
          "ref": "cef7f3f9-4c25-460c-a958-c9671fd69148",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "79f1421f-a5d6-4418-9843-142b04c4a3b2"
        },
        "item": {
          "id": "e58dc317-86f6-40db-82d9-7b358991ef55",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "957452d8-3890-4610-9bed-13c300da200d",
          "status": "Created",
          "code": 201,
          "responseTime": 26,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b7dcf0-46ad-4410-a1d1-d35565433f65",
        "cursor": {
          "ref": "508a9a53-6e4a-459f-98f6-b95e19712828",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "81ec3c54-d0dd-4152-8b60-551bad32c392"
        },
        "item": {
          "id": "95b7dcf0-46ad-4410-a1d1-d35565433f65",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ae80dafd-3e3c-48bc-8ac4-2a659587d1a7",
          "status": "Created",
          "code": 201,
          "responseTime": 25,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb74e3a-6904-48c7-ac37-72c6ed9ae326",
        "cursor": {
          "ref": "29acd73d-f429-4925-a6ec-e4ffb4116203",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "60693d0c-a4ae-4407-8076-62e5b50006aa"
        },
        "item": {
          "id": "7bb74e3a-6904-48c7-ac37-72c6ed9ae326",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a7d90a7d-c923-4e82-8a0d-24757be89486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb74e3a-6904-48c7-ac37-72c6ed9ae326",
        "cursor": {
          "ref": "29acd73d-f429-4925-a6ec-e4ffb4116203",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "60693d0c-a4ae-4407-8076-62e5b50006aa"
        },
        "item": {
          "id": "7bb74e3a-6904-48c7-ac37-72c6ed9ae326",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a7d90a7d-c923-4e82-8a0d-24757be89486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36729db9-d195-4fb1-9f0f-de2d7cef0f06",
        "cursor": {
          "ref": "0b6f8051-cc26-43c1-81d9-681eb6f0b0c4",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a88fedc6-8507-46fa-bf23-f2b21847e623"
        },
        "item": {
          "id": "36729db9-d195-4fb1-9f0f-de2d7cef0f06",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "78e0a1b5-70f8-4ab1-bc6a-57b1a0fefe5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f72b5b6-af8d-4619-9a1b-c6660b3e1687",
        "cursor": {
          "ref": "273dd10f-30cc-4e8b-a363-38c867208e05",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b7322cea-25e0-4cb3-bb83-6ecaeb0c9ade"
        },
        "item": {
          "id": "1f72b5b6-af8d-4619-9a1b-c6660b3e1687",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bf34dc8a-8920-407a-b032-4cc6b2548a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06725670-02df-45d3-99c8-0f476f93d191",
        "cursor": {
          "ref": "ebb8865f-aa18-4a4f-9b88-532aa38157f4",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f1ee4dfc-52b7-4773-bb67-2d57a3544ad1"
        },
        "item": {
          "id": "06725670-02df-45d3-99c8-0f476f93d191",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "040e2ae9-5589-461d-8448-ebc05f6a26c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9121f973-9315-47cc-81cf-ec2009ca4d21",
        "cursor": {
          "ref": "6b21c28c-8ccd-453f-a5d4-cb0fe906dd93",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "177b8b6c-61fd-498a-a44d-45a9f6b1edf3"
        },
        "item": {
          "id": "9121f973-9315-47cc-81cf-ec2009ca4d21",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ba55218a-85c4-4070-898d-ac758bd2af8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4fb7454-9287-43ca-9812-cbd50a9ddcb9",
        "cursor": {
          "ref": "793533fd-0aab-40ee-adc7-66f7def3e300",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2e01de37-a01e-4b8c-8639-a9929d68afa7"
        },
        "item": {
          "id": "d4fb7454-9287-43ca-9812-cbd50a9ddcb9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "922e8d96-e567-4ee3-9c35-9eb35934ab31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0b0bce-89a7-402e-a032-317c8173d697",
        "cursor": {
          "ref": "03635feb-2fae-4f64-942b-396e67fafc05",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "bb449b33-b313-4d46-a558-05574a7ed296"
        },
        "item": {
          "id": "0d0b0bce-89a7-402e-a032-317c8173d697",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ee9d4cb6-f974-4230-ada1-4e30161070b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c95f8e9-be09-4834-b306-839283de01fb",
        "cursor": {
          "ref": "7c4cd90d-9f43-4194-8466-79b59a217ff5",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "5b8832b7-0355-4f42-be11-59589663ed0c"
        },
        "item": {
          "id": "2c95f8e9-be09-4834-b306-839283de01fb",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f01f5e95-300e-4c13-a8ce-41c5bb9c4a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c52a0ec-9394-4d36-9d8d-b33dbdff4613",
        "cursor": {
          "ref": "d23a66d5-9285-4c34-b3b3-d3f32cc58413",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d16ec014-d825-45ae-9e11-9aa81d36d7e6"
        },
        "item": {
          "id": "5c52a0ec-9394-4d36-9d8d-b33dbdff4613",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "42a03899-fa6e-4128-b844-a4311a93b3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41d8ab3-1db1-4283-94d8-c217ec8e5c72",
        "cursor": {
          "ref": "e8519eb9-57ed-457f-855f-d7e23a43a0f5",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "64473ba3-1db9-4a0a-86ed-43b94597e492"
        },
        "item": {
          "id": "f41d8ab3-1db1-4283-94d8-c217ec8e5c72",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "72bde93a-1b57-4927-8021-d81546ae6aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5c2bb7-d9b5-414a-8185-80039eb102ed",
        "cursor": {
          "ref": "c7ed6023-a6f0-42e4-9113-7444efc929e9",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "99d540b2-35b0-4cca-9cb1-b4febf241122"
        },
        "item": {
          "id": "ae5c2bb7-d9b5-414a-8185-80039eb102ed",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "33de22ca-10c3-4c17-a2cb-20b5dc33750a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f783bb4e-dd6f-4a5d-bf4c-b397c682f203",
        "cursor": {
          "ref": "11a37bdc-3c67-4bfb-96b3-e0b65792ba67",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8ca0daad-008a-4bcf-8329-3ed0a27c82ab"
        },
        "item": {
          "id": "f783bb4e-dd6f-4a5d-bf4c-b397c682f203",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7e85f464-5224-419b-85de-1b2d9892bd43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270737c3-e191-403e-acee-f3cdedd2fbee",
        "cursor": {
          "ref": "30d6d374-5035-4221-b2de-a047f64513ad",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9ce3b7e9-bb5f-4a40-a9df-bf5807d29f27"
        },
        "item": {
          "id": "270737c3-e191-403e-acee-f3cdedd2fbee",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "65dd51c4-4c6e-4acf-9540-fa7f56cb675b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41905bbc-29f4-43da-b5ab-f1ff25718b76",
        "cursor": {
          "ref": "bb702eca-41f1-466a-a9ee-b3f9c1285e71",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "205e5c69-0192-436c-8ab0-641820b54dff"
        },
        "item": {
          "id": "41905bbc-29f4-43da-b5ab-f1ff25718b76",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d3a3dc8b-3d3b-4971-966a-09d9d02678f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7463917-6811-4ae8-8824-e95a3325dad0",
        "cursor": {
          "ref": "605e3c94-e8e2-486b-8046-60f9df6e09b8",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8e11463b-ce00-4b12-aa0b-b046e40d2822"
        },
        "item": {
          "id": "f7463917-6811-4ae8-8824-e95a3325dad0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7d04b095-f69e-44f7-8f08-1ba314e87eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd769ce-f591-4590-a93c-10a062375f92",
        "cursor": {
          "ref": "ae1f732c-7fc8-40d2-bed9-1950bd56a82c",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "86457c7d-f957-46e9-b7ac-ff0db54a7a1f"
        },
        "item": {
          "id": "ecd769ce-f591-4590-a93c-10a062375f92",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0cc63c8e-38cb-4f56-ac45-9ce476a96f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a6bfc8-fd50-4698-a152-29df7a7c8d1f",
        "cursor": {
          "ref": "f8e81aba-e1dd-4955-924b-8b2316b7cb75",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4e79946d-4d14-4824-abab-add642ea5451"
        },
        "item": {
          "id": "c9a6bfc8-fd50-4698-a152-29df7a7c8d1f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "28a3468b-8520-47af-bab0-4baefef9a8cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b13807-811f-41a3-a536-20f7c1a07f49",
        "cursor": {
          "ref": "a12d0be8-9744-472d-b0ea-87e043fe3c9f",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2f836275-10fb-476e-a455-1857de2affa8"
        },
        "item": {
          "id": "83b13807-811f-41a3-a536-20f7c1a07f49",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "faa1429d-ba02-438a-af83-209dc6bcf4bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "457a7589-0da9-4e48-80c4-7cc14ef909c0",
        "cursor": {
          "ref": "38cfa835-9e1e-4ac1-98b3-a11d536fb0f0",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "663d6def-391b-465e-99e0-cd9e561fac47"
        },
        "item": {
          "id": "457a7589-0da9-4e48-80c4-7cc14ef909c0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7f89b5ec-9fde-4049-82d0-3223e06d12cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed5cb35-40f2-494f-8f3d-c1eb0484325c",
        "cursor": {
          "ref": "80e68ad6-6241-45e8-ba7d-caff033a6c49",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "814308bd-1140-4836-a64a-063b362bd55e"
        },
        "item": {
          "id": "aed5cb35-40f2-494f-8f3d-c1eb0484325c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e18f56d2-1aa1-4572-88f0-622d7c65b67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c07b4ac-7feb-47aa-9581-c44690f5cddd",
        "cursor": {
          "ref": "f1de8e4d-a536-4445-bc91-5dca547ef0c2",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a53ad961-4630-492f-a0a3-12a96160160d"
        },
        "item": {
          "id": "2c07b4ac-7feb-47aa-9581-c44690f5cddd",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "00290796-7fad-4217-acff-d687cfac1035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d07f44-1bc9-4a7e-a830-26aad115402b",
        "cursor": {
          "ref": "612aa055-8d5a-4598-9763-45e49b21c1db",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "9c712228-3444-44bf-a808-7e74b9acb49a"
        },
        "item": {
          "id": "93d07f44-1bc9-4a7e-a830-26aad115402b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "589714ce-8d9e-413f-a73e-03ddc31ebe5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a692b5-097d-49ed-bac0-22e609d89749",
        "cursor": {
          "ref": "c250739c-ce10-4799-9c22-1fd4c32d1668",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5bad8091-89b7-4085-b5ce-d281b648a2c9"
        },
        "item": {
          "id": "25a692b5-097d-49ed-bac0-22e609d89749",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8b6caf97-5277-4226-b7d3-ac7041e383f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1481189b-fe45-4727-82bd-64ba1e9ea4e9",
        "cursor": {
          "ref": "59cb6fc2-d031-4941-bfb0-81a6cb8871f0",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f1af9aa2-eb7c-4f7e-b735-38463d894984"
        },
        "item": {
          "id": "1481189b-fe45-4727-82bd-64ba1e9ea4e9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b9a5eebb-3ab5-4654-b0ab-ee8290846e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a72978f-01a2-4549-9308-f14e0bc1dba1",
        "cursor": {
          "ref": "b0e91614-0af7-4391-8640-24f30e4f10ff",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d7b60144-c2e7-42c8-8642-7f90d1a2677f"
        },
        "item": {
          "id": "4a72978f-01a2-4549-9308-f14e0bc1dba1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3ec7e855-b483-497d-b416-2dba3ac21e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a062ac07-f36b-45cd-bce7-6d637d28b434",
        "cursor": {
          "ref": "b25ef37b-89c6-46b1-a324-f5e4b4d10c89",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f8729b13-ee14-4d87-84cf-966ecd2e8830"
        },
        "item": {
          "id": "a062ac07-f36b-45cd-bce7-6d637d28b434",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "61daa548-e196-42dd-8204-9f762dfcfca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ecf7ef-c384-426e-bc82-b50ac0156bf2",
        "cursor": {
          "ref": "74e7dabf-1cf3-4031-8a96-eb2cf191ccc0",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d3f184be-ff24-4ddf-9645-2128c9732199"
        },
        "item": {
          "id": "80ecf7ef-c384-426e-bc82-b50ac0156bf2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ff30744d-8a92-413e-b1a1-54069110f76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db609d2-d014-4eae-8608-14a2d965f0c0",
        "cursor": {
          "ref": "1fba9b25-188d-4287-873a-319d3e39606e",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9b7dbe3a-641c-4ef3-992c-1de6e32138b1"
        },
        "item": {
          "id": "4db609d2-d014-4eae-8608-14a2d965f0c0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2bda60e9-e7fc-4b20-a082-1189dc646122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a540a43-6691-4d37-999a-f890c3a3d79c",
        "cursor": {
          "ref": "9057a0f6-35e6-471f-b2cb-be79531690ac",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "bb34f3b8-01fb-4448-9309-b5f50eb654dd"
        },
        "item": {
          "id": "5a540a43-6691-4d37-999a-f890c3a3d79c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "150e7d49-60ce-458b-9e9d-89c63c5fb354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66cb9c56-fc1d-4549-8c0c-4851451e71a5",
        "cursor": {
          "ref": "c85e86f3-0911-4c85-ac1a-0bd590f534bb",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "41387fb9-29dd-43df-bd8f-4f78e3350595"
        },
        "item": {
          "id": "66cb9c56-fc1d-4549-8c0c-4851451e71a5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ce524599-b62c-4e14-b40d-ee8b03a440be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e76258-1c32-4932-8774-363d8a70372c",
        "cursor": {
          "ref": "5ad6ecef-3e08-4d5e-b1c1-3c0e84d7459e",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5ef2d206-9dc1-40bc-a15f-ff09240458b7"
        },
        "item": {
          "id": "b9e76258-1c32-4932-8774-363d8a70372c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3ccf5cd3-6db8-42fa-85b7-c4af324cd6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a4059e-e68b-44cb-adee-05e27eb81891",
        "cursor": {
          "ref": "79ac2969-d4b1-4af3-8ac5-5f8366444ab2",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "42bd91ad-2048-4de4-9bd7-bd92695bc3d6"
        },
        "item": {
          "id": "42a4059e-e68b-44cb-adee-05e27eb81891",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "8ed61de5-c969-436e-91f5-292769723f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3571b0-de26-4e2b-8019-b1977f437a18",
        "cursor": {
          "ref": "24f3d5b4-011d-4722-934a-d1a204b50d45",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "bce8c14c-35f2-4233-b882-0fc41f98a6a3"
        },
        "item": {
          "id": "0c3571b0-de26-4e2b-8019-b1977f437a18",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f6cc9c0d-29bf-406b-ae28-e2f05c4d6bfe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e4fdb0-a0f3-4a01-b621-0ec9be96402c",
        "cursor": {
          "ref": "70d01f5c-acbb-44a8-a7dc-c445affa68b8",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b84685c5-9aef-47c1-9ef0-f251cbf26f0e"
        },
        "item": {
          "id": "f1e4fdb0-a0f3-4a01-b621-0ec9be96402c",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "aa6fa097-d8a3-4391-bb3b-acac10faff18",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7218d42e-f083-4362-acfd-537d144a81fb",
        "cursor": {
          "ref": "dfc03623-af95-4a4b-8a92-267c49293399",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9dd09a01-d648-4d3c-8291-61cf80a9ddaf"
        },
        "item": {
          "id": "7218d42e-f083-4362-acfd-537d144a81fb",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "de7aa41e-ea21-477e-95bd-803890e61b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7218d42e-f083-4362-acfd-537d144a81fb",
        "cursor": {
          "ref": "dfc03623-af95-4a4b-8a92-267c49293399",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9dd09a01-d648-4d3c-8291-61cf80a9ddaf"
        },
        "item": {
          "id": "7218d42e-f083-4362-acfd-537d144a81fb",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "de7aa41e-ea21-477e-95bd-803890e61b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f68ed076-a26b-4231-b9ce-2d5324b3d5a9",
        "cursor": {
          "ref": "38a16b86-e225-4242-8ff0-6899b87aeea2",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1839ab84-e9f2-42b6-865b-90fa8dc1f42f"
        },
        "item": {
          "id": "f68ed076-a26b-4231-b9ce-2d5324b3d5a9",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0293d55d-01a4-42c7-ba65-930bf8fd40a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28f8f84-50b6-4373-b542-502776b1fc19",
        "cursor": {
          "ref": "940a0b85-52ca-455e-ad9b-f46bc2534464",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "361eebaf-e5ce-4045-81a5-a6857d974ce1"
        },
        "item": {
          "id": "a28f8f84-50b6-4373-b542-502776b1fc19",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "473f94ed-7790-4843-9348-c726d211397f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b472313c-cf62-4a94-8baa-dcb6b2f86182",
        "cursor": {
          "ref": "19222a84-5a2b-4c15-b924-6ff57c250801",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "33688ccb-c72f-4612-a6a6-2a81cadd9b4e"
        },
        "item": {
          "id": "b472313c-cf62-4a94-8baa-dcb6b2f86182",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "289b7031-6706-4001-8cd9-90cf07ee6e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf47c74b-da33-4934-9704-bdfc25650573",
        "cursor": {
          "ref": "aeff7ea7-cc90-43a6-87bc-15cff15d5efe",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "51f5eb6f-8db6-4f4e-ba11-8702d3a3bbb3"
        },
        "item": {
          "id": "cf47c74b-da33-4934-9704-bdfc25650573",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0290dcd4-ab44-49b1-9d2d-86a967bd1019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f585fe9c-c93b-4744-940f-f03c8058438f",
        "cursor": {
          "ref": "c2ed0b4d-6b01-4b3f-b7fd-9b4a04d872da",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c511b2bb-ef09-4abf-b609-32d01bec4dc4"
        },
        "item": {
          "id": "f585fe9c-c93b-4744-940f-f03c8058438f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "659ae8b9-a11e-4967-aad8-674519c4fc56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77aadd4f-02c5-4e9c-9f05-bd3e583cded1",
        "cursor": {
          "ref": "7582d899-d903-4b53-ad69-61b13d396ad4",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b97a8a39-8b6f-450c-aaf6-211f461c21b0"
        },
        "item": {
          "id": "77aadd4f-02c5-4e9c-9f05-bd3e583cded1",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8cf71613-3ab6-4187-bf1f-84c026801c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d83454f6-a564-4d34-b1b9-70bc92a07d85",
        "cursor": {
          "ref": "89ae6c80-d7d4-4453-8654-6d1e5ff12d73",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "69e70e60-0fc2-41ac-8080-f3110fd14f33"
        },
        "item": {
          "id": "d83454f6-a564-4d34-b1b9-70bc92a07d85",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "29cab13b-c43b-4289-a8f1-8738477461ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f99d130-5076-452a-a805-5ef76ef5abf1",
        "cursor": {
          "ref": "2fa6578b-0a73-45fa-9ae1-3ea67f374ef0",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "655ed1f6-a82e-4196-8cb2-22aff2dbc496"
        },
        "item": {
          "id": "7f99d130-5076-452a-a805-5ef76ef5abf1",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ab15569b-f18e-46e5-b92a-0775a6dd3057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1b6651-4159-403f-bb74-1f68fb62f567",
        "cursor": {
          "ref": "da7b34b6-3876-4e42-bd50-f9d022042c7a",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8c90b09b-5029-4b33-9ebe-20a4d9a2ba9f"
        },
        "item": {
          "id": "8d1b6651-4159-403f-bb74-1f68fb62f567",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f8c127fc-301f-4a94-817a-90f1bf55c861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb43ea37-687f-4326-bcb0-b9f25124e63b",
        "cursor": {
          "ref": "4b89e4bd-bbd8-48d9-8e49-689425b51dcb",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "31ba90d2-32db-42ea-ab4c-3b8de8252b4d"
        },
        "item": {
          "id": "eb43ea37-687f-4326-bcb0-b9f25124e63b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "10bbbbd5-120f-4c25-8a79-2b5e1bc462ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afdffd28-51bc-4284-b50a-cd40f3bfbbfc",
        "cursor": {
          "ref": "a3650adc-2a37-4576-8304-9f6914213b3b",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "fb32b633-9b5f-4cb5-9c95-82e49cdd4403"
        },
        "item": {
          "id": "afdffd28-51bc-4284-b50a-cd40f3bfbbfc",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c12e1414-78ef-420b-ab61-2fbe47352808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995597f6-3ace-4379-9c57-89edbca4f501",
        "cursor": {
          "ref": "caf75a46-47b9-462d-a62b-8e26e519315e",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7d72c83e-e1cf-4570-bb63-b4fc4a808a99"
        },
        "item": {
          "id": "995597f6-3ace-4379-9c57-89edbca4f501",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e51d9951-88f8-4e06-b233-b187e6f62b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5056d769-e4df-4a8b-83e4-f02279aad58c",
        "cursor": {
          "ref": "747b8237-87c3-4fb5-87df-7ef9e3b3f44c",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "dc4c8f90-218b-4382-87b3-2252c711eb91"
        },
        "item": {
          "id": "5056d769-e4df-4a8b-83e4-f02279aad58c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1f07f62c-ad53-4994-aac8-f336b24b1b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a83a607-6f59-4b33-9de4-7e584fc428d3",
        "cursor": {
          "ref": "c77ed931-6acc-4662-9916-2b7caa5c036e",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "95067c2b-fb5c-4bcd-8d8a-ab730402c407"
        },
        "item": {
          "id": "2a83a607-6f59-4b33-9de4-7e584fc428d3",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0fe472be-a574-4184-8376-f92950b56e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a7fd4e-754a-429c-a28b-6794081fe96c",
        "cursor": {
          "ref": "6c2b28bf-24a6-47e9-ba28-465491fd7387",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "615949de-9eb6-498f-8181-fa5b08af0e79"
        },
        "item": {
          "id": "74a7fd4e-754a-429c-a28b-6794081fe96c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5ea1501f-cd75-43a5-b614-211a7bd85e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "544ca295-8c42-4c05-8a54-72ced4efa8cf",
        "cursor": {
          "ref": "e79ed171-2714-4e3a-b030-007af52bd15f",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e353610c-ca6d-4c00-8aa2-24c170ecdd6d"
        },
        "item": {
          "id": "544ca295-8c42-4c05-8a54-72ced4efa8cf",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "bb6f85ea-1054-4341-9895-d28d1e23e019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2d7db3-6e39-48af-a604-fa72564da489",
        "cursor": {
          "ref": "58836615-af78-4b4e-9ba0-3c8d7af6aa21",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "22667e45-eb8d-4a3b-8419-25907d563b61"
        },
        "item": {
          "id": "8b2d7db3-6e39-48af-a604-fa72564da489",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "8440d47d-f6f5-43c9-81eb-1b63c6ad4ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e5ab3d-04fa-4db7-a7a2-31547fa96b4c",
        "cursor": {
          "ref": "3edfaecf-7b28-4555-a961-7621b8ad9809",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "dcc196e8-694b-4847-8ea8-00a1d1b15fe6"
        },
        "item": {
          "id": "e7e5ab3d-04fa-4db7-a7a2-31547fa96b4c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c4daac96-bb53-4521-9063-5e3722ba172e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2064162c-d30c-4b1d-820c-3ec6c72c6eb9",
        "cursor": {
          "ref": "7e51c995-6e55-44ce-840e-0c7fd2f24464",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "4ca3a892-e378-41d1-86ed-a7861d610655"
        },
        "item": {
          "id": "2064162c-d30c-4b1d-820c-3ec6c72c6eb9",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e269c6bb-c45c-45f3-8298-5b576217e1f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0feaa12c-0e64-4068-9e7d-30c407c7a64f",
        "cursor": {
          "ref": "d8ad7f27-ba94-4c18-9d99-e82680dbe71a",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3d01fa62-cb37-446e-b9e9-29be6b0a2a42"
        },
        "item": {
          "id": "0feaa12c-0e64-4068-9e7d-30c407c7a64f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d6c55c57-ed53-4946-95c4-9983da817991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f1e3703-9fa8-4eef-ae9f-ed784927a63d",
        "cursor": {
          "ref": "7dcde349-d4d6-46fc-a3d7-aff6590f2dbc",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c7e59d37-da51-4d90-88fc-596e6c3d23d9"
        },
        "item": {
          "id": "6f1e3703-9fa8-4eef-ae9f-ed784927a63d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9a8f6bec-c026-4316-9d26-ba4d2babb22a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0863354f-7ab0-4394-ae5e-7c86f76f864e",
        "cursor": {
          "ref": "0dacc35e-b013-4572-b0b7-b74c20cb4ff9",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4e7b7c4c-3bb5-4f68-a604-d5b135decfda"
        },
        "item": {
          "id": "0863354f-7ab0-4394-ae5e-7c86f76f864e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "23a49b2e-c237-46cc-a372-ac6d13c4520a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e47f30d-91fd-4ceb-a247-c30b0a81d3ae",
        "cursor": {
          "ref": "480b5068-aceb-443d-a367-3e96ea5f3673",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7dcc8cf1-cfdc-4d7c-9e12-c131fa334879"
        },
        "item": {
          "id": "5e47f30d-91fd-4ceb-a247-c30b0a81d3ae",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5d2b3a03-24a0-4c20-b756-00a6ba59bbb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b256e3-3315-4c3c-964f-8ae2c7a42730",
        "cursor": {
          "ref": "ba435444-5ba8-469c-a6b0-d5b2a5134dc1",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "b0dd3e0c-f07f-4da7-97f6-7573b3971d94"
        },
        "item": {
          "id": "b0b256e3-3315-4c3c-964f-8ae2c7a42730",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "80da74ed-be21-4af0-ad8a-57dfdd5eb40e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb890088-8c56-472b-be5d-1161f804b01f",
        "cursor": {
          "ref": "376d1972-de81-4e14-83da-bce5688ff5c3",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c580567d-dedf-4e04-9d6c-592cb98354e8"
        },
        "item": {
          "id": "fb890088-8c56-472b-be5d-1161f804b01f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "cc9a415b-0650-496e-bccb-98fefaf1ee56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8393384a-696c-4b58-90b2-24d75cbac8d0",
        "cursor": {
          "ref": "c2d215b4-4a34-4ba6-a3dd-4a1d481400ed",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "94599932-43e9-420a-acfb-a1c77a9e9b71"
        },
        "item": {
          "id": "8393384a-696c-4b58-90b2-24d75cbac8d0",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b8e3f008-6e50-4bfc-a165-2a2c0f9b3929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9a7e65-2e56-4730-9928-5c1367c3372d",
        "cursor": {
          "ref": "f83f3e7a-271a-4c62-a56c-b39757867f39",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ed7ded79-b4cf-4400-81d6-f4cabb21457d"
        },
        "item": {
          "id": "ad9a7e65-2e56-4730-9928-5c1367c3372d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7ffa735d-6e55-41c5-b1be-35392b7ceb4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b1b64ec-d440-45b7-aa7b-9b4489873c02",
        "cursor": {
          "ref": "b65f6da2-340e-4434-a8a2-f66f4e32a1d5",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "594de210-3683-4d68-9bdb-10b650274f59"
        },
        "item": {
          "id": "6b1b64ec-d440-45b7-aa7b-9b4489873c02",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ea305e62-cc35-47c1-893d-1f8032d769ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7667974-35fb-4e45-92db-47f33dcfcfdb",
        "cursor": {
          "ref": "d11f998e-e64e-4127-8425-7578615adb02",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "878b7e47-be25-4591-bd84-c0b85d037cd7"
        },
        "item": {
          "id": "f7667974-35fb-4e45-92db-47f33dcfcfdb",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6edc958d-d94d-4358-89e4-242a6619f325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a0af5ea-1968-43b3-9ad2-a25c99221b3b",
        "cursor": {
          "ref": "70235ceb-c01b-4a9e-bf54-e2a01f065723",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a8b4dd7e-b55d-408a-be43-2214dbbee0b7"
        },
        "item": {
          "id": "9a0af5ea-1968-43b3-9ad2-a25c99221b3b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2cec43be-62ea-4c91-99dc-f8b481144e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886b9859-dba2-4b66-b4c4-73bf7d3d0e99",
        "cursor": {
          "ref": "cc629e23-064e-433d-bffc-7de757f9a4a0",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "726ed1ba-b308-4b99-8d50-9967edb5f7fc"
        },
        "item": {
          "id": "886b9859-dba2-4b66-b4c4-73bf7d3d0e99",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b746efa7-816b-4c4b-833f-558df6201bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a456649-8e38-49ce-b8f7-a2799a0f6775",
        "cursor": {
          "ref": "9098f32f-1394-4215-9e5f-a05cd03807f9",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "508859c9-4dbf-4d3b-9a48-32acddad3287"
        },
        "item": {
          "id": "2a456649-8e38-49ce-b8f7-a2799a0f6775",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "06aea1a3-bd5b-490c-a0b4-781a8524a726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7fd2243-390d-4cae-889f-65d31f2d1541",
        "cursor": {
          "ref": "41c3f337-32e4-49f9-b28f-2a4fee4221a5",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "94f82f72-3da6-4fb6-99dd-11b8433a3ee5"
        },
        "item": {
          "id": "c7fd2243-390d-4cae-889f-65d31f2d1541",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d8ccad31-8da4-4068-9797-a069ade5ec80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a57922-6427-43c5-92f1-1e69d16265fe",
        "cursor": {
          "ref": "a81cda85-68f9-4471-84d6-e95579969c6f",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c8429ee1-b7fd-4fac-ae33-79521af237e2"
        },
        "item": {
          "id": "66a57922-6427-43c5-92f1-1e69d16265fe",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2ea3a1a0-33be-487e-bd71-2b00bfd99b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8594ef-50ba-4795-9dda-3f5d112c4bf7",
        "cursor": {
          "ref": "9879ab25-23de-4ab7-8fe9-122833dab14d",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d8babbd3-608d-448b-af9e-51635ae9b1a5"
        },
        "item": {
          "id": "ea8594ef-50ba-4795-9dda-3f5d112c4bf7",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "2036433b-8bcd-4dad-8de4-71098f68205d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b298da-6330-4bcd-b0ec-6da3b040cc57",
        "cursor": {
          "ref": "aac13c80-a4bc-40f9-af19-72ca0efe4c4a",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "32e0fe4f-98e5-4bc8-a59b-bda33d232402"
        },
        "item": {
          "id": "d8b298da-6330-4bcd-b0ec-6da3b040cc57",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "997a8df1-4029-490f-85b2-f67036aa05b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c888234-5ae8-4f39-a622-b81975ec8705",
        "cursor": {
          "ref": "8c413ad1-9283-486c-abb8-fcb3484024d5",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4fac811e-cd86-4e20-85fb-0893d847d570"
        },
        "item": {
          "id": "2c888234-5ae8-4f39-a622-b81975ec8705",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "69d02d13-000f-439e-b4e4-7a48917b9bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55cd3d9b-25e7-4153-92d4-a48221af81b7",
        "cursor": {
          "ref": "99370054-f2ac-4cf3-b115-d9afe569afa2",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c0337cca-008f-4542-b02d-2bd768322c80"
        },
        "item": {
          "id": "55cd3d9b-25e7-4153-92d4-a48221af81b7",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d5a081a9-93c5-40ae-aa5e-57a833036b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0996b6d1-1803-47a2-9316-0a5c89444ab2",
        "cursor": {
          "ref": "62e67f1d-11f4-44cf-9ef7-773a94b56e98",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "acfb4182-de99-4dba-aa04-86fa3a3bf17a"
        },
        "item": {
          "id": "0996b6d1-1803-47a2-9316-0a5c89444ab2",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "8c73faf2-c2f5-4bc3-a738-df253c8211d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366ad4bb-cb3e-4001-867c-c3bfb2071f3f",
        "cursor": {
          "ref": "f019149f-4d11-4ccd-bc4c-37461e2c98e3",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a6165ca6-aaf6-4cf1-9ef7-56652c257972"
        },
        "item": {
          "id": "366ad4bb-cb3e-4001-867c-c3bfb2071f3f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "12a5a13b-9144-41e5-9448-a0e866b03bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7c07c0-1d24-479c-b80c-16f183485af4",
        "cursor": {
          "ref": "07f67dae-0eb4-4cd8-a870-1dedfa875894",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a9b4dda0-20e6-4a4b-948e-96b6ba921ec2"
        },
        "item": {
          "id": "6a7c07c0-1d24-479c-b80c-16f183485af4",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "5a623bbe-001d-493d-b8e7-d14d69fccbdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb823e5a-6d3d-486e-9fe7-abaa86f6ac7c",
        "cursor": {
          "ref": "d1cccc7f-5dc7-4350-80e3-92eaabdb84d3",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7fdaf337-6b71-4979-a7e3-be83790fbf93"
        },
        "item": {
          "id": "fb823e5a-6d3d-486e-9fe7-abaa86f6ac7c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4b80cf39-3cb0-4227-af05-3051614434b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc33109-9eb6-4bdb-bf0a-f34f483e3090",
        "cursor": {
          "ref": "d3d57584-7aa7-461a-914c-3f834d77ecff",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b86980ac-61bb-42bf-ba0b-361d95b5e5c0"
        },
        "item": {
          "id": "7cc33109-9eb6-4bdb-bf0a-f34f483e3090",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d559cff7-16e4-469d-8199-cf521e40a365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f02c52d-e88d-43ea-a842-d58ee5b7bba4",
        "cursor": {
          "ref": "2bb9b164-c3aa-4f5b-a102-ec989d857c6b",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d25cb414-c809-4f67-a024-9d9fdffd2df7"
        },
        "item": {
          "id": "1f02c52d-e88d-43ea-a842-d58ee5b7bba4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "77ce7fe2-b836-4973-a843-6c0d22c195a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b77eb3d-c213-459e-9787-6f5adb7728ce",
        "cursor": {
          "ref": "66fa9c31-15ed-4dce-9d30-5d38aa92cca6",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "24677892-7d08-47e6-abf5-81275ae3517a"
        },
        "item": {
          "id": "8b77eb3d-c213-459e-9787-6f5adb7728ce",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "dabf03bf-4b69-42eb-8ba9-80297fe535f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0668888b-3472-4b62-ba86-9e4e6af6d8dc",
        "cursor": {
          "ref": "7d1ca2ee-726c-41f8-8743-492251ed90dc",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "9a89c1c7-8d2a-4d06-b8ce-f959f9316dd6"
        },
        "item": {
          "id": "0668888b-3472-4b62-ba86-9e4e6af6d8dc",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6faf5f4a-e9d1-44e2-a6bd-b342a7bb2489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc62cd3-00bd-4011-b50e-dfc28930570b",
        "cursor": {
          "ref": "6d3fca3d-983c-4e69-a3bd-8c9f23820f90",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "10ce0782-97a2-45b2-93e8-3c97913a08fc"
        },
        "item": {
          "id": "acc62cd3-00bd-4011-b50e-dfc28930570b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ebfaf7a3-0e51-4faf-a9c7-fbb786406020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3665ff72-ddc5-4418-9b79-47778ed95c63",
        "cursor": {
          "ref": "859a4776-360e-48a1-98a9-7a014ca0870d",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2987c7aa-9901-4775-a4aa-46134fa8e66a"
        },
        "item": {
          "id": "3665ff72-ddc5-4418-9b79-47778ed95c63",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f0ed50c4-d283-45dd-a448-22df431e3d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6946f1a-5a03-439a-a669-c1f1b64f5703",
        "cursor": {
          "ref": "3d88d428-127d-4174-9eb5-e3b29cc7af6f",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a362342a-aee5-492d-85bc-a4df3fa69d86"
        },
        "item": {
          "id": "b6946f1a-5a03-439a-a669-c1f1b64f5703",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "751c4119-765d-4ae3-bc61-129a895fac7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403e2c9e-a23c-4090-89e7-6840b23d28a6",
        "cursor": {
          "ref": "ea37fa2d-d887-4967-85ee-6362df9f07dd",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4004ef5c-d7a1-431b-941f-4c4f08695d61"
        },
        "item": {
          "id": "403e2c9e-a23c-4090-89e7-6840b23d28a6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d948e580-211b-46ab-98da-274468765f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06d2c76-09f2-4d25-8a07-152bbb5e3b35",
        "cursor": {
          "ref": "8c0b8c17-f7ad-4ee6-8d8c-ff20f455ad6e",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "17a4b8a1-ad77-4167-8830-782014c1092d"
        },
        "item": {
          "id": "d06d2c76-09f2-4d25-8a07-152bbb5e3b35",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6fd3f3c1-b942-48d9-8cb5-95efad6ddd94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b6e86c9-c35b-4720-82e2-59ffcf4fe550",
        "cursor": {
          "ref": "0fcc1f53-1017-4f5c-b823-e18499ee9c75",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "86e5e308-4cff-40b2-9613-737d155ede29"
        },
        "item": {
          "id": "2b6e86c9-c35b-4720-82e2-59ffcf4fe550",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d9a3e344-861f-4af2-a64e-44f12ffa72ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba9edb2-a264-4ba1-9b74-2a2137e3f2da",
        "cursor": {
          "ref": "40129ed7-de96-4b6c-b5b8-c601887961d2",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7cf50c77-4d51-4959-bfc1-47257593619d"
        },
        "item": {
          "id": "4ba9edb2-a264-4ba1-9b74-2a2137e3f2da",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "97d07ddc-13bf-4090-aeac-83fe087f2284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d8d842-b0eb-44da-81d5-4e034fac3e7d",
        "cursor": {
          "ref": "5c8fde49-223c-41bc-a41b-bba7dc54113a",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "16fa000b-f01e-4f03-8831-0e3fa77bef49"
        },
        "item": {
          "id": "e0d8d842-b0eb-44da-81d5-4e034fac3e7d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "79549b5f-9516-4470-8851-67aca0d9adbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9b5348-46c3-4e33-9833-1bc72b5d93f6",
        "cursor": {
          "ref": "a04a6e75-965e-4eb3-be14-b3d23cc7a09d",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8840025c-16b7-44fc-b2f9-ef1ce9c43ed2"
        },
        "item": {
          "id": "fb9b5348-46c3-4e33-9833-1bc72b5d93f6",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "5fd63402-0415-4e9c-8cd9-49001c1fe7fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03e1420-40df-4080-8654-d74a95639b6a",
        "cursor": {
          "ref": "c7669497-14cd-4d4e-9992-20d6578cfc79",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1dae42ce-e54d-43e7-957a-8e5c4117dc6b"
        },
        "item": {
          "id": "e03e1420-40df-4080-8654-d74a95639b6a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a960493f-52fc-49a5-bd62-ca7e4ab11602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085aa62d-1d20-4f19-b8bc-caeb6c856031",
        "cursor": {
          "ref": "e3e6abec-6f0c-4226-b12a-97eddd3b0c34",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "682f6a2c-157c-4589-bae3-6498b1c00472"
        },
        "item": {
          "id": "085aa62d-1d20-4f19-b8bc-caeb6c856031",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "da3a6ab0-01e4-4c55-9e8f-fa3059cd652a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db4fb01-8d1c-41e2-8909-bb3b4ef346c4",
        "cursor": {
          "ref": "d079de7a-baed-4ae7-8950-4f8271bbf673",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "885c4d80-d663-4262-a9a5-2c42afa20cbd"
        },
        "item": {
          "id": "9db4fb01-8d1c-41e2-8909-bb3b4ef346c4",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "be499df3-811f-48b6-a170-411c4737729c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d32d230a-b423-451f-b31c-1328dba5f5b4",
        "cursor": {
          "ref": "26f03d49-5f87-4ae1-860f-b06d3c0f8256",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a2d53d50-0b5b-42b7-ba4d-e961257ec604"
        },
        "item": {
          "id": "d32d230a-b423-451f-b31c-1328dba5f5b4",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "cd1e01d2-3593-472e-bde5-78b75d4861ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1471e25-ceb0-477c-948b-aa824272ac47",
        "cursor": {
          "ref": "b0652c62-c869-46c2-aa69-3b14f5de5357",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ee5b33cd-442c-4c2e-a9b7-cb64a73d75fa"
        },
        "item": {
          "id": "f1471e25-ceb0-477c-948b-aa824272ac47",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f4bd7a1e-a5d7-4eb9-b7a6-feb7e9d040e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928cdd77-8168-4ad7-9a4c-3ee1d4f9598d",
        "cursor": {
          "ref": "a6c672c0-64bc-4b9a-8e53-84486c6cbe0f",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "5662ccb4-4c4d-4a6b-915d-ab65afb9547f"
        },
        "item": {
          "id": "928cdd77-8168-4ad7-9a4c-3ee1d4f9598d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6750eae4-0e3c-4a7c-b07d-aa380db74620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cbf1ef0-60c0-43b5-a3dc-29a676d694fc",
        "cursor": {
          "ref": "337d4d68-ce53-4a21-96db-528ad98491d4",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "905541e6-c53b-44e8-bf94-6db038532c7c"
        },
        "item": {
          "id": "4cbf1ef0-60c0-43b5-a3dc-29a676d694fc",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b7c7aa6e-235e-4369-899a-539482809c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff110334-1781-4886-8884-39eed8c23531",
        "cursor": {
          "ref": "0895fc8b-c539-448d-85e4-ea699f151d9c",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ddcd064a-3569-48f4-9272-7d2523113b12"
        },
        "item": {
          "id": "ff110334-1781-4886-8884-39eed8c23531",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "00c994e7-8167-4296-93fa-01a12242c274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "395abcc7-beff-4082-aaab-08bb62687154",
        "cursor": {
          "ref": "b51102ea-386f-463d-947c-df74b04fc27d",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d476abbb-0468-4e82-be1d-20957ff68a17"
        },
        "item": {
          "id": "395abcc7-beff-4082-aaab-08bb62687154",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f9e9789a-e8f4-4cfa-9687-f66e45650cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c79caad-2a2d-4f14-a452-c0c3b9be486a",
        "cursor": {
          "ref": "8e32e859-c020-4e4a-9e49-25b16616591b",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1a2ba870-0921-4fe5-a555-ebd8cca4204b"
        },
        "item": {
          "id": "2c79caad-2a2d-4f14-a452-c0c3b9be486a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "249790c1-c192-4b46-b9db-27e2b423706c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705adeaa-f558-4c3d-9827-a1218c6f476a",
        "cursor": {
          "ref": "041f887f-2649-4bcc-8469-301499a24e3d",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ef528443-5278-4bfc-a4d0-ddf9dba8e170"
        },
        "item": {
          "id": "705adeaa-f558-4c3d-9827-a1218c6f476a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "4eb3d5da-a42c-4654-9f4e-0010dc5b1458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c0d34f-f547-4291-968c-77f6c9f2dd30",
        "cursor": {
          "ref": "ba98dd0f-75a2-46bc-8f3d-0ea23d02e8b0",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ad65b58d-3be5-4d69-8ec9-304ffc58f1ec"
        },
        "item": {
          "id": "70c0d34f-f547-4291-968c-77f6c9f2dd30",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "78f8dfd5-495e-4c1a-acc4-6a51de334689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6304163d-59d3-45d0-96dd-a5ce7784e0d0",
        "cursor": {
          "ref": "c4240ac8-c343-4b2e-bb9b-7341cbdedb54",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6928addc-9d40-4b2d-ae2e-a31eef0c260f"
        },
        "item": {
          "id": "6304163d-59d3-45d0-96dd-a5ce7784e0d0",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3fac4607-b79a-4002-b05c-9facced12578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3e83d9-8295-4867-8f31-3e1df1ab2bad",
        "cursor": {
          "ref": "7c26ef79-a6f7-43b5-ad8c-f51a1414d7cf",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "53383c1e-ef69-4de5-9f68-615cb24ea0f0"
        },
        "item": {
          "id": "aa3e83d9-8295-4867-8f31-3e1df1ab2bad",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "24c0cdfd-a652-4f00-a5aa-eb2864039e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc35afc-e61a-4211-a581-085e78789e6f",
        "cursor": {
          "ref": "9af87183-e74f-48c5-9220-f0db5f9d726c",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "1dfd31ba-3d8b-44f3-8a66-ad7fe8ba5e30"
        },
        "item": {
          "id": "adc35afc-e61a-4211-a581-085e78789e6f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "321b9e97-d2bc-4cbe-9a8a-eb63399d7224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc3f138-68b2-4135-9993-cbbda364d729",
        "cursor": {
          "ref": "bdc600c8-7811-46f3-bdeb-e2a9e625b0c9",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "bcb432e7-2d6c-4d09-97ac-9d45aed1e0c4"
        },
        "item": {
          "id": "cbc3f138-68b2-4135-9993-cbbda364d729",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "88f86df3-e736-4753-96f7-2694c3578758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc391530-58f5-4353-a8d8-170849951a94",
        "cursor": {
          "ref": "0642583c-12d3-49e8-aa11-6cd233df0e1d",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9560eeb4-50d0-402d-ba84-6143a81482cc"
        },
        "item": {
          "id": "fc391530-58f5-4353-a8d8-170849951a94",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e445e0f3-b341-421b-86db-cc5c01f2ccf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1944a2be-2017-4aed-a6d8-3cea53587a3c",
        "cursor": {
          "ref": "d94415c5-f420-487d-97e1-d149aacc3d04",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "8eb7af12-2ea4-40c9-a021-c92c1f67672b"
        },
        "item": {
          "id": "1944a2be-2017-4aed-a6d8-3cea53587a3c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ea082375-bd8d-4b38-b904-e4764672b2e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359d56a0-daf7-491c-99e7-f71387e4df89",
        "cursor": {
          "ref": "f11ad54b-0a15-472c-85ac-d4b548cc9866",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "100e90d7-01d9-4d50-b669-a2a1f68640ad"
        },
        "item": {
          "id": "359d56a0-daf7-491c-99e7-f71387e4df89",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f48b3664-70fc-4864-9fd7-35920ff47ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c545a427-0609-490d-b560-15ea5ca64a73",
        "cursor": {
          "ref": "f8a9922b-02e2-4fc1-ae02-76d1fe478f50",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c243d031-4fd4-454a-bb2a-c98c8024df32"
        },
        "item": {
          "id": "c545a427-0609-490d-b560-15ea5ca64a73",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f693aaba-d43f-4871-bddd-c3753220282e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4914946f-60fb-495a-b8c7-95c34362d200",
        "cursor": {
          "ref": "6537cb9a-1f55-4a8b-9126-61f8c181ed05",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "15391a64-18cb-4edf-bcaf-5f0a3ca5d701"
        },
        "item": {
          "id": "4914946f-60fb-495a-b8c7-95c34362d200",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "08372012-b447-4e56-86f5-fc28c16fd18f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d068ef89-5392-496f-9f65-afa36968f7c0",
        "cursor": {
          "ref": "42d358f9-b2b2-46e7-bf82-df8d842427f8",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "058160ba-013d-4b99-a2b0-df864c859355"
        },
        "item": {
          "id": "d068ef89-5392-496f-9f65-afa36968f7c0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ffdfc7d0-7f12-43b3-b6b9-21f4eff04f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fda12f7-6c62-4833-8b83-1bd5cdf5a20a",
        "cursor": {
          "ref": "5db34cd2-dd8e-4be0-9079-c7d4cfbfcec2",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f905492c-4394-446c-8765-82a76419fd45"
        },
        "item": {
          "id": "2fda12f7-6c62-4833-8b83-1bd5cdf5a20a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "316c59c1-c36f-4aaa-a12b-a211a3c09e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "094fbf15-4b8b-458e-a618-e8dd93577a3c",
        "cursor": {
          "ref": "47d7eb99-faa9-49d3-bbd3-a5eb984c12eb",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4283c304-6b17-41b2-86e4-245d9c54730d"
        },
        "item": {
          "id": "094fbf15-4b8b-458e-a618-e8dd93577a3c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c692b34a-d007-4e0b-a07a-d984cd6f0116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2a1a35-0fa4-4618-ae5e-f27e006c5b9f",
        "cursor": {
          "ref": "cb47590b-536c-41be-bf1b-043f7c7c0c89",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ae889444-b237-4a8c-ad26-981475006dbd"
        },
        "item": {
          "id": "7c2a1a35-0fa4-4618-ae5e-f27e006c5b9f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ca253079-72b4-4c52-a9eb-3a7c9c8a0d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "262d8374-2550-4aeb-90d8-37bd060a1b07",
        "cursor": {
          "ref": "a57521f5-441f-44e9-966b-31f77af992d8",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6ad50c2f-1520-4349-ab87-488d8a48d94c"
        },
        "item": {
          "id": "262d8374-2550-4aeb-90d8-37bd060a1b07",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "439a6e07-ed94-45c6-85c8-0c5463916954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d92fdf16-ebbf-4b6b-b2a3-b02bb8254fb1",
        "cursor": {
          "ref": "627fca2c-129e-406a-b6d9-d5b7b2b2c579",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d65a1b5a-c02e-4095-92bc-bfb843ae2701"
        },
        "item": {
          "id": "d92fdf16-ebbf-4b6b-b2a3-b02bb8254fb1",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "cb069211-8897-4101-b0f3-8a887230ca3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7622a059-76d2-43da-8205-b9a838d9fbef",
        "cursor": {
          "ref": "94eb0fdd-4102-4681-8181-edcf5b7d7d2a",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b13f844c-9f91-43c5-9cfd-df42270f932c"
        },
        "item": {
          "id": "7622a059-76d2-43da-8205-b9a838d9fbef",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4b2c51a1-c31b-41a6-94b0-c927436fb394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c85717-123f-4e8e-83f7-9e77f1032b61",
        "cursor": {
          "ref": "05b6352b-3078-4153-bd25-af8cdbf6cf0f",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9f8d3569-4f56-42be-8fa7-9e7b33ff610c"
        },
        "item": {
          "id": "72c85717-123f-4e8e-83f7-9e77f1032b61",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f61ed69d-af45-4439-82f5-4c76985626ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9729cb0e-7530-40f3-b15b-da7cf9f2b1e2",
        "cursor": {
          "ref": "3acf495d-ac75-4340-9278-f71b5aeb0bd7",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2441dfb5-73c5-43b6-82eb-116acec8df43"
        },
        "item": {
          "id": "9729cb0e-7530-40f3-b15b-da7cf9f2b1e2",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "031265b2-0a7c-4297-b587-1eb8b9a2f000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074bf396-197c-4204-9570-f24a73b5f364",
        "cursor": {
          "ref": "3700ccb8-238b-4805-a0f5-3fcfc0f92cff",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4b40c044-15f8-40e2-98e8-f1c89a68c455"
        },
        "item": {
          "id": "074bf396-197c-4204-9570-f24a73b5f364",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "13701d99-0e94-4a9b-a9f8-b36ad19ae2b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c14533-9495-4d2a-a032-9281e954bc67",
        "cursor": {
          "ref": "80384536-bce0-4a87-811f-c35b4e9f56ab",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "13a41b07-825f-42c9-a046-757aa0a3d80e"
        },
        "item": {
          "id": "03c14533-9495-4d2a-a032-9281e954bc67",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2718661b-6d36-4958-9220-c4938141e2f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b285e18-3fb5-4488-bc04-d75e58cc7187",
        "cursor": {
          "ref": "42b245de-f3b3-4e7c-915a-d1297e5632c3",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6623ab5e-e055-4038-8ef6-1c17e686904e"
        },
        "item": {
          "id": "8b285e18-3fb5-4488-bc04-d75e58cc7187",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "94ba1fea-055c-4c3c-8d49-57b895e0c3b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced8d278-99f5-4d80-b7b4-fbd76302853c",
        "cursor": {
          "ref": "c760e647-ecda-4f44-b232-6752ad6398c9",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a235c3af-8ee0-41bc-8263-839e1aafac67"
        },
        "item": {
          "id": "ced8d278-99f5-4d80-b7b4-fbd76302853c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "83dce865-8a0e-44c0-a5e7-ec13e1d59988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6debf5f0-dd82-4d25-bb45-7b8a3c05c0f5",
        "cursor": {
          "ref": "c32f2017-ad42-46a2-9b7a-e4dc845d4f63",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "561c568e-ad52-4e31-baff-a81e106bca22"
        },
        "item": {
          "id": "6debf5f0-dd82-4d25-bb45-7b8a3c05c0f5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "fdd29147-f0e6-461e-a08e-454dc26dc902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08727c71-ced2-46bf-a5b7-2f1b5f2b720e",
        "cursor": {
          "ref": "39f596f0-d294-4beb-865f-5a321f881e82",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d6f937d1-95d4-4a9e-ac51-15b329fed480"
        },
        "item": {
          "id": "08727c71-ced2-46bf-a5b7-2f1b5f2b720e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "6709a0a8-1ac9-45a0-8698-340130831f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "985683b4-0348-4e03-b3e0-8d920f757c30",
        "cursor": {
          "ref": "491d96ae-e9fc-4146-be0d-0fc08be0441f",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "96700b05-c401-46f1-984a-215d006d9cd5"
        },
        "item": {
          "id": "985683b4-0348-4e03-b3e0-8d920f757c30",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "72a41c8f-9032-4708-b571-07b48e78eed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e347b1c7-90b0-470f-9b8b-00b3b1437e11",
        "cursor": {
          "ref": "faa6081b-476f-4875-a3c1-cb61816a8799",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c5062dff-644d-4ab5-8a02-7512d6dca112"
        },
        "item": {
          "id": "e347b1c7-90b0-470f-9b8b-00b3b1437e11",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ae01ec8f-d712-411c-b466-68326701d457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78f0c2f-e6d8-4146-a370-4d9c4f32fa5f",
        "cursor": {
          "ref": "58175302-87e6-4f02-ad49-db934e07fe0c",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "087cc195-1604-4a07-a84e-01b54400f9cd"
        },
        "item": {
          "id": "d78f0c2f-e6d8-4146-a370-4d9c4f32fa5f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7844c3d5-7019-425c-bb2e-780cfb0245dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "911c55c0-73e1-4896-a9dc-5d4e99fe12f4",
        "cursor": {
          "ref": "f18db7e1-9e27-4b6d-8500-666c28f0c3d0",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0a8e923d-0cd5-4514-ba80-034539d72c46"
        },
        "item": {
          "id": "911c55c0-73e1-4896-a9dc-5d4e99fe12f4",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "acba81df-c236-4899-a867-936f6d47f172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb010f5c-7fb8-419f-861a-a95c80deda06",
        "cursor": {
          "ref": "01ea54f2-86a6-4429-a8d5-8e744a088289",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "96e7c208-e88f-4a86-b55b-e2d91c72de76"
        },
        "item": {
          "id": "cb010f5c-7fb8-419f-861a-a95c80deda06",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f9a9f88c-4bb8-47d4-b2dd-96c88a59e149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a658561-d46e-498b-aa02-f0231882c8e1",
        "cursor": {
          "ref": "cdd7239e-42e0-46f6-8662-8705c1b3498c",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "dd08e72d-facb-403d-8535-78a58de2b89a"
        },
        "item": {
          "id": "8a658561-d46e-498b-aa02-f0231882c8e1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b4829840-2012-463d-a7b0-5c6da930af54",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49556629-495c-4c75-8ddb-4dc5527c81c1",
        "cursor": {
          "ref": "03035334-d486-43fa-95de-4cb775bf68ff",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "fab6ab01-4dad-441e-b19d-d15c35c4a7ce"
        },
        "item": {
          "id": "49556629-495c-4c75-8ddb-4dc5527c81c1",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "6bab987e-bb6e-4ea8-8755-50dedaa96442",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdac7432-f9ba-46e0-9144-4a6330d615fb",
        "cursor": {
          "ref": "ffe758da-0ab7-4079-a5fd-0d4316d90f3c",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e8b493d3-1062-4ecf-b77a-5c50c8d09927"
        },
        "item": {
          "id": "fdac7432-f9ba-46e0-9144-4a6330d615fb",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "74470af5-c811-4b69-815a-0bf63e4c0927",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5cde7c-38e4-494b-b5e2-6c778a727eea",
        "cursor": {
          "ref": "5b4ebb66-0ec8-4b56-b68c-7871d9f30052",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "73208bee-dbf1-4cfc-9b8a-1dabf072b3e4"
        },
        "item": {
          "id": "9c5cde7c-38e4-494b-b5e2-6c778a727eea",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e244e2a0-9b7e-4234-8fda-e58d17da9b4e",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "019c3bd8-b0a2-4685-a92b-30bd7e6ea77f",
        "cursor": {
          "ref": "13c85074-a468-4d4d-9c93-285b0697bd4d",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "56cb97ae-a6ff-4e30-95e3-31cd30dbe894"
        },
        "item": {
          "id": "019c3bd8-b0a2-4685-a92b-30bd7e6ea77f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4e9760f1-2074-4081-8835-b8201a94d64d",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e706f910-6855-43aa-a520-0fd39558e6a5",
        "cursor": {
          "ref": "ecb2d5e6-d7f2-4341-92b3-ec396e889b59",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2ae06043-94cd-4653-ac6d-a0fa3fdbddd9"
        },
        "item": {
          "id": "e706f910-6855-43aa-a520-0fd39558e6a5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9db62cee-539a-4822-a129-95f72dddc680",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e706f910-6855-43aa-a520-0fd39558e6a5",
        "cursor": {
          "ref": "ecb2d5e6-d7f2-4341-92b3-ec396e889b59",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2ae06043-94cd-4653-ac6d-a0fa3fdbddd9"
        },
        "item": {
          "id": "e706f910-6855-43aa-a520-0fd39558e6a5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9db62cee-539a-4822-a129-95f72dddc680",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e706f910-6855-43aa-a520-0fd39558e6a5",
        "cursor": {
          "ref": "ecb2d5e6-d7f2-4341-92b3-ec396e889b59",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2ae06043-94cd-4653-ac6d-a0fa3fdbddd9"
        },
        "item": {
          "id": "e706f910-6855-43aa-a520-0fd39558e6a5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9db62cee-539a-4822-a129-95f72dddc680",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a5f976-75c5-414f-ab6b-30eac32b2823",
        "cursor": {
          "ref": "0e24e4ed-bff8-4633-93be-e2ec59732713",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "bc6a83b5-f7c4-41ce-886d-f25938c5039e"
        },
        "item": {
          "id": "20a5f976-75c5-414f-ab6b-30eac32b2823",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "9d237f41-1567-492d-bf04-ad6a4f57762f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2b8718-b5e2-46a2-91f5-506b820bb648",
        "cursor": {
          "ref": "e6414c4c-bf54-4f1d-a2f3-ea5f6ee010c7",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "eaa83ad0-6c05-488e-928c-9de906c92270"
        },
        "item": {
          "id": "9c2b8718-b5e2-46a2-91f5-506b820bb648",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5339fb6e-bcba-435e-89e4-da6982d9d7d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2b8718-b5e2-46a2-91f5-506b820bb648",
        "cursor": {
          "ref": "e6414c4c-bf54-4f1d-a2f3-ea5f6ee010c7",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "eaa83ad0-6c05-488e-928c-9de906c92270"
        },
        "item": {
          "id": "9c2b8718-b5e2-46a2-91f5-506b820bb648",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5339fb6e-bcba-435e-89e4-da6982d9d7d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ad985b-7fea-486f-bc5b-4c33a360dd6f",
        "cursor": {
          "ref": "fc783ae2-4f79-47ce-9713-edb0736c8a71",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ec754581-e81e-40eb-ac17-d663bdccf1d4"
        },
        "item": {
          "id": "e1ad985b-7fea-486f-bc5b-4c33a360dd6f",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "c60249eb-56a7-4e88-a35d-9f074eb7f186",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea9a1ff-652c-45e6-9c04-57bc3beab061",
        "cursor": {
          "ref": "8ee51cfd-83aa-4dd0-841f-e1b34caa4c27",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9bd48eb2-1515-4804-879e-679e80c0383e"
        },
        "item": {
          "id": "4ea9a1ff-652c-45e6-9c04-57bc3beab061",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a26f0546-a960-476e-9a16-ac5ac8267ae2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea9a1ff-652c-45e6-9c04-57bc3beab061",
        "cursor": {
          "ref": "8ee51cfd-83aa-4dd0-841f-e1b34caa4c27",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9bd48eb2-1515-4804-879e-679e80c0383e"
        },
        "item": {
          "id": "4ea9a1ff-652c-45e6-9c04-57bc3beab061",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a26f0546-a960-476e-9a16-ac5ac8267ae2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8e26c5-3434-4d84-beb1-62195d74233d",
        "cursor": {
          "ref": "7b853742-9ff7-4bbd-a10e-fdc57d1a8974",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "0eba93f0-a17c-4f55-88ca-21226322d4f2"
        },
        "item": {
          "id": "ab8e26c5-3434-4d84-beb1-62195d74233d",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "c235c859-d867-44e4-abcd-c241b40e1487",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}