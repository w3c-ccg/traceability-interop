{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3f886e71-96e4-4bfe-85f6-c7e2dbe436f3",
        "name": "Clear Cache",
        "item": [
          {
            "id": "5fb87cf0-7a63-4061-8527-ad0178f0ffcf",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "10c68c52-f1c1-4333-9bb8-48805f7c5e07",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1c6d9930-52cc-4beb-859f-0f98b805ea6b"
                }
              }
            ]
          },
          {
            "id": "e4936383-efc9-402f-ace4-f41570e2cfeb",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a2df8d43-ce15-4adb-bc08-3be509a0317d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8de76150-8ff2-4ca7-a12f-76c47f2d8ef7"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f4c9064e-37f1-4492-9497-a6a4b6112fa9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c1899169-d414-4ef5-a2bb-559244e14f7e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "51342449-0e4c-4c24-af3f-e232070b19d5",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "280d7e2e-5393-4320-81e8-ff1641f91954",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "38842fb1-0d2a-418f-9ea1-5cc269a98749"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cdf013e7-10fc-4fbd-a037-b078eb5733b1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8c3cf4f7-076c-45e8-b88e-9e5dc716cf68"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "788fe51a-8703-46b0-ab36-33ac720d7b9b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "31e2f27d-f047-48df-ba8a-101211c013d6"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0bb0d73d-ab0d-4998-8296-765d161862ad",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "71148f9b-0f60-4efe-93e4-086e65bc2c7b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "baa7b527-b82e-4cb3-a7f6-1d1b73bee027",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2e15956c-a5a6-4e82-b1bc-ad762128ce3f"
            }
          }
        ]
      },
      {
        "id": "0f98b702-b9b9-4335-9384-dfa9b0b49b28",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "aedbbde2-a8df-45c6-a43b-813af8d8540b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c790a32d-afd9-4e69-950f-27dbefb803a3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0a1e3391-2da9-4635-97b9-df22301ccc9b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5194670-c42b-4dad-ad04-f329d57ae39e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "61426367-e1da-4fe4-b4ea-0b42727b0257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d02918e-4b2b-4480-b7ec-dda909d23b39",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "291e6091-4914-426c-9564-ab1ce7381eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a2955b7-a9bd-49fb-9f15-05e25dda61f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d320410-3c2c-459c-b5d6-7dfa0e48a802",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "992b47a5-d5c3-4c61-b913-c59b2a3726c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b71f6ac2-acba-4401-854c-2e5d40983757"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "de4b918b-f2c5-4ac9-bf9c-d5967164a3e1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1305df3a-f8b5-4aa6-b79d-432c88851ac2",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a96f69-cd93-4469-9c87-6c48371da9e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "91b33346-1669-44d7-9238-697dbaa28c55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dbade67-efad-437f-b36e-7d6432c08359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef33c729-3c23-4c8d-973a-567dc75d4e94"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d182fe61-547f-40cf-abfe-1eddda365e25",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3f9d0fab-5a2d-4b20-9de7-ce82b45ffc29",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b99a3032-e56b-4bc0-be17-e3a1770e6a4d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6b1167bf-0ee3-4887-9dce-137efe9f384e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec2a9333-0319-44be-96b1-73f79520b3a4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "cc9d667a-f341-4c76-9b2e-ba1ae7523fbe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7d0fef95-4761-48bc-96da-432696e62e56",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e0982712-30f0-47e2-bfae-cfb893bb7817"
            }
          }
        ]
      },
      {
        "id": "3e35faaa-e38d-4e58-92ab-952790c47c96",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3d4879f5-1b6b-4573-af7f-7d0065193848",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f0348fdf-5cdd-4d45-83b0-fc86e1159feb",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c493a7d4-4b3e-4e20-84fe-ffc9a0f87019",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "687f2844-c215-4e07-9d3a-f5655acd9256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ad2b88b-df5b-4581-97f0-21d8eb020203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbdd48b6-5d54-40f4-abc3-a2e4372678a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4ccec16-b06d-4da7-84c3-c02e71593782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed74afc2-a901-4528-a23d-12701c5967dd",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2940704c-d680-4811-8d85-4bdadd27120d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d64a25f2-ccc2-4628-94d7-732ef9c1d97b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54daa3ae-2661-42f5-b5b2-64bbcb5161fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b44cd4f-5a8c-45da-8506-3160ee57b729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ec2077-74c0-4880-970c-43d695dcd0d2",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db21fde6-f291-4e53-b0a4-f99ca39d75f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1f2e465-74f2-49b3-a18a-112b707d9789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cace1cc3-b0f4-410a-8853-d900cc526861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0abb6590-7d8e-4988-b728-83126d51a12d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5ddbd5-ae4c-4ccf-894c-f72b9260ad64",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e684d2-2c6f-43bb-bfe6-b984f0b79e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33407a40-96c1-4fe9-a170-21a8625b8dd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2818fee-9ca8-4eb8-b9d9-28b3b2a04b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32fce08f-373b-4219-b054-e332099b7e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad31544-e974-4e10-b264-efdab187c72f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf4d077-db7a-432e-998a-5552a73bf4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d24d43c-12c7-4599-90cd-5fd82c634265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3325c66e-c6cd-459f-968c-a681bb2be2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94924039-666e-4485-bdbf-7ec2b409b9b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043f3781-9607-49a8-ad1a-7e4add151181",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac2ca35-5fde-4ffd-8bd8-367ff5800879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1303a46-3dc9-4fa4-9432-a052afde4184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0110f4d-3767-438c-9002-05d1ca79d116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e1738d9-74db-4479-bc76-a95db5c767f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dcd6df9-e36d-4193-a289-03662b0e17fb",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb681f11-5463-4910-8534-463dcd51c569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5d6302f-fbca-4df6-9754-10c7ae8ce0dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f6674ca-43cb-4ec5-9a35-c8d09b43f2bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b36ab234-e539-4102-acd7-8883eb695440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1608f707-9e9c-4dfc-be26-ebb42189802e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd9d69b-05b3-4977-bd1b-310d4eb63ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc017d7c-bd51-4d66-8bbb-8233a3894453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc84d595-2a92-458f-80d3-d85fc1d8d7e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f300bfc7-47c0-42a7-b403-54e8e76783e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e3f3c36-76d5-48b8-b80b-1d21c74b44ba",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d48c55b5-89fd-4fd2-8302-99f4fe66f856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6f35b3c-6c1c-490b-b864-c3b097b83a3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa161e6e-387e-4c52-9602-8bf85c69e2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "000b7191-48af-4eb6-bc08-33a1706eb76e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49cbbe79-9b8c-4511-b266-ac53314a6816",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "581a8539-4643-4d68-a4bc-062294bb14ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46f05006-939f-4108-9171-4c5629663ee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a28c07-56a8-4a71-9654-9c12d04d857e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f4767c1-6318-41e0-a68a-8c9a7d377d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33efa8c2-e947-455b-96d0-ee114b7fda00",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a496f6-1607-4102-9ed2-cb6c6189f97f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d43dbac1-3ba9-495e-b403-6ad3a954553c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c8c95e-7c7e-4c85-8986-6dbf0f66d794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff6610f4-8980-4f6e-be2b-5e7a95987b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc717084-cb2c-4379-9c64-b737ac3a2a6c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "816ba238-08d0-4394-bc3d-b78c5e608507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "182d51cc-ecf1-47cf-aa03-3c1037f28343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb5831c-7b93-46b9-aae8-f3681acc5189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "524bb59b-f5e7-450d-ab62-beccf94eae6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f23e05a-3933-42ac-9579-8a53b04cf2d6",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6a817a-41d5-4f5b-8d47-37ecb19623e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8df1ff7-5747-4431-a0f6-40d1c4a95a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e338627-4179-46eb-9cd2-7c76a83e91c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb999fa9-8533-4acb-afaf-3b161ef5df3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e3632f-746b-4ce6-839f-e370520894b3",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab422a88-cf47-40b7-aaa4-c7b0a7418260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a553355-f2a3-409f-a3e7-721f8003439f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c46aa065-19e8-487a-bd55-dfa5060cf076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34d768b3-8c01-4424-ba7a-59cda00e1399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "219405f6-8501-4e3b-8e34-1540c7b79b60",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5bfba81-b057-461e-a3d8-e2e489cd9f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "119f8aaf-0a27-448e-aeef-fec78126684d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd638c28-2213-4311-8d8d-a38934ebe2d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41b8a5bd-7015-4377-8eff-ca691a45b26e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8dad4d4-4bb8-4065-b5b6-a019fe962d5c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45660177-bf9a-4ca4-9bd3-6cf7a399777c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00d906c1-8692-476e-93da-163a81924f0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff75a29-3496-4574-a5b2-c2b01ea751b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c95b6b3a-403e-4e12-89cd-7ff7e956647b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1859cda-7e33-46d0-bddb-293811b05ce2",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29310047-aab1-4846-a6b7-2999814e2aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bef58fac-5b44-41db-b839-ef657a412771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49df6d1-3ebc-4b88-84fc-2efd6ca2f766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6078b02e-2160-4f0f-a338-acc01f35e5ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2bba5bb-b6b5-4830-a5f8-1c804327fb73",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77871916-a35b-4a1c-b6ee-0a629718e5c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b826c34-a834-457f-bd81-262bd50d5615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e154421-dd1f-4746-83df-5ed612888a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "823c7e64-11f3-4b75-85d8-a2e4e81052c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb23d19f-c14c-4163-b617-0feef792677c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b29dfb-fe68-4921-9afd-426e56df25ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a64d5ad-4f42-4abd-b1f2-ffc75ea0a676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b96c7a7-a863-45a1-a298-993d457d91cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bbd5e22-b25b-4193-80d6-aeffa2872fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "596f4f06-c61a-4937-b56a-80ae9897b5fe",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53129e4d-9d51-4733-a49d-d8cc525cc99d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23715fe2-719f-49af-b4a9-a474da5f375b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743e887a-0906-4935-a54b-dc8b71c953f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af8e642d-5c8b-4555-80d1-43cac143cdf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5d1429-b334-4d33-b5c9-fb5cb3388bd4",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1169842d-fa1a-4967-b2d1-02a7fbe7040f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2f31c2a-ee9f-4654-9b1b-f66137268139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3778096-07b2-4165-90b2-8aa5ab82bfbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8c828cc-6321-4425-8f35-e60e51ca1590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da1968a3-afef-42de-b043-79f0cb9ba874",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d0a747-3c1d-4a9a-a4e2-3dd484340313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38809f5a-376c-48cb-914e-741e7c957e7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47fa6cc3-e3ea-4c45-bd0f-08085758ec37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "38fbfaae-afb2-4ad2-b5d2-b9ac4c26ac6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8001bfc-c97a-4542-9507-2ecb191185b2",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77659b47-a61b-47da-a37d-62ad929628b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8704931e-2b59-455d-8b5f-5736ed717175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88931f7a-761c-47c1-92bb-342b58002897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "16c2f5ba-1c5b-4d12-bdfb-9906817b2d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1c0cd0-85e8-4efc-893a-2204d529198a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66799c35-0144-4b35-a9a0-ab6dab8f75c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dca3afca-964b-42b8-9581-e0946b30470a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a85003-8a39-49f4-a9f0-e9053accee41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a56ce1ca-b0ff-4ad2-a0da-e790aa548211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c1b140-95b6-44ae-94f1-c9f8a5c0b16e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db395743-a99f-410a-b8b7-7237e85e0294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "131af217-b24d-494e-b556-6eee0f183dd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0658f7ff-b11e-48e8-b6a5-fcfb82fcd061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "15805eaf-6efb-473f-82aa-392c611e6e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c0ae16e-640a-4e84-9aa4-aeb90deb1063",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deee2e0f-e147-403a-abfd-0e4d6b30cbdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d515b779-6547-4fa0-a109-4d222482e8d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6283a31-e463-4ba4-9ac1-8ad52ebc65d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "683c3369-c261-4694-bd22-ba2867ce4637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5443fe3f-25cf-452d-92b1-23829bea1535",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba73378-b1be-463f-88dc-9f56d2f8d149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0c7466a-d9ce-4c9d-bf34-81f121955cbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9dda2f-b759-421e-9051-1fea0cb8d218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "af706aa6-36e0-424a-8c9b-6edee1a91fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd47a981-3932-4845-9aed-a2d7ceb2a096",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23cb38a-47b8-47be-9225-1003b68b5161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96877b83-1283-47ce-acaf-60e1d9d2f99b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c641b237-cc7b-4db6-b042-e464643d0936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a540a164-6bc5-4c02-b694-a0508ec6c3c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faca68e2-c16b-4452-a2d0-a48d5f9c9620",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5794694e-f812-44ec-bfab-79669aa5f815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48c6eaa3-ab41-4e5b-ba4f-643f397c8e89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695cdb21-46f7-4fce-b835-d5337d5837e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d575d79-ce82-4aa6-b10c-574d246264a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec226e1-8992-4141-afad-1a6679c23cce",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf326779-9419-4751-8380-6fd35d30f6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6339773b-f213-4a08-904d-3d1b84a85321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e5888a-c0e5-489c-a0a2-734fca1ea009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a64c9ad2-f549-481b-b5d9-1291a800b47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05c4dcb-0819-4e9b-8a43-896d27533f19",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2ef3bf-c57c-4500-a510-c351b79e56bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8e8ec72-cc72-4ca4-abb2-197707ac4ee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c065e57-3414-49f7-8e69-01ced696c1da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ccae519-06bf-4854-a610-262a08e2a6bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d0cfe5-fcdf-499c-85ce-a18245cf19c8",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e35248-1b8f-4a9a-a1b7-14229a1ee127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bc2d8a8-4ae7-44e4-b1f7-38f5c2c572f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2659ee6-4f0c-451a-a8b9-16b8698b2432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "056b4a3b-814f-4b79-a522-32a638b7dc53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4e01ae-3e69-490b-b1fc-ca7023cfb84e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce52848a-f48a-4f86-a8cb-e0a893e27a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3ef4483-8a98-4333-b59a-e8b5baf69e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5152c57-96a0-423b-af2c-f570b6bf5ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5f2002c-67a9-41eb-93af-f851dfbba9b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1a191f-66c8-4eae-9ca2-055d2747a33e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a682ba0d-8923-4c31-bdbc-2bf3b8d74fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d4f6b2d-3e36-4660-811a-bf91c68d615b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b229b7-5725-4e96-bec8-cf056701bfc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d069fb16-6496-410e-a566-d5d54fec99c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be1e460-c597-48c2-bd0f-0075ff676061",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1273e7f9-395b-42ea-845e-3d7c8fdd47af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeae24af-2536-4e0a-abe6-59e91b696832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff215994-366a-46e5-b68e-cb04cf83d734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "78bf163d-a633-478e-bcf9-763f80c18bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0963f51b-5a1e-4cba-a50d-15f7a07d8c5d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "579778ea-4e7b-4663-8ac5-d5fd78469be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7aef3946-60ae-40dc-9639-a4ec8c3ad5bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e614ec61-46ea-4e0d-9005-679ffbc4ca06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "45c0b71e-a07b-4b05-98fb-e15fbf2273e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fcc6596-62d9-40f5-9dc9-56b37dacb6e2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c41dd94f-2506-4890-800a-f25a3b550e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e1f4ef3-eec7-483d-a762-4a5edcf65aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54394036-c0cd-4709-b8b6-fbc2305c074c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7fc26b1-8b59-48d9-870a-9a80ec16cdbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d528a63c-cf01-4cad-9db9-d47dc33697ac",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d2c62f-047b-4cbe-90c9-fb2cf2f68cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8af2bb6e-0b39-4e3f-ad2d-7e96a20ed147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "135ee306-4db5-4204-a9bd-ff84056e90a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "27ed9dcf-e39e-4608-92e6-28b38a6c3e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c824d374-4291-48fc-a3a8-589e075b2abf",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a15cb0-c9b9-46a1-ad07-1c1b99b26ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb5d47ea-364b-4ffb-bda7-72671225464b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558455fd-fac3-487d-8f3f-64d8cf770125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "32a7043e-11a2-4465-bad5-4a38d98be7df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2332b757-3a05-41ff-9596-be0b7598996c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac086a9a-7698-4e31-8fe3-526b1387d3e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "222d52d5-8514-42d2-a127-cf1ec7cff43c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c00cc77-38c1-474a-966a-26fdf52538fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7daa33b-7608-4342-b4c7-5a84be2f0d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc16f100-613f-4905-b637-3d9ececb36d4",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ead29db-042c-4252-aa90-0e4f3a6d6b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35b03d47-ec6d-4e6a-9ea8-f8ad0490dbab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91efc1c8-8bfb-4e8c-a784-10c015eacf22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f142c42e-b741-418c-bc8a-93ea3e81d23c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba7db5e0-f7bf-46f4-a433-a45ef221a577",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8157009-ef71-4505-b801-15dd70926c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e745fa4-b50e-4475-b71d-b864130b594f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf6b1d4-0d9e-43fc-bedf-9d22f4e03147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "47b47a8f-be74-4844-baa1-245efe70f0af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bedd4cbb-29ea-437f-9e2e-789151511940",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b4e1d2-047d-4d73-9512-3fb82d43febf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ca4e99a-7d86-47bc-93cc-2026e8e5ff25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff78d3f0-81f5-48a5-b0ae-b2a0cf8247ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a90c63b-353f-4837-af51-f64cc0a4a338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203f921a-1177-45fe-81df-bb981aebfeea",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab61a546-612d-4ef1-929b-32a8405ba068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baeb92e3-6f19-4096-aaac-d6d1e9ee7736"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2848af8b-96c4-472e-a13b-07c5d79d3be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "6695ffbc-2833-425b-bbbc-e72a26ba782a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1a18f7-a24c-4b3e-beb7-c88c1e9a3b72",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d384b57-7186-4477-95a3-c5a3d2d102b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b197e57c-1f8f-4475-8848-6a697ec2a2b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f8c5e6-2fcd-4917-879b-3aa932466e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f21a965-a0e3-4228-a275-86b7f5320140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f646e5-90aa-4c71-8866-0557963d651d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0239408-3103-409e-985f-ea908685fe29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07b01368-2832-4d09-bfec-c088c277cdd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a58a5a36-47d7-4bc7-9016-3c276c1bb2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "03cea6d5-0671-4602-811c-98ba376f8420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99b4f86-7684-4b95-b70c-d93d7d967f1b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c121a850-c77a-47da-bc22-ad5f77704469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fddb70b-0fd6-4c78-a956-5683d56a4088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a4a71d-be63-4147-a087-4d89eb117bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "44090528-1d65-4be3-a4b3-3c388f8a38cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e02629-6ab5-42a0-9a9e-c6512c76d01a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d12ab43-8cb7-42e6-9f03-7e455b315f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9ef9ff2-e35f-461e-8443-55a53d9667d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b45d220-79e6-4598-9343-a8e262630ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8af9bd17-0806-4582-b84e-6f545ff2eab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e71effa-82f6-42f7-91ab-08f78aaab1ca",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f12bdf-05bc-4455-806b-d1b864222375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2117c848-1869-46a7-852d-d6581c9b0084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e54750fd-f2f1-4380-976b-d01d03af783d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eaa43ba4-6039-48ac-8e92-78d724caeed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b18a91bd-9186-4f4e-afee-cf43d18ba236",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef3428c-069b-418e-9137-14724c0cf2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be6dee5b-9428-439e-a2f3-5cff5674ab46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaae3a21-adf2-4c35-8cb1-bb3fbc9ed73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "405de5db-772c-4a84-aacb-405ca8a59e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddecdadb-af88-4c92-a498-9c5037be0b91",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee53aad5-74bc-451c-b893-046b6809207a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27c4d208-cbbb-4177-bb69-d702db00aa7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fafdeef5-1032-4551-8707-eb530e51902e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "36e2b396-1f5a-46f1-b537-475febc21d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c73231a-4d7d-40e4-8f7d-1f6bb1672d15",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5e266c-34fb-4527-8edb-7cc69d961071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2012a325-5ff3-494d-b243-46cec9e9f003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7511dc5-d612-4e72-88b6-7a00f5e8f971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3d00fd6-7b1e-453c-8e86-e1e04ff17aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f81c53b3-a14d-4194-bc73-c33cf64fc9a2",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73db613e-394d-4c3e-8748-fe8d6913adc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "049bd75a-e486-4822-b0bd-e9f815b39bbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4957dfc-7d5b-4587-8f3c-b6bc2be52317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "22889259-aed8-4a58-9fb6-92e47ae10fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a6e27b-01bf-4af2-af64-cb521c17e529",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "844f3d39-5b6c-44e8-b23b-04da122e1678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "184e2a5e-6e9d-4a4d-8b0d-8556d9836889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da56dcf-cf57-475a-86b8-517c143152e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "42ebcd60-fad6-4f0b-be2f-8e2bb4401abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57c092f-9031-44a8-92df-41ae4212e24b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10279dc2-3cae-48b5-8037-7e102e61ca7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2576de0-2e19-42cd-ac6d-d8e13ed71dd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df78ccf-fe9c-4fee-9f68-9fecabfcf809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1371f1f0-3d87-4866-ba10-93ddb04decec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1832fbe-5e7c-4c1f-9107-5b5822e66983",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28460750-8975-4c48-8a6b-01f497a38bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cc5831c-a9ab-4a89-83ee-7188cb34e988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c93868-e5ea-4460-bf95-29611539cc37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "947e572c-db61-4ee0-8a5f-97402c911b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aaef47a-4c11-4baa-b592-2241c58c3924",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "009a1902-dfee-4527-8ee1-d34f927e55d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0ec5924-4f4d-4f44-9c92-83691be6fce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ecc17ce-1bcc-4b76-8b7c-9a62234cd2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "eca72973-7efb-4893-8fad-9a1786c9f831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1140b3a7-e1b0-45cc-acd9-f8652ef7fd3b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41111662-6215-4e1b-94ce-b24e4a1985db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee27a629-c115-4067-9bec-dfc8b0da543a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49a5baa-bce8-43ad-9ee4-1b2ce84c15ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a9aab3a-00e4-406a-b64d-5ff797e00d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "322aa1df-0dcf-4fec-9443-33528dcc551d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0abd9a40-849e-4f46-ad27-3936baf9f19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75728455-f62e-42be-8c77-dc51f84bf277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5b9f73-ca79-4b7e-a483-bdb310ebb1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "414ab931-b99f-40de-9a8b-6033d5a714fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f77bfa2-3f0c-4dfd-873c-c23f80b42a43",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b860116b-abe1-4889-ad3d-8b378741819a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41d42b61-eb4d-49ec-8de3-a974a8bddf19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6604c062-fe1c-4c12-8a12-960da85eea55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bbd6749b-b311-4282-87f4-22e70b292437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2787d223-c04c-4358-b10a-8a7320ea462b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "083913b8-2596-4cd9-8c6a-cabd5164d86c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9a29142-c778-41c7-b3eb-11496553f030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f05a17c-c1a5-4139-8820-d09ab7bfd7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ed824c7-671f-483a-b011-af98c6bb8218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e384da9c-3bc0-4caf-be10-c6e93e106251",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "087b747e-dbb8-49ab-bd9f-c5575f85fa38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f05f2cea-c436-4955-b905-cbf634cd11bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c71409e-5aa4-4305-a128-680564982582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d37c60cf-00fa-4be6-bab2-b04ffc42b2a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64c71fc-7dd5-40d8-abf7-90379e2ba5ad",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "526a072e-ea5b-45be-bea5-d47f916cc873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54d8ab09-e862-4eb6-8861-0fede0f68f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d8daaa-da8b-4dbd-bf6d-9c3da714edee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "94b8d559-10c0-4b29-812a-fd914fc748ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc25228-de18-41d3-b26a-b4968c202436",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6cc614-2998-4cfc-9940-13cf993ef8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b3c907d-432b-4fbf-92eb-ca0f76a6627c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0742ba1e-4414-4fbf-a248-631e280b8840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8020bcc-af21-472c-91a9-f0ba5b06a250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ebf57e7-8a26-4541-9e5b-1439bad6a9d7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ccd0db2-3129-45e7-8e93-c40679921f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6374d70-a31f-4b31-82b9-3bb5c5774b24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67036db8-c7d9-4f97-90a9-3049228cdc21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7c32bb7-6af7-4e11-a837-26649acea12d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b10122c-b495-4e86-a88a-084cbbdeff4c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e508b12a-962d-4b75-8d70-451da893bcef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9489f2a2-01ce-4e35-9699-fd51c88ad9f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25cedd55-8d7b-4a31-8c55-5c18e4b26ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c82b6c7c-d396-40f4-ac2e-b0b1e863e8f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a3f61f-50e8-4fc6-a8b4-a1081fd94ddb",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64335b8b-2f76-4fdc-91c2-58e6498ca8a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17974052-39ca-409a-ad03-64c8362ec2e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d469a55f-dc11-481f-b915-ea32d67a863d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "83b51208-0393-49d6-8943-955bfc5af35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b91c6a7b-637a-4d8e-a105-6d2e426d5787",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c53c34c5-e83e-496a-b153-a4c61b3f565a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "268db840-1429-4ad9-be72-03bb930b04aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b41403b-c0f3-4450-8fe7-1b8efb8c269d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4598b365-3013-48c6-8816-8d12acc321ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb61ba8f-b154-4597-8e5d-ced5b7e74fbd",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad7f3be-90f9-4fd1-b075-3921efbffb48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d80d7731-8feb-4540-867b-e0785cf25593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5314f62-0a5e-48e6-b1c9-84604a47a1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce51bb68-f9a9-4d49-9bdf-c6d63481dc90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc61a58-a6f4-40a5-a1ac-85888fe836db",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc43c08e-8524-40aa-8ca9-b0b30ed3ec67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78277802-fe53-45e7-9ee3-5567c317fb39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f213344-e0be-4cca-b857-f08455651c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "74a9c223-c383-43d6-8fad-f5025a3cc77c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc7a3e82-8e12-4c3c-baac-64a0c91b99bb",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1bfb6af-ebb6-4544-b8b9-157bf2057f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa7c1588-a9ba-4d67-9d3f-494382b5f804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bfcdf9a-277f-4b70-a55a-74d3a5c87df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5926a380-b5c2-4916-9ea8-36add105f8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fad4d7d-b981-4f32-8870-fc8d9bbd4bc3",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe13c86a-e763-46bd-b501-c1b3f4652f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6f0cdbe-3cb1-42b1-8c63-1e9283f063be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b881bff0-8b52-4ed5-9322-00ec0da5c94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "734004d2-928f-4a1c-9e73-92e5ddf58886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e10c570-38c3-4fc6-9fa1-5b976d186bb5",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88416486-9b1c-4fff-a5ad-7b929fe802e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d13a8934-ba25-4a35-85c4-69b28c155dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d787f70-8a0b-475d-934d-e612c891641d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b72aecb7-ea5d-46e6-adbb-7c58d4cf98de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e3a64d-9a26-40a4-93f3-e8ba6c6a675a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc3f47a-0582-4502-8b00-bead21612b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3df79719-9d89-4638-a011-86a6edf1c111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0658925d-9242-4768-9a0e-97f82d691191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ecb8c23d-f55e-4153-9837-2ef91f1bf9be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346e4bdc-c7e4-4d67-9e12-234e7f6bc070",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3e33c5-b8c9-4f9e-91f5-3f89a8e4ee36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cbdc833-b07a-47b2-a452-b13ed27c84d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c21f2e-663e-4b36-81af-e12a17352ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "571d8d2d-67d1-4d6d-981a-3195675b4459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf4b15bc-908b-42a0-897d-67b3e8eeaaf5",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7af0e81-bc4b-4317-bef1-e334d494824b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c6cabf6-289b-4e74-a34f-1320d1e52536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6c33a2-365c-4b0b-bb7d-dc52d6379461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cacba03-7626-4074-99fb-c0f9a9c04f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7575021-4e51-49b4-9b9f-5890c711207f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4187307-0db8-48b8-b02c-a43ae310f874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae4dfa98-a7ff-4743-8159-dc1ebcccb6c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b0200b-1d5b-4a0e-8d30-30cb09add5d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a98f687-3ad7-4b95-9e37-f9e77a23f756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b469ecd4-78c2-424d-aae2-296c2c755504",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac21f2c-02bd-4632-bac3-f263f4ef8a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7214cef-d349-4c67-877b-d08e8f540d08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373a7520-81cd-49a8-addc-0449dd7991fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9e63fee-e267-4a4b-bac6-f2b0ea92c7db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7eac49-a2aa-4120-b871-016d99bd30f5",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0859ae2-3b56-4172-be19-c680ea6f2f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c5b22cc-7f6a-4c8e-a547-6ecff016d372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2efa2692-9bf1-4c41-a45d-006dd695cdfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "86a7e390-5199-4ff2-b28d-ecd3814fb972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df7273b-3a19-42ef-9ee4-7d1b094351d5",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f7e10d-6bf6-4a29-82bf-7c19c0a7262d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84e7adbc-27c3-470c-a8bc-adcaf079a6dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74870812-6809-4cc1-b072-1951c29d2170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "54b4480e-7a9f-4d4e-8f6c-c995ed29b0f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "affa41d1-158b-427c-b3c0-18c630e93c04",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e45ccb-5083-4a8c-b6db-0e7566e0dc97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2c7b833-7728-400c-8e46-1da7dcdfef4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb967b3-ca64-4d63-8a4a-36b7bc850a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd9ffd4f-b2df-4ba0-b771-ee72a380dec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c346959d-62dd-4d68-83c8-b46cef943bc7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b3b6a1-abf2-4677-b2dc-1ae5ddfadb0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61047e55-a9ac-4ccd-80f8-702883f52039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae6b3a1f-e413-471a-bc77-7fc16163b62e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb0606fe-d380-4d4a-bcbe-91739c4f97ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d25ea99e-fc09-4790-8c1a-fec85359fdd0",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "759a4805-f0ed-43d4-b2ad-8399b4ea89ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9abab6d1-a0e4-42bc-9392-12e0594eea44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f83c18-e131-46e9-bafe-c93b1fc1a6aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfa71782-37b9-4bfc-a8de-54e88a5f5020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2506c0fb-2310-4eaa-a998-7d10035097e6",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c16aa7-2936-435e-ae6a-1caacf9e23d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6edfc12-1fef-43c9-9f71-9bbcd01e8f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d60c38-d031-40d2-8c52-0ac2369a3d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "131b02a4-3ff6-44a2-8f27-e5fedfc2a06d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51507631-c56b-4986-9783-32cbc3930126",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d69ce8-b702-486b-aef3-11da2eb8c0e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cbeb0b7-3c26-4d05-9cfb-b05084d69998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184c3146-5985-4969-a262-3580d4333de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5aaf26bf-dc3f-452d-9827-6f1fd4c872ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6bf29eb-6adb-4af1-92a0-f542645d5637",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27dae42-ac5f-40aa-bff5-fa74830fd799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3475993-c6a7-4eb6-9f56-f2a01a44072f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9122dd9d-b281-4284-921e-0a95b35face3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "34c239e5-730a-4968-95c7-9a9b614b4a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44057258-986a-491e-be72-ba8edc0d51a2",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d47475-28fb-4d15-b483-344c3a30387e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b61c826-e91a-4465-a35f-b64d681c4caf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "309ed10f-63e4-4ff7-b370-f059b4c3eadb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c300eca-c56e-4299-8fef-6a7d28aa2a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e32e861-61ef-434d-93f7-9dcd32735dd3",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "602d50da-2b2b-4c89-9318-add1c01dcef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "111af62e-fe71-467d-81a2-ba0462bf6518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85986abe-1a43-4e4b-a9a0-a682404dcbc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "342c151a-d0d8-4189-abef-116d9a4e9af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796c0f94-0bd1-4061-a411-c6b2626aa615",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d294197b-2879-4b78-8252-bbdc8f98aea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91f78c34-779a-4bdd-99e7-a969086e8211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c459b7-237f-4542-bb37-3e1eb9f029b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0be67ed0-fa7d-430f-b22a-945b4e80a453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cdd76ab-03a0-4bf5-923d-1f612990c537",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39db167a-7cc3-4221-a74d-08c012986cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ce94906-0456-4317-a544-97c4375f7c71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54701d87-775a-4086-bc2c-35bbb68753fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e838aab-c691-4318-8d5d-fdb3b64b39ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c09576-3e82-4856-8984-f5b81279d882",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7d332d-aca8-4791-bb17-ef3e5bd87dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a187199-6b67-426b-8223-944799323957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9919df5-602e-437b-8a6e-309e7394b6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d07bb56d-0673-4186-b780-dd35621c1b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd3b823c-e41e-46d3-8f52-0d47368238ba",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a092452-265c-4cca-a857-0d8f2646062d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3b6fa935-6a64-4dce-a862-17f3ebf05829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c43ed33-183f-497f-bba6-9bf3728a317c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e142cea-986b-40ed-a4eb-623638a87479"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b2a61528-ed45-4d61-9833-de497a237eff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4041b31c-4f51-4416-9798-770ffc79f343",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00795ac-bac8-431c-9aeb-02d933e403db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7128f0da-a00e-418b-ae49-16027a0a2229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe1f0e5-0e52-4896-bf0a-c83aecb490e2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb0d428f-40b3-41ea-914d-d7838e845ba8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b1d8477b-6e7c-4f72-aea1-c9c4880e034d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "737be237-0e3b-471f-add5-91653c0eee52"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff25001c-f0f2-4753-997e-dbf6de567658",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e33089a3-f9d5-4c8a-8a41-8f99a7fa6c11"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "203192a0-7088-44be-893b-2f990b6378c6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "482b2849-0146-4ccf-9f8a-2d9a59c79f4c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0f2d3aca-6b68-4f13-8b52-e1a9c50b9f88",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8ab5fc66-ac87-4fa9-8f6a-c51773438744"
                }
              }
            ]
          },
          {
            "id": "eb39b482-1981-4807-a423-b44d5cf27dbe",
            "name": "Positive Testing",
            "item": [
              {
                "id": "849e9b0e-5548-4433-b3fb-6810331e7a0e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c0faf49-0054-4467-a72f-e3b9ec4b7429",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b9992040-cfa3-4efc-96dd-6e38e6b039bb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc8314b6-db37-46b4-b947-32f4a8bad162",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a3d9771e-2c77-4c27-8f8e-fad1c2af49f3"
                    }
                  }
                ]
              },
              {
                "id": "c59ab73e-b385-4364-b8c6-c4ff01a2251f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0c80c6c-4e74-41ed-b7f1-1dba6a357807",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c94dd554-55a4-413e-8c4f-7459e5475b79"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d60e503a-c84f-4495-98f9-697c70e83a3d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "607dd87c-b899-4293-8f4b-7d68286d5eca"
                    }
                  }
                ]
              },
              {
                "id": "8da79d74-7ff7-48e6-a5e0-021efdf8e982",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "94123ff3-c9ab-4cc7-99e7-2d9d40c46423",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "061e97a8-0cfa-4598-8faa-c0a50848c4c2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "123d3fb3-f61a-4293-92f7-70cac0703aee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "32f0d96a-86ed-484f-8166-7bae161fb84f"
                    }
                  }
                ]
              },
              {
                "id": "407552e9-9915-458f-b3ae-cfd3aa2f9d7d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f2b9fa7-a9a1-4db2-92d9-04b8bc1ee708",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a9c2a298-19f1-4ebe-abc5-79f43d579496"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5944f360-918b-4b64-8ae3-363bea86932f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "59966e4f-0d72-4a98-af70-5d0555625f24"
                    }
                  }
                ]
              },
              {
                "id": "285be9d4-a554-4a84-834e-68d193bff320",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2063189a-ec3d-44ed-b2ae-3740bd57431d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "de31a53b-906d-4c20-a341-d7350b79f064"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc8fdcac-57ba-4a84-8b3e-b786a1b6aa89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7c6fa501-4da0-4ab4-87c9-5236166f505e"
                    }
                  }
                ]
              },
              {
                "id": "430167d3-1403-4fd1-b552-b1420da25be5",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c23a9b0d-7df0-45e1-b17a-3d8905f3e7ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dc198e51-cd12-4005-93bc-b8a69ffc9a34"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f0baf60-b2d2-4467-af8a-5bbcec97e11b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e22941d2-5fbb-40f9-ab27-8d807c5eaf7a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "686c4bcd-bf1d-440c-a7d0-a61af945bd8e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6a370efe-1e28-4198-bfbc-a05c0b7d56c3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "29e25102-e59d-418b-86c6-4949642846ce",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7b750cd1-1b79-45bc-859b-ddc140304d04"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3f861bb6-8e72-458e-ad1a-20873a0b2e2b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5a75249c-5528-4106-b808-09159a75c6b7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bc00d5de-10ed-48ee-833c-8b419842bb36",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8350c099-699a-4b98-990d-03bba8f6dc97"
            }
          }
        ]
      },
      {
        "id": "17ba4761-b7cd-4288-93fa-1ed01f9f787e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c3e08e1d-72c1-4583-be6a-6bcec310bc4f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fa1a7f7b-4c5e-4723-93dd-454a09b23ced",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "150df6c2-804c-450a-959c-4c57855edce0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fddc77d-2830-4269-bde9-75c0706338e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f4843ff-a771-4c29-88d0-da133ec645c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f840eeee-6516-4d0e-8f2e-5b164f96fe88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffa70dc3-058d-4bfb-9dd2-b2a6ae8dba81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761f9670-489d-408a-8936-0cc0ac0bd764",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b6bc09-9501-47b8-95e8-a50e3d990124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5d24333-6015-45fd-9363-187b07305204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06093503-b27a-40ff-8aa2-eb678854a327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5c6bdc9-4fc6-448e-ac00-7276e769ffd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d604f9-399e-4a6a-8ded-cb06b858157d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d04b5c1-94d6-4dec-ae87-d112d5075b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49464abd-7f7e-48a9-85c3-c46411974b16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91bf506c-ec52-484a-b8e5-aee6f9f8d14f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68783bdf-78b8-4679-bd14-3bbef3bc0d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12cb7e7-3970-4add-a2d0-85c82d2a221e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ffe1a6-b243-4cb0-9e45-eaf91e28351d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91ceb0c8-a24f-4294-b01b-f46abf1fdd64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e55b8f1-0661-4460-93f9-f90143f06ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "73f18b29-eab0-4676-8236-3bb3e32082f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d6bff9-5c01-426b-a27b-b0da67c6ccce",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d28608a-9df4-4372-87f7-a229603ec22d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ea11424-a9f0-4f22-bce0-a3e8f84d6867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e3f12ad-9a06-45e9-b177-f9a5e3fcec07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1db9f26-caad-4ce9-8ad8-3fb135268cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5f88a7-7543-4e08-ba0a-048e5c3a8862",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba2e7bd-6cae-437d-8ebe-fd47ccd104f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35d2fd47-b0f5-488a-83df-c2189b706a4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "445b83e4-3f59-4130-815b-6288479be5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d31c56e-e7c2-4910-9009-00026e84d62d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0531ffc9-9c4d-4a55-8654-3071bd32ad1a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e8cb96-bb42-4852-a4cd-3f5f0cffeff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc27249a-0460-4f82-9ce1-3c693cbdaef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c395a5-867d-404e-88e4-21f0387ec4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca93be47-0532-4118-95b6-3a027ae66159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c6b538-284b-40c5-8bc0-a8b60294f967",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0163f3-fe97-434b-9c48-7ba5df993b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc057102-85fe-4c8a-8ebb-38c7bf78a857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff1f27c0-ed57-4902-8e00-40bfd1a08324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "76a56029-aea5-4518-afc4-9ecd54b4fd72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61cbad33-e0df-4706-81a7-8ded4b17e37e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf0be328-d9f5-4380-93f2-7bd8dc33cb96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81a60649-15a7-494b-b6e7-c44172a1b21c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e50b0b6-6187-43bc-a001-ebcf27160379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bba8394c-90f7-46ab-be7a-cc90ff76d784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4156c26-1030-40ea-9876-b4556c71d214",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81e31b0-5617-4c6c-844e-dedbabe9ed45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33ac629c-7ce5-41f2-bd00-48c569c08914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bbee0b8-6634-4607-9920-a512cfaa7bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a3d4c22-2823-4321-9d04-6d67979f8840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df265413-5814-45b6-9b89-88e51a6731ba",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf98c778-06b7-46bd-b747-37f7842f9647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39215f1b-59f1-480e-8652-fc384584603e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb4f8b2a-c343-43c2-ae44-3e549f1edad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fd8f2821-259f-4446-b348-517c2df27bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ecd3f5-9550-446b-a32a-b0812319aafb",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec6f7af-654a-4247-8a36-2f7040594af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b951149-d02b-4514-b0c9-e32880377165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2852920c-d249-4c96-ae5d-e53199914aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "89599948-9941-4433-b41e-747c710ca80e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e94ba72b-f411-441a-9bf6-4b3a441f66cd",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8bb1c3-8a3a-46a7-9697-ffd892c33d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d4e064-c76f-49cd-bc45-2f6f763b52be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d0023c-6aa3-4ba9-9fbe-d319619f8629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e1406e0-fa4b-4182-af11-969f3f6da414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d862aad8-13d1-462d-822e-55eab0dfc2e6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de91de2-4cd3-439b-93c8-36def1c460ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a94f08ea-a621-4f1e-99cd-c9b105add16d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a51a7388-d022-40e3-9571-0d1fa89bf685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e11486fd-8fe0-4dd2-99e9-471e1442ff26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "222b6903-0575-430c-93dc-7bdc49747bee",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ff47fc-a234-49d3-9ef0-9ad8b9a4b288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d965b248-fc0d-48c1-bc45-1c1b7846c2ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1015f785-203e-45c7-875d-bcb20f8d9d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1b4de2e-b0f4-4266-bae8-881840d16fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f6d9da-3ace-410d-8dc9-e74560d90212",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f4560fc-7753-44d9-b4f1-b7054c78432c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc4506d5-c107-42aa-a870-ec396b053fbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ad1d0d-85fa-417c-8813-fd4109db33eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf0f0e96-5945-400f-942a-71da2ef2de95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992d6cc3-05d0-44b0-8f71-3c5d629804c3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "930aee6a-ea1d-45df-b4a9-656f99b7d72f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66272a1c-dafc-4092-a1fe-acb6fcacbc18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832fa7b7-5879-4ea0-8301-2ad716c420c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "652532b9-a73f-4a1a-99ff-3563a0d4c91e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cacc0bf9-2dcf-4ca9-810c-c91b28c99430",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb0fb94-343b-474f-a353-33c4e6a0320e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83d786f3-672f-4448-be9a-4b7a80383cb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8670ef3-d510-4bdc-822b-72c980c5972a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9545f3c-e55e-4b44-b55f-3cf90392fd0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8206ab83-459e-4c75-b08a-892b1f76abde",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4388f85-3730-4b9f-83f8-2fa466bb876a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87abaf78-3383-4baf-87ca-b64fe01a0e2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5edefdf5-3ca0-4423-843e-175ede810d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d368b84-c7cb-48bc-b588-051a9b75a293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e26ae36-298f-4d8f-9cdc-c0f9713a2f5f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42c1254-b7d3-4541-95d0-536b739deaec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64680408-5936-43dc-8ce4-235ac4b1fd19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d85337b-b3b4-4c26-bb77-1682fb46c964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ec33b92-901c-4736-bdba-13a11237a37e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a0c3fc-1835-4b81-ba52-100aab7c8bf7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ebcbfb-00ee-4614-bbae-10cde438d154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98d9234d-d3cb-4fc1-8ee3-ff8ef5980712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "290f9c44-4a77-4f4a-a9e0-3f090c6fb2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de7939bb-5af6-4adc-b992-98054d506914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bedd310-b197-4f29-87b7-d8db4df20af3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5408743e-2f50-4b53-9fda-ecc403e3f699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae45574d-e8f4-4340-865b-6b0a34acd350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61016025-6600-4f42-9fbe-f30f0408ce4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4fb3d1e-0c3b-455b-9bf6-98a0f34fff77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad78a6b-768e-4703-b65a-08d2e08d7993",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "980f0910-2674-45f5-9ec7-3e066b3c8378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a16786-3221-4282-bd38-b2dd74e723fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e9ed60-140f-40fb-8550-0ea67d2b55f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0cf0ba5-fda2-4237-a213-6c91e5c41082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc482ece-6db4-4ff6-9d11-b1fac6a5c828",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd8efb2-ba4c-4908-959e-3c1571386b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6efdab3-6da5-4cdf-9e89-595cb8009fca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e9907b-5a63-4675-89fb-6229d899fc18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17e7eff4-78c0-4b5d-90b8-dd5805875c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c88681-252c-4718-8cff-0580905db1cc",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "242f9359-9a6f-429c-ade9-15f160476bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84c440f4-adc1-425f-b1ea-1d05a26736b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1169f70-aca2-463c-92ff-e99c17be5690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eebc2836-2b27-4c91-8c5a-d53bcc9d767d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a633d176-9ad6-4722-8bec-fa4e6aa9d813",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c0f0f20-3880-4d70-a1a5-b75ce17be170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5a56f87-5e4e-41bb-afeb-4395e9a04b2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "244d4891-e1ec-4c20-b9e6-fddc308d685c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65395b57-cfb1-4d8e-b36f-77e0c0e33062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed7cfa3-abe4-406c-834e-236ac378b014",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8082a3c-eaf8-4cce-b3e1-efc6347ab013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b94c474-5a07-4fc8-8683-ec25a3ead6b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b45f6d8-07a4-40ac-959e-13316754fb5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "035901bb-e4c7-4564-8204-879c662b0fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a5ede6-a580-4910-bc37-de820afea5e8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a32a55c-29e4-4ab6-997f-48b10f5edea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82bb092f-6a06-4534-8390-30bd1e9a8f28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e9d1d9-dfc1-40ca-b752-6cedc017b2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "929cd163-e03e-4d3b-9f7f-844f7f3820c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0f71ad-c16e-4191-abc3-ab853148afd5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba448211-2292-433a-9a12-748b19d449f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bdb1c96-974d-49c6-9d62-9637f593206d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7915ea-f921-45b5-97de-fb92fcce9d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "433da392-835f-463e-938d-ebf11813c7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a8d25e-67e3-4378-8c70-f346f1e9cc7a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "636df38b-aff9-416c-a684-7c220c81f47a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2b62490-ffb5-4546-bceb-cb4350f107b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8341c3c5-ece1-40e9-85f4-1671e2b8d1fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62be9a84-0432-45bc-9032-a89e16392090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f7110e-066b-4821-8cd6-b6c9ff9515fe",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74904e6-0c9e-4385-9a63-0e5ff39d0e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11de4ce8-0ca8-4780-81c0-7c66c8742e66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202af899-1bc9-4a3d-947b-f70f0665da1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f36ed79-ce37-4f50-a930-fc7ef01ca218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc3dae4-8bc0-454d-8a6c-e15bea45561f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dfec5f6-df3c-4f7c-80e8-dbcc51ab1f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f496e011-9fc5-4443-8784-56b431a5bdae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6927313f-822c-48eb-b7a8-d57d9e419e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a430b170-a4e5-4d0d-b2b5-1d90eb333a75"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a632c8aa-a48d-4519-9b85-cc605fec13f4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a992838f-8727-4771-8a26-bfcfca803505",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a301932-eaf1-4666-ba6c-09df1d2df0fb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a2fbcabb-5288-4bb6-9c32-9849112bf6f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11588467-3a6f-4ded-8eb4-d3920a660186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ae77d532-0492-41d7-a432-8431a15ed608"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3fb6550-7b66-4680-9b80-925ec7f3098d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fab97e45-b5fa-47ea-9931-b38553a2b700"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3fd35fa5-7397-4560-b6b7-8dd9bcbe65dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d4dec72-1eef-4ec9-802e-e52ee9e0d31a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "49f4838f-9ff0-4a77-9b7b-bdd3af7032ca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d5a03ea8-41a5-4fba-8a29-f52a94aa4a17"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "45302b25-cf5e-4bd5-8bcf-4797e49f61a9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c75202ef-f4cb-4caf-827b-2e96a3cf8387"
            }
          }
        ]
      },
      {
        "id": "a70ab6a9-d3b0-4649-bcb1-5955a4cabc4c",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "f1674920-9fa4-4942-ac79-7b7c86f441a7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c2b007d2-2ebc-41fc-8b04-d24af5c60674",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b0f4fff8-716e-43e3-a835-7487d08b0007",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a557ef-d893-4fe9-ae91-4d14697abf81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0e90454-1e04-4be7-87cd-482542776b86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f960cace-7368-4a75-a7a9-bfceb5eacd21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed7f28e6-021e-46d2-aee0-7887f7f2e732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3776d420-0e4f-48f6-8107-c5022d95edb3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4248067-6c88-4099-ab58-a62885f26a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b7ad7eb-8f55-4ce9-bc0f-aadf24a8468b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9ed417-0c20-4f2d-b5d1-d566fc93c77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "55e7febf-47df-43eb-84da-445be6d3fd63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ad70f7-4652-4755-9516-e0fca1c9afd6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "703c37f8-c0c1-48f3-8ae1-52e0506d6927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac2df9df-31e0-48ba-b633-8fbfe77a4e58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ef0f02-1a27-43f4-af18-4599290928df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f4d0c0d-44d7-4d0e-9ff8-ac86922d6f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb5ccfa-19de-4349-9664-f47bc6001c03",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b240d8-9eca-4266-8a0c-9c10ebc0c8a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9be442be-2733-40a4-9779-4b482890bda2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f74470c0-6f7e-473e-96d0-15bc7c290997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a823d0eb-7ace-4392-a43e-de580c3193af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f76667-ca32-40ef-a13b-9a447c6fc277",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e04d7a-b33f-47f9-9fbd-f6519f8fca7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae549b10-105b-4877-abc4-0ebbd84051ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19417604-540e-4b88-8fd4-fb459c5ed60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d71a7aed-ed3c-4f62-8eeb-9223befd52c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbebae99-a81e-4981-be33-a1bf7f3f3245",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d95054-d2fe-48b3-af3f-f4bb6907a975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c42a68e9-d7a5-4fb9-be13-14775f9e0d4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77694821-6734-4e2c-aac3-bd6682ec5b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f8ba5f8-4d50-47fb-9c17-c87e7b874dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c37416-0386-4868-b7b7-0a87ffc0412b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70980535-3026-4ecf-a7ea-304628e38a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fb4e743-95cd-48ae-ab5d-aa0c75ddaa53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee99354f-0a94-4cb7-85a9-af68c2fc665b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3107300f-ca9e-4884-9fd3-3714644ba366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25cd2002-bb9a-43ad-92d9-b951bcbfa9f9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c241a60d-544a-4378-90fc-2535a7e44a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48ca551c-e533-4678-b11e-e96a07db6c72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f762e670-ad29-48b7-a80a-e46ca96ea6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a89ac86-d5b1-4040-8ddd-af26835f9905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d74b9a25-4700-4382-bbbc-29fd251e06bc",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82668fb8-6654-4514-abca-c1cc346722aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39f41733-622b-46f2-aa29-329c3c65987c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "715696a5-0208-452a-9ccb-e191c7c1e6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e1e4493-68bd-439e-8947-41b055717fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1483c5d4-7c08-44cd-a0d7-2b7cd7d4c9db",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a082d998-93f5-4fa8-a5a5-a7c8563351d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0507612-0d32-418a-9eb1-cd9e4be5d241"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35770a15-18b0-4a20-8bcd-329aa598d609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1b2ab92-fc5e-49cd-bc58-d3baa4a79c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5b09c8-0d4e-44f8-8bb9-3ee70462e418",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bbdeec6-f387-4452-b3fe-52899087ec58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e2eb6b5-2495-4da6-9c0b-e9d6b3f004bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f2d397-f29b-47a8-8d62-123b0adf6862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "bc2fc9be-4278-4cf0-8ecc-b6e3b7bfb5ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e7b0a3-9415-4738-943f-a5c38bd172e1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "386f8158-5251-4aea-bd52-abfab22b6ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7c2161f-affa-47a5-9e06-7f5558a6fc7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc268d4d-c72c-4784-859b-d62f36bba36a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cc22ef90-7a25-4ecb-b88b-01b312ce1137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e752a28-c1f8-4ee5-9f52-f702459a7bbd",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c2a6d1-308f-4116-93c0-8f7331148463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b67ee5d2-b76e-463c-9ade-bcbaa5a5a211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b013a38d-f5c3-4f74-80c4-767d50b49c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ea583d6-a302-4c97-8aea-a4d6c357782c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3427380-5be2-4cff-beca-83eef8df36cd",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dabf4dd3-61ad-4c1b-bd95-bd5b2450b71e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "099d7b04-6b59-4bdc-9ada-52d31cb7134c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c144646-6010-44c8-aa5d-7e8dae66240b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5bd95ba-27bf-4c6d-8262-9cf7df86d4f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe6a2fe-8b45-479f-bfc4-0ecda2f46809",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0850f0a-0a3f-4134-a255-e0c1b74fc573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b4cbbea-804c-49db-968d-74c79a7b23f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63420b1e-cce5-4e31-9048-61d38974c504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bb6325c-5c26-4dd0-a624-52a363016437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9a0014-5d5b-42cd-a84a-725d6402d71b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f7c74d-5a2c-4eba-9a74-f4dd45062732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1676d1d2-299d-450c-8df2-0a3fa6fe768c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5b676d-688a-422c-9844-cafd7a7afcdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc21a6ba-ec47-4182-a358-978e7e593b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81d4e52-5d0c-43e2-adb6-6c3261b7413e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75307b9b-14d4-4a11-a909-dfa2939eea6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6582d1c2-95fa-446d-b0a2-469fd3e3040d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0fac1df-9794-48d8-aa28-402853d037ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b92670c0-978c-485f-b1db-941b5bdd66ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732236f4-6b78-4c77-8355-9d51d45cba09",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "854f1c23-77a8-41b4-9f4f-f9d8c4ebb830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d08bf461-47d6-43d2-85c9-fe0ffcf97a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1ff5ff-8119-4a01-823e-03c4a0cf45cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "892b21c3-292a-4671-b2fc-eb1b4eca85a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc76715-5e82-4210-af12-a5f7a1427692",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7961d2af-631b-4062-9c47-400fa3d8e7d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f7d91e6-497d-4f69-8ced-e2c602fce21d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "207a36cc-f84e-4d7c-ab7a-074f9c3fbfcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "402f710a-4dd6-4caf-803e-647f5eff3727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4444ec7-d631-4dbe-8b61-143eb5b7d40d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e402fe-8b0c-496b-8665-18f9a4f735d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ca50b08-9271-4a08-a777-65c9f2e6bed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c766d844-0cd9-4db1-84ff-60a5c137fb63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6976791c-7282-4b99-a24d-e7865f306f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233af8e0-61fb-4528-b7a4-e78987a17903",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "563e7c04-4bd0-4bbe-b3c1-5261bf67b4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15265834-9575-4bb3-beeb-d7ae9fa254e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a67e86e-0789-40ba-be69-6c07281c0e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5811b303-29be-4366-8d16-d6d8980ef106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5026c4e4-2834-4dad-907c-bf6bb57d5266",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a35334b-6bf6-4326-a23d-0fc93a1bb129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cb0feb9-bd33-4159-a287-d03bec1e37b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b920c276-9655-44af-b2bb-488d8f10c9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8a6df4f-d7d5-441d-8803-9dc3e2425547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc7ad710-1387-4e4e-bdee-1f4a150af564",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ce9733-2a51-443d-85bf-5d86bbc9b21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a6fc92d-7a16-4084-b9d8-f788cf2a76c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b0a98f-1900-4237-a41b-65285e965dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebf61807-ea6d-4ae5-95cd-6745d57d98e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "966bbaef-cb1c-4781-8170-9fdf5a3f2d66",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a261dc31-74bc-461c-9daa-053b1402b547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "294caada-fd3a-4e65-8f6d-4c4004f12cee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cdffd01-8595-42fd-89c0-dc55de1af80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2c7650e-3329-4461-a687-0fd1a35981ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe74906-1610-49ba-9459-d87f71216066",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e10636c5-37df-4441-820f-2ba020d5ca2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7b38d07-8bbb-4166-8d93-fd3d78a3689a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65952381-030c-43e9-a916-5a8bc42d1f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87e212cd-9e55-460a-8e87-79fc919feee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5aebf26-a3bc-404a-8819-281df3e51d8f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0eebe79-4bf7-4ba9-b5bd-d3b1dcd984fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e65d574-b2cb-4b2b-bebc-9d1db128d1aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da871cd-20c7-488d-913c-7ff73fcfbf7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54d1ef7b-0a58-4fa9-a647-99c130f55961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee17f0c-d48b-4296-8172-2a29f34b0267",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ed56be-1bae-4302-b78b-76b961024a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1685f4ac-27c2-4d58-8dcc-24abfb6ca578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5746b224-39c4-4ccc-a090-b998f8367372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f3da8ad-5a95-4447-940a-79ce4be991ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8825454-da5e-497b-9ebe-85505cd6516f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a12b2c38-b485-4db4-8bd5-d1f89bf01b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6fc41a6-b594-446a-af50-3989567c77a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d90a2d5-927e-4f2d-9696-62119fb090bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed0d13e1-0b03-4a43-abad-03818b98f0e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20843575-a0f5-4e6c-aae4-576926da621b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26f084a-b240-4342-b3fa-52df8897c60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a58069f-197a-401f-a65e-8caf126377fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc2e2449-f22a-45c3-9763-1dd15cae2a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91287fe3-cc20-430e-80ee-9ebfa0dcc994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66c22b0-5d8b-4231-884f-62adfceccd17",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab691dd0-69b5-4748-8614-bd4dc6e6111f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d9682a3-0b50-41da-872c-c51b50640dfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df30a48-6b2f-44fa-bcbf-560d21096584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8aaec53-ae20-4380-8999-fa2b17740d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372d10ec-233e-46b7-a34f-b88b1105db1f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0eb9629-4320-4af8-8806-8a2aaf065a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d8a1c56-732f-4543-9aa9-cca3e7e83842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c67216-5152-480c-897c-c7ee6e670917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be9eb09d-f850-4c88-a971-486cead276a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e7a4fe-c127-492c-a969-0fd87b360cfd",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9626d0d9-c49b-472a-a4e6-9b29d9f95eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49006582-9b0a-42cd-9dbb-9baba6432cfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce45a41-1cd5-4efa-a1f2-f5ccc79b54bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "570f147e-8695-4391-a9bc-cf4fd24d905f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22840fbe-29b5-4522-97b1-fab6b57fce77",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e58769f-aa97-40f2-a0a6-821575b8eb83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98d02043-146a-4cf9-a091-196db1a2f3d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec151d25-12d9-4d2a-9aef-f998a31d3a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "372d6304-c277-437c-8a5f-1c48adeb7a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57cd830-329b-4112-bea8-5f5ac8e4b34b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7337c46e-1b52-4fb0-8516-5e5a5b5ed680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "330fc84b-4f5b-451c-a2e4-2da4bcce6f65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d972fb-e2ec-4118-8a86-f285692a7184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fec59c3c-111a-4999-81e5-353e57aa536c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e16c913-3f89-4360-840b-e027a28bb563",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb421d48-c668-419e-9ab7-515b8889145b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aaf6931-83f5-4d6e-a5ac-6d4f55b5e4c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac724f0-b042-4820-90a9-5339debaef4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "605466f0-8522-414b-a375-b36a33bb8c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b773a844-6709-438b-ab70-d03b09ca49c1",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12bd960d-03ae-4f14-b020-ea7256d13fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "744a2f4e-e0a1-46ba-984b-add25368c960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85418052-3ad0-4c73-bd70-665fc9a371bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27528bcc-5863-40be-bfe2-7623d81a0891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b523925f-cd99-4afc-8452-086e53576cee",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e16c51c0-ac4e-4484-bdff-6b21b0feb93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7841fc94-2635-45fe-affb-8b2357d1f0ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb569aeb-e65e-4863-83c5-3b4938b3b6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3fe6c31-84d5-4a24-a62b-ed850b885112"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e53f6bcf-ff8d-4127-b614-0aac28c4b60a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4fe573a7-fe53-4d8b-99fc-2075d7693aca",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8d1135-1980-4717-a911-2ce2125579d6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2dbb45e3-ab03-4e1a-85c1-74b718209d9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7278c87c-9b0a-406e-ac02-0e655a60d345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6f096f63-825d-405a-8df5-47066a6aa171"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e3d2958-d89e-40d7-8f78-804045179998",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3a76c14-8cf3-404c-885b-9cd4344ed2ed"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd27ca79-60da-4c5c-b37b-bf7a08317654",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42aeb7f6-56a3-4587-ac0f-6948b4746d3e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5b355f0-6411-412d-8f6f-c9dd25a08056",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d03830d3-41f4-4afa-9cfd-893e5dfadb4c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fff9468b-706c-43de-aedc-3075d83936a2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5cf37b2e-0265-4926-8158-b3a74f5d85b3"
            }
          }
        ]
      },
      {
        "id": "dd6a3c35-bf23-4d80-992b-073b48e31df4",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "0a32b813-6604-462e-abe7-e55066ee772c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "886c6b27-2aa5-45f0-91ef-35e546d9710f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "16fb9419-6a8c-4a08-9bba-30ea61bafbb1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb1cb7f-5b78-4367-a349-48f33dafaf49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a993de9-1dc2-4053-b9f4-69624522a106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0821ba96-500a-4e9d-a050-f5e30032277c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4924328-d0e5-43b3-8671-8742fd78ead0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5b6070c-b993-49ec-8124-87d08641f149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd2ecc8-c161-4473-895a-3ea630568988",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c053ef-6698-4c06-b6d5-2f8faa693927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c934efd4-e454-439d-8a18-17fe15c87bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3370ddb-715e-457c-8693-435ce5a1b0af",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7015855e-1d83-409d-8967-2b9e9f9391d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1e16953-bdb5-4b17-81d1-adae36f80f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5e0ad7-e193-4cb9-91b0-e9783912d461",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5883235d-4611-4c86-9d55-cbc5f6a88c78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e555f49-1ba8-4da6-91b6-90dd8baea45b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b464897e-8f48-4cf9-aeca-12160e4b3928",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b323ab8-e9d6-414e-84ad-658185fefded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b28caa9f-7a7f-4be9-a586-07a698134fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c3d791-546d-43f0-b420-62cbe17c2dfe",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7a0eb1-b112-4e59-bca5-3ff1a988c7de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6be4ebce-f8c8-43b7-ac30-9a14516f05f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d0c398-7375-4f3f-b22d-70ce23d9cbda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f72052-7eee-4ed5-a145-d0addc91b321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34653886-53e8-4fd4-809b-6b6e0fe58cfa",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8e97a7-7db8-4830-8c15-0ea7a29a09b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba01683f-25ec-4e81-899a-29f955163467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "756a26b0-9aea-445f-b521-527bf589f1fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4d684be-b668-4e60-b9d0-4e4a5c72b630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767703e6-d023-48ba-b27d-2e9f36dfa6f8",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b2ce72-8de3-4b55-b461-0c268ae6cb1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8a68808-ef97-4ee0-b2ac-5198e17caa7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c2d4f4b-2ae7-4e6a-8c68-ac0f831674ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41e57a90-0733-4435-bd27-d615bd999744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad600f0-5ac3-4925-84bb-c539d5f2702b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71a0110-31bf-43d9-9b2f-73a77084dfd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89c790c3-3344-4397-84cd-6c13aa0bfe18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e89b0a70-1abe-4775-ab72-9a289e7c47da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74a901e0-c9b0-415b-8557-8418be525700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8218d0-4910-4859-9bad-43baec841be2",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb90ade6-d2e9-47dd-8307-7b4dde3c2b67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f53a7b2f-5d16-4343-843e-da0fdd8a86cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2ed922-f633-4505-b45d-a710dc49eb17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1bbc590-ae86-4533-a32c-2696abbe5661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f649a5e7-b4b6-4e17-a5a8-9d7cd08dc409",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f1c3a4-6b9b-4248-94ef-3c4923d3603d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f8edc0f-6f0d-4f81-bfb1-3d2ebfe7a826"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f28817c-76db-4871-a0cd-b56c50abe238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a959a56-d137-4f1a-b637-2c0a9742e7ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b6ab05-aefe-4301-9190-04877f21f06a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce283635-8b5e-4f2b-8083-cb9c67e0edcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "414c0129-c207-4ff7-9180-ee444d97f2d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88b8263-a385-461b-bc6a-2d046b2e1964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b67e369b-a5c0-435f-a829-70e348ae0671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d0f7c0-661e-412f-a279-b5f5c227a84c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5156a59c-554c-4ac8-881c-12322b20cd40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef63c897-96b7-4c02-9d41-3a7f651e6b4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd850171-c7fa-4a77-af4d-c874f823d948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b4c40b3-7a64-4861-aafb-bda582e1f56b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36a7443-9d2a-4495-a882-04055759950f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4fde6a0-884e-4cab-892f-2c09d253732b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6e4046f-32ef-49be-9317-f150362c904d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0d35b1-1f1e-4cbd-b1f8-0a85da03cd18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6b60991-0e28-40f2-8d6e-f822b72b6f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ffba8a5-541e-41fe-8b65-758bb147a9c7",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3068469-e2d1-4061-9f86-8022813fc745",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "380e661c-a359-4ee8-86d0-754c8c53c90e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74834eed-8e1e-4300-befa-b85bd6e1957b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d0cdf9b-3c24-4187-9044-f28cfe9d5dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd69810a-9d5b-4df9-8cb8-d17502df507a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07931404-14ba-48df-bc72-a366fb392366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2729ae2b-a1bb-4455-88e5-5bb010b90272"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f527b2d-8b47-45e9-952b-fa4ee79c63e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82c65899-dc6e-450e-8f6e-7a4c129a1f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e750cd7a-15ab-480a-8be0-537af9b1dc54",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c842e5e-c352-494d-b289-dc2e5936a479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27aa5571-62f7-4ccf-82fa-7ae0566ac6ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e6cd225-d186-4be3-b5e9-6f9d25004301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6588c76e-7724-4bf0-8f81-b8bbad1b96b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043e904e-a56f-4aa1-a239-4fb46eb32841",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483588c0-b48c-42e9-bf1d-408e212e91d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1cd0cbd-ab94-4388-b867-ca82ffc652f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2bb142-d08f-418a-8625-ce4588805e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b16733bf-6d91-4088-9965-b6eedbf3a87c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ababff-ebd1-44d8-8c3f-f10f24ec80cb",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e0137a6-77f7-44db-87ed-f5df6d2ddff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "815f6147-37b8-4152-8470-2dfcbe1265b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e72464-2915-4670-9c5f-04ab2ae28147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8f88bf3-5a2c-473a-ace8-8a23cc030b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892fdccd-1c37-4b10-9ed9-66b727518c8f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567c73a9-2aca-476f-a639-1f59de22a444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81c3bef6-aa6b-4175-a9f1-5c3d9985cb95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ee7daf-751e-4357-b999-4a36728b291b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0ae27a1-d6de-4d69-bf7f-5818921ec717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bddef8f6-68a7-461c-b73e-c0b21ff46198",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc88ed3-8aad-464a-9886-e6a3024f7d47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4762b9ea-07e5-4311-95e4-764c4821ea2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b73d7d2-9194-45f6-abde-a7adbd383012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a32b7e08-e8f9-4148-94a9-210c10eb5ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde504a8-123d-4f8f-b408-ff4de01b42a4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd3e6a26-0e3a-4b91-bdb7-4cd82e0c3ffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b98426d-6e2c-4c58-8b3c-458237d8b86f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fec15c5-fd27-4828-8aae-51499443f478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f949911e-85ce-4674-84cb-10c1aad8110b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8879a321-f4ef-4293-b5d0-94b1b10bcacf",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bce4265-c1c9-4220-b6b5-8ac3e86589f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fec2b556-50d3-451d-8f3a-fc5a7e3c97b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0da75c-df97-4822-88f9-5b3e8df47f99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20029617-5e58-4007-a256-9113669eb138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9986c4-4520-49e9-b621-fa66e4b4bc57",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee9d80c-61ca-438d-a305-98179e669861",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "536912f4-1f35-4f77-96da-ef436ffe62c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6bf2e0a-b7c5-4083-a4aa-3ef54556ced7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e79037f-8e78-4419-9ca3-427b16a8791c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a99ea00-5021-4ee4-83cb-9ef83793c257",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa60901-ea46-4373-aa14-8f1def3bbcd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc6ae528-4ab0-4ca5-9ad6-a240e094d280"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2381e73e-2ec3-417f-8ca3-0755b582040d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68b5958d-f5f4-4d6e-a2c2-ef685e5aa61a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b432ad93-a2b3-4611-95da-b09bfd9a2f41",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb040b0-292a-4add-b3b7-e70060f98065",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "331bab8d-15b9-40c3-91ef-4f0987a16e33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e325b6e-e542-4bae-8597-3c346277d623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b4aaae9-4078-43bc-a9c4-ea6a1ef8ac97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6534fabd-4923-4981-8898-e77352e50d41",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e16fb2c-281c-4882-9de5-21ddc040293d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1a8736f-5d72-4f61-86be-dded321dae91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7c6f6d-8dc3-4636-b83e-28c2046ad8b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3d01e01-93bd-45d3-8470-d0546dd2fa6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e028ffe2-d091-44c5-b95f-49522d2707a9",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f62ed3-edd0-4e72-bc59-7bb3874de26d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30c746ed-df27-4c5f-b416-d5f70de9a8f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ab4b80-2448-4143-bc8b-7d14e8cca03f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca835d58-ce99-4b3e-bde7-b80b08537592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "536f95d1-1f95-4b8e-8510-d88789c68a5d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c9e7ec-a6d3-4384-ac32-6a801ee05a09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5561303b-dde7-4b2c-8c3c-05b3d8a9eefa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead8d4d5-0efa-4b15-9671-18977d7c9fa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c41b9e4c-bda3-4af8-86fd-263ed685cb81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8587a2c-c052-46d1-9785-ea05e4706e6c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c780b3c-7de2-442d-8d14-72b41b3d54aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f892dc70-0198-4d3a-8cc0-143535607221"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b0318c-149b-42b0-816a-e1bfc70f898e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "312336c0-4ca4-42f3-9a01-a85664976242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc8e508-e48b-46a5-82a0-adc9956ef4bf",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9cd8fef-8107-430b-97ba-a91e10e56d4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21415aef-af4c-4d86-9a10-2b85d59445c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb767c19-d416-4288-bb2b-74f67efe078f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60043517-db5a-41e7-ac74-676a160ae6f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52693d30-880a-4f63-82e8-a9ea631489dc",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa246bc-54d1-433c-bc44-5e2cd42efc2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec694af7-e3e5-4ec1-a2c2-def41de4d123"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48696d5e-3c56-4131-8f11-3fa5e4bcbbc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59f4868f-0085-4701-a869-582f6b889de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a88eaf2-190b-46fc-813e-eb1bea18ede8",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f33789-c09e-4aba-a1a9-ffd00420967e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7d28cdf-6605-43c5-91ad-401ccd536729"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd720456-4c75-497a-88bc-42576950cca0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82efcb43-52c8-4e5c-821b-fa7c8a9d0d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d3bffe-6ed1-4243-8fcb-36687aa1cb08",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f79027-0e3a-46c9-9d0a-0bef14993cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d199928-6a7b-4237-8070-e10323cd152b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33bc630d-1f74-479f-aae4-bed48921a02c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19b63b21-e49a-49b3-9077-36e27fa455df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2bd5b8-f42b-4f0c-a504-e3ef1607a9de",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52108dc-41cc-4009-bf01-4b8e292ea904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a9eb6bb-712b-4dda-a010-6716f5cedd76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a71f87f6-3560-49d0-866a-282f43377702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4fe6a0a-2b43-4c99-92a1-56a64967b98f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d53389-6cb6-4478-b027-e3679ccdf0d4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b8d3b30-02b8-42de-8fee-c23871a404b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0464cb63-1a5a-4971-8265-a815bfcc9bd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb60552-4189-4769-9604-1d3eef09ad4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d32212e-c6d6-4cb4-9930-80785abd51e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5cd085-e056-40df-839d-852273d7781a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4be246d-9aa2-4797-bf9a-7aea0538c69f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db3c4912-a422-426d-8cec-b0dfcf683454"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e83d0d-1ea3-48b6-90b6-9056fc79e80b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ada3849-b714-4981-ba25-e7e007cba442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8cb65d2-7eaf-4c09-8676-d7ac3832bed0",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779fbf81-abc4-43e0-a2ee-51510f64df95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "953c8d45-a17a-491e-892c-63c03bf8fd86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac75533-6ae5-48af-bc13-f85e92349249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5223e4e1-032d-4dac-8736-9f2abddc6929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f63187ec-dbf5-4f80-aa01-eaeb195d4782",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "909df863-8243-4847-9ac2-74d7551104fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c52e5676-8c95-4f7a-a4a4-26f66a706dd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c91170-10ab-4c24-8de9-37ad8c824383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eae3a691-805e-43af-8f10-050dfe18972c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e33e972-650d-4d43-8936-f2ecd71259be",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3da3d88-e3ef-4808-ac2f-209945754b5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "458bd05c-2327-4729-96cd-7f5e56058e48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "491a59c5-3719-4b39-8948-614c52d9af93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2db59a0-cde9-477d-99ea-136b2f91dea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806f0d4e-9df0-4155-8d2c-439c0cef57be",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c9a09e-9b76-434e-9b46-29c1e7aec046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a12d1bd-b879-4cf3-bcb1-9affec001312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dbd51bd-e1eb-4bc4-bc86-69855b298c0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df64edc6-26e1-469b-a820-15be0a411151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ca24f9-03f5-4caa-bb1f-69bce236ce8d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984ead04-b3d4-4328-b8dc-2bce2d3833ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c3b1d31-df94-4c65-906c-0282bf63b3d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc88543-a637-4e1b-a226-0c993189a4b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47f8fca1-bc51-4a93-b890-3af243ed4d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6acb8b3-6682-4091-94a2-ed10fc25f5a6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "414ea329-2878-447f-a44c-47078bb15f59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0db60cf7-0057-46e2-98cc-d496ad9c3ce9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "609af43b-8fb5-4504-99fb-d73dfeec8208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecb8cca5-edf8-40a1-9e8f-ccf350130e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44430055-51ab-490c-9189-df2127de1078",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8f16f0-b894-422a-808f-a602170cd6e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd3807bc-f359-46bb-a948-f4cad25fcc46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71b9ccd-1c25-4af4-9794-698dfcf0e9d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9af487cf-d676-4332-90c2-4241b064d5d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e63015c0-7b3e-46be-9056-525b303d2803",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5f5a3f-1ba0-420d-b007-52ffdb77f380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "399087f4-e98e-43d1-8214-bd54856412db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7dd0aff-9614-4fec-b4a2-4d9779689d9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c95b5b2d-9749-4478-9bd0-8c007634b1b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841bc373-18e1-48eb-ab79-d9a30c5c0807",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "244a06e1-fe1b-45eb-a61c-359b20f2d0cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52e46daf-5431-4c65-b407-1924659ac5a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09bf0d18-374a-4259-95d9-693a6603b7d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d64be59d-e53c-4df2-8b29-6513165edeb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c7d419-2c26-4e4f-9880-f6b5d588dac3",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5ccd20-92c8-4e91-9e4c-36fac00664dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce8fcae5-e8ec-4d1b-b04e-2e0991b5082a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f73396-0375-4cb4-ad7b-69b825277442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98bb428b-2ce0-4d04-b235-ccd3bea1358e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e59ad7-0d43-4848-a6c5-10e69999acb8",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e418c25-cba5-4dc7-87fa-5ffeb5a22749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b935e054-60f6-41e3-b702-a6fc6b887bcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f0de76-8edf-47d7-9662-071ed8e69c0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62818d3d-0149-43f2-8107-54edae6e34f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f6f0112-761d-4d86-ba06-1ffba641d124",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d97544-8c1c-4fa1-84fb-15644db4945f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac46862a-7635-4c51-9cf8-1667a97987a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb347eca-1502-4665-a6bc-f1565e2ff034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f7330af-c354-458e-921d-c81b3da90f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ca5676-e3ec-42fb-875d-433aab08c50e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2382492c-ab35-413a-82d1-eaddf9f5716b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b281dda-3547-48c8-85f7-0d0dcc6bd659"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ebced7-4c14-4e22-9237-86defd93b336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a06efbe6-114d-4d96-bdf8-ca244b601498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8582baee-eedc-4316-83ff-a8bb60093565",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0abc4da9-ab32-4a76-b52d-b2884d45fbda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9aac7ce-6cf6-45a4-9210-d4e06d764702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac84966-c69a-4733-82ea-eb623a7106e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09f1e21e-e8a1-40c1-b13e-e1efb3d61ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "755dc09e-af8a-44ea-90a2-21dcb16fc318",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e32074-df7d-4895-bad3-cf12f5e8c04b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "065313ec-5dab-4368-b6a5-d5fa7281312c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd08df8-fbd2-4f25-b7f7-ce9e03d2f08a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c32fbdfa-7efa-4e10-b12e-84eebb74cd7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7871176-85ba-4da9-a6b6-385899e605d5",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a2bd40-2e61-4d35-ace9-bdf712705167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b72f4ad6-98fa-4f73-acca-b60b5d721e49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d07e6d6-82f2-47aa-b0cd-436815057cec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32bf277a-7f20-416d-be45-2146e0e9965b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df3f6756-4296-411a-8e51-96f5d94de57f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40ae7c3-3434-4e4e-9cdb-e313d4dc4f67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "946f95e9-965c-4df2-a22e-3c23bee07feb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef30345-d040-4427-9b54-5d7b11c36556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0b13a60-884e-4c33-9ea0-dfdd38926196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c20eaf5-9bab-49fc-b34a-cf278260143c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae1b814-35d9-43ab-889a-80adc3e6ea20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88d5f029-4315-4177-a982-4f6c70574f23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "189355ed-dfcc-4560-80fe-b1496edb0f79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae382c5c-c284-46c1-9b8a-89e864362d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e7c0e90-83d7-4cea-83de-8aa6d21d6e3b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c6100a9-b647-4c3f-976c-f1b131db59cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0244fc1f-2680-4a9a-b2a0-af3b314e761c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "922d9789-8ed7-4eb5-943a-f3baa936a9ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9bc36b2-13e6-4b95-bf05-a23bf50ea00b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8031b29b-08a0-46c0-85e8-220d62b12392",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a53a5270-5f78-40ca-bbfe-8782328f7879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89d3011c-f7e2-4360-80ad-888df248061d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c4524ee-a6ca-4d99-9bdb-373435ac2e12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d77b19a-c673-483d-96b8-3013166e43f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41bcfc90-3b26-40f6-bd8e-cc58a8010769",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a4a792-bd89-42fb-8c40-879fee9d87a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd1587b6-15b9-4a52-ba4a-455844fa216e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ca8338-8d27-4bbe-8ae7-4dc04ac03032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a26f212-3a0b-441d-9512-c37908bba47d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f802c0ac-8bb3-4ac9-a49d-e76da43cbd38",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c23cd24f-1b33-4d6e-b21e-d1819ca8862c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5c48926-e614-416d-b615-9edf96568b8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc4c398-56cb-4c4a-a7a5-e23cc0c74eaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7b702f0-9af5-49ab-9582-79530e8e2d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc987c4-c02f-48f1-87ca-a6c2b47a5bfb",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30953115-289f-44e0-8c15-7942bf7b11d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fd24b7e-7c0d-436f-b9b3-addf39e8359a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac0f87a-b167-483e-b825-29a51f0887bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb7ac00f-8bfb-4a4f-a866-a3ee55725d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407fdb8a-e21b-4cd2-8ead-6fb2315f38fe",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1cf1f7-eea2-4dc6-be54-4ccc14b0ddb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0989f63e-9d7e-451a-83eb-87aafc5c6287"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb2da862-2c87-4431-9133-cbf5e9374ad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95f94738-07b1-4ab0-b0bc-8ae7762fe01b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58f20ef-f842-4f29-895e-1c6f38782e3e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de32762f-78df-4ab4-8550-310f1aef3151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b36f5c4-be6c-47ad-9f23-02d48b95ff00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8daa5ef-2a53-49b9-990a-2946e05d328b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e337555-6aa1-4a95-9d96-176dfd887596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dbed686-307f-4aa7-9fb8-e86da94f19d8",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec5a8a7-879c-4701-bff2-36b646f79b54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1245ba53-dd61-4576-8a40-62139ae107ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c03a928-08be-4e12-9253-719532fdd791",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2ec0fbe-ad8d-4d82-82f4-9cb90f9ba621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e4ff0de-528f-4f74-938c-e91308e9d1c8",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1bf657-85cd-4750-97d9-6d29fedd209d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ec9e02e-0acf-4751-a09f-aeb0cbb020ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c909a3d2-764b-4a85-99f8-c9f69b5c25df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c2f0e65-2cca-46be-8c4d-a6797c567d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e56f7c-ad5a-44c0-a140-a318bc8233fe",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b070ce-c778-43dd-b27f-58a7ec784005",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3db9e49-d6fd-4989-abb1-e986f3090c1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4edeac-963e-4feb-b6d3-333a55a9ec99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "110ce192-be9b-4dc5-9924-7f324577006b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8b1dcf-789c-4044-8222-b9f84607d599",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8371908f-5076-477d-a889-7ffd9f112790",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16ff107a-63c4-48c9-8248-c38454965961"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d32afb5-d907-40ca-a1e8-193634b381c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc84ddb9-e0f0-41fe-9fce-73f639d4cf52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c87c754e-e5f9-4ea0-bf66-f11f017790ac",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d258d99d-8a81-48cc-9c2d-1365e846258c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f394d471-7038-46f8-8d87-4abd163a851f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41c4907-bdbb-494f-883b-184f01032ca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f27450b-6f9a-415f-beb0-7190457f51c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526702ec-17d1-4e28-ab03-a2e9d5dd9e80",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d59705-da40-4172-a2b0-9818fc5b2828",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc739628-cd8f-41ba-a01e-b165b9ce5ee8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46cc28c0-b532-418f-b022-ce2b07e3a91f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3246a205-053a-42f7-b151-ad1eb084a5c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a67146a-2c3e-4306-bc9e-c9dbcb6c909e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a93fb0-cc36-4aa9-810d-d62d09e905b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0917be7b-0a99-42e0-93c4-62ef2c188470"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69cc1df4-fd55-483b-ac51-ddf9d712927b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21601248-45e6-470d-a4a8-e96ee93699fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18b6b5d-5a32-4dfd-bc1c-88f3ca9127de",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de1b9f0f-a85e-4517-ac9e-f637e80b46cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5275109-d399-4a5b-a226-0199323814e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f41760-905c-4652-855f-7b87f77ccefb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "860097dd-374c-44c0-bf40-9206798bd61a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17617269-e536-46a2-bc35-8f4e91de0ae9",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b90ac8-ef5e-4cec-bbbc-d951165fec86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6097f6ee-f919-4e15-8049-aaa2d859ee44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6cae83-3960-411a-a9cb-29dedbc5e47f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8b8415c-6802-4d97-97c8-3704c02cfb43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4481a8-d829-4f08-b7f8-ec6394863b44",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b9c11aa-0574-4bce-8ee2-26b6079e3936",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2bfca6b-00de-411d-b9ac-56a7dde6811f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb953c2-9cc5-4e9e-974c-e789ad99c4c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a0f9260-1693-402f-8643-28878092fc3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d16c9e-7874-4671-8922-2313db6c3346",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d7b86a-b155-44d5-91a9-11fb506ede83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2adb843-64c6-468f-b4cb-65853190d52d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d11228ec-b24e-432c-928f-2e3cfb188286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82da8c75-0dd8-4f68-a07e-cab91f519b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f2dbd71-a9da-4742-9c67-9e6034938bcc",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80575ee2-18d4-433c-b973-49c367208e52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae966748-eb0d-43a7-be4e-aa359b223b86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae14f3e-a7bc-4d83-99ad-83383ffd800d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b39a2a2-47e7-4c0e-8576-0383976fbc42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3116267b-7e33-42d5-bcc0-aa344437ba15",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af05a225-f157-4b92-8fbf-9d4b712318d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5c828de-293a-45b1-acb6-84b0cb403824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2b91ee-d806-4b36-a8f7-6c09db7a65e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b77dd74-277f-4094-a26a-b955bec3c0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff6c2dc-dadc-42e8-8dee-032f0f44b4d8",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3d067c-8cbd-4a70-9c46-28f1dda662a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2e55ed4-615a-408a-ada7-5637bf43ff8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d841663-5268-4859-ad46-0971ec847948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dcfaa95-e083-4861-86ea-6cb144dde597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a6da86-6220-4e14-a6f2-d1c99d87b7d8",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea940ee7-308f-45ab-bd11-3282b229e811",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45ada3dc-85e7-446f-93e7-3c3dc0a6843b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bdcf3da-0a84-4256-9f32-aaecb6f60ff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "957a2ecc-3ab8-4eaf-b41c-915375739d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d25a7696-3c79-4740-9b1f-1a1ce92805f9",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64df5c0b-f236-48bc-a06e-ce45beba1c0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "872b7437-2283-4256-8c79-9d01ad0b170f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c3d95e1-e83f-4ac1-a41b-39866d1c9d8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b342110d-97cc-475f-b89d-4365f8cfe025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae408698-7dad-4e49-8715-2367c1f190e2",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa145ab-e6e4-45ed-a9af-600dc928fb02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aec9d0fc-0a21-4ccd-933e-abe3093636d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9884b3fc-a065-4722-8fae-4798bdb814f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32490372-3bca-493f-b2d0-d073808ff4bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b440713-5efc-4cd9-9dc1-fb88ed8f3b33",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c286888d-e73e-4692-b5e3-fd640790b0c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "936a0be9-ba70-4a9b-9168-9a57afc74d72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "519b7285-a279-4b3c-8b31-7d28a1a7e752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16ff0e6e-c3fc-4856-8551-f6cbbb07eb45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8fc2780-2d82-4bdd-a4dd-4ef7c4dfca62",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87fded99-7f07-42b3-849d-8e73e2f518d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4953f265-6878-4076-a790-c46b6287ccbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f95e03-f356-4614-b2b8-6648642e9fc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6c02275-ac4e-4bdd-bda3-9b66394b470b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4cd7fda-a04f-4cc2-b3c3-5417a4794fd4",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2446e609-b884-4b17-af2a-6c348106df00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20e43758-cba7-49f7-8577-af660d036228"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a91af7ec-89b7-48c8-ad7c-46fe02b0adab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5e3c0f0-4dba-4a16-8dcc-c422ce5abf57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "644ab476-841a-46d4-b5af-a7e92091cc0d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a991b5c-51e8-4417-a5e0-158816a67dd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f644e136-6feb-4b1f-8019-b000bc0d4cb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9de9d8-2bc5-4452-9a56-721fb6ea5df3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01354876-6574-41ff-af51-6f3dce565154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9c7fd8-6f71-4981-b9d0-f7204ef2b49e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5991cc8-d9e5-4a2b-b223-f1f97df88774",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb4aa11b-a7fb-4831-8f80-e336c086b65a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef53ea8c-21f6-4beb-bdb3-bd223b100889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7840e54-f0e6-4b26-a8e5-ab33e7b5654c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f7ce16-bdba-4e28-a6d3-fb0c3cf5b761",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35d4d10-3a85-4183-83ba-ebb78f16fe4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18c9d9d4-95d9-4c95-8649-d2101b5157a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d0bb32b-b411-4e63-a61f-16339f4b6077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05b96278-3693-484d-bb9e-90a3699bfd98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb2f8e6-fecc-4083-a7a5-926f690f33df",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000ede50-6f48-401e-bd31-795cc56097de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4ad3466-8748-4136-bf4b-6c9e8c230ed6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "317a15c4-edbb-4e4f-9118-2dcd0234a357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f76d53b-96d8-418b-9d0a-f5589e240174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f5ce49-3abf-4a45-88ae-8e35d50bcef4",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c555b853-05c6-4b6b-8c7f-ab5b9eba9a41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2f2f1ff-16a9-4ce5-b62d-b2fe0d3270eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "333aa247-e5fc-4096-9a49-344a6ca8ba21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b310452-6c08-4d32-9b9d-86c3306055d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dfbc250-81c6-4b2d-ad07-45b1984918b4",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dbdd021-4809-42dc-bbbc-f1e4b2014448",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c02385b-d6f5-470c-9a5e-9dee4238745d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f8ea7d2-ab73-4d0c-834d-5021c8c2c8cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9504a31-b025-48a7-954b-95e8858504b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ebe8d6-3fe8-428f-9cae-8e4e57bebf34",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330b1704-7a7f-4c38-a775-2cd1fd5f3be3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0852e8be-3461-413e-a70a-e342a5fb4791"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f563bcc-d572-43fa-a4f0-f395e9fd8389",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b4ff252-ae7e-44c9-9f7f-3469960529dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60fcb3e2-13ed-4c02-82ba-1c765f88f33b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "521d79ec-8921-4bc9-b897-e2596c13e94f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fda5f883-e386-44e9-bafc-c1b530e94041"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7625f75a-1cb4-4d34-ac89-4631cc028c98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feda9ebd-0dc5-4a72-97b3-4bfdf3f42336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc3fea4-60a9-4806-bd24-da0b3965594d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6132064-aec0-452e-aabd-2a10faa72dc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf7e0fae-79b1-4d28-ae0c-8e8a65bdc423"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0e64be-2834-4861-adf6-706db139c3a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "247ae605-78c5-4d43-a423-d0be2cb8928f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdee55d0-fccc-46df-b9f1-2fd61da4a1ae",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22089250-306d-4e72-ba2e-de70706a34e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24f7647e-dd11-4e45-8f37-6844c231cdc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "335dcdf9-999e-427d-8a6f-a271b641974d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9435f3ef-64e4-4d83-9b1b-32843ba7b997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866fc6a4-5e04-46c3-82d2-02571b01c59a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76311f30-7f3d-48ef-adda-85cca85a9fd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "debb0d59-1530-4f9d-9ed5-8c07b0893d49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ab967d-ffe7-42b0-9968-2265d8a13fa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "512191db-dd89-40e7-9dcf-0891dec7e523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7917a5f-6ef4-429f-8222-0cf6f46d90db",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c417acda-cfff-4510-94e4-ff54565dc667",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "918a4c0d-ea17-40d3-9cb1-eba6cb3bc08c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd34df88-8c7f-4d58-99a8-49618a399c11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7615d6c-5930-40b4-8d84-bc784af97646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3544778-0285-44e5-a52b-2c6659c148c0",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27e7199d-c835-46e1-8fe2-151d5a7a25e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84eb7610-6087-4e54-a5b9-5796fb9d3764"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f511afb1-8a2e-42eb-862c-37bcbd958c6f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bb997f9-aa59-4243-95e3-ee0a8162839c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "604f6f68-7448-4172-91e0-90e7b9228da1",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0034055-f2b4-4c05-801b-c97334f2e78f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9fce5fc-239c-427b-8bca-b2497efbce54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a46968c4-08d2-4a4a-b627-1defa5fe2503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddedc83a-7ff7-4ce4-a1ff-a7299761f4ef"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f94b2d8-408c-4347-8b02-c45f048af392",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5038b558-6e01-40b5-bb2c-fb0942394dfc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f15a65a2-aa24-439f-b7ce-5434315477f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7ca3ae1e-763b-4e1c-827e-550a1af7041e"
                    }
                  }
                ]
              },
              {
                "id": "6d1c756a-72b8-4e68-913f-da98188522c3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c29186a2-78cb-4429-92b7-eda60a5faeaa",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd25fe9-378a-415b-82b1-62a291fe09ec",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3298b445-2997-4e2a-bd70-a275607e779f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c9abbc-a9ad-4de8-9449-b41351328628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2cf9057-1786-45f6-895b-91e180d5ba64"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "01262ac3-ff14-4bc6-90e2-1549e61ed4e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2799f1bf-3199-4c0c-a268-077fe1419719"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b66b3dd-73cd-4631-ac2b-1dccfb163c33",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "919a3012-0791-41c5-9d78-b21efdf4749e"
                    }
                  }
                ]
              },
              {
                "id": "3ed3ab59-efc3-498b-9c92-444f690350da",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "09b900ba-9b86-44b4-97c3-e011d6d1d205",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a7a2a6-53dc-4fae-9a7e-9f27a52ccc27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "bf44c819-b3a7-4506-b0e4-cb3dc10d684c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "574d74ba-f2af-42e3-b629-d09bc397087e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ebf070e-12db-4341-9e3c-1916ad71aca2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c039acc2-3625-4c49-b81e-472251d60f4b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "afc456a5-beb4-4df3-ba56-d66329371d7b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c701fce-1f81-4602-b3c7-b59bdf19ebb7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a6d6c73b-0c28-44be-81ca-047ee6f90adb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2be0827c-14ce-456b-adda-b58226de27b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1a1d20c-151f-4576-8179-6a80f8eaaa08"
                    }
                  }
                ]
              },
              {
                "id": "e24c87a4-fe7a-413b-b295-5f69c7433fc1",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "05459b51-9fa4-46b9-a6c4-1a8bcbe8cbf4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "58624527-d228-4c86-b1ba-058579e3c24b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2dd8c8d-262e-4f46-ba74-3403a53d9f7d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50f8b8ed-e8ac-4086-aba4-7a7ca226cc14"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b6fe0bff-88f1-42ce-90d2-7555f28bbc16",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "2a149b4b-b6aa-4994-96f0-18193c521394"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7d75360a-34e4-4200-a395-362fb866d149",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bc1c078e-fc13-494c-b561-7ef3f2610a84"
            }
          }
        ]
      },
      {
        "id": "dc8e0c8a-fdbf-42a1-b3a0-413768e953d6",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "495620ae-6085-4344-8c7d-aae21dc6eca5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c25abaad-e71f-4255-80f9-b2f3a17c9a01",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8773257e-50bb-4b8a-8ca2-1b0fc0f7321c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c40733-41bd-44df-91cc-1191c64ac7cc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4af20fb3-785b-4808-89c9-1f43b958fe03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2d8370-0cf9-45c2-9db3-6124e3bee120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "23e2ee93-2b5f-47c2-aac1-38be0f37db81"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d8e2ee1-d5af-4f2d-b5f9-9be44f8f017c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ea1dd1b-95aa-4591-8513-7884662ee545"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bde853e4-4687-4920-b45b-4884c4d83e28",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "abc5d27a-2863-4415-9623-c61eadecc363"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "672328e5-1804-43b4-8ce6-82cd782fa63e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f2e01041-b12e-4a8c-9428-69a46b1e4d3a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "94a5923b-36c1-4b87-b6f5-dd77a537b6d5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5ca33329-5521-496e-a65f-abfb3f485977"
            }
          }
        ]
      },
      {
        "id": "8ede072c-efe3-4404-b75b-bfc224d26bcb",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "12cb3721-b5fb-459f-9d20-b9f83f607b5e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6b0d31f7-a4f0-4852-82f3-e5a9dd8105ed",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2d8a81c0-69ad-42cf-a7c0-e41daf6f248a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "217bec8d-4384-4379-ab13-97a07ae64b4c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9087c1bd-ee62-4ee2-81aa-eb1d1b267391"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ebc72bc-2f7e-436c-8718-da8facf7b471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e815e8e-735d-4189-990a-22db696e4a70"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1636594c-c041-4ac1-9773-ed3f2dd6e288",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7640f8ce-ee40-45e7-a871-cbeb24704b01"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a8a5877-c983-455d-a0fb-3c1030b1fc3e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2200c09-4ad2-496b-9f6c-9f7ec963df71"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "440d61c8-3250-4a9c-85be-053c099a4117",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6a0269be-6d87-4dea-9fdd-e0634864620d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "79f52dd2-327a-4bee-af18-2e3dc89538b7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "223a8ac6-a524-4043-8506-e912f349316d"
            }
          }
        ]
      },
      {
        "id": "52264be6-634d-425b-b31c-8057c2707b0d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c760b900-61ed-4fcc-83ce-debdf84fe317",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5ad17616-9e15-4913-b4d4-61ca82d1fc82",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "88d5f54c-14ff-44d1-9c66-a0ab99965d12",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68e5819-127e-4360-8e5b-78b638f45dca",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a650638b-7510-4307-895d-238f432371b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b429b05-26cd-430f-bfcd-fbbc50e92ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e05cf62-b283-4a3a-b470-a6020b70f8c4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b54b551-518a-4a54-bf18-571a2da91755",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "626d8350-0ee3-4f91-846a-b2f57c385871"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "862e9081-a93d-4e4a-9e08-7de42b1ed43f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7c49db5-5ec7-4dc0-944f-9628aeb1ecdc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f77f2e00-78bb-48a4-a129-a5cef37d7cb9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "44c4c257-5c02-49a1-8b7a-a1d9fa16334c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "56d63817-0048-42a9-b0ff-4662f23d89f4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9fda4923-c7f9-4387-aff3-de7d0c0bf8b6"
            }
          }
        ]
      },
      {
        "id": "d3db8a11-316c-4953-b9f2-5e3ac56ae29d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c90aa2e3-1b29-45b2-86d4-e4789bf0763e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d441b2c-1b38-479e-9b34-9a29a9a5373c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "364c2437-fb6a-4882-8743-bfb287a8b6f1",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "802adbed-6aca-4250-b6f8-2d7a79d5806d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e8fe2689-b0ee-483f-a2ee-f1dd206ed1a0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 330.03521126760546,
      "responseMin": 11,
      "responseMax": 7802,
      "responseSd": 965.8046810089289,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1695774825412,
      "completed": 1695774931491
    },
    "executions": [
      {
        "id": "5fb87cf0-7a63-4061-8527-ad0178f0ffcf",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "35cf561c-ae93-4176-85fe-700f24a260c6",
          "httpRequestId": "f2825632-91d2-42c0-95a4-a6311686621d"
        },
        "item": {
          "id": "5fb87cf0-7a63-4061-8527-ad0178f0ffcf",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "da9c1e81-a13b-4b37-b60b-aa883a94bf55",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "e4936383-efc9-402f-ace4-f41570e2cfeb",
        "cursor": {
          "ref": "321f826d-36d5-42b6-886e-917558d9cb9b",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d9577994-bb62-4366-8d83-f1df3d0f6662"
        },
        "item": {
          "id": "e4936383-efc9-402f-ace4-f41570e2cfeb",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "83f3b0db-bbc9-4b47-8b6a-1d5ceee057c0",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "51342449-0e4c-4c24-af3f-e232070b19d5",
        "cursor": {
          "ref": "0c6987dd-4cd8-4ff9-89b2-4e01c70a265e",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0e6c25a2-d777-46ef-8ac3-1e73dd9982a1"
        },
        "item": {
          "id": "51342449-0e4c-4c24-af3f-e232070b19d5",
          "name": "did_json"
        },
        "response": {
          "id": "8dfac9ef-84c7-44e5-8283-aefb669bed5c",
          "status": "OK",
          "code": 200,
          "responseTime": 1410,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1e3391-2da9-4635-97b9-df22301ccc9b",
        "cursor": {
          "ref": "79233ed5-79d2-4f46-9067-776c6fd5af02",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fb31bbe2-5ee4-4516-8627-1cc41f87693c"
        },
        "item": {
          "id": "0a1e3391-2da9-4635-97b9-df22301ccc9b",
          "name": "did:invalid"
        },
        "response": {
          "id": "2b40901b-08dc-4121-9727-b0b2ec133084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1e3391-2da9-4635-97b9-df22301ccc9b",
        "cursor": {
          "ref": "79233ed5-79d2-4f46-9067-776c6fd5af02",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fb31bbe2-5ee4-4516-8627-1cc41f87693c"
        },
        "item": {
          "id": "0a1e3391-2da9-4635-97b9-df22301ccc9b",
          "name": "did:invalid"
        },
        "response": {
          "id": "2b40901b-08dc-4121-9727-b0b2ec133084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d02918e-4b2b-4480-b7ec-dda909d23b39",
        "cursor": {
          "ref": "7d50ae16-151a-4756-8489-e50d419d7f59",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "65754fb1-f05a-4cde-9789-64e776b212f9"
        },
        "item": {
          "id": "7d02918e-4b2b-4480-b7ec-dda909d23b39",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e1096b8c-0c2b-4dc7-bb44-59b8b15783e2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 444,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d320410-3c2c-459c-b5d6-7dfa0e48a802",
        "cursor": {
          "ref": "8765da20-b3f1-4745-9a1e-1746d3bb2591",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e27d9d83-edc6-4b7f-b099-b9994a389b1a"
        },
        "item": {
          "id": "0d320410-3c2c-459c-b5d6-7dfa0e48a802",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7976cdaf-a3de-4568-a412-35cd48a041af",
          "status": "Not Found",
          "code": 404,
          "responseTime": 245,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1305df3a-f8b5-4aa6-b79d-432c88851ac2",
        "cursor": {
          "ref": "4c15a1ea-b05e-4f4c-a228-6f1e87a1184f",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c83de5ab-68d7-4c8b-89bf-84ecb50f8b29"
        },
        "item": {
          "id": "1305df3a-f8b5-4aa6-b79d-432c88851ac2",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "63273fab-5dab-4296-b43c-d35f231099f0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9d0fab-5a2d-4b20-9de7-ce82b45ffc29",
        "cursor": {
          "ref": "98776542-ba55-4658-8fb0-1db3bfb90ead",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "55b85303-fc69-43d0-adfe-516cfa297c36"
        },
        "item": {
          "id": "3f9d0fab-5a2d-4b20-9de7-ce82b45ffc29",
          "name": "identifiers"
        },
        "response": {
          "id": "c5dd90db-049a-474d-9588-ffe18052fcff",
          "status": "OK",
          "code": 200,
          "responseTime": 1310,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c493a7d4-4b3e-4e20-84fe-ffc9a0f87019",
        "cursor": {
          "ref": "894d6797-5a42-45fd-a7bd-ffec5c8280fa",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8a215f17-19f6-41f9-ac37-a456eae21000"
        },
        "item": {
          "id": "c493a7d4-4b3e-4e20-84fe-ffc9a0f87019",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c50acd48-eb79-4115-b1ca-2a8b22363bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed74afc2-a901-4528-a23d-12701c5967dd",
        "cursor": {
          "ref": "f1338301-1173-417f-9f2a-98a8c87dfcec",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "89a8c383-7190-4e91-b40b-57924d6a1e94"
        },
        "item": {
          "id": "ed74afc2-a901-4528-a23d-12701c5967dd",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "21b25c47-f1ba-40f7-badd-ce83496a1b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ec2077-74c0-4880-970c-43d695dcd0d2",
        "cursor": {
          "ref": "7d9b422c-6962-4018-8496-420572450df5",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2106a09b-47d9-469c-8db1-80e55265349b"
        },
        "item": {
          "id": "84ec2077-74c0-4880-970c-43d695dcd0d2",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a8c2bd39-9f9a-41e7-8192-6f436b3d3052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5ddbd5-ae4c-4ccf-894c-f72b9260ad64",
        "cursor": {
          "ref": "63215c97-0190-4b0a-adc1-559cf046473d",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "46e4f611-3c63-4500-85d2-5789983d2fae"
        },
        "item": {
          "id": "dc5ddbd5-ae4c-4ccf-894c-f72b9260ad64",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8c64579e-2287-41e7-9db0-c1bd0407e7e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad31544-e974-4e10-b264-efdab187c72f",
        "cursor": {
          "ref": "4e5edafd-f37c-4fa9-ad12-7eaa0cc3c83a",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a4246dc2-f511-4667-99dd-060f0cff6053"
        },
        "item": {
          "id": "3ad31544-e974-4e10-b264-efdab187c72f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "cc37b2ce-65c4-4e56-9499-8dab0d1c3e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043f3781-9607-49a8-ad1a-7e4add151181",
        "cursor": {
          "ref": "b57cbb1e-c5e9-4daf-b27c-793132bf5253",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c821784a-bd23-43b3-813b-63565f52c73f"
        },
        "item": {
          "id": "043f3781-9607-49a8-ad1a-7e4add151181",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "4d80d67a-1074-4b22-80a8-50c2c12639a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dcd6df9-e36d-4193-a289-03662b0e17fb",
        "cursor": {
          "ref": "0f0a5223-44b4-4bad-bcb1-5f21533d0287",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "5e456773-6143-4527-af5a-861eda086bee"
        },
        "item": {
          "id": "0dcd6df9-e36d-4193-a289-03662b0e17fb",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5f4c386e-7e63-4daa-a8a6-7bd36de50c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1608f707-9e9c-4dfc-be26-ebb42189802e",
        "cursor": {
          "ref": "f445b2c3-6381-406b-ace0-2f2955364131",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cc55e7a2-4e30-45ce-8459-49e9751263ad"
        },
        "item": {
          "id": "1608f707-9e9c-4dfc-be26-ebb42189802e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "80201757-def0-4466-a459-33a324dd4ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e3f3c36-76d5-48b8-b80b-1d21c74b44ba",
        "cursor": {
          "ref": "00cb0b6a-29ca-4ade-b4e8-2ba4c5147b78",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7184b7a7-6854-4f9f-b83e-901aae17bba1"
        },
        "item": {
          "id": "8e3f3c36-76d5-48b8-b80b-1d21c74b44ba",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3cab73fe-6d60-44eb-971a-bfcd85bc0970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49cbbe79-9b8c-4511-b266-ac53314a6816",
        "cursor": {
          "ref": "6e2fc903-f656-4f2f-8713-3a79cb3dc12c",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "935181d8-3920-44cc-b990-34e51f4c8fcb"
        },
        "item": {
          "id": "49cbbe79-9b8c-4511-b266-ac53314a6816",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8e5fd6cc-52bd-424c-b5a1-07444294141e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33efa8c2-e947-455b-96d0-ee114b7fda00",
        "cursor": {
          "ref": "f9404e7f-af71-4b8a-a22f-846790b5eab7",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "6753e9a4-7068-4ed8-9fce-2747cc64c868"
        },
        "item": {
          "id": "33efa8c2-e947-455b-96d0-ee114b7fda00",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0fc67ee5-1faa-42a0-a25c-7cd8489bcc0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc717084-cb2c-4379-9c64-b737ac3a2a6c",
        "cursor": {
          "ref": "2831e282-9d70-4830-9da1-1adf01d710ff",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "1a0d4f83-0fe0-4ee1-95fa-8599df091729"
        },
        "item": {
          "id": "fc717084-cb2c-4379-9c64-b737ac3a2a6c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8317736c-b8df-4815-94de-41a0d718a056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f23e05a-3933-42ac-9579-8a53b04cf2d6",
        "cursor": {
          "ref": "cfbee189-b1f0-4b67-89b6-772e34420977",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "34271a96-abf2-41b1-a93a-68e72154fa90"
        },
        "item": {
          "id": "2f23e05a-3933-42ac-9579-8a53b04cf2d6",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b9c06770-5899-4083-8fb0-87de07343ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e3632f-746b-4ce6-839f-e370520894b3",
        "cursor": {
          "ref": "13f6e871-9c5f-43c5-b0b3-709133bfc459",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "597d9318-b974-4f59-9767-20790584ab70"
        },
        "item": {
          "id": "a3e3632f-746b-4ce6-839f-e370520894b3",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3ae2cc82-d46d-4fc8-b8af-9fa1237b1582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219405f6-8501-4e3b-8e34-1540c7b79b60",
        "cursor": {
          "ref": "c0e3b2d5-10a7-4dc1-a342-e17c5ccf6e9f",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "88252503-659e-4923-a6ea-4bf7f268743e"
        },
        "item": {
          "id": "219405f6-8501-4e3b-8e34-1540c7b79b60",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "160eaab4-ff45-40c8-9d6e-527e64ee3554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8dad4d4-4bb8-4065-b5b6-a019fe962d5c",
        "cursor": {
          "ref": "b05b48c6-1a5e-4d12-84e3-05fe60766f72",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ffa1ccf0-e562-4828-9fe8-cdd37e1fc4a1"
        },
        "item": {
          "id": "b8dad4d4-4bb8-4065-b5b6-a019fe962d5c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5998bb91-65ac-4280-8648-e2f437bea531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1859cda-7e33-46d0-bddb-293811b05ce2",
        "cursor": {
          "ref": "b620642f-3a64-4c0a-b19d-f5698fcf313a",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ea2bd744-4a82-4746-a038-80efda7d5a66"
        },
        "item": {
          "id": "d1859cda-7e33-46d0-bddb-293811b05ce2",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "60fd7f43-367a-4ed8-ac44-60f6945a39c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2bba5bb-b6b5-4830-a5f8-1c804327fb73",
        "cursor": {
          "ref": "32864cd8-0a24-4a68-8bb8-dc260c33c7f8",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e0e4b7bd-657f-49b8-a2f6-ccaa79a3ab3e"
        },
        "item": {
          "id": "d2bba5bb-b6b5-4830-a5f8-1c804327fb73",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "fb035683-4700-4061-9952-02bcfa5e61c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb23d19f-c14c-4163-b617-0feef792677c",
        "cursor": {
          "ref": "e17f6023-f139-43e6-a621-c6499dcb1878",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a4eb9d3f-efd4-4b17-a7bc-0d97e0f65ccf"
        },
        "item": {
          "id": "fb23d19f-c14c-4163-b617-0feef792677c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "899f555d-a42f-4237-af6a-079465bf7cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "596f4f06-c61a-4937-b56a-80ae9897b5fe",
        "cursor": {
          "ref": "42b4e1d6-7aae-4738-90db-99086a1cad07",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4acf7ebb-193b-492f-9390-cca2f4fbbaae"
        },
        "item": {
          "id": "596f4f06-c61a-4937-b56a-80ae9897b5fe",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e21b7b06-8a8a-461c-8baf-8b57caac34b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5d1429-b334-4d33-b5c9-fb5cb3388bd4",
        "cursor": {
          "ref": "6048380c-a3d3-4d03-97df-69cc165c1833",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1b60cb35-9125-443b-a089-e46665cc9d8c"
        },
        "item": {
          "id": "ac5d1429-b334-4d33-b5c9-fb5cb3388bd4",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "8e80c56e-eb97-4307-a78f-4a410f7cc86d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1968a3-afef-42de-b043-79f0cb9ba874",
        "cursor": {
          "ref": "93daba01-bd90-469a-95c1-c654a2c6a0bb",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ed502b98-26cd-4fd9-95a8-b2a9509c695a"
        },
        "item": {
          "id": "da1968a3-afef-42de-b043-79f0cb9ba874",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e65f8b03-daa4-486d-88cb-8e2af5b9303d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8001bfc-c97a-4542-9507-2ecb191185b2",
        "cursor": {
          "ref": "20d3b94d-797b-41dc-93f7-89093b4f6304",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "93087b68-96e4-48df-afe8-c06e6718e821"
        },
        "item": {
          "id": "f8001bfc-c97a-4542-9507-2ecb191185b2",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "5c6e9c75-d52a-44ae-a598-ff2fd903052f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1c0cd0-85e8-4efc-893a-2204d529198a",
        "cursor": {
          "ref": "2cfb1e35-f07e-4afe-9642-d2c2c519309d",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "beb94149-a785-49d8-aeba-2f2862258c10"
        },
        "item": {
          "id": "db1c0cd0-85e8-4efc-893a-2204d529198a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "cb041040-d19c-4d4a-a260-76a6bd1d180d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c1b140-95b6-44ae-94f1-c9f8a5c0b16e",
        "cursor": {
          "ref": "15999c99-1cfe-4a96-b8f2-9697b2060014",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6ed065e0-c812-44e0-9bae-7c6d39ab624c"
        },
        "item": {
          "id": "76c1b140-95b6-44ae-94f1-c9f8a5c0b16e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "4b005a0d-4fa1-495d-bed5-24088eb91cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0ae16e-640a-4e84-9aa4-aeb90deb1063",
        "cursor": {
          "ref": "b28df4c5-3949-4162-8a9b-4e4f882f0482",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "cffaf476-b7e2-43c8-ac28-ff998285492d"
        },
        "item": {
          "id": "7c0ae16e-640a-4e84-9aa4-aeb90deb1063",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c8064a7f-c547-497c-b38b-f750b415d6ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5443fe3f-25cf-452d-92b1-23829bea1535",
        "cursor": {
          "ref": "3b83ef47-7aec-48b1-b19e-9a2643da7941",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f85dbf74-6f81-48dc-bbd4-64bf6b65ad8e"
        },
        "item": {
          "id": "5443fe3f-25cf-452d-92b1-23829bea1535",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d237815e-326d-4191-81f9-e0de3968c997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd47a981-3932-4845-9aed-a2d7ceb2a096",
        "cursor": {
          "ref": "f5d1a034-9899-48a6-889a-8688efc874b5",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a75bf787-1ca4-4ba0-8c37-f55f31449689"
        },
        "item": {
          "id": "fd47a981-3932-4845-9aed-a2d7ceb2a096",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "2cbcb66c-f1ea-47a3-84be-c110ef21746a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faca68e2-c16b-4452-a2d0-a48d5f9c9620",
        "cursor": {
          "ref": "e97c49ea-2d4a-4e74-9ad7-549f29e3f36a",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "746b6c48-8b1a-457b-811e-0378e571f306"
        },
        "item": {
          "id": "faca68e2-c16b-4452-a2d0-a48d5f9c9620",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "022f1132-ac48-4b08-a1d3-e8ce86cafa8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec226e1-8992-4141-afad-1a6679c23cce",
        "cursor": {
          "ref": "6bf06cdd-e1c9-457e-8391-10ef0f77e0e4",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6c827c75-2380-4950-8aef-432946fe6372"
        },
        "item": {
          "id": "fec226e1-8992-4141-afad-1a6679c23cce",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9bcf3493-5d79-42a2-b75d-f32ee0624c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05c4dcb-0819-4e9b-8a43-896d27533f19",
        "cursor": {
          "ref": "aca3f489-65ed-4d60-9c6f-3687a76e86f9",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "360cd6a9-062c-442b-925b-6158e7e8c180"
        },
        "item": {
          "id": "c05c4dcb-0819-4e9b-8a43-896d27533f19",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7211b338-241f-407e-992c-64ffa8cf694e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d0cfe5-fcdf-499c-85ce-a18245cf19c8",
        "cursor": {
          "ref": "963418c5-0fac-40d0-bce9-8c6e2e55b5bc",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "98ffb5ac-599f-44e6-b2d6-7b83a0c18bc1"
        },
        "item": {
          "id": "b6d0cfe5-fcdf-499c-85ce-a18245cf19c8",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "602805f1-3b40-4787-a5e1-1aab78c217db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4e01ae-3e69-490b-b1fc-ca7023cfb84e",
        "cursor": {
          "ref": "a9f8f789-6350-4921-8fc8-5d4f3c299318",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0af009f3-302b-4936-a644-0e14ed2f306a"
        },
        "item": {
          "id": "8b4e01ae-3e69-490b-b1fc-ca7023cfb84e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "99bd34c9-76e2-4b7e-8ae4-e4a7a27afb2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1a191f-66c8-4eae-9ca2-055d2747a33e",
        "cursor": {
          "ref": "b432039b-bb3e-4e72-ab7d-0bdda4ef7bcf",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "de64ae9d-50be-4ee9-874e-c5b8985dc7a3"
        },
        "item": {
          "id": "0f1a191f-66c8-4eae-9ca2-055d2747a33e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "be1c335e-ae97-4182-a0cf-65a233c59333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be1e460-c597-48c2-bd0f-0075ff676061",
        "cursor": {
          "ref": "be1d18e4-154f-423f-8e94-7d7df409d8c9",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "428a97f1-7bbe-447b-865e-b3ef85798f85"
        },
        "item": {
          "id": "0be1e460-c597-48c2-bd0f-0075ff676061",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9c5dec7d-058d-4438-b3c5-9572d7430427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0963f51b-5a1e-4cba-a50d-15f7a07d8c5d",
        "cursor": {
          "ref": "3e1152a6-b588-4508-a648-4b19aabbf0bd",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5ec32dab-d008-4f03-baaf-350c47bc89f4"
        },
        "item": {
          "id": "0963f51b-5a1e-4cba-a50d-15f7a07d8c5d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "1affe1c0-d402-4f6b-8a28-42128393bb18",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 631,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fcc6596-62d9-40f5-9dc9-56b37dacb6e2",
        "cursor": {
          "ref": "f9c0a8c9-bf5e-4166-9dbc-7f6c5527f2dd",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ee761bbf-286e-4770-873d-392e24ce49fa"
        },
        "item": {
          "id": "8fcc6596-62d9-40f5-9dc9-56b37dacb6e2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "1fd25deb-a5a6-483c-8bb3-8e1ea1932122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d528a63c-cf01-4cad-9db9-d47dc33697ac",
        "cursor": {
          "ref": "d6cc11fd-47f3-4883-ad82-321e1373423c",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b53165d6-e378-4a1a-8341-511ba3ebed62"
        },
        "item": {
          "id": "d528a63c-cf01-4cad-9db9-d47dc33697ac",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "bc224b2c-cf1c-45fd-b7a0-45422fe39773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c824d374-4291-48fc-a3a8-589e075b2abf",
        "cursor": {
          "ref": "7103e382-bbab-4de7-908a-fd1692a33b25",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "63d954b1-417c-4928-9140-e18d0fe004cd"
        },
        "item": {
          "id": "c824d374-4291-48fc-a3a8-589e075b2abf",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "860830db-23ea-41ec-b15b-b53d419fd046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2332b757-3a05-41ff-9596-be0b7598996c",
        "cursor": {
          "ref": "1929ac93-6f2b-410f-b4ea-d7f1f02264f3",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b256e5c5-bc9d-4c6d-9408-daf32749a12e"
        },
        "item": {
          "id": "2332b757-3a05-41ff-9596-be0b7598996c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8365d649-6e52-47ac-8062-101d47720f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc16f100-613f-4905-b637-3d9ececb36d4",
        "cursor": {
          "ref": "d0fbca2d-b1f9-4ecb-a66c-98cf654e5b49",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "197e6065-079f-4f61-b944-775e6c2f878b"
        },
        "item": {
          "id": "fc16f100-613f-4905-b637-3d9ececb36d4",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "50e922dd-9938-4ee0-91a2-e3345edf475a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7db5e0-f7bf-46f4-a433-a45ef221a577",
        "cursor": {
          "ref": "ca91529f-4a1a-4a1f-9d68-2ef3d60b5dd4",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8a771d90-9fa8-4647-86aa-8f6b2309b85f"
        },
        "item": {
          "id": "ba7db5e0-f7bf-46f4-a433-a45ef221a577",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ff38697f-9db8-4025-89f6-d7014b91920a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bedd4cbb-29ea-437f-9e2e-789151511940",
        "cursor": {
          "ref": "a6cdaee1-4e17-427b-905d-a27b5e83258b",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "39837f0e-1c16-41b5-bd2c-8c8ac4a4c6cb"
        },
        "item": {
          "id": "bedd4cbb-29ea-437f-9e2e-789151511940",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "426c3c98-9cd8-4cac-82dc-d7f7e6e7e72a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 582,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203f921a-1177-45fe-81df-bb981aebfeea",
        "cursor": {
          "ref": "d6d21a45-304e-43d7-9d3e-aab515286059",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "fb92df30-89e5-4611-9d4d-aa93a57fb356"
        },
        "item": {
          "id": "203f921a-1177-45fe-81df-bb981aebfeea",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "53f2aa40-336b-4fbc-8e10-bc9257b1f2f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1a18f7-a24c-4b3e-beb7-c88c1e9a3b72",
        "cursor": {
          "ref": "6fdc7e8f-7c2a-44a4-acf3-c6a4660ebbef",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "69e89831-cfdb-4107-8f25-fd136afc8d49"
        },
        "item": {
          "id": "2a1a18f7-a24c-4b3e-beb7-c88c1e9a3b72",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c69fad18-f8de-4479-b1e8-c91e4c096888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f646e5-90aa-4c71-8866-0557963d651d",
        "cursor": {
          "ref": "1be736f5-88d6-49d7-9345-c967afd7d744",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e7ac7e32-903b-4940-b5f0-1d94c0e34a3f"
        },
        "item": {
          "id": "b3f646e5-90aa-4c71-8866-0557963d651d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "81568e5d-2ab0-4f8a-abe1-3f6f29bf32ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99b4f86-7684-4b95-b70c-d93d7d967f1b",
        "cursor": {
          "ref": "104bf259-c99c-43c2-a98d-9f161ca0fb89",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "105322cf-41cb-46bc-b30e-01c95fbd7172"
        },
        "item": {
          "id": "a99b4f86-7684-4b95-b70c-d93d7d967f1b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "11dcbcdb-d4b3-4876-9b49-d0a6cb9db08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e02629-6ab5-42a0-9a9e-c6512c76d01a",
        "cursor": {
          "ref": "59064dd4-dd03-410a-8049-cf85b947a193",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "918e5728-ddf7-4091-89d3-6234fdc8ad72"
        },
        "item": {
          "id": "f8e02629-6ab5-42a0-9a9e-c6512c76d01a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a046eb14-1483-4979-9f80-c2638a55d6a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e71effa-82f6-42f7-91ab-08f78aaab1ca",
        "cursor": {
          "ref": "62cd138c-822b-461b-a735-f6af1479846b",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ac73cd25-bee1-446b-8333-754ee3200b77"
        },
        "item": {
          "id": "1e71effa-82f6-42f7-91ab-08f78aaab1ca",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d3c57ca5-222b-4fd6-b1bb-dc19a05cbce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18a91bd-9186-4f4e-afee-cf43d18ba236",
        "cursor": {
          "ref": "54cf0490-3644-411d-9eae-4636ee3723b0",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "6fe5c4f3-f231-428e-9a02-9d3104f8666c"
        },
        "item": {
          "id": "b18a91bd-9186-4f4e-afee-cf43d18ba236",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "26a53d24-76df-4757-9752-f9c4c4f90ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddecdadb-af88-4c92-a498-9c5037be0b91",
        "cursor": {
          "ref": "acd8adba-ee5b-4879-a896-419ec709b538",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "56457083-1286-4112-941f-7599ddb65767"
        },
        "item": {
          "id": "ddecdadb-af88-4c92-a498-9c5037be0b91",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9457ea0b-eeb2-424d-a7c1-970a3719b5b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c73231a-4d7d-40e4-8f7d-1f6bb1672d15",
        "cursor": {
          "ref": "453148af-f0fa-44c0-be59-e8f257e09a13",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "59323d95-a3b4-48ea-84e0-6d028d50a337"
        },
        "item": {
          "id": "9c73231a-4d7d-40e4-8f7d-1f6bb1672d15",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "0bb1c881-ba3c-42cc-b50c-a8242391cb44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81c53b3-a14d-4194-bc73-c33cf64fc9a2",
        "cursor": {
          "ref": "762377e0-8da6-4edb-814a-af84015f1d2e",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "6317de43-22c2-4a4f-bbf4-ee9c814e2630"
        },
        "item": {
          "id": "f81c53b3-a14d-4194-bc73-c33cf64fc9a2",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "51eaa40e-d59b-4022-88ea-226748f5817e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a6e27b-01bf-4af2-af64-cb521c17e529",
        "cursor": {
          "ref": "fa8041bb-f266-4850-b526-462590b11051",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0eb40022-1109-468e-bedc-b4c31002b64f"
        },
        "item": {
          "id": "67a6e27b-01bf-4af2-af64-cb521c17e529",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7edf82b9-10b4-4ff4-9bc0-587f429baeb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57c092f-9031-44a8-92df-41ae4212e24b",
        "cursor": {
          "ref": "792dce35-719e-44dd-b87b-667274af8546",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "45036aaf-d8db-4929-a6b3-24d6d39430db"
        },
        "item": {
          "id": "f57c092f-9031-44a8-92df-41ae4212e24b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ba74b253-6fbe-4a9a-a4dc-e87edf561dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1832fbe-5e7c-4c1f-9107-5b5822e66983",
        "cursor": {
          "ref": "3faba6f7-521c-4906-b53f-eaebcc7ab9d7",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "18a917a8-a46d-4896-8c32-037bce85c937"
        },
        "item": {
          "id": "e1832fbe-5e7c-4c1f-9107-5b5822e66983",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5926bc55-47dd-4f13-9a8f-75cb6c1cb447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aaef47a-4c11-4baa-b592-2241c58c3924",
        "cursor": {
          "ref": "155434ed-1794-4529-925c-71e790fea28e",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "dc6e1642-2cc1-4226-84da-ebca32c01924"
        },
        "item": {
          "id": "7aaef47a-4c11-4baa-b592-2241c58c3924",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b335d3c6-4b4d-4fca-bad2-a0ffa2ddb75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1140b3a7-e1b0-45cc-acd9-f8652ef7fd3b",
        "cursor": {
          "ref": "7b0b3acd-be32-495b-bac7-4c984249c4c7",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5dd2ef8f-f182-4ebc-bedc-662603777b76"
        },
        "item": {
          "id": "1140b3a7-e1b0-45cc-acd9-f8652ef7fd3b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "af2e23ed-6fbc-4f96-9dad-32be70600837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "322aa1df-0dcf-4fec-9443-33528dcc551d",
        "cursor": {
          "ref": "0a71047d-55f8-4c45-b18a-7e4c3b6b435e",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "fd1901f3-bd9d-46b1-9904-869715a93ac6"
        },
        "item": {
          "id": "322aa1df-0dcf-4fec-9443-33528dcc551d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4e22c54a-0ce4-4578-8c50-f61f4393d9f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f77bfa2-3f0c-4dfd-873c-c23f80b42a43",
        "cursor": {
          "ref": "e121c12e-49f1-40e0-84a2-6fb65f49411d",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7dfdd4e4-b569-471c-a40e-cfd3ae705451"
        },
        "item": {
          "id": "3f77bfa2-3f0c-4dfd-873c-c23f80b42a43",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "bfcdfc12-ebb4-4926-97be-e75226747fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2787d223-c04c-4358-b10a-8a7320ea462b",
        "cursor": {
          "ref": "6cb393a2-3cab-4f22-99d2-bef93353718a",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6fe1400b-5694-4059-84e8-a939bcc8f056"
        },
        "item": {
          "id": "2787d223-c04c-4358-b10a-8a7320ea462b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "478365fe-6497-42a7-bca5-e7486859ae63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e384da9c-3bc0-4caf-be10-c6e93e106251",
        "cursor": {
          "ref": "c698add2-d264-44ba-9573-2be6ea5d3b0a",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d185493c-f2ca-4e98-8f95-0aaa6005a7f5"
        },
        "item": {
          "id": "e384da9c-3bc0-4caf-be10-c6e93e106251",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "de51b798-3d75-4aa5-bf08-b4dc4a41c060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64c71fc-7dd5-40d8-abf7-90379e2ba5ad",
        "cursor": {
          "ref": "c57b41d9-89ba-47ef-9a4b-fc962e445382",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f0b02586-9a24-4ec6-8798-279c057f5d3d"
        },
        "item": {
          "id": "d64c71fc-7dd5-40d8-abf7-90379e2ba5ad",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c08c7e86-92a9-41cf-aa15-3b2339cb9e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc25228-de18-41d3-b26a-b4968c202436",
        "cursor": {
          "ref": "37c964a6-cf9d-4a51-bfce-46211283d81e",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "662b4524-aafa-4c1f-91a6-d3889978f3a1"
        },
        "item": {
          "id": "bcc25228-de18-41d3-b26a-b4968c202436",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a856180c-b432-4e0d-a452-85618fb64538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ebf57e7-8a26-4541-9e5b-1439bad6a9d7",
        "cursor": {
          "ref": "44b7005c-392b-45d6-a692-561e3c0426e0",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e34be376-da4a-4962-ae37-fff0ce1b3e54"
        },
        "item": {
          "id": "1ebf57e7-8a26-4541-9e5b-1439bad6a9d7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ac18fe77-4386-4dde-b4ca-39b55a9b7e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b10122c-b495-4e86-a88a-084cbbdeff4c",
        "cursor": {
          "ref": "0b8d284d-d5f3-4ee4-ae9a-b026c968c52f",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "78828716-cda1-4223-8b2c-845f015edc83"
        },
        "item": {
          "id": "0b10122c-b495-4e86-a88a-084cbbdeff4c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "de6cd42b-d30b-410d-b48b-effa7602c92d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a3f61f-50e8-4fc6-a8b4-a1081fd94ddb",
        "cursor": {
          "ref": "62783552-5204-402e-8a47-35bed68b8220",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "69300bd6-ef26-4175-836b-4eda9b88b437"
        },
        "item": {
          "id": "73a3f61f-50e8-4fc6-a8b4-a1081fd94ddb",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "68922958-27d4-46e7-91a7-df2ce259fdc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b91c6a7b-637a-4d8e-a105-6d2e426d5787",
        "cursor": {
          "ref": "35e5869a-b0a6-4361-88fe-3e439bdeca27",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "62ae43c7-0c6c-49a7-a3a2-e55c1435c88b"
        },
        "item": {
          "id": "b91c6a7b-637a-4d8e-a105-6d2e426d5787",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2677e9f0-182a-49b0-8b4a-577167721064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb61ba8f-b154-4597-8e5d-ced5b7e74fbd",
        "cursor": {
          "ref": "03305670-40f0-417d-8df7-511f20652a9e",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9ec418a0-0fdb-4b78-a62e-203bd4d3186d"
        },
        "item": {
          "id": "eb61ba8f-b154-4597-8e5d-ced5b7e74fbd",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2ef238f1-e679-4200-a122-3776cdaa98d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc61a58-a6f4-40a5-a1ac-85888fe836db",
        "cursor": {
          "ref": "4c70ca86-0ee3-49cc-af49-3fbc04ff35fb",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "005a4656-e317-431d-bbca-c1727de42fcc"
        },
        "item": {
          "id": "dcc61a58-a6f4-40a5-a1ac-85888fe836db",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2b52ece7-35b5-4411-8745-3d655d883e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc7a3e82-8e12-4c3c-baac-64a0c91b99bb",
        "cursor": {
          "ref": "7952ab57-ed1b-4800-a2b6-2e91bfbc17a3",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1aded90c-9b4a-48c8-b14c-e8e3ce3a1644"
        },
        "item": {
          "id": "dc7a3e82-8e12-4c3c-baac-64a0c91b99bb",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4f7bc2c0-7835-4a87-8d40-e15d1a9e9b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fad4d7d-b981-4f32-8870-fc8d9bbd4bc3",
        "cursor": {
          "ref": "0b6d142e-3561-4438-a282-250844f4202e",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ce147037-0218-4df9-9fd3-e8750790a353"
        },
        "item": {
          "id": "1fad4d7d-b981-4f32-8870-fc8d9bbd4bc3",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "85b1dd21-87ef-45b7-9144-ce0edff61461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e10c570-38c3-4fc6-9fa1-5b976d186bb5",
        "cursor": {
          "ref": "c830c484-51b1-4c98-ade9-3617fcbda0e0",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "4aac21d6-b7f7-4c94-b0f7-3d3a87230b0f"
        },
        "item": {
          "id": "9e10c570-38c3-4fc6-9fa1-5b976d186bb5",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9c0bb6a5-c290-4eb4-a146-2b8f97b34504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e3a64d-9a26-40a4-93f3-e8ba6c6a675a",
        "cursor": {
          "ref": "bf675d87-ce16-412e-a5cb-845af493d156",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c4c7a707-b5e0-45f9-b316-c90b97a99338"
        },
        "item": {
          "id": "11e3a64d-9a26-40a4-93f3-e8ba6c6a675a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5bd316c9-cd52-4f71-8792-0064134eb898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346e4bdc-c7e4-4d67-9e12-234e7f6bc070",
        "cursor": {
          "ref": "84044f2a-6f1a-421f-94e9-e5a8c4d551d3",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5b437e56-b806-4e06-8a99-deb1824605d5"
        },
        "item": {
          "id": "346e4bdc-c7e4-4d67-9e12-234e7f6bc070",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6741d789-3de4-46df-8c4a-be319997511c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf4b15bc-908b-42a0-897d-67b3e8eeaaf5",
        "cursor": {
          "ref": "dbf08158-247c-4674-a0b0-9bb01e4e38d4",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3b5a2c5b-c237-4321-b040-a7e433323857"
        },
        "item": {
          "id": "cf4b15bc-908b-42a0-897d-67b3e8eeaaf5",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "29dacc23-d6b5-4c8e-be5a-52629f1b7392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7575021-4e51-49b4-9b9f-5890c711207f",
        "cursor": {
          "ref": "0fc25690-a02f-48ea-a755-2bcde263ab8c",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "545e60ec-23cd-48d9-be40-dcf35f559f53"
        },
        "item": {
          "id": "b7575021-4e51-49b4-9b9f-5890c711207f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1a902ed5-7028-447e-bcee-a997a3152c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b469ecd4-78c2-424d-aae2-296c2c755504",
        "cursor": {
          "ref": "b0c76971-f6d2-46a5-8f80-140263de1946",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "46b57d69-523d-4a06-9584-aa38b4c6e471"
        },
        "item": {
          "id": "b469ecd4-78c2-424d-aae2-296c2c755504",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "202eaebf-b493-4e33-b1d0-7e025de87a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7eac49-a2aa-4120-b871-016d99bd30f5",
        "cursor": {
          "ref": "dccd711f-340a-49b0-9e60-f42cc8b9c993",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e4d78d2c-1175-4034-a19b-ae85c27b9c28"
        },
        "item": {
          "id": "1b7eac49-a2aa-4120-b871-016d99bd30f5",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ad3a9dee-dac8-4be2-bd3f-43a163ec1785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df7273b-3a19-42ef-9ee4-7d1b094351d5",
        "cursor": {
          "ref": "37897384-3bc8-4617-9f1c-57027492882d",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "da99bed9-f800-4514-b448-6a6bf17b8f7f"
        },
        "item": {
          "id": "8df7273b-3a19-42ef-9ee4-7d1b094351d5",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "bb9d5ff1-b9e0-438d-942a-6beb82f7b61f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "affa41d1-158b-427c-b3c0-18c630e93c04",
        "cursor": {
          "ref": "d1699745-2fe3-4087-bde2-777a63b5682b",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6bf6e78a-72ab-416e-aa76-4e5ecb75f14b"
        },
        "item": {
          "id": "affa41d1-158b-427c-b3c0-18c630e93c04",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a2b1131c-8780-453d-b3a4-b30555634949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c346959d-62dd-4d68-83c8-b46cef943bc7",
        "cursor": {
          "ref": "be3f013d-879d-468b-ae04-ce5e955c3dc2",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6aa643db-15ce-4998-9eb6-727cac935d51"
        },
        "item": {
          "id": "c346959d-62dd-4d68-83c8-b46cef943bc7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "cb46b1e8-799e-45e8-a8e5-5bb1a6b6b406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d25ea99e-fc09-4790-8c1a-fec85359fdd0",
        "cursor": {
          "ref": "290e5c91-57b7-4cd3-bc3d-3513ae5b1af2",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9c74418a-d332-48db-b880-e78eb4158a5b"
        },
        "item": {
          "id": "d25ea99e-fc09-4790-8c1a-fec85359fdd0",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b2b55b7b-f753-4dbf-a00c-dd81741c76a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2506c0fb-2310-4eaa-a998-7d10035097e6",
        "cursor": {
          "ref": "a575325b-f7b3-466f-abdf-6825c3039742",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "87d16b56-4e06-43fe-b69f-6f3ec7769bc2"
        },
        "item": {
          "id": "2506c0fb-2310-4eaa-a998-7d10035097e6",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1147a725-2234-4a7e-a833-3d32349cf534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51507631-c56b-4986-9783-32cbc3930126",
        "cursor": {
          "ref": "fd4aa4d8-dbfa-49b7-959f-282826a4c2f6",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "4cc4813b-b7f0-4423-a8fd-4730d472d4c5"
        },
        "item": {
          "id": "51507631-c56b-4986-9783-32cbc3930126",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "dfc6fe5f-b67e-4de0-aec8-f8e65338a673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6bf29eb-6adb-4af1-92a0-f542645d5637",
        "cursor": {
          "ref": "3c3b1d32-7632-421f-9093-334a9fc5373b",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0255a3fa-b001-437b-b114-e55f62e3c504"
        },
        "item": {
          "id": "b6bf29eb-6adb-4af1-92a0-f542645d5637",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1a982204-38a8-46d6-bfa1-29d77ace7936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44057258-986a-491e-be72-ba8edc0d51a2",
        "cursor": {
          "ref": "98add6d8-e757-4f45-8efe-79e472e5a4a0",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "76ecd58c-a90d-490b-8d06-8e620851ae6e"
        },
        "item": {
          "id": "44057258-986a-491e-be72-ba8edc0d51a2",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e15f2f1c-421b-48ba-957e-00c8f085ba19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e32e861-61ef-434d-93f7-9dcd32735dd3",
        "cursor": {
          "ref": "a1abf2cc-366d-47c5-8711-0d50e1b1603b",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8b4225d1-f6dd-4be1-ba2d-d9ac7ae484af"
        },
        "item": {
          "id": "7e32e861-61ef-434d-93f7-9dcd32735dd3",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e2d7808b-bbd9-4153-9c8d-1b43c684ef78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796c0f94-0bd1-4061-a411-c6b2626aa615",
        "cursor": {
          "ref": "b56b178d-366a-438f-be6e-e96538a82022",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1e5df270-a977-4a11-ba8e-8c98c380af4c"
        },
        "item": {
          "id": "796c0f94-0bd1-4061-a411-c6b2626aa615",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "bd493d5d-05dd-4899-9808-457d028db010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cdd76ab-03a0-4bf5-923d-1f612990c537",
        "cursor": {
          "ref": "ede030cd-5390-489b-bebe-94a7e9d8cc0d",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d45181fd-dc18-45b0-9a2c-1d10ec14b7e6"
        },
        "item": {
          "id": "5cdd76ab-03a0-4bf5-923d-1f612990c537",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "305bf483-6a61-47bf-b5ee-bfa17ad3958e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c09576-3e82-4856-8984-f5b81279d882",
        "cursor": {
          "ref": "bddb3721-842b-4046-bf16-570c62ae6a23",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "49787055-5f6c-4905-ba7b-d44217f62548"
        },
        "item": {
          "id": "e7c09576-3e82-4856-8984-f5b81279d882",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "de514704-4ba5-4368-a6aa-2973aea866b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd3b823c-e41e-46d3-8f52-0d47368238ba",
        "cursor": {
          "ref": "23fa6364-16d1-4c07-9440-92313ec5034f",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "06f32130-963c-407a-9a45-7bb3e1608394"
        },
        "item": {
          "id": "cd3b823c-e41e-46d3-8f52-0d47368238ba",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "80b47b3b-14f9-41aa-879d-7a3a771eec6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4041b31c-4f51-4416-9798-770ffc79f343",
        "cursor": {
          "ref": "603ab630-bab6-4c55-bf00-67ab7a93ef2b",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "8c97624a-566a-400a-9817-bdeec59f777c"
        },
        "item": {
          "id": "4041b31c-4f51-4416-9798-770ffc79f343",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "8812c8d8-82ba-4903-8bc5-ce405109a2e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 114,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849e9b0e-5548-4433-b3fb-6810331e7a0e",
        "cursor": {
          "ref": "69fd9d45-5314-43c8-b11d-ada8614ada69",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d2285a64-d175-407e-ac29-a9dcb9646fc4"
        },
        "item": {
          "id": "849e9b0e-5548-4433-b3fb-6810331e7a0e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a35e6010-d1b5-4a9f-b001-2bf7f067a653",
          "status": "Created",
          "code": 201,
          "responseTime": 7646,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59ab73e-b385-4364-b8c6-c4ff01a2251f",
        "cursor": {
          "ref": "490489cf-53f5-45fd-ba68-70c6e805c688",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d0615fb9-746a-4df3-a818-169a42002302"
        },
        "item": {
          "id": "c59ab73e-b385-4364-b8c6-c4ff01a2251f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9f76ccb7-17ed-44e7-8043-dd0216723720",
          "status": "Created",
          "code": 201,
          "responseTime": 7709,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da79d74-7ff7-48e6-a5e0-021efdf8e982",
        "cursor": {
          "ref": "30b60b9a-e682-4209-add5-219072e1bbbc",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "53f241a5-bfce-4fa0-855a-8482dcfbdbf8"
        },
        "item": {
          "id": "8da79d74-7ff7-48e6-a5e0-021efdf8e982",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b3388850-875d-4e0e-ad32-2dd5774a38b7",
          "status": "Created",
          "code": 201,
          "responseTime": 7802,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "407552e9-9915-458f-b3ae-cfd3aa2f9d7d",
        "cursor": {
          "ref": "613010c1-7504-4dac-aa67-5d22465ecf97",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "04c5d835-a0a2-440a-b76b-9678ed60e2d2"
        },
        "item": {
          "id": "407552e9-9915-458f-b3ae-cfd3aa2f9d7d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0728cee9-7b41-4178-a973-c9543d7eb1f7",
          "status": "Created",
          "code": 201,
          "responseTime": 7048,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "285be9d4-a554-4a84-834e-68d193bff320",
        "cursor": {
          "ref": "2a0c9d03-5c3d-4a0d-8fd0-e7c04a84cbf1",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2192d0fc-d026-46ea-8f13-1b0c89ef8997"
        },
        "item": {
          "id": "285be9d4-a554-4a84-834e-68d193bff320",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "40191b90-d907-4f7a-b723-32ab5fc90a8a",
          "status": "Created",
          "code": 201,
          "responseTime": 6816,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "430167d3-1403-4fd1-b552-b1420da25be5",
        "cursor": {
          "ref": "0a5895ab-c497-47f1-a112-8f850c2b2e5c",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "90576fdc-fe69-44d3-be0a-05a5382a72a4"
        },
        "item": {
          "id": "430167d3-1403-4fd1-b552-b1420da25be5",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f88f8fd9-529e-4a84-9a7e-b5092c5104b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "150df6c2-804c-450a-959c-4c57855edce0",
        "cursor": {
          "ref": "89b4bcde-5e11-4d31-8a10-ecac4665d634",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0ef6b108-0ca5-4fd3-aeaf-d677de3c2da4"
        },
        "item": {
          "id": "150df6c2-804c-450a-959c-4c57855edce0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1ef9a2ea-9d02-4a48-b659-646054d939f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761f9670-489d-408a-8936-0cc0ac0bd764",
        "cursor": {
          "ref": "80f9735c-9f8c-4537-a24e-1cd6fb4fd76a",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4d0d3a59-b84e-484f-b3ff-9283c8951236"
        },
        "item": {
          "id": "761f9670-489d-408a-8936-0cc0ac0bd764",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4cc22c30-3732-41b4-9d00-67db2a20917b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d604f9-399e-4a6a-8ded-cb06b858157d",
        "cursor": {
          "ref": "ecfaa0e7-352a-475d-ae60-b34cbf692f8e",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b11107af-b93b-4f2e-9ea0-70db7b4b5ef0"
        },
        "item": {
          "id": "92d604f9-399e-4a6a-8ded-cb06b858157d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d21362fe-c852-40b1-ab2e-2f3a63671dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12cb7e7-3970-4add-a2d0-85c82d2a221e",
        "cursor": {
          "ref": "5e45e92b-7ac4-4ebf-a124-ddea765de33f",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f955807b-a683-4348-bb05-6b3dbad2f414"
        },
        "item": {
          "id": "f12cb7e7-3970-4add-a2d0-85c82d2a221e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "fceb93f6-fe76-42f7-82bb-44f8d2ab3302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d6bff9-5c01-426b-a27b-b0da67c6ccce",
        "cursor": {
          "ref": "24d37f25-1cd5-4e73-8e7b-b503838817c0",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "18a10d34-27a1-4753-86ab-3149e7870e8c"
        },
        "item": {
          "id": "63d6bff9-5c01-426b-a27b-b0da67c6ccce",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "46f76c72-08dc-4db0-b026-336642e773b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5f88a7-7543-4e08-ba0a-048e5c3a8862",
        "cursor": {
          "ref": "95665983-4b7d-4f07-ae32-4ba3bca6d482",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a8b1c05d-9895-49c0-9a9a-3d844279eb51"
        },
        "item": {
          "id": "fc5f88a7-7543-4e08-ba0a-048e5c3a8862",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "90788f5d-1336-4aa4-b4dd-122ea28ed1e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0531ffc9-9c4d-4a55-8654-3071bd32ad1a",
        "cursor": {
          "ref": "1c8caeab-1811-4e6f-8e09-721090b16d19",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "33648b53-6be3-44d3-b281-173d7a3823ca"
        },
        "item": {
          "id": "0531ffc9-9c4d-4a55-8654-3071bd32ad1a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "425bca98-49cd-47da-93c7-dcb3462d2030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c6b538-284b-40c5-8bc0-a8b60294f967",
        "cursor": {
          "ref": "114f1953-06f6-4dfa-a5fb-4c64eb80da48",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "509385d8-9295-4dcd-8f89-d112afc1c0d8"
        },
        "item": {
          "id": "74c6b538-284b-40c5-8bc0-a8b60294f967",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7c4718af-4b35-42c0-a3d1-fb30c9c68a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61cbad33-e0df-4706-81a7-8ded4b17e37e",
        "cursor": {
          "ref": "d8417525-ce73-436a-9b0b-3ecc58129fbc",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "be22e1ad-2299-48b7-b090-6a752976a3b5"
        },
        "item": {
          "id": "61cbad33-e0df-4706-81a7-8ded4b17e37e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0f06548c-a206-408a-b0bf-2d7040d03df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4156c26-1030-40ea-9876-b4556c71d214",
        "cursor": {
          "ref": "1074518b-fd72-44ba-a1de-7d0e38a591b4",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3d0d8906-f881-4077-9be7-1da0a13f1452"
        },
        "item": {
          "id": "d4156c26-1030-40ea-9876-b4556c71d214",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9db16fc8-3ec6-4c84-903c-0c03fd811a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df265413-5814-45b6-9b89-88e51a6731ba",
        "cursor": {
          "ref": "eb5f5e54-4766-4f7c-b5e6-2f4cb16fdd23",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ff47d0bf-d29a-4a9d-98a5-372c4a3e83ca"
        },
        "item": {
          "id": "df265413-5814-45b6-9b89-88e51a6731ba",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "49bd35ab-38ff-4952-b62a-b0d8633ccc15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ecd3f5-9550-446b-a32a-b0812319aafb",
        "cursor": {
          "ref": "c7b36745-ae26-453d-8dfc-50cd34cb8a34",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a068436f-22b2-4752-8a40-901e23e3295b"
        },
        "item": {
          "id": "a9ecd3f5-9550-446b-a32a-b0812319aafb",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1d3dd68a-a734-431c-8868-9bf9b6a395c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94ba72b-f411-441a-9bf6-4b3a441f66cd",
        "cursor": {
          "ref": "9e99ebaa-b8f5-4667-b1fb-6e05a14fb2e3",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ff491297-7c5a-40dc-94a9-ac88376e8714"
        },
        "item": {
          "id": "e94ba72b-f411-441a-9bf6-4b3a441f66cd",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "91c266cd-bce6-4231-a18e-be8ad6d0d3e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d862aad8-13d1-462d-822e-55eab0dfc2e6",
        "cursor": {
          "ref": "394ab2d6-c3a2-4366-9aee-cd96ba3673bf",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5eb7433c-a636-4f52-97a0-1083c7f44fd7"
        },
        "item": {
          "id": "d862aad8-13d1-462d-822e-55eab0dfc2e6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e2cb71c7-f301-476b-8759-319fe40ec46f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "222b6903-0575-430c-93dc-7bdc49747bee",
        "cursor": {
          "ref": "f63ea470-31fa-45dd-9705-96a042ccc97d",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7ed4cc74-6792-4131-ac4f-48d934682c92"
        },
        "item": {
          "id": "222b6903-0575-430c-93dc-7bdc49747bee",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e97fc62e-1e0f-46a2-bfcd-6564138c498b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f6d9da-3ace-410d-8dc9-e74560d90212",
        "cursor": {
          "ref": "1abe19e1-2174-4202-a11d-08a04d2258f1",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a54b61fc-8040-4f87-bd4b-541202533ed2"
        },
        "item": {
          "id": "66f6d9da-3ace-410d-8dc9-e74560d90212",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "13f84747-3d32-4f06-a117-a55ca0036e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992d6cc3-05d0-44b0-8f71-3c5d629804c3",
        "cursor": {
          "ref": "6b755d1f-f267-4c9c-a342-915be9355f85",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "90aa046a-8a33-4720-9db7-319cf4e64596"
        },
        "item": {
          "id": "992d6cc3-05d0-44b0-8f71-3c5d629804c3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1524f3b7-4492-472c-bfbc-ad5a5c1380dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cacc0bf9-2dcf-4ca9-810c-c91b28c99430",
        "cursor": {
          "ref": "756745b3-f701-4159-a042-623ff232ee26",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "30e64f29-6f6e-4488-ab36-f59a9484d706"
        },
        "item": {
          "id": "cacc0bf9-2dcf-4ca9-810c-c91b28c99430",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "eaa65a03-f9fd-4bc7-a42f-eda27bbf0bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8206ab83-459e-4c75-b08a-892b1f76abde",
        "cursor": {
          "ref": "0fe5b6ed-a21d-4cf3-a2b1-ec976ff4e20a",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f049db86-6cc3-47c7-899d-6d4877a40c17"
        },
        "item": {
          "id": "8206ab83-459e-4c75-b08a-892b1f76abde",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4f682aca-e5be-40cb-bde0-50dbb722963a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e26ae36-298f-4d8f-9cdc-c0f9713a2f5f",
        "cursor": {
          "ref": "53616bbf-8095-4bbe-b96d-0f37f3f4d942",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "edd6f456-c574-4255-b150-e0a679160bf9"
        },
        "item": {
          "id": "0e26ae36-298f-4d8f-9cdc-c0f9713a2f5f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4c1dbf67-b5c4-4c33-a261-985aafb9beae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a0c3fc-1835-4b81-ba52-100aab7c8bf7",
        "cursor": {
          "ref": "e3dc35a1-ee34-4557-b217-fbe254953bc9",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e796b923-33cb-4f37-9ac3-bbb41a1d7322"
        },
        "item": {
          "id": "35a0c3fc-1835-4b81-ba52-100aab7c8bf7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5c09de6b-1605-48c6-ade8-61c88c84b72c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bedd310-b197-4f29-87b7-d8db4df20af3",
        "cursor": {
          "ref": "be3997e9-da1a-499d-bfbb-dfde105c2338",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a94bc7f7-3a3b-4613-8ffa-8a1adcdaa3c2"
        },
        "item": {
          "id": "4bedd310-b197-4f29-87b7-d8db4df20af3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b4f52ebf-0dff-4f57-a225-3bebfa2b4f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad78a6b-768e-4703-b65a-08d2e08d7993",
        "cursor": {
          "ref": "2f72925c-6f9f-49e4-991a-867b7643d1a6",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "50d20802-ef10-4d2a-a901-c7c2cc9435a1"
        },
        "item": {
          "id": "bad78a6b-768e-4703-b65a-08d2e08d7993",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6cd54b56-69a6-4106-8e97-9d021cd2ef48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc482ece-6db4-4ff6-9d11-b1fac6a5c828",
        "cursor": {
          "ref": "0c8b2281-c13b-44e0-b702-1e2d03f4885a",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "12cb9bfa-25c8-4671-ba45-cfcb5940d58d"
        },
        "item": {
          "id": "bc482ece-6db4-4ff6-9d11-b1fac6a5c828",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b5b8dd39-b71e-4820-89a3-3df4f9545976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c88681-252c-4718-8cff-0580905db1cc",
        "cursor": {
          "ref": "357e0cb8-bc9b-4201-be64-0655f5ca400b",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e6dfadc5-d9c8-42f8-b8a9-667cfb9f03e7"
        },
        "item": {
          "id": "f4c88681-252c-4718-8cff-0580905db1cc",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "65ebf2c5-2eb7-4bd3-b988-c080a9f85c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a633d176-9ad6-4722-8bec-fa4e6aa9d813",
        "cursor": {
          "ref": "4d195f49-fb48-4db5-af7c-8aa5883868e7",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7702e380-f6ff-4835-8c76-94d45b82a324"
        },
        "item": {
          "id": "a633d176-9ad6-4722-8bec-fa4e6aa9d813",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3bd4d5f8-b03c-4829-aaa4-059ce1aca1b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed7cfa3-abe4-406c-834e-236ac378b014",
        "cursor": {
          "ref": "b3e192c8-6ba7-4816-b31c-30180260a6db",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b8eb291c-f63b-4ff6-b9a3-bfda2205a2b5"
        },
        "item": {
          "id": "7ed7cfa3-abe4-406c-834e-236ac378b014",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5eeb1a5a-5e39-4029-b3b8-b2d3dd43132a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a5ede6-a580-4910-bc37-de820afea5e8",
        "cursor": {
          "ref": "fa8e9958-4e6f-4563-882b-e9436520cbf4",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6295b3b5-2653-4ff2-b1d0-4e63efda378f"
        },
        "item": {
          "id": "b3a5ede6-a580-4910-bc37-de820afea5e8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1c9cddfa-d90c-4791-9713-decff7aaa180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0f71ad-c16e-4191-abc3-ab853148afd5",
        "cursor": {
          "ref": "9262e51b-11b3-4bbb-93eb-8bf1904569d5",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b52312ed-5937-4140-8e29-7a5e648a5f0d"
        },
        "item": {
          "id": "1f0f71ad-c16e-4191-abc3-ab853148afd5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "13931fb0-9472-434b-b861-2126746676b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a8d25e-67e3-4378-8c70-f346f1e9cc7a",
        "cursor": {
          "ref": "75fee4f3-81b7-438f-a151-9157fedc2dbd",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1c89f2f8-3157-41ea-b359-2dafb4d84033"
        },
        "item": {
          "id": "a3a8d25e-67e3-4378-8c70-f346f1e9cc7a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7cdc4bb5-7c51-457c-8f41-c55d91b0b0ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f7110e-066b-4821-8cd6-b6c9ff9515fe",
        "cursor": {
          "ref": "cd767a16-0596-4042-8d84-35ba170d5d6e",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4fa96521-e81d-425c-baee-1b8502a1946e"
        },
        "item": {
          "id": "00f7110e-066b-4821-8cd6-b6c9ff9515fe",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2995c16d-d7cf-4c64-a515-732a3cc705e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc3dae4-8bc0-454d-8a6c-e15bea45561f",
        "cursor": {
          "ref": "c04ae09d-0769-444b-a0e3-3513a71b000a",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b9981222-64fd-420c-af5d-9deb2f6ef7e6"
        },
        "item": {
          "id": "4cc3dae4-8bc0-454d-8a6c-e15bea45561f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "cf43afe9-de84-4c2a-a5ce-87882d3b7fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a992838f-8727-4771-8a26-bfcfca803505",
        "cursor": {
          "ref": "b1e771e4-570c-4cba-aced-c9ee111a46a0",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "497c3bbd-7911-4d4e-9a86-0f8079cafad5"
        },
        "item": {
          "id": "a992838f-8727-4771-8a26-bfcfca803505",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2243f1c9-250f-4c9c-84de-034ba053685e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f4fff8-716e-43e3-a835-7487d08b0007",
        "cursor": {
          "ref": "97022c57-c7ea-4894-ab32-0710b487084d",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a529a881-8aa4-4389-83f5-fa3d320c5cd9"
        },
        "item": {
          "id": "b0f4fff8-716e-43e3-a835-7487d08b0007",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "44e80c4e-aba3-4ed7-8da9-28a9ba1cea99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3776d420-0e4f-48f6-8107-c5022d95edb3",
        "cursor": {
          "ref": "2c175e24-523f-4cec-9c9f-a58d543cd0a9",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d6bde80e-e347-4eb3-b201-417136edf52d"
        },
        "item": {
          "id": "3776d420-0e4f-48f6-8107-c5022d95edb3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "50ba829e-7e08-4970-b2f7-258bddeaacda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ad70f7-4652-4755-9516-e0fca1c9afd6",
        "cursor": {
          "ref": "d29482a8-3877-4519-a1a3-c26fb0fd9b79",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d09b198a-f198-4fad-a21e-fa7444fedea2"
        },
        "item": {
          "id": "f2ad70f7-4652-4755-9516-e0fca1c9afd6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0200bf59-dcd5-4c7c-bd39-75354e63f40d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb5ccfa-19de-4349-9664-f47bc6001c03",
        "cursor": {
          "ref": "71bcd25d-eaa0-4503-84a4-72038634a993",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c53707ec-20b4-401f-a2e6-5248aa83a6fe"
        },
        "item": {
          "id": "fdb5ccfa-19de-4349-9664-f47bc6001c03",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "41198979-87bd-4831-8253-fa8f98a9c78a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f76667-ca32-40ef-a13b-9a447c6fc277",
        "cursor": {
          "ref": "c2a5eb95-47a6-419f-8d6f-c0d072828689",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "98dbc975-544b-4bd5-9613-740fce755e56"
        },
        "item": {
          "id": "53f76667-ca32-40ef-a13b-9a447c6fc277",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c7b1cef5-69ac-433d-b815-e7536a6696d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbebae99-a81e-4981-be33-a1bf7f3f3245",
        "cursor": {
          "ref": "ec0fa7bb-e008-451b-8823-d4c518aae16f",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0b594fe7-58ab-474e-8b5c-f71b16ab6bca"
        },
        "item": {
          "id": "bbebae99-a81e-4981-be33-a1bf7f3f3245",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "405cf15e-6796-44ae-8625-fed98043c070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c37416-0386-4868-b7b7-0a87ffc0412b",
        "cursor": {
          "ref": "f13c1c57-dbd4-429e-a655-9299c07fcd45",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4896ea4a-b691-4709-a374-1f5b65df5709"
        },
        "item": {
          "id": "64c37416-0386-4868-b7b7-0a87ffc0412b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e4350bdf-0f01-425c-838b-7b5b1e8865f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25cd2002-bb9a-43ad-92d9-b951bcbfa9f9",
        "cursor": {
          "ref": "29c05308-4eb2-424b-a05f-9c351b8e4a8a",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "186f6334-5983-475e-aa95-28ce94463446"
        },
        "item": {
          "id": "25cd2002-bb9a-43ad-92d9-b951bcbfa9f9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8afc94d6-63ab-4ba1-bed2-c7efe50c666c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d74b9a25-4700-4382-bbbc-29fd251e06bc",
        "cursor": {
          "ref": "66bf4837-06da-476b-a7f5-222a9ac7c568",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0c2792e6-357e-44ee-9b32-4d8c294c0d72"
        },
        "item": {
          "id": "d74b9a25-4700-4382-bbbc-29fd251e06bc",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e47534eb-9b66-4afa-9e8e-499910cb9dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1483c5d4-7c08-44cd-a0d7-2b7cd7d4c9db",
        "cursor": {
          "ref": "e8b6f558-f526-49de-bcda-0d40373bb55b",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "594bbc92-b5d2-4394-9cb0-57b91927f077"
        },
        "item": {
          "id": "1483c5d4-7c08-44cd-a0d7-2b7cd7d4c9db",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6e796e10-1d0b-45f8-985d-77747a0a679e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5b09c8-0d4e-44f8-8bb9-3ee70462e418",
        "cursor": {
          "ref": "fcc6eb4b-3846-4df7-82fd-cad2b14a3408",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8d3652e9-0453-4178-9fc4-85dd64566205"
        },
        "item": {
          "id": "cb5b09c8-0d4e-44f8-8bb9-3ee70462e418",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b3ae616f-15c9-4969-81b7-e23cfaed3c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e7b0a3-9415-4738-943f-a5c38bd172e1",
        "cursor": {
          "ref": "9fea511f-400a-4aa8-b96b-d0400dd20672",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e7a2cb86-c537-4282-8c8a-e646b023a2cc"
        },
        "item": {
          "id": "88e7b0a3-9415-4738-943f-a5c38bd172e1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "da743764-3447-461d-8a1a-38e414c56b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e752a28-c1f8-4ee5-9f52-f702459a7bbd",
        "cursor": {
          "ref": "b27321ed-b361-449f-b2b5-8b20b8baf06c",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "82888994-501b-464d-8d55-9df40a706990"
        },
        "item": {
          "id": "1e752a28-c1f8-4ee5-9f52-f702459a7bbd",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9f82410a-067b-4c4c-9276-b1fc741c60fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3427380-5be2-4cff-beca-83eef8df36cd",
        "cursor": {
          "ref": "22c1711f-a46f-4264-8f59-318b0bcfec08",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8f97384f-a394-47d1-971f-1b214a8e78b6"
        },
        "item": {
          "id": "a3427380-5be2-4cff-beca-83eef8df36cd",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f7cf968d-64f3-408a-a1fc-0be0d4ebce33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe6a2fe-8b45-479f-bfc4-0ecda2f46809",
        "cursor": {
          "ref": "f6d8056a-a800-4ca7-aaba-dc8155995abd",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "90239895-054d-4a2b-ae86-a3e3cc45a1a9"
        },
        "item": {
          "id": "3fe6a2fe-8b45-479f-bfc4-0ecda2f46809",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c2131bf7-fd4c-4f4f-939a-2ce322f94be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9a0014-5d5b-42cd-a84a-725d6402d71b",
        "cursor": {
          "ref": "926a70e7-4a65-4267-8598-865773093794",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "76503e14-4d13-4fd3-b028-96c7e9106340"
        },
        "item": {
          "id": "9c9a0014-5d5b-42cd-a84a-725d6402d71b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "24b181d6-fc42-4fb2-8d55-48a7fb6da0b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81d4e52-5d0c-43e2-adb6-6c3261b7413e",
        "cursor": {
          "ref": "32445fa3-9eac-4d11-8b70-c598a23f2002",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2e7be2b4-8623-4b1e-bb20-b2ade00feb3a"
        },
        "item": {
          "id": "b81d4e52-5d0c-43e2-adb6-6c3261b7413e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a0027d94-4df8-487e-8c54-fd9bcbbe4d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732236f4-6b78-4c77-8355-9d51d45cba09",
        "cursor": {
          "ref": "097bff7b-de76-4653-afb3-8f50b1c5d93a",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2296d188-3f39-4a88-99b5-68e969b8d0ad"
        },
        "item": {
          "id": "732236f4-6b78-4c77-8355-9d51d45cba09",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b921bce7-458f-4093-bdd6-a5a698522059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc76715-5e82-4210-af12-a5f7a1427692",
        "cursor": {
          "ref": "eabe44b0-423c-4a45-bff4-f4005a3ed9dc",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0dd73382-9f82-4317-8989-74214539e352"
        },
        "item": {
          "id": "9bc76715-5e82-4210-af12-a5f7a1427692",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5d78f15d-5bdf-4aeb-8b54-78fc8955585e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4444ec7-d631-4dbe-8b61-143eb5b7d40d",
        "cursor": {
          "ref": "ebbc1740-5949-4dd8-949f-0520d8bf8ab8",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "bda59d4f-3be8-4071-88a1-b7a394d5de9c"
        },
        "item": {
          "id": "b4444ec7-d631-4dbe-8b61-143eb5b7d40d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "495b1b54-f255-43ab-8e6a-c089ef77c6c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233af8e0-61fb-4528-b7a4-e78987a17903",
        "cursor": {
          "ref": "d4841c70-bed3-4090-97f9-c6ab79d7548a",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "62ee8391-3882-472c-b4c0-cbfa6f723b3e"
        },
        "item": {
          "id": "233af8e0-61fb-4528-b7a4-e78987a17903",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2fcfea0a-6a77-475b-845e-31fa6e643359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5026c4e4-2834-4dad-907c-bf6bb57d5266",
        "cursor": {
          "ref": "7451e724-d516-4876-bc37-21687af1ce11",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d0665fc1-8fd3-4747-8340-a9cf2c806a9f"
        },
        "item": {
          "id": "5026c4e4-2834-4dad-907c-bf6bb57d5266",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "249e8358-157f-4ba3-905b-922cac3a88fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc7ad710-1387-4e4e-bdee-1f4a150af564",
        "cursor": {
          "ref": "e2847d29-d5e2-46a2-9e89-02fa3a7b72c9",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "801838e8-95f7-4fcd-992d-539b8dfa73ad"
        },
        "item": {
          "id": "dc7ad710-1387-4e4e-bdee-1f4a150af564",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "10f99e11-dd16-4de6-b9d1-4bfc591a60ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "966bbaef-cb1c-4781-8170-9fdf5a3f2d66",
        "cursor": {
          "ref": "22166517-4c91-4955-af73-90629400807c",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3611c2ae-c7d8-4e0e-bea1-779939cd915f"
        },
        "item": {
          "id": "966bbaef-cb1c-4781-8170-9fdf5a3f2d66",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7a62ddf0-fd48-4049-8222-745db7cb2c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe74906-1610-49ba-9459-d87f71216066",
        "cursor": {
          "ref": "36c326e2-28f4-4508-b027-bc78f9fbb08c",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a7345361-9dc0-4b26-ab27-77be1837440e"
        },
        "item": {
          "id": "7fe74906-1610-49ba-9459-d87f71216066",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f6ae2536-c0a4-48da-b14a-84290b60becb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5aebf26-a3bc-404a-8819-281df3e51d8f",
        "cursor": {
          "ref": "61ca07ec-309d-4629-9ba9-e1e7df7c6ead",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "cfca5fa4-ed7e-4935-8ab9-23a2f7438e5c"
        },
        "item": {
          "id": "e5aebf26-a3bc-404a-8819-281df3e51d8f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2e878bc5-4a0e-4a32-ab5d-99554b667a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee17f0c-d48b-4296-8172-2a29f34b0267",
        "cursor": {
          "ref": "8920763c-a47d-4938-be49-b9dfcda856d1",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2bad475e-703a-4a1b-91d2-276dc2947f76"
        },
        "item": {
          "id": "8ee17f0c-d48b-4296-8172-2a29f34b0267",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "75114d27-250d-4d9b-9939-c5c68ba40e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8825454-da5e-497b-9ebe-85505cd6516f",
        "cursor": {
          "ref": "717d376e-23be-4429-9d77-ce002161da08",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "1eb7b2f7-854e-495b-ab63-e8d74fc2a444"
        },
        "item": {
          "id": "a8825454-da5e-497b-9ebe-85505cd6516f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "43ef47dd-d517-4f14-b1be-83708d706b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20843575-a0f5-4e6c-aae4-576926da621b",
        "cursor": {
          "ref": "9a9dfcae-4b77-4ec6-9d0b-c4515296144c",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "20bdeb9e-00ba-43ed-aa14-d00f2b949918"
        },
        "item": {
          "id": "20843575-a0f5-4e6c-aae4-576926da621b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "264f6e3b-9108-4e39-90a8-9bf42c8bd8f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66c22b0-5d8b-4231-884f-62adfceccd17",
        "cursor": {
          "ref": "5c2b3040-8c30-4552-b3f5-5490b28ebbc7",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "0902476f-7564-481f-a4f1-640c9d651728"
        },
        "item": {
          "id": "e66c22b0-5d8b-4231-884f-62adfceccd17",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "aebc953d-9e82-4599-b6a4-3584ea3e5ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372d10ec-233e-46b7-a34f-b88b1105db1f",
        "cursor": {
          "ref": "9a8f7bcb-cc63-4073-a16f-e89082dc87f1",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4af46152-3f75-4003-bd66-a1b5d5da79f0"
        },
        "item": {
          "id": "372d10ec-233e-46b7-a34f-b88b1105db1f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "feaea628-ad76-4a04-ab85-b0977124d197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e7a4fe-c127-492c-a969-0fd87b360cfd",
        "cursor": {
          "ref": "b7ddf13b-96a5-4d7f-9163-b077681f205d",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2e0b47b3-7f7c-440c-8002-4260b5c82434"
        },
        "item": {
          "id": "c6e7a4fe-c127-492c-a969-0fd87b360cfd",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b8e21456-460f-4550-b4d8-213d2dce797f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22840fbe-29b5-4522-97b1-fab6b57fce77",
        "cursor": {
          "ref": "55cfabc7-89e0-49d5-92a8-8e31ad49987f",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "dc38a7e1-0ef9-4f0a-957b-4ea3a6d767b8"
        },
        "item": {
          "id": "22840fbe-29b5-4522-97b1-fab6b57fce77",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "718cf3e2-9ad6-43ab-a9f8-3df2f56e746d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57cd830-329b-4112-bea8-5f5ac8e4b34b",
        "cursor": {
          "ref": "220a3383-b8e1-47c6-85e6-c65c93c464a8",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "acce7582-9e0e-48e1-94b8-cbb160bcebb3"
        },
        "item": {
          "id": "c57cd830-329b-4112-bea8-5f5ac8e4b34b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "3b9ec25c-3102-4581-86be-f354be1aafbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e16c913-3f89-4360-840b-e027a28bb563",
        "cursor": {
          "ref": "55c64201-0c1a-441f-81f8-a3f2a3b9561b",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6aa8a9b5-f8a7-495f-8447-c3069bfe2bd1"
        },
        "item": {
          "id": "9e16c913-3f89-4360-840b-e027a28bb563",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "8845d8fb-bc01-4c8d-9f10-bb021348968b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b773a844-6709-438b-ab70-d03b09ca49c1",
        "cursor": {
          "ref": "76d2429e-ec83-403f-a3e5-318b5edb5ace",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "2b16f6c2-59f9-4ffc-bd07-d12637a47a10"
        },
        "item": {
          "id": "b773a844-6709-438b-ab70-d03b09ca49c1",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ed353524-ef48-4abd-9c49-876bae894cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b523925f-cd99-4afc-8452-086e53576cee",
        "cursor": {
          "ref": "d5fa6029-5eda-4fef-b606-b230a05ac3cc",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6648fecd-9da2-43a5-b2ba-97a1e9d37850"
        },
        "item": {
          "id": "b523925f-cd99-4afc-8452-086e53576cee",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "4969f430-9156-4aae-ad0d-51dfa534d752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe573a7-fe53-4d8b-99fc-2075d7693aca",
        "cursor": {
          "ref": "4e301b9a-ecc6-432e-9416-2b6afe2ef239",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1421f6b0-80cb-4721-bcff-56297089a9d0"
        },
        "item": {
          "id": "4fe573a7-fe53-4d8b-99fc-2075d7693aca",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "135074c2-1f9e-47a8-a73b-c5bb7c9f463f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16fb9419-6a8c-4a08-9bba-30ea61bafbb1",
        "cursor": {
          "ref": "35825853-cb95-43ef-89b4-78e5eebd5aaf",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6341c796-e19a-4280-915b-b4de60312096"
        },
        "item": {
          "id": "16fb9419-6a8c-4a08-9bba-30ea61bafbb1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b304b5e2-8166-4af0-93e5-f54123409248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0821ba96-500a-4e9d-a050-f5e30032277c",
        "cursor": {
          "ref": "d6b6d9a0-ebe2-4e8e-a1f5-4f5f977c2b23",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e40fd85c-77bb-4aeb-8273-6aad571b2179"
        },
        "item": {
          "id": "0821ba96-500a-4e9d-a050-f5e30032277c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ecd97e21-d855-4d6e-a776-25b79cc91e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd2ecc8-c161-4473-895a-3ea630568988",
        "cursor": {
          "ref": "430a266f-4723-464b-8dcb-34b9c39a3a4d",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5b8e7893-f3e0-4850-9fc1-4f90def328b2"
        },
        "item": {
          "id": "2bd2ecc8-c161-4473-895a-3ea630568988",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0052253c-3e05-4459-bf54-5d9d0577387f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3370ddb-715e-457c-8693-435ce5a1b0af",
        "cursor": {
          "ref": "08cf42f4-db05-421f-8ca5-13d5402d784e",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "df3de612-d487-4cd5-90c4-d45f87aa2778"
        },
        "item": {
          "id": "e3370ddb-715e-457c-8693-435ce5a1b0af",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a35426b3-5b80-45a1-a41d-ec44bf783e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5e0ad7-e193-4cb9-91b0-e9783912d461",
        "cursor": {
          "ref": "31e80c7d-8e66-46a1-8c8e-7fbe08898dc6",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "448ba9be-cabe-4fa8-ad6c-f44417341730"
        },
        "item": {
          "id": "6b5e0ad7-e193-4cb9-91b0-e9783912d461",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "06c3fc65-7930-43c5-ba2e-4a698bd1cc04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b464897e-8f48-4cf9-aeca-12160e4b3928",
        "cursor": {
          "ref": "4f302633-81ab-4bf8-b5f5-64629b4b5293",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "6c9d6124-d647-47ac-8642-c1905d141d8e"
        },
        "item": {
          "id": "b464897e-8f48-4cf9-aeca-12160e4b3928",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d20521be-88ca-49ae-b204-307cba0f4621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c3d791-546d-43f0-b420-62cbe17c2dfe",
        "cursor": {
          "ref": "c1f28dbc-2e5d-4e87-b57a-137e4b367217",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d7ebc039-7a98-4f9d-b9d2-cc72f5bd06e4"
        },
        "item": {
          "id": "12c3d791-546d-43f0-b420-62cbe17c2dfe",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3ec28eb1-4cbf-4af1-87da-e177fabbd2a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34653886-53e8-4fd4-809b-6b6e0fe58cfa",
        "cursor": {
          "ref": "51e1d795-c39c-496c-beed-6b8d7488d63e",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "488808ae-fb15-4680-953b-d94d00d791aa"
        },
        "item": {
          "id": "34653886-53e8-4fd4-809b-6b6e0fe58cfa",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "5cdfb230-839d-478b-b8eb-08629203d3ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767703e6-d023-48ba-b27d-2e9f36dfa6f8",
        "cursor": {
          "ref": "12cd2da5-b492-4548-9b1f-d4c6aff6d0bc",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e07f931c-e55e-4e3c-831c-c4c2d1606fc1"
        },
        "item": {
          "id": "767703e6-d023-48ba-b27d-2e9f36dfa6f8",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c2e8aeee-42d1-435f-b0f6-20dd76e66672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad600f0-5ac3-4925-84bb-c539d5f2702b",
        "cursor": {
          "ref": "70a1c13b-ed22-4e08-b3fb-18712b0db930",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "131eeeeb-4f35-4948-8a7d-468f0a417ab0"
        },
        "item": {
          "id": "bad600f0-5ac3-4925-84bb-c539d5f2702b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "989d54e5-025f-4a96-9f0e-8b3cfa0e8d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8218d0-4910-4859-9bad-43baec841be2",
        "cursor": {
          "ref": "fb436610-c573-47ca-ab57-775c2a4b6114",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9212fbd8-3d64-4b54-8959-604802fec311"
        },
        "item": {
          "id": "bf8218d0-4910-4859-9bad-43baec841be2",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2bc88180-bc0f-4d64-84b1-fdc993e20291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f649a5e7-b4b6-4e17-a5a8-9d7cd08dc409",
        "cursor": {
          "ref": "14c97556-67d8-47bc-9548-2eaa1c0bbfd6",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1b1c521d-de4b-4b6b-8f2d-cc99260bb1da"
        },
        "item": {
          "id": "f649a5e7-b4b6-4e17-a5a8-9d7cd08dc409",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7323d40f-2a5e-4446-bee6-573a4664b432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b6ab05-aefe-4301-9190-04877f21f06a",
        "cursor": {
          "ref": "4d92fba2-5b78-47ce-acb8-f355a3fb1182",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "67f36f58-012b-4fcf-9d0a-1fe5be2548e2"
        },
        "item": {
          "id": "54b6ab05-aefe-4301-9190-04877f21f06a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ab1ad3f5-ca84-4f8a-a909-20c5770a1d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d0f7c0-661e-412f-a279-b5f5c227a84c",
        "cursor": {
          "ref": "9e5e05d8-c642-4e84-b09a-96da545c9fe4",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "10e28b82-acd5-43f0-aafc-ac3bcc06108a"
        },
        "item": {
          "id": "a7d0f7c0-661e-412f-a279-b5f5c227a84c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c5569620-a01b-4038-8087-4a2322dc6606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36a7443-9d2a-4495-a882-04055759950f",
        "cursor": {
          "ref": "a287af5f-1619-4767-ba15-98e21a201d1b",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0f81aac1-e98f-4ee8-bad1-a3bc80630328"
        },
        "item": {
          "id": "b36a7443-9d2a-4495-a882-04055759950f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a261273d-cbaa-4d1b-9442-d9e5c2d96730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ffba8a5-541e-41fe-8b65-758bb147a9c7",
        "cursor": {
          "ref": "de26b1fd-9d36-4dfe-914f-26da2ea9caa7",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f41f908f-5578-412b-96cf-627797122681"
        },
        "item": {
          "id": "2ffba8a5-541e-41fe-8b65-758bb147a9c7",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b1891944-c1fa-41c9-b56a-bb1176ee140b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd69810a-9d5b-4df9-8cb8-d17502df507a",
        "cursor": {
          "ref": "5375200e-9afc-40de-aaa8-74ffd534c6e1",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f2df6c8b-92a4-466d-8182-1498084e4ae1"
        },
        "item": {
          "id": "cd69810a-9d5b-4df9-8cb8-d17502df507a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "58fe6895-fe00-4367-9862-625cb4b98a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e750cd7a-15ab-480a-8be0-537af9b1dc54",
        "cursor": {
          "ref": "9cad48bf-bc8c-4bfe-bfc4-b8c0c9ddc23e",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e2fa32b7-aa04-4959-88a2-d143611fbc5e"
        },
        "item": {
          "id": "e750cd7a-15ab-480a-8be0-537af9b1dc54",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "7141ed76-d6d5-45ac-ac3f-f2eb0d00e9c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043e904e-a56f-4aa1-a239-4fb46eb32841",
        "cursor": {
          "ref": "21f2a71d-7ff1-4621-9f33-822a29131d86",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "29ce0067-7e3b-43bb-8156-25a10b3b4c24"
        },
        "item": {
          "id": "043e904e-a56f-4aa1-a239-4fb46eb32841",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b5be0074-b85d-4d73-888c-5968030a67b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ababff-ebd1-44d8-8c3f-f10f24ec80cb",
        "cursor": {
          "ref": "8d3e11f8-7d34-43ed-856f-b92dc6cd5fbb",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e9c42775-043e-428f-b4e2-2b8a1fa1bd76"
        },
        "item": {
          "id": "76ababff-ebd1-44d8-8c3f-f10f24ec80cb",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f0a221a0-68c4-4cc2-a8f1-33a29a37ec3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892fdccd-1c37-4b10-9ed9-66b727518c8f",
        "cursor": {
          "ref": "0411b403-46df-4b42-9329-72a72f8273d5",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "5910ff67-710d-425e-9e46-9a6a68fb1adf"
        },
        "item": {
          "id": "892fdccd-1c37-4b10-9ed9-66b727518c8f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "babedb35-d28f-4574-b6bd-cc0c1a5a6264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bddef8f6-68a7-461c-b73e-c0b21ff46198",
        "cursor": {
          "ref": "fea89228-3479-4d44-a375-b4a66c91f0f1",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "71773fb2-31a9-4d03-809b-4c383d205501"
        },
        "item": {
          "id": "bddef8f6-68a7-461c-b73e-c0b21ff46198",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "8a04b8a5-0bbd-4b26-94d1-6dd4c0b6e63c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde504a8-123d-4f8f-b408-ff4de01b42a4",
        "cursor": {
          "ref": "27a26f04-f52b-47ed-9c7f-aa1f8f4f31c1",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "eedc4112-c7f4-4b95-9874-ec984a105684"
        },
        "item": {
          "id": "cde504a8-123d-4f8f-b408-ff4de01b42a4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ceb0c95e-f43d-4e8c-a434-87d66d774619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8879a321-f4ef-4293-b5d0-94b1b10bcacf",
        "cursor": {
          "ref": "9d4088fd-a02e-418a-aee8-92701ce8fe9b",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b446da24-ae88-4f31-b1fe-c2a42fd3985d"
        },
        "item": {
          "id": "8879a321-f4ef-4293-b5d0-94b1b10bcacf",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "54371c8d-56b4-46bd-a0dc-5235f3749885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9986c4-4520-49e9-b621-fa66e4b4bc57",
        "cursor": {
          "ref": "722faec8-6b92-4b15-89b0-93b3f6fed3bf",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0b764dfe-5704-41fd-b3e1-7f30a9757fa8"
        },
        "item": {
          "id": "3b9986c4-4520-49e9-b621-fa66e4b4bc57",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c04ae588-cb86-49b6-8b8a-53d2d0811f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a99ea00-5021-4ee4-83cb-9ef83793c257",
        "cursor": {
          "ref": "38a807d9-6905-420a-83ea-bc052abbaacd",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b1f42e50-a399-40b5-927f-0b90a7500c93"
        },
        "item": {
          "id": "0a99ea00-5021-4ee4-83cb-9ef83793c257",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "aba17a7d-7588-477d-9a97-5d57ef85684d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b432ad93-a2b3-4611-95da-b09bfd9a2f41",
        "cursor": {
          "ref": "664d5c7e-279e-4cc4-9b50-cd22986b7fcf",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "4f5d5179-35c2-47d6-9283-4509ac5e1fd6"
        },
        "item": {
          "id": "b432ad93-a2b3-4611-95da-b09bfd9a2f41",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "fbfd6284-9396-484a-a2ab-a6da13c59eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6534fabd-4923-4981-8898-e77352e50d41",
        "cursor": {
          "ref": "6447d006-2f16-40b2-8b07-a6722c75451a",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0945c7ae-0c53-4aee-82e3-f6a8d8a5dcc8"
        },
        "item": {
          "id": "6534fabd-4923-4981-8898-e77352e50d41",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f4ece72b-7d52-45d5-974d-502dac19a4fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e028ffe2-d091-44c5-b95f-49522d2707a9",
        "cursor": {
          "ref": "9b960d2f-fd22-4c1f-b281-10caa5de0041",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a6b00dfb-e625-4a61-8c43-f3ef20024dbd"
        },
        "item": {
          "id": "e028ffe2-d091-44c5-b95f-49522d2707a9",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "75bb5b44-b474-4c19-b64d-7a0818ff0d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "536f95d1-1f95-4b8e-8510-d88789c68a5d",
        "cursor": {
          "ref": "1384cd52-31b4-4cb5-9118-a2ab4dc5c340",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "69cd9755-c9e1-45e4-94d8-05eabecbe5a7"
        },
        "item": {
          "id": "536f95d1-1f95-4b8e-8510-d88789c68a5d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "58f6e292-280d-4782-b053-894550ca6181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8587a2c-c052-46d1-9785-ea05e4706e6c",
        "cursor": {
          "ref": "c016e433-8356-47d3-b83f-f3c4ede460bc",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "4490a916-0700-4ccb-a69e-02b21bd3e35d"
        },
        "item": {
          "id": "b8587a2c-c052-46d1-9785-ea05e4706e6c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ac48f73d-eb5e-4662-8646-960c850b3adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc8e508-e48b-46a5-82a0-adc9956ef4bf",
        "cursor": {
          "ref": "7fb8f926-ffb2-42ce-a910-76190c99ef57",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3d05709c-51bf-4c53-a01e-b822349b2ee6"
        },
        "item": {
          "id": "8dc8e508-e48b-46a5-82a0-adc9956ef4bf",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "984d5ab0-654f-4c9e-9d19-a3f056f89dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52693d30-880a-4f63-82e8-a9ea631489dc",
        "cursor": {
          "ref": "69e4e45c-63e0-4c19-98b3-e64972554f7b",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "96565a30-4674-48b4-aa4b-b07c4fadb8bf"
        },
        "item": {
          "id": "52693d30-880a-4f63-82e8-a9ea631489dc",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a77b91fa-ed51-46a8-9e47-e02e396ede40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a88eaf2-190b-46fc-813e-eb1bea18ede8",
        "cursor": {
          "ref": "ce5317ab-a35c-4d8f-b7c0-b6b6bcda1c68",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f0b00f01-553b-46cc-94e0-6d8861b948da"
        },
        "item": {
          "id": "1a88eaf2-190b-46fc-813e-eb1bea18ede8",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9783b8b2-396d-49d0-aa31-827f00c79057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d3bffe-6ed1-4243-8fcb-36687aa1cb08",
        "cursor": {
          "ref": "b97c57f7-243d-410a-baa9-9efeef43b896",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "fbff1c75-63f4-4274-b45d-49512682b239"
        },
        "item": {
          "id": "05d3bffe-6ed1-4243-8fcb-36687aa1cb08",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "dd120a20-7484-4748-8b61-511197df80f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2bd5b8-f42b-4f0c-a504-e3ef1607a9de",
        "cursor": {
          "ref": "c6a64c27-6e05-4484-a32c-edb63273b0d3",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "48a790fe-1201-4fc8-9bc6-d50dd720776a"
        },
        "item": {
          "id": "3f2bd5b8-f42b-4f0c-a504-e3ef1607a9de",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b071205c-945f-4fa2-8aaf-b16056f1cd0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d53389-6cb6-4478-b027-e3679ccdf0d4",
        "cursor": {
          "ref": "27762c1c-e75f-437a-bd05-39385898c15d",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b2cded6d-fc77-4be3-a7e6-66186a0f477c"
        },
        "item": {
          "id": "36d53389-6cb6-4478-b027-e3679ccdf0d4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "fe7e4949-30a4-409e-9da3-d09356757c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5cd085-e056-40df-839d-852273d7781a",
        "cursor": {
          "ref": "f05b8166-5f90-4ee6-b429-193231ffea87",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "15e99407-2de0-482d-b27a-5d33ea4596ff"
        },
        "item": {
          "id": "1e5cd085-e056-40df-839d-852273d7781a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "af75a989-399a-428c-980a-a9d20c1b3016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8cb65d2-7eaf-4c09-8676-d7ac3832bed0",
        "cursor": {
          "ref": "49df490f-424d-44b6-b4ab-f80a04b97a06",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5cfd79c3-cb75-44dd-b85d-00bc55991ae5"
        },
        "item": {
          "id": "c8cb65d2-7eaf-4c09-8676-d7ac3832bed0",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8b44600f-6e3d-43d7-a122-2ee5b32c7e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f63187ec-dbf5-4f80-aa01-eaeb195d4782",
        "cursor": {
          "ref": "c28c389a-05c7-405d-905e-8e960ff0d913",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "646ada56-814c-48bd-8bb6-91b42b4c4662"
        },
        "item": {
          "id": "f63187ec-dbf5-4f80-aa01-eaeb195d4782",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "cc351646-a85b-4a24-a8dc-64191e3b6e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e33e972-650d-4d43-8936-f2ecd71259be",
        "cursor": {
          "ref": "d78c6543-0453-4ac8-b4de-2f742feb8a89",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "62859032-4d2b-4324-b921-9d31999eaa47"
        },
        "item": {
          "id": "7e33e972-650d-4d43-8936-f2ecd71259be",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2a23d7c6-c249-45cf-98ca-610373987ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806f0d4e-9df0-4155-8d2c-439c0cef57be",
        "cursor": {
          "ref": "ae0ce135-85b6-4bf0-bf12-b2c446d7179b",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "90f3b6dc-51d5-494e-86fe-84da2fcc463b"
        },
        "item": {
          "id": "806f0d4e-9df0-4155-8d2c-439c0cef57be",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0ec226c5-3140-4f89-86bc-72dd977ed257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ca24f9-03f5-4caa-bb1f-69bce236ce8d",
        "cursor": {
          "ref": "6b88571e-5bd9-465b-8734-5cbb8e34190b",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "74bccd35-ea5f-4e55-9408-cfc79fbdf3ba"
        },
        "item": {
          "id": "e6ca24f9-03f5-4caa-bb1f-69bce236ce8d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "104bd61d-393a-4693-9322-40e33880885d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6acb8b3-6682-4091-94a2-ed10fc25f5a6",
        "cursor": {
          "ref": "a1f6b2c8-4b42-452f-a3f0-424f06577ce0",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "fe5e07db-0ec3-4049-a33d-26e981eea6be"
        },
        "item": {
          "id": "d6acb8b3-6682-4091-94a2-ed10fc25f5a6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "02e1982c-fc14-4459-8ac2-3c2bca40cb76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44430055-51ab-490c-9189-df2127de1078",
        "cursor": {
          "ref": "46dfb717-c1c3-4fb0-b93e-a5d3c71373e1",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "3d0beb2f-93d5-40b2-a25b-6ec4ccc43951"
        },
        "item": {
          "id": "44430055-51ab-490c-9189-df2127de1078",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e8d9948f-4de0-4d89-89bb-36ee7aea08ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e63015c0-7b3e-46be-9056-525b303d2803",
        "cursor": {
          "ref": "c8e86c63-befb-41f2-9d32-cd6749cd084a",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c9d7ec04-9645-4b38-b072-45e53483cd27"
        },
        "item": {
          "id": "e63015c0-7b3e-46be-9056-525b303d2803",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d07dee95-b7c1-4cb3-b33a-e1ca44aed34c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841bc373-18e1-48eb-ab79-d9a30c5c0807",
        "cursor": {
          "ref": "4f68c830-9c4f-44cd-ae99-97acba4ed0a1",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2587e7e5-9402-4b6d-a7e9-5a545f9fe096"
        },
        "item": {
          "id": "841bc373-18e1-48eb-ab79-d9a30c5c0807",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "013c4ba3-63ff-44db-b1db-8b79c10e0b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c7d419-2c26-4e4f-9880-f6b5d588dac3",
        "cursor": {
          "ref": "58e64197-a91c-4066-93bc-f1b58449efb5",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "df2ba05d-cb31-4385-b2ae-d67eae855fc7"
        },
        "item": {
          "id": "09c7d419-2c26-4e4f-9880-f6b5d588dac3",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0c0d87cd-ae39-409b-bdad-69da76adeece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e59ad7-0d43-4848-a6c5-10e69999acb8",
        "cursor": {
          "ref": "6a6ac7a8-be2b-427c-8615-ee88d3477148",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7e77fd79-52b9-415a-abbd-4e79b3454043"
        },
        "item": {
          "id": "39e59ad7-0d43-4848-a6c5-10e69999acb8",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8a3970fc-fbdb-4889-bd41-aca31834b309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f6f0112-761d-4d86-ba06-1ffba641d124",
        "cursor": {
          "ref": "3953a656-4ca7-4d0c-a6cc-0a52d8339d12",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "19a243e1-c04a-44aa-98a3-6b36ab242244"
        },
        "item": {
          "id": "2f6f0112-761d-4d86-ba06-1ffba641d124",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e2f55e7f-a838-49c2-bda8-32167d59613d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ca5676-e3ec-42fb-875d-433aab08c50e",
        "cursor": {
          "ref": "1fb304a4-e3ad-45c2-a514-7688cc3422b2",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "45d970c6-8aec-4cc2-8f26-548dccf772ac"
        },
        "item": {
          "id": "e8ca5676-e3ec-42fb-875d-433aab08c50e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b3eca02a-3e7c-4d26-bd77-7b7985e4ca42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8582baee-eedc-4316-83ff-a8bb60093565",
        "cursor": {
          "ref": "52f5e00e-b57a-47ea-a49e-0a7606652bf3",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4ccf841a-642d-4d9c-be3d-9e2a5d2cbaf1"
        },
        "item": {
          "id": "8582baee-eedc-4316-83ff-a8bb60093565",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "28a65461-088c-4af5-b4cb-e6fe194daaee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "755dc09e-af8a-44ea-90a2-21dcb16fc318",
        "cursor": {
          "ref": "1cb176e8-4f02-43e6-b46d-41011145129d",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "62fb5d64-0ec8-46b1-a21e-595b3aaa2fc3"
        },
        "item": {
          "id": "755dc09e-af8a-44ea-90a2-21dcb16fc318",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4c8db164-d784-437c-8a40-707a1f01dc8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7871176-85ba-4da9-a6b6-385899e605d5",
        "cursor": {
          "ref": "dc81d6c1-489d-4662-b078-8c9b9d165f3a",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "31f49a3b-58d4-4316-b933-980c621bb3ed"
        },
        "item": {
          "id": "f7871176-85ba-4da9-a6b6-385899e605d5",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c5cf4dbe-0295-407b-9dea-7aa89506e875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3f6756-4296-411a-8e51-96f5d94de57f",
        "cursor": {
          "ref": "c7bb1af4-7043-430c-a0e8-0c0697ed5b67",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "83c997cc-f6c5-4e60-93ee-12bd7df65fe3"
        },
        "item": {
          "id": "df3f6756-4296-411a-8e51-96f5d94de57f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f1016a6b-e5af-4ac0-b28e-8d9ad447f6c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c20eaf5-9bab-49fc-b34a-cf278260143c",
        "cursor": {
          "ref": "76f5057d-1176-4a67-97be-e462fb17e5d6",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a94f2987-48c5-4268-a254-cf8174a4355c"
        },
        "item": {
          "id": "2c20eaf5-9bab-49fc-b34a-cf278260143c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4c2a6212-81af-4863-b933-b82af5ae8a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e7c0e90-83d7-4cea-83de-8aa6d21d6e3b",
        "cursor": {
          "ref": "e76012be-032e-4a03-beee-f76e0f46f28d",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "825d2057-e1b2-4f31-ac07-81c273a6a3d9"
        },
        "item": {
          "id": "2e7c0e90-83d7-4cea-83de-8aa6d21d6e3b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "521522dd-920e-4eb3-ae46-736f80bea839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8031b29b-08a0-46c0-85e8-220d62b12392",
        "cursor": {
          "ref": "c2c91c33-41b4-4080-9626-fc683b9377f2",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5d0437c5-1324-42e2-87ab-7ec83159bbc5"
        },
        "item": {
          "id": "8031b29b-08a0-46c0-85e8-220d62b12392",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2de15233-8e89-4be9-b93e-161e5166dc8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41bcfc90-3b26-40f6-bd8e-cc58a8010769",
        "cursor": {
          "ref": "5a60931b-ef6a-4881-bff3-7adc59173ea8",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1562697f-eba0-43f4-b338-f0b12078d30d"
        },
        "item": {
          "id": "41bcfc90-3b26-40f6-bd8e-cc58a8010769",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "81651eca-9fad-4ec9-9863-b0d67384f82d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f802c0ac-8bb3-4ac9-a49d-e76da43cbd38",
        "cursor": {
          "ref": "681df73e-f310-433a-8122-aa656e0572fe",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4cd37ff2-a61b-4db4-bedb-867fb663ac4f"
        },
        "item": {
          "id": "f802c0ac-8bb3-4ac9-a49d-e76da43cbd38",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f45bd4f7-3194-4d7b-9842-f6eb3e2b18f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc987c4-c02f-48f1-87ca-a6c2b47a5bfb",
        "cursor": {
          "ref": "fdcc5b4d-d03a-4b30-a9ce-675e994119d4",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f159cc3b-b3e2-478c-ae73-84e77b59bb4e"
        },
        "item": {
          "id": "dcc987c4-c02f-48f1-87ca-a6c2b47a5bfb",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "bba58ce8-ec97-4282-853e-6f66d4d21381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407fdb8a-e21b-4cd2-8ead-6fb2315f38fe",
        "cursor": {
          "ref": "d2699aa0-8737-4ccf-9b9d-9d6af35597a3",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "51cd0814-4d9f-4f3d-bef8-ae13f71349b7"
        },
        "item": {
          "id": "407fdb8a-e21b-4cd2-8ead-6fb2315f38fe",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "02c25a7b-c775-4f55-8e6b-a5f3aae65177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58f20ef-f842-4f29-895e-1c6f38782e3e",
        "cursor": {
          "ref": "2d3b5778-59c7-4f5c-b0c8-2b033097bf1a",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "66c2b869-6107-446e-9e65-bd032f19e8de"
        },
        "item": {
          "id": "f58f20ef-f842-4f29-895e-1c6f38782e3e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9099d1bf-0b6b-41fd-9118-11ece322ed85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dbed686-307f-4aa7-9fb8-e86da94f19d8",
        "cursor": {
          "ref": "ed7c470b-578b-4427-9a70-eaf0f7158c1d",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "2ad2ab3c-8275-4989-9300-7139e1864360"
        },
        "item": {
          "id": "0dbed686-307f-4aa7-9fb8-e86da94f19d8",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "56e5a88d-b7cd-4d60-b517-61dd4bf05779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4ff0de-528f-4f74-938c-e91308e9d1c8",
        "cursor": {
          "ref": "9e36f4fb-37f9-405f-b0a5-10446a8c8bf9",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "24bee0e6-06c5-4668-bf4e-c4b3f37f06cc"
        },
        "item": {
          "id": "3e4ff0de-528f-4f74-938c-e91308e9d1c8",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "36c0329c-ebff-461b-ac58-ab57fa6e849d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e56f7c-ad5a-44c0-a140-a318bc8233fe",
        "cursor": {
          "ref": "cdfb5760-351d-4d08-ac9c-8f60eb714240",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "287b1d44-1a95-45dc-9b1d-d8d5da65527d"
        },
        "item": {
          "id": "b5e56f7c-ad5a-44c0-a140-a318bc8233fe",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d4d9fe71-e1b0-4c75-9722-b57adf3a5d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8b1dcf-789c-4044-8222-b9f84607d599",
        "cursor": {
          "ref": "22ae7e0f-a447-4cf9-bdeb-79fb46ae3b10",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "21eaee8d-5644-4c63-8910-6639acf24cb2"
        },
        "item": {
          "id": "5a8b1dcf-789c-4044-8222-b9f84607d599",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d0d00710-4c2f-411a-ba34-5a3a01bb0629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87c754e-e5f9-4ea0-bf66-f11f017790ac",
        "cursor": {
          "ref": "7b9fbd0f-a526-4a91-a8cc-75e61285368b",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8e038398-a5dd-44bf-8905-809b83c3a430"
        },
        "item": {
          "id": "c87c754e-e5f9-4ea0-bf66-f11f017790ac",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d86342b0-c76d-4ccb-8af9-fa9043f38162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526702ec-17d1-4e28-ab03-a2e9d5dd9e80",
        "cursor": {
          "ref": "2f297408-cd7b-4aa9-8397-ed48ccae554d",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a39f78f5-b4ab-49f8-b60f-b8f9eaf7f194"
        },
        "item": {
          "id": "526702ec-17d1-4e28-ab03-a2e9d5dd9e80",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "0403d298-9dd7-4953-a87e-b7517397b0a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a67146a-2c3e-4306-bc9e-c9dbcb6c909e",
        "cursor": {
          "ref": "8b35543a-cb9f-4ee8-a11d-ade7287813eb",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4ddbed1b-27e9-4127-b1c2-e8ce6f414f91"
        },
        "item": {
          "id": "9a67146a-2c3e-4306-bc9e-c9dbcb6c909e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "35f7fda2-5725-4605-8b85-f069a58f6aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18b6b5d-5a32-4dfd-bc1c-88f3ca9127de",
        "cursor": {
          "ref": "2e8cb487-f88f-4892-8b6e-301526067c27",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b1fe3631-7efc-4122-8f54-947b7c7895e9"
        },
        "item": {
          "id": "a18b6b5d-5a32-4dfd-bc1c-88f3ca9127de",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7680e4cc-f422-4ee7-9b90-177b7ca2c9f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17617269-e536-46a2-bc35-8f4e91de0ae9",
        "cursor": {
          "ref": "546e5d1d-59a0-4989-972a-7f4216812d4e",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "be14d450-2ca9-473d-a8df-a3474f0a561f"
        },
        "item": {
          "id": "17617269-e536-46a2-bc35-8f4e91de0ae9",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "cb179319-13d3-4714-a411-f6355a181ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4481a8-d829-4f08-b7f8-ec6394863b44",
        "cursor": {
          "ref": "d87ab09b-df1a-4b47-af1c-e7b2ec99c6df",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "110fb5a0-43e4-4f6e-ac40-02038ac5aedd"
        },
        "item": {
          "id": "0e4481a8-d829-4f08-b7f8-ec6394863b44",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a8eafd1d-a29b-4d24-9927-f814d5327897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d16c9e-7874-4671-8922-2313db6c3346",
        "cursor": {
          "ref": "d46cfa5c-cf83-4a3a-a86c-568962fea250",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "42d077fb-7265-4498-9b7d-945f863ebc4e"
        },
        "item": {
          "id": "c0d16c9e-7874-4671-8922-2313db6c3346",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e77e1334-61b9-421d-bbca-727c301851e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2dbd71-a9da-4742-9c67-9e6034938bcc",
        "cursor": {
          "ref": "7f3e97eb-92d1-454a-b29a-9ff18b8a664e",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "de88fa42-5d25-4cf5-9145-ea7caafa95f1"
        },
        "item": {
          "id": "6f2dbd71-a9da-4742-9c67-9e6034938bcc",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "88fc7aa2-121a-4c45-be97-fe5d4a39ab04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3116267b-7e33-42d5-bcc0-aa344437ba15",
        "cursor": {
          "ref": "ba24a81f-7748-4759-8b9f-7c22aea528aa",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "95e10b3d-4f9c-4833-934c-68d1c5e23d3d"
        },
        "item": {
          "id": "3116267b-7e33-42d5-bcc0-aa344437ba15",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a2622de0-2be2-4794-8fa1-f9c1f2efa6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff6c2dc-dadc-42e8-8dee-032f0f44b4d8",
        "cursor": {
          "ref": "1e61f8d2-5b42-40e3-8303-bfe181b1a9b1",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "b199135a-35c3-421f-a194-f2b142cf7942"
        },
        "item": {
          "id": "8ff6c2dc-dadc-42e8-8dee-032f0f44b4d8",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "903f6f0e-6a13-40eb-b6b2-42d01e00e4a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a6da86-6220-4e14-a6f2-d1c99d87b7d8",
        "cursor": {
          "ref": "f1d812ee-c64e-424e-b2f0-209c264df6fa",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "3f033c9d-8658-4c8b-b28c-1324e46d9e7a"
        },
        "item": {
          "id": "70a6da86-6220-4e14-a6f2-d1c99d87b7d8",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "38871b37-df3c-4609-a313-8ce5b4637ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d25a7696-3c79-4740-9b1f-1a1ce92805f9",
        "cursor": {
          "ref": "f0d1df59-be7b-4cd6-9df9-b7741ef8dfd5",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "ab9059df-55b3-459d-b7ce-90e411f86ca7"
        },
        "item": {
          "id": "d25a7696-3c79-4740-9b1f-1a1ce92805f9",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "aa6bccb6-ab8d-47e8-97f8-cb96b076725d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae408698-7dad-4e49-8715-2367c1f190e2",
        "cursor": {
          "ref": "c1b04c05-13a8-477b-b86f-43cb01d7459f",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "6ba36eed-597c-4405-affe-9e126ff80d5b"
        },
        "item": {
          "id": "ae408698-7dad-4e49-8715-2367c1f190e2",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c075f6ec-208b-426d-871e-4a47e6b1d277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b440713-5efc-4cd9-9dc1-fb88ed8f3b33",
        "cursor": {
          "ref": "75bcb893-b3f0-41a4-8e36-91abbb5b4eb5",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "e0719cf0-8e56-4bc7-aea6-19672c1e0575"
        },
        "item": {
          "id": "1b440713-5efc-4cd9-9dc1-fb88ed8f3b33",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0067e409-a29c-4958-9818-9db488f658ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8fc2780-2d82-4bdd-a4dd-4ef7c4dfca62",
        "cursor": {
          "ref": "a32b27a3-2ae6-4773-96dc-d5c8258207fe",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "00de2140-1004-46f0-b73e-6831101282ec"
        },
        "item": {
          "id": "e8fc2780-2d82-4bdd-a4dd-4ef7c4dfca62",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "dd94ab00-c636-42b7-a080-28238bf27012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4cd7fda-a04f-4cc2-b3c3-5417a4794fd4",
        "cursor": {
          "ref": "658f1cce-95ef-4b24-b98d-8c04063c794d",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "a6cb9831-021b-426f-b68d-7a23e5d2c0d1"
        },
        "item": {
          "id": "c4cd7fda-a04f-4cc2-b3c3-5417a4794fd4",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "090f9c79-9bab-479d-ba25-889df67a7e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "644ab476-841a-46d4-b5af-a7e92091cc0d",
        "cursor": {
          "ref": "5b0f3242-5ebc-4ed0-8259-9ff3026157fa",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "9383b304-4ffd-4a67-b9e2-b729b4e35544"
        },
        "item": {
          "id": "644ab476-841a-46d4-b5af-a7e92091cc0d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "1d2ede4d-4ff6-4ee9-9266-20717e26ff3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9c7fd8-6f71-4981-b9d0-f7204ef2b49e",
        "cursor": {
          "ref": "ff22ced3-67e7-4ff3-b190-93c8a5c28125",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "46308914-237b-471a-bdd7-040b0ee4b119"
        },
        "item": {
          "id": "ea9c7fd8-6f71-4981-b9d0-f7204ef2b49e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "cd54459d-88fd-48b1-9aa1-3de874df72ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f7ce16-bdba-4e28-a6d3-fb0c3cf5b761",
        "cursor": {
          "ref": "00253e50-7826-4ef6-95c7-297036070f35",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "8504403c-3fc9-42e9-8337-95eaa91022ff"
        },
        "item": {
          "id": "d4f7ce16-bdba-4e28-a6d3-fb0c3cf5b761",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "38d3dee9-7388-40fd-bc7d-ee314d190646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb2f8e6-fecc-4083-a7a5-926f690f33df",
        "cursor": {
          "ref": "68b86ff9-a487-41b0-b26e-f8a82b041e72",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "dbd2026b-2ffc-4e5c-a455-6eaf98276621"
        },
        "item": {
          "id": "adb2f8e6-fecc-4083-a7a5-926f690f33df",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "38bc0f13-d486-4bf9-a44c-1b8e0407b532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f5ce49-3abf-4a45-88ae-8e35d50bcef4",
        "cursor": {
          "ref": "935c3d44-576e-422c-8a89-33f34e1e8af4",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "a1edefa5-49c2-4a44-a3a6-47f1ce3d377f"
        },
        "item": {
          "id": "62f5ce49-3abf-4a45-88ae-8e35d50bcef4",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7ed094cf-f86f-45d6-bbfa-a4bd5ec55e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dfbc250-81c6-4b2d-ad07-45b1984918b4",
        "cursor": {
          "ref": "17ee7e39-e5b8-4426-816c-48cf75b64ced",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "166489ff-e6ef-4dba-b90a-7abd17bf6f23"
        },
        "item": {
          "id": "3dfbc250-81c6-4b2d-ad07-45b1984918b4",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f1250c49-b8bb-4458-a2d9-4c8d3c2e92ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ebe8d6-3fe8-428f-9cae-8e4e57bebf34",
        "cursor": {
          "ref": "fdad1722-69ef-45db-bcd6-8f4dcca3f067",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "e7587308-28fc-4490-841a-16ec7a85d07a"
        },
        "item": {
          "id": "80ebe8d6-3fe8-428f-9cae-8e4e57bebf34",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "eebe6727-a45f-4e3c-973d-b6e788087ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60fcb3e2-13ed-4c02-82ba-1c765f88f33b",
        "cursor": {
          "ref": "a4ce9c51-57c7-4aeb-88a4-1a73a99feace",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "2ccd7d30-1914-4de3-89db-6396f570bb52"
        },
        "item": {
          "id": "60fcb3e2-13ed-4c02-82ba-1c765f88f33b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d04d422e-1f2a-419f-9b98-8d817b2e3fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc3fea4-60a9-4806-bd24-da0b3965594d",
        "cursor": {
          "ref": "2fd5c6f6-29d0-4de9-8a55-a2b14d2478a3",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "8c2aad31-7ae3-478c-a256-bf9e6a25048c"
        },
        "item": {
          "id": "5cc3fea4-60a9-4806-bd24-da0b3965594d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5fe0f8f3-8d3d-48a1-a036-64e2e6b4f921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdee55d0-fccc-46df-b9f1-2fd61da4a1ae",
        "cursor": {
          "ref": "6323e5d8-39b6-46b6-9ea8-d6c810b023d2",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "0c6e463a-0428-4f6c-bca6-cf8b299c76f1"
        },
        "item": {
          "id": "bdee55d0-fccc-46df-b9f1-2fd61da4a1ae",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7cab6d1e-4acc-42d5-9799-8aecad0e90c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866fc6a4-5e04-46c3-82d2-02571b01c59a",
        "cursor": {
          "ref": "0b48b46a-8cd3-40d1-ad98-f4b6e6a9b732",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "0240fcab-dc89-4385-abc6-071241b9fe98"
        },
        "item": {
          "id": "866fc6a4-5e04-46c3-82d2-02571b01c59a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "12b04a23-36ab-4472-97e2-02868dad0f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7917a5f-6ef4-429f-8222-0cf6f46d90db",
        "cursor": {
          "ref": "9426dde6-b99f-4cb2-a5eb-430b4684f373",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "2fe273a3-aaaa-41b6-aaed-d5c71f4d5423"
        },
        "item": {
          "id": "b7917a5f-6ef4-429f-8222-0cf6f46d90db",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a9f04022-786b-4061-9cde-201eb998ecd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3544778-0285-44e5-a52b-2c6659c148c0",
        "cursor": {
          "ref": "9e09b298-032b-4a49-8470-d72398187389",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "6b374adc-5a28-4d89-9311-acc3c2b8658c"
        },
        "item": {
          "id": "f3544778-0285-44e5-a52b-2c6659c148c0",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7ee19742-bb5e-4e79-9ec4-f166778b4df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604f6f68-7448-4172-91e0-90e7b9228da1",
        "cursor": {
          "ref": "2dd5bbc3-3798-413c-9fba-56725db54453",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "7bb9093f-9bfd-4a44-a2bf-2232f7ccdb92"
        },
        "item": {
          "id": "604f6f68-7448-4172-91e0-90e7b9228da1",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "0d514489-0714-4a2d-9c19-eba9aeb2185a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29186a2-78cb-4429-92b7-eda60a5faeaa",
        "cursor": {
          "ref": "05b94f20-3f4b-421e-9fe8-12540d4109e8",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "cc708519-3079-4be8-8ab5-5942e4795473"
        },
        "item": {
          "id": "c29186a2-78cb-4429-92b7-eda60a5faeaa",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "2a86e1bf-8105-4f43-b080-4ed0f544b949",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b900ba-9b86-44b4-97c3-e011d6d1d205",
        "cursor": {
          "ref": "d84bb2e9-3a03-4f10-bd27-38bb2a229d66",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "f678b2e2-612b-4a3e-b563-22a6c0143666"
        },
        "item": {
          "id": "09b900ba-9b86-44b4-97c3-e011d6d1d205",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "98b296a8-ed65-4ce2-8e0f-77d4ec677619",
          "status": "OK",
          "code": 200,
          "responseTime": 122,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc456a5-beb4-4df3-ba56-d66329371d7b",
        "cursor": {
          "ref": "69ac7fcd-a4c5-439d-88b2-d5ee372b3588",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "9132a901-c1dd-43d0-b5ad-00f913bc8129"
        },
        "item": {
          "id": "afc456a5-beb4-4df3-ba56-d66329371d7b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b4479161-f382-4030-b3a8-7957037cc8c9",
          "status": "OK",
          "code": 200,
          "responseTime": 1324,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24c87a4-fe7a-413b-b295-5f69c7433fc1",
        "cursor": {
          "ref": "924f640f-0d84-43ba-b207-4ef517d85c58",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "53a3a6cf-e1e6-4df6-8598-57d05f73dcd1"
        },
        "item": {
          "id": "e24c87a4-fe7a-413b-b295-5f69c7433fc1",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "580759c1-4e56-4e02-bd57-5edd862c271b",
          "status": "OK",
          "code": 200,
          "responseTime": 1445,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8773257e-50bb-4b8a-8ca2-1b0fc0f7321c",
        "cursor": {
          "ref": "c490e294-4aa1-4604-8610-5873e9f62eba",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "adb62279-7085-46e8-96aa-ea5ee4bf9f39"
        },
        "item": {
          "id": "8773257e-50bb-4b8a-8ca2-1b0fc0f7321c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "95b5e82f-3248-4781-8591-44c4dede9863",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8773257e-50bb-4b8a-8ca2-1b0fc0f7321c",
        "cursor": {
          "ref": "c490e294-4aa1-4604-8610-5873e9f62eba",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "adb62279-7085-46e8-96aa-ea5ee4bf9f39"
        },
        "item": {
          "id": "8773257e-50bb-4b8a-8ca2-1b0fc0f7321c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "95b5e82f-3248-4781-8591-44c4dede9863",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8a81c0-69ad-42cf-a7c0-e41daf6f248a",
        "cursor": {
          "ref": "11bb8334-8388-46be-8ebd-58f53c48c833",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "0f4a3cfb-1b3b-43a3-8b89-24cc700e6f88"
        },
        "item": {
          "id": "2d8a81c0-69ad-42cf-a7c0-e41daf6f248a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "72465879-e9bf-44e6-8fda-6c63136de55c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d5f54c-14ff-44d1-9c66-a0ab99965d12",
        "cursor": {
          "ref": "7a1bf563-baa6-46e7-8528-b7377dfb52ca",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "6512ce99-1c3a-40f7-a7e1-6e869cb055d4"
        },
        "item": {
          "id": "88d5f54c-14ff-44d1-9c66-a0ab99965d12",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a76ec0f3-bcd3-46b9-9cb5-b89a835c1b2b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}